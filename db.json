{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"eb6f19a11c79cfb88870c1d81caf98d024a0b429","modified":1466320890778},{"_id":"source/CNAME","hash":"02b8db046cd22fb7423f8f66566b803cfb08d227","modified":1465270544483},{"_id":"themes/hexo-theme-next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1466318054172},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1466318054173},{"_id":"themes/hexo-theme-next/.gitignore","hash":"63d003fa46cf9665b4dab1786f9dc694812a5a79","modified":1466318054176},{"_id":"themes/hexo-theme-next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1466318054177},{"_id":"themes/hexo-theme-next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1466318054177},{"_id":"themes/hexo-theme-next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1466318054178},{"_id":"themes/hexo-theme-next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1466318054179},{"_id":"themes/hexo-theme-next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1466318054179},{"_id":"themes/hexo-theme-next/_config.yml","hash":"0a2fe57842ccd50c106ee8123d1394b47803f772","modified":1468643867598},{"_id":"themes/hexo-theme-next/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1466318054181},{"_id":"themes/hexo-theme-next/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1466318054181},{"_id":"themes/hexo-theme-next/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1466318054219},{"_id":"source/about/index.md","hash":"03a5c42011178796a7a7669e6d5fb3a0e2bb3fb1","modified":1466853363816},{"_id":"source/categories/index.md","hash":"4fa04d37458b660ab7076b73b74f2ebf36513fb0","modified":1464850516734},{"_id":"source/links/index.md","hash":"aa6611830fe469107db60af6bcb4a1cddbfc0b76","modified":1464850516996},{"_id":"source/tags/index.md","hash":"fde834c2078de5e66d19d11b91415b3848a6e652","modified":1464850516214},{"_id":"themes/hexo-theme-next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1466318054175},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1466318054175},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1466318054182},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1466318054182},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1466318054183},{"_id":"themes/hexo-theme-next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1466318054184},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"19537c8bae42c4c2e7d06a64537e8dfd503b7e19","modified":1466318054184},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1466318054185},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1466318054185},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1466318054186},{"_id":"themes/hexo-theme-next/languages/zh-Hans.yml","hash":"aee306df3a6c842cf3f3730f96c12225cc8210b3","modified":1466320423717},{"_id":"themes/hexo-theme-next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1466318054187},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"1138b849e1240249480849cc2b6c6d09b28207a5","modified":1467170814084},{"_id":"themes/hexo-theme-next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1466318054187},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1466318054216},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1466318054216},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1466318054216},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1466318054217},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1466318054218},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1466318054218},{"_id":"themes/hexo-theme-next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1466318054221},{"_id":"themes/hexo-theme-next/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1466318054388},{"_id":"themes/hexo-theme-next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1466318054389},{"_id":"themes/hexo-theme-next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1466318054388},{"_id":"source/favicon.ico","hash":"e5e666a24d66d82c0e37f0ff8a9a3ca8b93026e9","modified":1464850493162},{"_id":"themes/hexo-theme-next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466318054302},{"_id":"source/_posts/ACM/ACM常用数学公式汇总.md","hash":"1874a0be27c07b7f1d6f8b8b0419f3f43c476523","modified":1466170871215},{"_id":"source/_posts/Android/AndroidStudio指定git的忽略文件.md","hash":"a88e8999e43ca1935715e15830736cb2a83deecd","modified":1467194065807},{"_id":"source/_posts/Android/Android-api-level对照表.md","hash":"2a22b02b2f67249380ecfe5daf96bdef7195d160","modified":1467544391950},{"_id":"source/_posts/Android/Android中如何一次性finish掉以前打开的所有的activity.md","hash":"3b54a80e8c45481e6ad3c916f7867dc8f3e928ec","modified":1466170972042},{"_id":"source/_posts/Android/Android中的shape中的属性大全.md","hash":"78b22f4c44464d097ab5f451dac895b5e457796d","modified":1466170939475},{"_id":"source/_posts/Android/Eclipse-Android-ADT-Bundle下载地址和genymotion插件.md","hash":"8f686d7e647ee6f40f873503236825c9aa1f59a6","modified":1467723497982},{"_id":"source/_posts/Android/Android仿超级课程表的课程界面设计.md","hash":"3a4c3443ed853d6d0bf2a646b1f5b09775a3c37a","modified":1466170908748},{"_id":"source/_posts/Android/Style.xml的妙用.md","hash":"8d442376e61a92d1c6dc64d6a17c1bf1e903a82a","modified":1466170998944},{"_id":"source/_posts/AndroidStudio/AS中使用xUtils报错找不到org-apache-http-client-methods-HttpRequestBase的类文件.md","hash":"2fed3419b75e4aea735065cab0077be5087bdc50","modified":1468146990750},{"_id":"source/_posts/AndroidStudio/Android-Studio-SVN的使用.md","hash":"8d9fdfb30b4f45dccc7d440dbdec60d819c117cc","modified":1466171028573},{"_id":"source/_posts/AndroidStudio/AndroidStudio快捷键和使用技巧.md","hash":"7124286f744f3b25f45766d8072bb5bb0546fc38","modified":1467434347776},{"_id":"source/_posts/AndroidStudio/CPU是AMD的电脑如何安装android-studio，以及studio的环境变量的配置.md","hash":"c9ad519676f2dc2bd58f43a7c8a901407f707d51","modified":1466490141368},{"_id":"source/_posts/AndroidStudio/Gneymotion无法启动和Oracle-VM-VirtualBox常见问题.md","hash":"cd4ce4b95a8e829ba01c9548c37d1bca79d2e4d0","modified":1467537722773},{"_id":"source/_posts/C++/C++string类型详解.md","hash":"2e80987ee14a096238db8f46340f0f26b8212849","modified":1466171143325},{"_id":"source/_posts/C++/C++基础：各种输入方法总结，cin、cin.get()、cin.getline()、getline()、gets()、getchar().md","hash":"40de63dae396c59cba09fec2906886ad51e2c2ef","modified":1466171173329},{"_id":"source/_posts/C++/STL之map和multimap总结.md","hash":"13fed67b7a21602990db24a3c5d9f238fe525379","modified":1466171324030},{"_id":"source/_posts/C++/STL之priority-queue（优先队列）.md","hash":"962b6b0c7985a5e7d3b432788c1218179b919f77","modified":1466171359031},{"_id":"source/_posts/C++/STL之set和multiset总结.md","hash":"b0a18036ab8d0e3ebd5bbdd9e4f96fe8f39e77f4","modified":1466171391736},{"_id":"source/_posts/C++/STL之算法总结.md","hash":"d497b90bbdecb794cfc0179e4f02c7c72bdffbe6","modified":1466171417775},{"_id":"source/_posts/C++/STL容器总结之Vector.md","hash":"ce980215d64b768ea79600be3b72570cb917f42f","modified":1466171291246},{"_id":"source/_posts/C++/STL容器总结之deque.md","hash":"96baa4ffe7ad7dd491fd6c16371d27ba8c283b50","modified":1466171197598},{"_id":"source/_posts/C++/STL容器总结之list.md","hash":"7ace3164bc5b7b7bb075a4deb0304d62ab8f0fc4","modified":1466171233001},{"_id":"source/_posts/JAVA/Socket简易聊天工具.md","hash":"f154c2f074f2e96970e4e328f44345463fcc61ca","modified":1467034579934},{"_id":"source/_posts/C++/STL容器总结之stack和queue.md","hash":"a94c5765fe0777eb401e94403e2b6dfa066dc4cf","modified":1466171257893},{"_id":"source/_posts/JVM/Java内存区域与内存溢出简介.md","hash":"8da41118944d934d299b6534a7a646eacce2dc7d","modified":1468589774507},{"_id":"source/_posts/MySQL/Excel数据大量导入MySQL-MySQL数据换行符回车符替换处理.md","hash":"ff2a14a4822aad3077417b83946e85990459bb44","modified":1466172114184},{"_id":"source/_posts/SEO/hexo做SEO（添加sitemap和baidusitemap）.md","hash":"4e6d1da87ba214bd3c3adfb517f4d3835ddd7e30","modified":1466172093861},{"_id":"source/_posts/SEO/hexo博客添加域名实现双线部署（github和coding）.md","hash":"ad3f81313509863af9487de870a4e41752ae25e2","modified":1466172072239},{"_id":"source/_posts/linux/CentOS从php5-3升级到php5-5.md","hash":"fc8adf389ae6c4e8b62caa9a045939cd109b1b3f","modified":1466172137772},{"_id":"source/_posts/linux/Linux下安装Sublime-Text3及其破解.md","hash":"988c27535750239de5c51dad39385eeeae6bac7a","modified":1466172222829},{"_id":"source/_posts/linux/Linux下安装sublime汉化版及完美输入中文.md","hash":"073999070adb06529466088f6e41cf6197847a6c","modified":1466172243201},{"_id":"source/_posts/linux/Linux如何使用腾讯QQ.md","hash":"965edd0a226b0952149ee13bf791940c88f021f3","modified":1466172198708},{"_id":"source/_posts/linux/Linux如何安装爱壁纸HD.md","hash":"67bc6be77dfe817a85348f8ec17fc3b6250792c5","modified":1466172156093},{"_id":"source/_posts/linux/Wing-IDE-for-Linux-的安装和破解.md","hash":"584c91b8742c363ad57aea5e510341c2c32dfe10","modified":1466172292283},{"_id":"source/_posts/linux/linux下使用百度云以及酷我音乐.md","hash":"c4f7e2e2e96738f2e5625cd6dac4c5600d3d5238","modified":1466172267958},{"_id":"source/_posts/linux/linux如何安装搜狗输入法.md","hash":"2e5ae0e394119f26590c0a3008aa2765237ddc2f","modified":1466172179617},{"_id":"source/_posts/ubuntu/ubuntu下如何安装android-studio.md","hash":"4050702799d20ec82237e567dfd21c2efec9bc58","modified":1466171958052},{"_id":"source/_posts/ubuntu/ubuntu如何安装Mac-OS-X主题.md","hash":"e914e9fa74ed2d5ed3ec377f7da1c4709cf7ca28","modified":1466171860634},{"_id":"source/_posts/ubuntu/ubuntu安装Genymotion.md","hash":"f1ef8644ce070a11ac767e2caa90e4ecead3c80e","modified":1466171842155},{"_id":"source/_posts/ubuntu/ubuntu系统如何将firefox升级到最新版本.md","hash":"84e4be8a0558317b80a979520e94adb5467e7ee0","modified":1466171924823},{"_id":"source/_posts/ubuntu/ubuntu输入密码登陆后又跳到登陆界面解决方案.md","hash":"59717feb9cee81da22ea084df13b412628e60ee7","modified":1466171894502},{"_id":"source/_posts/ubuntu/如何安装windows和ubuntu双系统.md","hash":"70043be00ba2697a575028e9f2685132dd547000","modified":1466171984393},{"_id":"source/_posts/ubuntu/如何将ubuntu中的顶部任务栏变成半透明.md","hash":"5c026642596d01259def69c3cdfdd15ecc080845","modified":1466172031914},{"_id":"source/_posts/ubuntu/如何彻底删除ubuntu上的软件.md","hash":"7a51232e5cb5f72b942cc94d063132f189f6b478","modified":1466172005308},{"_id":"source/_posts/数据结构和算法和组成原理/课程设计之二叉树遍历.md","hash":"a282b7cde6296899fd4d6d382f4cc46db91c4a0c","modified":1466312254493},{"_id":"source/_posts/数据结构和算法和组成原理/算法复杂度速查表.md","hash":"cc00a5355fcbf8873c33524ce64bcdcbd8a6301c","modified":1466760424214},{"_id":"source/_posts/数据结构和算法和组成原理/海明校验码.md","hash":"fe9328ecd67513aea7b3ad06a0ed6198d0c0a7af","modified":1466171582891},{"_id":"source/_posts/文学电影音乐诗歌和画/一千零一夜bgm.md","hash":"4a707db8ba287e58fa97675201107ab75cbfee06","modified":1468046784386},{"_id":"source/_posts/文学电影音乐诗歌和画/他妈的-尧十三.md","hash":"c3b35d9312fce891c765d466f772c8aece84ff7f","modified":1467081020065},{"_id":"source/_posts/文学电影音乐诗歌和画/你渴望的离开，只是无处停摆《理想三旬》陈鸿宇.md","hash":"28e6ff7f83d9ac6b041c82ce77f657db1e42ffae","modified":1466850125346},{"_id":"source/_posts/矩阵/矩阵-原地转置-面试题.md","hash":"f8bb211766586b474f0b18428bb30c6cb1b83a92","modified":1466171800813},{"_id":"source/_posts/文学电影音乐诗歌和画/米店.md","hash":"c3b20ffa091d0ffc5278a3e5e14b216c30f649a5","modified":1466827324028},{"_id":"source/_posts/矩阵/矩阵旋转.md","hash":"a17f7a1799766a28de114d6e561a4df8e44727f5","modified":1466171777293},{"_id":"source/_posts/矩阵/矩阵翻转.md","hash":"ad46c082197ac409a24f5623c22c97157f9a0d0d","modified":1466171739209},{"_id":"source/_posts/通用/Hexo博客添加图片，音乐，视频.md","hash":"4e7d9462e947a88b2f0e4467f3e58e0cbb522c42","modified":1466171498050},{"_id":"source/_posts/通用/markdown使用技巧.md","hash":"34096244e5e9d63338499a4dc1a9fe554fa29031","modified":1466768207675},{"_id":"source/_posts/通用/hexo搭建个人博客.md","hash":"b1f47c01ee3a44c546a680f36126ce04a299ca80","modified":1466171528125},{"_id":"source/_posts/通用/优秀网站和博客.md","hash":"08e71aba393cdbd8184eb9e0079b30f3a4d3da0f","modified":1468502227291},{"_id":"source/_posts/通用/印象笔记快捷键.md","hash":"e8c12501cd6bec1255ac88aa13eb1d8b54850f8e","modified":1468219395502},{"_id":"source/_posts/通用/NexT主题内置标签.md","hash":"0c56fea67948dec887f2011ff12c4e6225cd50e8","modified":1466236138156},{"_id":"source/_posts/通用/帮程序员和站长减压放松的10个良心网站.md","hash":"8f71be27e97c741502ce4f9bfecbbe26f9890c5e","modified":1466687410140},{"_id":"source/_posts/通用/常用RGB颜色.md","hash":"3a571acc387ac110f05a9e6f95fd84e822088aaa","modified":1466735306612},{"_id":"source/_posts/通用/有趣代码注释.md","hash":"f00e3b8174028e5524d73022898912e2cbc90675","modified":1468295414819},{"_id":"source/_posts/通用/装机软件清单.md","hash":"8275929ccac4a578d6819676a999d2f355258ff7","modified":1468218614837},{"_id":"source/_posts/项目/项目分类建立Config文件.md","hash":"a117568d01070c6a4fb4d7866a08228bd5cbea23","modified":1467644367784},{"_id":"source/_posts/项目管理/git命令参考手册.md","hash":"5daa382ab23d10c1556608aa7b78b18485096a0b","modified":1467080777227},{"_id":"source/_posts/项目管理/一个客户端设置多个github账号.md","hash":"3f8831ff96b02e3526603b6f4d16ecd4f6d8953d","modified":1467008588307},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1466318054189},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"843389ec3cb4c2baa6a6a2bb916f803c89ca723b","modified":1466318054190},{"_id":"themes/hexo-theme-next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1466318054190},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"9fc9f89c169439d7584197930359b758eb198a1c","modified":1466318054191},{"_id":"themes/hexo-theme-next/layout/_macro/wechat-subscriber.swig","hash":"d569af20d20a960d534a5b60f90c20fef519d351","modified":1466318054191},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"5d84f3938e99f1908a6a1d44dd530740625f0188","modified":1466318054192},{"_id":"themes/hexo-theme-next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1466318054192},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"5defe4670bcd396f1937069f6ecd1daaa4b4b22d","modified":1467171718794},{"_id":"themes/hexo-theme-next/layout/_partials/head.swig","hash":"881abebed3a7fa71827365b0ba0e84ec525eeb7f","modified":1466318054194},{"_id":"themes/hexo-theme-next/layout/_partials/header.swig","hash":"0d4a0af276ff07bc154786ae782497cf49ec5485","modified":1467172059102},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1466318054196},{"_id":"themes/hexo-theme-next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1466318054196},{"_id":"themes/hexo-theme-next/layout/_scripts/baidu-push.swig","hash":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1466318054201},{"_id":"themes/hexo-theme-next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1466318054201},{"_id":"themes/hexo-theme-next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1466318054202},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1466318054215},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1466318054222},{"_id":"themes/hexo-theme-next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1466754903103},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1466318054224},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1466318054301},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1466318054303},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1466318054304},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1466318054303},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1466318054305},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1466318054306},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1466318054306},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1466318054307},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1466318054308},{"_id":"themes/hexo-theme-next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1466318054308},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1466318054309},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1466318054309},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1466318054310},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1466318054311},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466318054204},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466318054204},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466318054278},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466318054278},{"_id":"themes/hexo-theme-next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466318054280},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466318054298},{"_id":"themes/hexo-theme-next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466318054300},{"_id":"themes/hexo-theme-next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1466318054195},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1466318054197},{"_id":"themes/hexo-theme-next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1466318054198},{"_id":"themes/hexo-theme-next/layout/_partials/search/swiftype.swig","hash":"503333f8f0a3e14d480b8223edd6229fad375c6b","modified":1468591482486},{"_id":"themes/hexo-theme-next/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1466318054199},{"_id":"themes/hexo-theme-next/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1466318054199},{"_id":"themes/hexo-theme-next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1466318054199},{"_id":"themes/hexo-theme-next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1466318054200},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1466318054203},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1466318054205},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1466318054205},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1466318054210},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/localsearch.swig","hash":"5bd98c26cc188a2a30504d1330a0eaae34034db0","modified":1466318054213},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1466318054213},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/mathjax.swig","hash":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1466318054214},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1466318054214},{"_id":"themes/hexo-theme-next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1466318054277},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1466318054279},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1466318054280},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1466318054298},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"b8e3663996b39590509d843f674360872b0242ac","modified":1466318054298},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"a7ae72e846393493385275d934eaa78534d9834c","modified":1466318054299},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1466318054321},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1466318054322},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1466318054312},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1466318054313},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1466318054314},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1466318054315},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1466318054316},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1466318054318},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","hash":"418d09eb4df5dcc5e8d13d7f6245b1888200b51c","modified":1466318054320},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1466318054338},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1466318054339},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1466318054339},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1466318054340},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1466318054344},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1466318054344},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1466318054345},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1466318054346},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1466318054347},{"_id":"themes/hexo-theme-next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1466318054367},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1466318054370},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1466318054371},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1466318054372},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1466318054373},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1466318054374},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1466318054375},{"_id":"themes/hexo-theme-next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1466318054379},{"_id":"themes/hexo-theme-next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1466318054380},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1466318054384},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1466318054385},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1466318054386},{"_id":"themes/hexo-theme-next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1466318054369},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1466318054207},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1466318054205},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"3931f9c3bac3970a3f54c9d0072ae4c950aa176c","modified":1466318054208},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1466318054209},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1466318054209},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1466318054210},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/disqus.swig","hash":"f8b6a3017ab79057ce99f1ccb512193d67f4a35f","modified":1466318054211},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"2338be12ffee58bc08197cb9da8aaf31737aaf5c","modified":1466318054212},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1466318054226},{"_id":"themes/hexo-theme-next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1466318054227},{"_id":"themes/hexo-theme-next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1466318054227},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1466318054228},{"_id":"themes/hexo-theme-next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1466318054247},{"_id":"themes/hexo-theme-next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1466318054263},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1466318054272},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1466318054273},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1466318054274},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1466318054275},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1466318054276},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1466318054276},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1466318054282},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1466318054283},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1466318054283},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1466318054284},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1466318054285},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1466318054285},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1466318054286},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1466318054289},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1466318054289},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1466318054290},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1466318054291},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1466318054291},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1466318054293},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1466318054294},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"90f1391eb31764ae5a45013e6cb22fa1b2ec09f5","modified":1466760860518},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1466318054295},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1466318054296},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1466318054296},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1466318054297},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1466318054323},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1466318054323},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1466318054324},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1466318054325},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1466318054326},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1466318054327},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1466318054334},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1466318054336},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1466318054337},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1466318054318},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1466318054342},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1466318054342},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1466318054348},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1466318054349},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1466318054350},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1466318054365},{"_id":"themes/hexo-theme-next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1466318054377},{"_id":"themes/hexo-theme-next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1466318054378},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1466318054353},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1466318054355},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1466318054364},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1466318054383},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1466318054231},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1466318054230},{"_id":"themes/hexo-theme-next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1466318054229},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1466318054231},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1466318054233},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1466318054234},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/highlight.styl","hash":"70ec8d38d2b3ee1906793d1dcb68032adfa65f03","modified":1466318054238},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1468295789857},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1466318054243},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1466318054244},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1466318054245},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1466318054245},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1466318054249},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1466318054250},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1466318054251},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1466318054250},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-meta.styl","hash":"ca20affaeaf33c0904cb6356864fc6b78e95f447","modified":1466318054251},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1466318054252},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1466318054252},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1466318054253},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1466318054253},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1466318054254},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1466318054255},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"681b7c8ce4dc47130a0ca67c1ec62be7c96e4c4f","modified":1466318054255},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1466318054257},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1466318054256},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1466318054258},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1466318054259},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1466318054260},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1466318054260},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1466318054261},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1466318054261},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1466318054264},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1466318054262},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1466318054265},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1466318054267},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1466318054268},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1466318054269},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1466318054269},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1466318054270},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1466318054270},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1466318054271},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1466318054272},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1466318054287},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1466318054288},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1466318054292},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1466318054328},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1466318054329},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1466318054330},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1466318054331},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1466318054332},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1466318054333},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1466318054363},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1466318054359},{"_id":"public/baidusitemap.xml","hash":"07dad51221df1e68e08d098902f2d3be4cfd1117","modified":1468644849286},{"_id":"public/search.xml","hash":"edbd3cdad8f27dd80dcda62d3958250b96bb713b","modified":1468644849286},{"_id":"public/sitemap.xml","hash":"10d0d229e735cbff79839528ca2765a94ec925e4","modified":1468644849287},{"_id":"public/404.html","hash":"0e655ccbddf667765a70dde571b63126ef3f90e3","modified":1468644849317},{"_id":"public/about/index.html","hash":"9beded2c057ff46529cbe82bcd3881bc352d4451","modified":1468644849317},{"_id":"public/categories/index.html","hash":"03270e7abc47d0bc70b6caeac21e916c2e42c065","modified":1468644849317},{"_id":"public/links/index.html","hash":"1fc166c63cc2585532166259df25ec635eaced8c","modified":1468644849317},{"_id":"public/tags/index.html","hash":"82ac076971d29d267d54541b37d31eeac5983b25","modified":1468644849317},{"_id":"public/2016/07/16/JVM/Java内存区域与内存溢出简介/index.html","hash":"34f25345f9e7e0646cc6d2fa67be3fe13e018f70","modified":1468644849317},{"_id":"public/2016/07/12/通用/有趣代码注释/index.html","hash":"0b0609edd263957e7d9d7a71b34c4f2a261ced9c","modified":1468644849317},{"_id":"public/2016/07/11/通用/印象笔记快捷键/index.html","hash":"e0382b0096f3e030e4462276f0b45907fc0eb1d7","modified":1468644849318},{"_id":"public/2016/07/11/AndroidStudio/AS中使用xUtils报错找不到org-apache-http-client-methods-HttpRequestBase的类文件/index.html","hash":"e104264b8860e0c88c9413a59664657b3df54a24","modified":1468644849318},{"_id":"public/2016/07/09/文学电影音乐诗歌和画/一千零一夜bgm/index.html","hash":"e71c7dc9cd2dbe389e84f4ffc8bb23786bbc5751","modified":1468644849318},{"_id":"public/2016/07/06/Android/Eclipse-Android-ADT-Bundle下载地址和genymotion插件/index.html","hash":"f328488d022345439c167c10aa9aa96703c3a2b7","modified":1468644849318},{"_id":"public/2016/07/04/项目/项目分类建立Config文件/index.html","hash":"9a89fe4415ba6f97b9687c99b82f0c97f2628018","modified":1468644849318},{"_id":"public/2016/07/04/Android/Android-api-level对照表/index.html","hash":"f45fdfe34b116467fcade442a4ee23c8c771679a","modified":1468644849318},{"_id":"public/2016/06/30/AndroidStudio/AndroidStudio快捷键和使用技巧/index.html","hash":"e959e22d7a655f45decd8e5f82ccdcdca294f19a","modified":1468644849318},{"_id":"public/2016/06/30/Android/AndroidStudio指定git的忽略文件/index.html","hash":"9f4b835105ab9c1ff7bb1e8603295663b5d071e2","modified":1468644849318},{"_id":"public/2016/06/28/文学电影音乐诗歌和画/他妈的-尧十三/index.html","hash":"66e7e55f1aa415614451044ac89e287bec4a529a","modified":1468644849319},{"_id":"public/2016/06/28/JAVA/Socket简易聊天工具/index.html","hash":"0ec622f9c81e5eabc83a5eb7fa0b0c6ca407dec1","modified":1468644849319},{"_id":"public/2016/06/27/项目管理/git命令参考手册/index.html","hash":"5db454afbf08641f7b426be320298741ee47b870","modified":1468644849319},{"_id":"public/2016/06/25/文学电影音乐诗歌和画/米店/index.html","hash":"a4f57f4e14d7f277e7cf087ae03ae58662693208","modified":1468644849319},{"_id":"public/2016/06/25/文学电影音乐诗歌和画/你渴望的离开，只是无处停摆《理想三旬》陈鸿宇/index.html","hash":"6c7c93e827d7bffb41d4229e793ac7be9eb84ba5","modified":1468644849319},{"_id":"public/2016/06/24/数据结构和算法和组成原理/算法复杂度速查表/index.html","hash":"57c05372721cdae7216db454c8a4cbf6f329e4df","modified":1468644849319},{"_id":"public/2016/06/24/通用/常用RGB颜色/index.html","hash":"932f674b7762513ea9bd5464c324cb41161debb7","modified":1468644849319},{"_id":"public/2016/06/24/通用/markdown使用技巧/index.html","hash":"ab2f3847fbf54350c5cc9303abc228d6b29e4103","modified":1468644849319},{"_id":"public/2016/06/24/通用/帮程序员和站长减压放松的10个良心网站/index.html","hash":"dddf68b049e5879d8b362c9d1ddff3e15ed7a906","modified":1468644849319},{"_id":"public/2016/06/24/通用/优秀网站和博客/index.html","hash":"572c6a2eaf4d79629a26f9cb6142ca7fa37815f5","modified":1468644849320},{"_id":"public/2016/06/18/通用/NexT主题内置标签/index.html","hash":"0e7b2b7c70e706b31b862f6d53087766055b2ddf","modified":1468644849320},{"_id":"public/2016/06/17/数据结构和算法和组成原理/海明校验码/index.html","hash":"150108e0580d6706b1a4f51a6d05cdae744bed75","modified":1468644849320},{"_id":"public/2016/06/14/数据结构和算法和组成原理/课程设计之二叉树遍历/index.html","hash":"731cce8e5d4f90a5a651a28b917c35c22608f33f","modified":1468644849320},{"_id":"public/2016/06/07/通用/Hexo博客添加图片，音乐，视频/index.html","hash":"5bac71e99c1fcd11291de81cabee7f5f31f854b6","modified":1468644849320},{"_id":"public/2016/06/07/SEO/hexo博客添加域名实现双线部署（github和coding）/index.html","hash":"c874f3e7851b3cf61b5d5c262d003d97688baa51","modified":1468644849321},{"_id":"public/2016/06/06/SEO/hexo做SEO（添加sitemap和baidusitemap）/index.html","hash":"331886a927a72f0c58bd840f07eed0768bd5adbd","modified":1468644849321},{"_id":"public/2016/06/04/项目管理/一个客户端设置多个github账号/index.html","hash":"7c56b14a0ac344a6e117102e941a6ac5ec734c6e","modified":1468644849321},{"_id":"public/2016/06/03/通用/hexo搭建个人博客/index.html","hash":"01930389117fb1579988bd760bda03ef3b187bc2","modified":1468644849321},{"_id":"public/2016/06/02/ACM/ACM常用数学公式汇总/index.html","hash":"7734b795346e8084457f20696c04c17b72b32be4","modified":1468644849321},{"_id":"public/2016/06/02/C++/STL之map和multimap总结/index.html","hash":"0a53116cb9241ef4533be5358542361e8c0cc1d4","modified":1468644849321},{"_id":"public/2016/06/02/C++/STL之set和multiset总结/index.html","hash":"abc965749e0b61c9c90f5a2e5bd778977ba09753","modified":1468644849321},{"_id":"public/2016/06/02/C++/C++基础：各种输入方法总结，cin、cin.get()、cin.getline()、getline()、gets()、getchar()/index.html","hash":"40e10e88fb8d875b9c4fb779c9cd149bcbb6ee0b","modified":1468644849321},{"_id":"public/2016/06/02/C++/STL之算法总结/index.html","hash":"a04c9fc7a9dfe53620e3ea2087eb503d080696df","modified":1468644849322},{"_id":"public/2016/06/02/C++/STL之priority-queue（优先队列）/index.html","hash":"03f97c0d1e4692ed549b3b42ca34fc9de138ebcc","modified":1468644849322},{"_id":"public/2016/06/02/C++/STL容器总结之stack和queue/index.html","hash":"2ba25970b9e3a109e789c5db034c819764a9e098","modified":1468644849322},{"_id":"public/2016/06/02/C++/STL容器总结之deque/index.html","hash":"6446094d21339f13b90f31e4b2c270dd1afbf910","modified":1468644849322},{"_id":"public/2016/06/02/C++/STL容器总结之list/index.html","hash":"6c7e762363d46c85e0edceae96a57886a6198de9","modified":1468644849322},{"_id":"public/2016/06/02/C++/STL容器总结之Vector/index.html","hash":"52c1730863529c981df51beb179bb4f649f2ed0e","modified":1468644849322},{"_id":"public/2016/06/02/C++/C++string类型详解/index.html","hash":"d21bcc0e0ea5db9167d8279c4abc4fe559f70d66","modified":1468644849322},{"_id":"public/2016/06/02/通用/装机软件清单/index.html","hash":"a34190e131700b9ea0a2cc4b2181e49f283bd671","modified":1468644849323},{"_id":"public/2016/06/01/Android/Style.xml的妙用/index.html","hash":"d4879d983151ca713b5d74cffdf5cedb4d8c23ef","modified":1468644849323},{"_id":"public/2016/06/01/linux/linux下使用百度云以及酷我音乐/index.html","hash":"43f4846517eee60226ad24c66e5b360af6a0456f","modified":1468644849323},{"_id":"public/2016/06/01/矩阵/矩阵-原地转置-面试题/index.html","hash":"6fc8744a5453a34f398256a04bd7ebe145293dbc","modified":1468644849323},{"_id":"public/2016/06/01/矩阵/矩阵旋转/index.html","hash":"cda8435691222c5aec789095f624c374e0677f7a","modified":1468644849323},{"_id":"public/2016/06/01/矩阵/矩阵翻转/index.html","hash":"03aa83e8d4ed6c4ae60fe55c738c033a2db2bc36","modified":1468644849323},{"_id":"public/2016/06/01/linux/CentOS从php5-3升级到php5-5/index.html","hash":"8783f1eeef73855021a8af4eca2721ba702a5b2d","modified":1468644849324},{"_id":"public/2016/06/01/MySQL/Excel数据大量导入MySQL-MySQL数据换行符回车符替换处理/index.html","hash":"bec7b87bfd4a8295e254f478dc0885dc29ed5892","modified":1468644849324},{"_id":"public/2016/06/01/AndroidStudio/Android-Studio-SVN的使用/index.html","hash":"08ba41f2e90c8b3ce0cc522b59bf8e9ae9f68c29","modified":1468644849324},{"_id":"public/2016/06/01/AndroidStudio/Gneymotion无法启动和Oracle-VM-VirtualBox常见问题/index.html","hash":"174c2449e368e05e7a0affddfae8e385710e80a8","modified":1468644849325},{"_id":"public/2016/06/01/Android/Android仿超级课程表的课程界面设计/index.html","hash":"95e34b84a2fd0bb9bbf145df2bf485aa8d46d62b","modified":1468644849325},{"_id":"public/2016/06/01/Android/Android中如何一次性finish掉以前打开的所有的activity/index.html","hash":"a6e615455fcb0d1b5e2b7cc93a703f9d37ee9af2","modified":1468644849325},{"_id":"public/2016/06/01/Android/Android中的shape中的属性大全/index.html","hash":"40ae1bfa449bcbc6978430efae67346d4bce3b0e","modified":1468644849325},{"_id":"public/2015/06/01/linux/Linux下安装sublime汉化版及完美输入中文/index.html","hash":"ab502ac54bc051ce528370fa578a0ddbcaaca872","modified":1468644849325},{"_id":"public/2015/06/01/ubuntu/ubuntu输入密码登陆后又跳到登陆界面解决方案/index.html","hash":"a5ccd8dba1d33b6dad4bb22ef6db256e2030cdb4","modified":1468644849325},{"_id":"public/2015/06/01/ubuntu/如何彻底删除ubuntu上的软件/index.html","hash":"d977e73bb61bdc70f1b198f12b5e35a20899d1f4","modified":1468644849325},{"_id":"public/2015/06/01/ubuntu/ubuntu安装Genymotion/index.html","hash":"3e6268bb75bbf678b3a421accc0d6b37af3f8c1a","modified":1468644849326},{"_id":"public/2015/06/01/linux/Linux如何使用腾讯QQ/index.html","hash":"8de9ffe7ac9ea271863860ed5a03332642c59339","modified":1468644849326},{"_id":"public/2015/06/01/ubuntu/ubuntu下如何安装android-studio/index.html","hash":"8087752a856d231500a78bc91923a70af3d4f394","modified":1468644849326},{"_id":"public/2015/06/01/linux/Wing-IDE-for-Linux-的安装和破解/index.html","hash":"48fe662ab97ef5f996206f291be4b13257c1030a","modified":1468644849326},{"_id":"public/2015/06/01/linux/Linux下安装Sublime-Text3及其破解/index.html","hash":"d73fe7e4806458e86d133d0316625f31b0c02a79","modified":1468644849327},{"_id":"public/2015/06/01/linux/Linux如何安装爱壁纸HD/index.html","hash":"0f42cda7498d4645a80fa1cc6abe01212032b250","modified":1468644849327},{"_id":"public/2015/06/01/ubuntu/如何将ubuntu中的顶部任务栏变成半透明/index.html","hash":"5730088d307d6e7cbf1fa7fdc350e14781c6b112","modified":1468644849327},{"_id":"public/2015/06/01/ubuntu/ubuntu如何安装Mac-OS-X主题/index.html","hash":"7268c10a49ce5f073555ff0ff58291150b10b641","modified":1468644849327},{"_id":"public/2015/06/01/ubuntu/ubuntu系统如何将firefox升级到最新版本/index.html","hash":"c9030711238854dcd9afa037999d8dcb9cfc9d84","modified":1468644849327},{"_id":"public/2015/06/01/linux/linux如何安装搜狗输入法/index.html","hash":"52a57ba075c8ad54c479fb7e7c7f7d3f906f7a1f","modified":1468644849327},{"_id":"public/2015/06/01/ubuntu/如何安装windows和ubuntu双系统/index.html","hash":"279a8630d445088dff8d88cff8928d8f4dc9bcf0","modified":1468644849328},{"_id":"public/2015/06/01/AndroidStudio/CPU是AMD的电脑如何安装android-studio，以及studio的环境变量的配置/index.html","hash":"8463d3b809ed9a99cad0fafa5dd45b203ebb7f25","modified":1468644849328},{"_id":"public/archives/index.html","hash":"5076f7c93880a418ed54136d87817464367b2599","modified":1468644849328},{"_id":"public/archives/page/2/index.html","hash":"f9e4d382082aa6550c6bf164433d292e3f2c4144","modified":1468644849328},{"_id":"public/archives/page/3/index.html","hash":"c01007661945ebfa9de9f4ede4a2ee993c84a3b2","modified":1468644849329},{"_id":"public/archives/page/4/index.html","hash":"7aab5e06eb9c520fd2b53e15aebf578464d41046","modified":1468644849329},{"_id":"public/archives/2015/index.html","hash":"bde3154f640077d77e40d7714ecbd516775fb749","modified":1468644849329},{"_id":"public/archives/2015/06/index.html","hash":"6826a11826e4a0cf6cd3b1b12fddd83a915ec8f0","modified":1468644849329},{"_id":"public/archives/2016/index.html","hash":"7da9084d5d41f13f774ca2d8a6203633114c9cdf","modified":1468644849329},{"_id":"public/archives/2016/page/2/index.html","hash":"411a4153a50d91980dac37ff21cc4b61e87ed7ac","modified":1468644849329},{"_id":"public/archives/2016/page/3/index.html","hash":"e6272da4d6eb83ccb99cb719e5c812409dedbf98","modified":1468644849329},{"_id":"public/archives/2016/06/index.html","hash":"0c3ed5d006d3c4f226d93ac8d2b28e2c596d519e","modified":1468644849329},{"_id":"public/archives/2016/06/page/2/index.html","hash":"0b160261aaa746c28f3a3dbc4d483f1d0472a3ea","modified":1468644849329},{"_id":"public/archives/2016/06/page/3/index.html","hash":"4415cde4154b6e994f9672c89465173227e64741","modified":1468644849330},{"_id":"public/archives/2016/07/index.html","hash":"7cf99850a305f219a3cdda0d36b01ba58a24a81a","modified":1468644849330},{"_id":"public/categories/ACM/index.html","hash":"d9ffdf816da93c98078a324ccac4b99eb4385d7c","modified":1468644849330},{"_id":"public/categories/Android/index.html","hash":"6097920f1bb4a9c3344b9e5fdc16825e3d475942","modified":1468644849330},{"_id":"public/categories/AndroidStudio/index.html","hash":"1dd6eae9d0c3878143a0c6126bffa3f21973087e","modified":1468644849330},{"_id":"public/categories/C/index.html","hash":"a397938acf3884a2e9e01305043861618f6cd0f0","modified":1468644849330},{"_id":"public/categories/JAVA/index.html","hash":"984715707c94f3a35282591c6a4ba67c2e00b6d0","modified":1468644849330},{"_id":"public/categories/JVM/index.html","hash":"67819bc5ae65b71f11a450bf21fa8f7d69180312","modified":1468644849330},{"_id":"public/categories/MySQL/index.html","hash":"53fd72f1dfa823a8c57456c9220b02bd50b4d668","modified":1468644849330},{"_id":"public/categories/SEO/index.html","hash":"3b0a940bba0e9a26baff099bdd7659731228f926","modified":1468644849330},{"_id":"public/categories/linux/index.html","hash":"9acc6e71bbb74a4f60cfdd701729ffa997cde067","modified":1468644849330},{"_id":"public/categories/ubuntu/index.html","hash":"4bbfdbb9628a57ed71b78269c1299c1dd5a7f489","modified":1468644849331},{"_id":"public/categories/数据结构和算法和组成原理/index.html","hash":"b1b697d44292654023238525d3ad13536e890ee7","modified":1468644849331},{"_id":"public/categories/算法/index.html","hash":"2687757437d4afd04244a68a89c1ccf0aaaf9f46","modified":1468644849331},{"_id":"public/categories/文学电影音乐诗歌和画/index.html","hash":"405faa63eae7fc68d0c7fffd4860b68fc66c0341","modified":1468644849331},{"_id":"public/categories/矩阵/index.html","hash":"58b1ce7ff6401d01b983caf6ce402b827b76587d","modified":1468644849331},{"_id":"public/categories/通用/index.html","hash":"dc346b6c59aa0fa82613af68beb72f7c3943a32a","modified":1468644849331},{"_id":"public/categories/项目/index.html","hash":"432bd170cb6add5cea0d60f83d015b5360bb29ba","modified":1468644849331},{"_id":"public/categories/项目管理/index.html","hash":"9b3bb173df9f56aa9282e40b0e898a5e767df2ed","modified":1468644849331},{"_id":"public/index.html","hash":"bd85e14b81c2d6e50c4b0a347869d3aaf0d37a99","modified":1468644849331},{"_id":"public/page/2/index.html","hash":"a55130577a79199b6819ed7c7be166bd916611bb","modified":1468644849331},{"_id":"public/page/3/index.html","hash":"5dae08fa22ba265d27b2227ced69bef8ff9961ac","modified":1468644849332},{"_id":"public/page/4/index.html","hash":"823ea1b4d70686402ee2e8e4a9ea623fce1a662b","modified":1468644849332},{"_id":"public/page/5/index.html","hash":"149514c28bae68c37b8c2daca46496c431295582","modified":1468644849332},{"_id":"public/page/6/index.html","hash":"c07188f526fbf1781ee82cc83ced83351e80f88d","modified":1468644849332},{"_id":"public/page/7/index.html","hash":"f10470b81543a5aeb81bd2a9fd59daa0e238fa25","modified":1468644849332},{"_id":"public/page/8/index.html","hash":"ce7779966bbae07091cacf41f6511a2b89c1602e","modified":1468644849332},{"_id":"public/page/9/index.html","hash":"b0012184c3f080b83839910ff1c2cf8bfb35d90b","modified":1468644849332},{"_id":"public/page/10/index.html","hash":"829ed7da0228e5e8ec72ba68e275988e2d620d43","modified":1468644849332},{"_id":"public/page/11/index.html","hash":"f8a28490c228b11e1a206d3bffae1e7deec1dc04","modified":1468644849332},{"_id":"public/page/12/index.html","hash":"419c2a1cb5c96c1d26194270a5bf1912cbc2107e","modified":1468644849333},{"_id":"public/page/13/index.html","hash":"ffc35c5fa8d2209eddd1578af89fe95b428cc567","modified":1468644849333},{"_id":"public/page/14/index.html","hash":"17a2042e60a7d9bd264b2e7099cf922a7a20c113","modified":1468644849333},{"_id":"public/tags/ACM/index.html","hash":"dcc360830d83297c885c2fed2920b7242db7acfc","modified":1468644849333},{"_id":"public/tags/数学公式/index.html","hash":"48d96857f18480152ad37ed70e78f3360a3dd9a7","modified":1468644849333},{"_id":"public/tags/Android/index.html","hash":"228815034e8bbf2c3e093f47d760a72ec37e9ef2","modified":1468644849333},{"_id":"public/tags/git/index.html","hash":"0d02a0cef1426cdbb3ead0e5e0f678a0d0964bdf","modified":1468644849333},{"_id":"public/tags/Activity/index.html","hash":"f75cd4689ea394fd1c18741bbea353c03be5ba59","modified":1468644849334},{"_id":"public/tags/shape/index.html","hash":"db6b3b3172a850aae0738679fa3b1ce3eba82a87","modified":1468644849334},{"_id":"public/tags/Eclipse/index.html","hash":"0abe8627c92f1f040780cdf4f319d472954517dc","modified":1468644849334},{"_id":"public/tags/超级课程表/index.html","hash":"bfb698d8472d3ab092f1489c0e57802f7fe4c57c","modified":1468644849334},{"_id":"public/tags/UI/index.html","hash":"06796818c2b4a052b9bd709d63b76d60171db7b2","modified":1468644849334},{"_id":"public/tags/Style/index.html","hash":"555453ac8ec17efdbd74d6a79111c17aec8a9b4b","modified":1468644849334},{"_id":"public/tags/AndroidStudio/index.html","hash":"b2c4a9a5dfff89b0ba2f6465dbc0343c08b3f821","modified":1468644849334},{"_id":"public/tags/SVN/index.html","hash":"6f92fd282345d7eef4679a59dee9a5adc8950754","modified":1468644849334},{"_id":"public/tags/genymotion/index.html","hash":"eeda11fedc17d2875a50ffa57da4e7e88b77b81b","modified":1468644849334},{"_id":"public/tags/C/index.html","hash":"6110e0ab0aa784c0385ae5c8c58bc7000f9fa4f6","modified":1468644849334},{"_id":"public/tags/STL/index.html","hash":"1c3ea88830ec1ca1501435011aedd33173ba7b27","modified":1468644849335},{"_id":"public/tags/string/index.html","hash":"ad8cea068ec8ac7a83a708e2798243699db08136","modified":1468644849336},{"_id":"public/tags/map/index.html","hash":"d039e0891cf3d0261d0a1e35a249131c11a200a4","modified":1468644849336},{"_id":"public/tags/multimap/index.html","hash":"8ab60d2592bc7cdcc27ba676177e8580758f47d3","modified":1468644849337},{"_id":"public/tags/priority-queue/index.html","hash":"7d401771eb424c12bf61d8e96cdb157a04ce109e","modified":1468644849337},{"_id":"public/tags/优先队列/index.html","hash":"8d13e465890cd6e23d80ed8a0d92a76f93f6eeae","modified":1468644849337},{"_id":"public/tags/set/index.html","hash":"1850cb0725ce5ef3f242ecd314ca6dfbaf714b7c","modified":1468644849337},{"_id":"public/tags/multiset/index.html","hash":"c5444feb3f88741c2b208db6a06bd28b886d9ced","modified":1468644849337},{"_id":"public/tags/算法/index.html","hash":"9acf547be174e245bc0c597f68d0d433d394a3e6","modified":1468644849337},{"_id":"public/tags/Vector/index.html","hash":"b6498bf491a7838b97017030aba4f296ba69d3fe","modified":1468644849337},{"_id":"public/tags/deque/index.html","hash":"82f06a8246e89649d68ad22942aaf9062fab6e3a","modified":1468644849337},{"_id":"public/tags/list/index.html","hash":"6001de6508fe93003f4a6fd7854275ec641c9549","modified":1468644849337},{"_id":"public/tags/JAVA/index.html","hash":"ece60bb09e9ade21194cc6de862cc6ec4932633c","modified":1468644849337},{"_id":"public/tags/Socket/index.html","hash":"5b9622b97f01d81327cae4e42d23914bfc094f64","modified":1468644849337},{"_id":"public/tags/stack/index.html","hash":"8669b30a07350ee37497c49d8fddbf73cbd33a8c","modified":1468644849338},{"_id":"public/tags/queue/index.html","hash":"ed55e43c09dc933661f8fe11bda6d27722daba10","modified":1468644849338},{"_id":"public/tags/JVM/index.html","hash":"3dc600cd540c13e038b15f233a7ec54d4ae2c679","modified":1468644849338},{"_id":"public/tags/Excel/index.html","hash":"0167fa4f66384e4c0c2bd53d611ebd8ffba400da","modified":1468644849338},{"_id":"public/tags/MySQL/index.html","hash":"6cd7aa49ea5827acea7a9f9a4b9aea82f698b7cf","modified":1468644849338},{"_id":"public/tags/SEO/index.html","hash":"46db92ba635c76bcec8db7ff6a25fb6805bd07da","modified":1468644849338},{"_id":"public/tags/搜索引擎/index.html","hash":"b1a73c30d201dc3dccd36b73a32880149e6ed94c","modified":1468644849338},{"_id":"public/tags/hexo/index.html","hash":"1991085df8b002c43854316e50184e239e72a534","modified":1468644849338},{"_id":"public/tags/CentOS/index.html","hash":"9d2b0288cf2265d911bca62c9dec5b1c161cea92","modified":1468644849338},{"_id":"public/tags/linux/index.html","hash":"106a39b6339ce6869f1b026b2da1d56a930bb962","modified":1468644849339},{"_id":"public/tags/SublimeText/index.html","hash":"03730b39cd0dc88f2b6a9da850b57e06edc5b92f","modified":1468644849339},{"_id":"public/tags/qq/index.html","hash":"4be805c1b1cda2fad2eaccf78e1dc980283b386b","modified":1468644849339},{"_id":"public/tags/Wing/index.html","hash":"60a46fb667dc74bce4022cc821a8f09a0a060c66","modified":1468644849339},{"_id":"public/tags/百度云/index.html","hash":"b3ff2015a8c3c99e422f3cc79a055ae7eda2d976","modified":1468644849339},{"_id":"public/tags/酷我音乐/index.html","hash":"13f7936099492baea19f16d9c7c5e62b4ed9edee","modified":1468644849339},{"_id":"public/tags/ubuntu/index.html","hash":"7e54668f974e8cd073e704eb505d5818f9bfa3d0","modified":1468644849339},{"_id":"public/tags/MacOSX/index.html","hash":"37f455e82b3eff3f0b5eced4bebdf53e95876df5","modified":1468644849339},{"_id":"public/tags/windows/index.html","hash":"f04d0f1dc2f93384bfa5a568260601f87594be24","modified":1468644849339},{"_id":"public/tags/数据结构/index.html","hash":"a9c5504f08984ce75ce4109d3c074feb32ca5ff9","modified":1468644849340},{"_id":"public/tags/课程设计/index.html","hash":"111eb634cbbe96060f679643de069a12bdb50047","modified":1468644849340},{"_id":"public/tags/二叉树/index.html","hash":"27d5addd381a6126007a90fd5f8495b4d2f7ef31","modified":1468644849340},{"_id":"public/tags/组成原理/index.html","hash":"1349e1b8419255a22181f5f25326be310de35f77","modified":1468644849340},{"_id":"public/tags/海明校验码/index.html","hash":"6eacaa3f954ed95ec4c3b09d114f19873f76e9e9","modified":1468644849340},{"_id":"public/tags/一千零一夜/index.html","hash":"1eda463e4a65606ba5aeb705409b4c26f05f499e","modified":1468644849340},{"_id":"public/tags/音乐/index.html","hash":"221f1f2f88bb45cd65c56ad4a5468f4405a551b7","modified":1468644849340},{"_id":"public/tags/尧十三/index.html","hash":"a09e7f493ab48ef598a5fc18b25d74a095f5c1c0","modified":1468644849340},{"_id":"public/tags/民谣/index.html","hash":"05497e70e3dd3473f2ba582f0d7c5fbbbacc451b","modified":1468644849340},{"_id":"public/tags/油画/index.html","hash":"8b4cc5296f23411df03c4f375fc60089c046e943","modified":1468644849341},{"_id":"public/tags/矩阵/index.html","hash":"e660246d49321868045ac4d9c541c48888fa9405","modified":1468644849341},{"_id":"public/tags/水彩画/index.html","hash":"377cd27309218563e225b15e3aa30393069819e0","modified":1468644849341},{"_id":"public/tags/markdown/index.html","hash":"6d9db75ef10a4fad9aff186ecc9b2c55f4cfb29b","modified":1468644849341},{"_id":"public/tags/博客/index.html","hash":"95425494e4447f62785278552f5b3bee8187ddb5","modified":1468644849341},{"_id":"public/tags/网站/index.html","hash":"3589d19f96127868fa6f4ead25cd83d87e8c812a","modified":1468644849341},{"_id":"public/tags/印象笔记/index.html","hash":"b9de897f41bdb8644ae0ec701fc16ce499b67d22","modified":1468644849341},{"_id":"public/tags/减压/index.html","hash":"69508f86579a30182c019236518df7e03980b278","modified":1468644849342},{"_id":"public/tags/RGB颜色/index.html","hash":"ca83ab6a44aa1731cb67f8cf641edcbb16f1250f","modified":1468644849342},{"_id":"public/tags/代码注释/index.html","hash":"9233ea94ab38746311ec506fe38bc3c142577383","modified":1468644849342},{"_id":"public/tags/装机软件清单/index.html","hash":"9c73c7813554c85eeaea7df1347dce98aa2e335d","modified":1468644849342},{"_id":"public/tags/项目/index.html","hash":"59e5cde59240633f8d0aea8584388196e7ea559b","modified":1468644849342},{"_id":"public/tags/Config/index.html","hash":"ef2bdba8a4cb693cf4726019f1762a83f3afe063","modified":1468644849342},{"_id":"public/CNAME","hash":"02b8db046cd22fb7423f8f66566b803cfb08d227","modified":1468644849401},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1468644849401},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1468644849401},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1468644849401},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1468644849401},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1468644849401},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1468644849401},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1468644849402},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1468644849402},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1468644849402},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1468644849402},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1468644849402},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1468644849402},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1468644849402},{"_id":"public/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1468644849402},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1468644849403},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1468644849403},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1468644849403},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1468644849403},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1468644849403},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1468644849403},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1468644849403},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1468644849403},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1468644849404},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1468644849404},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1468644850746},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1468644850751},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1468644850752},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1468644850775},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1468644850776},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1468644850776},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1468644850776},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1468644850776},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1468644850776},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1468644850776},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1468644850777},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1468644850777},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1468644850777},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1468644850777},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1468644850777},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1468644850778},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1468644850778},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1468644850778},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1468644850778},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1468644850778},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1468644850778},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1468644850779},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1468644850779},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1468644850779},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1468644850779},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1468644850779},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1468644850779},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1468644850779},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1468644850780},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1468644850780},{"_id":"public/css/main.css","hash":"04c546d98c085aabb2ab4b8897e9dedca7839813","modified":1468644850780},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1468644850780},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1468644850780},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1468644850780},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1468644850781},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1468644850781},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1468644850781},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1468644850782},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1468644850782},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1468644850782},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1468644850782},{"_id":"public/favicon.ico","hash":"e5e666a24d66d82c0e37f0ff8a9a3ca8b93026e9","modified":1468644850793},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1468644850831}],"Category":[{"name":"ACM","_id":"ciqop7qfr0008kgae1wcwbbtt"},{"name":"Android","_id":"ciqop7qg3000dkgaef36uxb4k"},{"name":"AndroidStudio","_id":"ciqop7qhh0011kgae22yp9s2e"},{"name":"C++","_id":"ciqop7qik001wkgaenbqx71n7"},{"name":"JAVA","_id":"ciqop7qki0039kgaek04wi4bd"},{"name":"JVM","_id":"ciqop7qkq003hkgaeqyenh3jn"},{"name":"MySQL","_id":"ciqop7qkz003nkgae3utdrrcs"},{"name":"SEO","_id":"ciqop7qln003tkgaesyzmq1zx"},{"name":"linux","_id":"ciqop7qlv0044kgaed85jy22v"},{"name":"ubuntu","_id":"ciqop7qnl005gkgaegbf0vy6m"},{"name":"数据结构和算法和组成原理","_id":"ciqop7qo4006dkgaed7h29vvg"},{"name":"算法","_id":"ciqop7qo7006hkgae3ox4p9b0"},{"name":"文学电影音乐诗歌和画","_id":"ciqop7qoa006qkgaet80surit"},{"name":"矩阵","_id":"ciqop7qoe0072kgae1r8y2w6f"},{"name":"通用","_id":"ciqop7qon007hkgaea8f2sxen"},{"name":"项目","_id":"ciqop7qpb008kkgae2ltxf75m"},{"name":"项目管理","_id":"ciqop7qpd008pkgaetruu15ad"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到 戎码人生 的主页\">\n</script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到 戎码人生 的主页\">\n</script>\n\n</body>\n</html>","date":"2016-06-19T07:21:30.786Z","updated":"2016-06-19T07:21:30.778Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"ciqop7q350000kgaemqwdetex","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到 戎码人生 的主页\">\n</script>\n\n</body>\n</html>","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到 戎码人生 的主页\">\n</script>\n\n</body>\n</html>"},{"title":"关于","date":"2016-05-31T13:28:17.000Z","_content":"\n\n<center>![](http://img.blog.csdn.net/20160507124439756)\n\n我开始写博客的时间大概是我大二上学期（2015年），受到了两个学长的影响，一个是\n\n王浩杰（杰哥博客：[Just do it !](http://blog.csdn.net/whjkm)），另一个是李润东（东哥博客：[键盘上的舞者](http://www.lrdup.net/)），\n\n从那以后就一直保持写博客的习惯.\n\n博客主要记录我在学习过程中的心得，生活中的点滴吧.主要内容是关于算法\n\n，Android开发，Java，ACM竞赛，C，C++，Linux，web，PHP等.\n\n喜欢文学音乐电影诗歌和画，陈奕迅，张国荣，老罗.\n\nemail：qiuqiuchengjia@163.com\n\nQQ ：2470041229（时光倒流二十年）\n\n微 信：qiuqiuchengjia（时光倒流二十年）\n\nGithub主页：https://github.com/qiuchengjia\n\nNever give up !\n</center>\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2016-05-31 13:28:17\n---\n\n\n<center>![](http://img.blog.csdn.net/20160507124439756)\n\n我开始写博客的时间大概是我大二上学期（2015年），受到了两个学长的影响，一个是\n\n王浩杰（杰哥博客：[Just do it !](http://blog.csdn.net/whjkm)），另一个是李润东（东哥博客：[键盘上的舞者](http://www.lrdup.net/)），\n\n从那以后就一直保持写博客的习惯.\n\n博客主要记录我在学习过程中的心得，生活中的点滴吧.主要内容是关于算法\n\n，Android开发，Java，ACM竞赛，C，C++，Linux，web，PHP等.\n\n喜欢文学音乐电影诗歌和画，陈奕迅，张国荣，老罗.\n\nemail：qiuqiuchengjia@163.com\n\nQQ ：2470041229（时光倒流二十年）\n\n微 信：qiuqiuchengjia（时光倒流二十年）\n\nGithub主页：https://github.com/qiuchengjia\n\nNever give up !\n</center>\n","updated":"2016-06-25T11:16:03.816Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciqop7qbk0001kgaebz4bgltu","content":"<center><img src=\"http://img.blog.csdn.net/20160507124439756\" alt=\"\"><br><br>我开始写博客的时间大概是我大二上学期（2015年），受到了两个学长的影响，一个是<br><br>王浩杰（杰哥博客：<a href=\"http://blog.csdn.net/whjkm\" target=\"_blank\" rel=\"external\">Just do it !</a>），另一个是李润东（东哥博客：<a href=\"http://www.lrdup.net/\" target=\"_blank\" rel=\"external\">键盘上的舞者</a>），<br><br>从那以后就一直保持写博客的习惯.<br><br>博客主要记录我在学习过程中的心得，生活中的点滴吧.主要内容是关于算法<br><br>，Android开发，Java，ACM竞赛，C，C++，Linux，web，PHP等.<br><br>喜欢文学音乐电影诗歌和画，陈奕迅，张国荣，老罗.<br><br>email：qiuqiuchengjia@163.com<br><br>QQ ：2470041229（时光倒流二十年）<br><br>微 信：qiuqiuchengjia（时光倒流二十年）<br><br>Github主页：<a href=\"https://github.com/qiuchengjia\" target=\"_blank\" rel=\"external\">https://github.com/qiuchengjia</a><br><br>Never give up !<br></center>\n","excerpt":"","more":"<center><img src=\"http://img.blog.csdn.net/20160507124439756\" alt=\"\"><br><br>我开始写博客的时间大概是我大二上学期（2015年），受到了两个学长的影响，一个是<br><br>王浩杰（杰哥博客：<a href=\"http://blog.csdn.net/whjkm\">Just do it !</a>），另一个是李润东（东哥博客：<a href=\"http://www.lrdup.net/\">键盘上的舞者</a>），<br><br>从那以后就一直保持写博客的习惯.<br><br>博客主要记录我在学习过程中的心得，生活中的点滴吧.主要内容是关于算法<br><br>，Android开发，Java，ACM竞赛，C，C++，Linux，web，PHP等.<br><br>喜欢文学音乐电影诗歌和画，陈奕迅，张国荣，老罗.<br><br>email：qiuqiuchengjia@163.com<br><br>QQ ：2470041229（时光倒流二十年）<br><br>微 信：qiuqiuchengjia（时光倒流二十年）<br><br>Github主页：<a href=\"https://github.com/qiuchengjia\">https://github.com/qiuchengjia</a><br><br>Never give up !<br></center>\n"},{"title":"分类","date":"2016-05-30T19:49:22.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2016-05-30 19:49:22\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-06-02T06:55:16.734Z","path":"categories/index.html","layout":"page","_id":"ciqop7qbm0002kgaek8i9isfa","content":"","excerpt":"","more":""},{"title":"友链","date":"2016-05-31T13:28:01.000Z","_content":"\n-  [键盘上的舞者](http://www.lrdup.net/)\n\n-  [Just do it !](http://blog.csdn.net/whjkm)\n\n-  [link](http://www.ywlink.tk/)\n\n       \n            \n                \n                \n <script type=\"text/javascript\" src=\"http://static.zgboke.com/hutui.js\"></script>\n","source":"links/index.md","raw":"---\ntitle: 友链\ndate: 2016-05-31 13:28:01\n---\n\n-  [键盘上的舞者](http://www.lrdup.net/)\n\n-  [Just do it !](http://blog.csdn.net/whjkm)\n\n-  [link](http://www.ywlink.tk/)\n\n       \n            \n                \n                \n <script type=\"text/javascript\" src=\"http://static.zgboke.com/hutui.js\"></script>\n","updated":"2016-06-02T06:55:16.996Z","path":"links/index.html","comments":1,"layout":"page","_id":"ciqop7qbp0003kgaela66vic1","content":"<ul>\n<li><p><a href=\"http://www.lrdup.net/\" target=\"_blank\" rel=\"external\">键盘上的舞者</a></p>\n</li>\n<li><p><a href=\"http://blog.csdn.net/whjkm\" target=\"_blank\" rel=\"external\">Just do it !</a></p>\n</li>\n<li><p><a href=\"http://www.ywlink.tk/\" target=\"_blank\" rel=\"external\">link</a></p>\n</li>\n</ul>\n <script type=\"text/javascript\" src=\"http://static.zgboke.com/hutui.js\"></script>\n","excerpt":"","more":"<ul>\n<li><p><a href=\"http://www.lrdup.net/\">键盘上的舞者</a></p>\n</li>\n<li><p><a href=\"http://blog.csdn.net/whjkm\">Just do it !</a></p>\n</li>\n<li><p><a href=\"http://www.ywlink.tk/\">link</a></p>\n</li>\n</ul>\n <script type=\"text/javascript\" src=\"http://static.zgboke.com/hutui.js\"></script>\n"},{"title":"标签","date":"2016-05-30T19:48:29.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2016-05-30 19:48:29\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-06-02T06:55:16.214Z","path":"tags/index.html","layout":"page","_id":"ciqop7qbr0004kgaeo0kq9o7e","content":"","excerpt":"","more":""}],"Post":[{"title":" ACM常用数学公式汇总","date":"2016-06-01T18:48:36.000Z","_content":"\n- 扇形面积\n  S=1/2×弧长×半径，S扇=（n/360）πR²\n\n- 三角函数定义\n\n  <center>![](http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F.png)</center>\n  \n- 三角函数特殊角\n\n<center>![](http://img.blog.csdn.net/20160524155156479)</center>\n\n<!-- more -->\n\n- 正弦定理\n\n对于边长为a,b和c而相应角为A,B和C的三角形，有：\nsinA / a = sinB / b = sinC/c\n也可表示为：a/sinA=b/sinB=c/sinC=2R\n变形：a=2RsinA,b=2RsinB,c=2RsinC\n其中R是三角形的外接圆半径。\n\n- 余弦定理\n\n对于边长为a、b、c而相应角为A、B、C的三角形，有：\na² = b² + c²- 2bc·cosA\nb² = a² + c² - 2ac·cosB\nc² = a² + b² - 2ab·cosC\n\n- 正切定理\n对于边长为a,b和c而相应角为A,B和C的三角形，有：\n(a+b)/(a-b) = tan[(A+B)/2]/tan[(A-B)/2]\n\n- 三角形面积\n    s=a*b*sinC/2\n\n- 多边形面积\n\n计算几何，求多边形的面积，实例：[传送门](http://blog.csdn.net/qq_26891045/article/details/51493840)\n\n只要记住这个公式：\n\n<center>![](http://acm.hdu.edu.cn/data/images/2528-2.jpg)</center>\n\n如果逆时针给出点坐标，值为正，\n如果顺时针给出点坐标，值为负。\n当i=n-1  i+1就是n所代表的点就是第一个点。\n\n- 圆的摆线留下的面积\n\n摆线留下的面积等于圆的三倍  实例：[传送门](http://blog.csdn.net/qq_26891045/article/details/51407311)\n\n- 点到直线的距离(直线AX+BY+C=0)：\n\n<center>![](http://img.blog.csdn.net/20160524203038020)</center>\n\n- 两平行线之间的距离(直线AX+BY+C=0)：\n\n<center>![](http://img.blog.csdn.net/20160524203059141)</center>\n\n- 两直线的夹角(直线AX+BY+C=0)：\n\n<center>![](http://img.blog.csdn.net/20160524203250663)</center>\n\n- 三角形重心\n\n设某个三角形的重心为G（cx，cy），顶点坐标分别为A1（x1，y1），A2（x2，y2），A3（x3，y3），则有cx = (x1 + x2 + x3)/3.同理求得cy\n\n- 多边形重心\n\ncx = (∑ cx[i]*s[i]) / （3*∑s[i]）;  cy = (∑ cy[i]*s[i] ) / （3*∑s[i]）;其中（cx[i], cy[i]）, s[i]分别是所划分的第i个三角形的重心坐标和面积   示例：[传送门](http://blog.csdn.net/qq_26891045/article/details/51464782)\n\n- 锐角三角形判定公式\n  锐角三角形计算公式：a*a+b*b>c*c\n\n- 向量之间的夹角\n\n<center>![](http://img.blog.csdn.net/20160525135016850)</center>\n\n- 三角形的面积\n\n<center>![](http://img.blog.csdn.net/20160525133627281)</center>\n\n- 多边形的面积\n\n<center>![](http://img.blog.csdn.net/20160525133815657)\n或\n![](http://img.blog.csdn.net/20160525133820958)</center>\n\n- 向量叉积判断多边形凹凸\n\n对于连续的三个点p0,p1,p2，另向量a=p1-p0，b=p2-p1若是凸多边形，那么b相对于a一定是向逆时针方向旋转的\n判断两向量的旋转方向，可以使用向量的叉积  a×b ＝ x1×y2 － x2×y1\n\na×b > 0 b在a的逆时针方向\na×b = 0 b平行于a（共线）\na×b < 0 b在a的顺时针方向\n要注意的是，对于最后一个点pn，还要和起始的两个点p0,p1判断一次\n","source":"_posts/ACM/ACM常用数学公式汇总.md","raw":"---\ntitle: ' ACM常用数学公式汇总'\ndate: 2016-06-01 18:48:36\ntags: [ACM,数学公式]\ncategories: ACM\n---\n\n- 扇形面积\n  S=1/2×弧长×半径，S扇=（n/360）πR²\n\n- 三角函数定义\n\n  <center>![](http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F.png)</center>\n  \n- 三角函数特殊角\n\n<center>![](http://img.blog.csdn.net/20160524155156479)</center>\n\n<!-- more -->\n\n- 正弦定理\n\n对于边长为a,b和c而相应角为A,B和C的三角形，有：\nsinA / a = sinB / b = sinC/c\n也可表示为：a/sinA=b/sinB=c/sinC=2R\n变形：a=2RsinA,b=2RsinB,c=2RsinC\n其中R是三角形的外接圆半径。\n\n- 余弦定理\n\n对于边长为a、b、c而相应角为A、B、C的三角形，有：\na² = b² + c²- 2bc·cosA\nb² = a² + c² - 2ac·cosB\nc² = a² + b² - 2ab·cosC\n\n- 正切定理\n对于边长为a,b和c而相应角为A,B和C的三角形，有：\n(a+b)/(a-b) = tan[(A+B)/2]/tan[(A-B)/2]\n\n- 三角形面积\n    s=a*b*sinC/2\n\n- 多边形面积\n\n计算几何，求多边形的面积，实例：[传送门](http://blog.csdn.net/qq_26891045/article/details/51493840)\n\n只要记住这个公式：\n\n<center>![](http://acm.hdu.edu.cn/data/images/2528-2.jpg)</center>\n\n如果逆时针给出点坐标，值为正，\n如果顺时针给出点坐标，值为负。\n当i=n-1  i+1就是n所代表的点就是第一个点。\n\n- 圆的摆线留下的面积\n\n摆线留下的面积等于圆的三倍  实例：[传送门](http://blog.csdn.net/qq_26891045/article/details/51407311)\n\n- 点到直线的距离(直线AX+BY+C=0)：\n\n<center>![](http://img.blog.csdn.net/20160524203038020)</center>\n\n- 两平行线之间的距离(直线AX+BY+C=0)：\n\n<center>![](http://img.blog.csdn.net/20160524203059141)</center>\n\n- 两直线的夹角(直线AX+BY+C=0)：\n\n<center>![](http://img.blog.csdn.net/20160524203250663)</center>\n\n- 三角形重心\n\n设某个三角形的重心为G（cx，cy），顶点坐标分别为A1（x1，y1），A2（x2，y2），A3（x3，y3），则有cx = (x1 + x2 + x3)/3.同理求得cy\n\n- 多边形重心\n\ncx = (∑ cx[i]*s[i]) / （3*∑s[i]）;  cy = (∑ cy[i]*s[i] ) / （3*∑s[i]）;其中（cx[i], cy[i]）, s[i]分别是所划分的第i个三角形的重心坐标和面积   示例：[传送门](http://blog.csdn.net/qq_26891045/article/details/51464782)\n\n- 锐角三角形判定公式\n  锐角三角形计算公式：a*a+b*b>c*c\n\n- 向量之间的夹角\n\n<center>![](http://img.blog.csdn.net/20160525135016850)</center>\n\n- 三角形的面积\n\n<center>![](http://img.blog.csdn.net/20160525133627281)</center>\n\n- 多边形的面积\n\n<center>![](http://img.blog.csdn.net/20160525133815657)\n或\n![](http://img.blog.csdn.net/20160525133820958)</center>\n\n- 向量叉积判断多边形凹凸\n\n对于连续的三个点p0,p1,p2，另向量a=p1-p0，b=p2-p1若是凸多边形，那么b相对于a一定是向逆时针方向旋转的\n判断两向量的旋转方向，可以使用向量的叉积  a×b ＝ x1×y2 － x2×y1\n\na×b > 0 b在a的逆时针方向\na×b = 0 b平行于a（共线）\na×b < 0 b在a的顺时针方向\n要注意的是，对于最后一个点pn，还要和起始的两个点p0,p1判断一次\n","slug":"ACM/ACM常用数学公式汇总","published":1,"updated":"2016-06-17T13:41:11.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qf70005kgaepozqbouu","content":"<ul>\n<li><p>扇形面积<br>S=1/2×弧长×半径，S扇=（n/360）πR²</p>\n</li>\n<li><p>三角函数定义</p>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F.png\" alt=\"\"></center>\n</li>\n<li><p>三角函数特殊角</p>\n</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160524155156479\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<ul>\n<li>正弦定理</li>\n</ul>\n<p>对于边长为a,b和c而相应角为A,B和C的三角形，有：<br>sinA / a = sinB / b = sinC/c<br>也可表示为：a/sinA=b/sinB=c/sinC=2R<br>变形：a=2RsinA,b=2RsinB,c=2RsinC<br>其中R是三角形的外接圆半径。</p>\n<ul>\n<li>余弦定理</li>\n</ul>\n<p>对于边长为a、b、c而相应角为A、B、C的三角形，有：<br>a² = b² + c²- 2bc·cosA<br>b² = a² + c² - 2ac·cosB<br>c² = a² + b² - 2ab·cosC</p>\n<ul>\n<li><p>正切定理<br>对于边长为a,b和c而相应角为A,B和C的三角形，有：<br>(a+b)/(a-b) = tan[(A+B)/2]/tan[(A-B)/2]</p>\n</li>\n<li><p>三角形面积<br>  s=a<em>b</em>sinC/2</p>\n</li>\n<li><p>多边形面积</p>\n</li>\n</ul>\n<p>计算几何，求多边形的面积，实例：<a href=\"http://blog.csdn.net/qq_26891045/article/details/51493840\" target=\"_blank\" rel=\"external\">传送门</a></p>\n<p>只要记住这个公式：</p>\n<center><img src=\"http://acm.hdu.edu.cn/data/images/2528-2.jpg\" alt=\"\"></center>\n\n<p>如果逆时针给出点坐标，值为正，<br>如果顺时针给出点坐标，值为负。<br>当i=n-1  i+1就是n所代表的点就是第一个点。</p>\n<ul>\n<li>圆的摆线留下的面积</li>\n</ul>\n<p>摆线留下的面积等于圆的三倍  实例：<a href=\"http://blog.csdn.net/qq_26891045/article/details/51407311\" target=\"_blank\" rel=\"external\">传送门</a></p>\n<ul>\n<li>点到直线的距离(直线AX+BY+C=0)：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160524203038020\" alt=\"\"></center>\n\n<ul>\n<li>两平行线之间的距离(直线AX+BY+C=0)：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160524203059141\" alt=\"\"></center>\n\n<ul>\n<li>两直线的夹角(直线AX+BY+C=0)：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160524203250663\" alt=\"\"></center>\n\n<ul>\n<li>三角形重心</li>\n</ul>\n<p>设某个三角形的重心为G（cx，cy），顶点坐标分别为A1（x1，y1），A2（x2，y2），A3（x3，y3），则有cx = (x1 + x2 + x3)/3.同理求得cy</p>\n<ul>\n<li>多边形重心</li>\n</ul>\n<p>cx = (∑ cx[i]<em>s[i]) / （3</em>∑s[i]）;  cy = (∑ cy[i]<em>s[i] ) / （3</em>∑s[i]）;其中（cx[i], cy[i]）, s[i]分别是所划分的第i个三角形的重心坐标和面积   示例：<a href=\"http://blog.csdn.net/qq_26891045/article/details/51464782\" target=\"_blank\" rel=\"external\">传送门</a></p>\n<ul>\n<li><p>锐角三角形判定公式<br>锐角三角形计算公式：a<em>a+b</em>b&gt;c*c</p>\n</li>\n<li><p>向量之间的夹角</p>\n</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160525135016850\" alt=\"\"></center>\n\n<ul>\n<li>三角形的面积</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160525133627281\" alt=\"\"></center>\n\n<ul>\n<li>多边形的面积</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160525133815657\" alt=\"\"><br>或<br><img src=\"http://img.blog.csdn.net/20160525133820958\" alt=\"\"></center>\n\n<ul>\n<li>向量叉积判断多边形凹凸</li>\n</ul>\n<p>对于连续的三个点p0,p1,p2，另向量a=p1-p0，b=p2-p1若是凸多边形，那么b相对于a一定是向逆时针方向旋转的<br>判断两向量的旋转方向，可以使用向量的叉积  a×b ＝ x1×y2 － x2×y1</p>\n<p>a×b &gt; 0 b在a的逆时针方向<br>a×b = 0 b平行于a（共线）<br>a×b &lt; 0 b在a的顺时针方向<br>要注意的是，对于最后一个点pn，还要和起始的两个点p0,p1判断一次</p>\n","excerpt":"<ul>\n<li><p>扇形面积<br>S=1/2×弧长×半径，S扇=（n/360）πR²</p>\n</li>\n<li><p>三角函数定义</p>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F.png\" alt=\"\"></center>\n</li>\n<li><p>三角函数特殊角</p>\n</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160524155156479\" alt=\"\"></center>","more":"<ul>\n<li>正弦定理</li>\n</ul>\n<p>对于边长为a,b和c而相应角为A,B和C的三角形，有：<br>sinA / a = sinB / b = sinC/c<br>也可表示为：a/sinA=b/sinB=c/sinC=2R<br>变形：a=2RsinA,b=2RsinB,c=2RsinC<br>其中R是三角形的外接圆半径。</p>\n<ul>\n<li>余弦定理</li>\n</ul>\n<p>对于边长为a、b、c而相应角为A、B、C的三角形，有：<br>a² = b² + c²- 2bc·cosA<br>b² = a² + c² - 2ac·cosB<br>c² = a² + b² - 2ab·cosC</p>\n<ul>\n<li><p>正切定理<br>对于边长为a,b和c而相应角为A,B和C的三角形，有：<br>(a+b)/(a-b) = tan[(A+B)/2]/tan[(A-B)/2]</p>\n</li>\n<li><p>三角形面积<br>  s=a<em>b</em>sinC/2</p>\n</li>\n<li><p>多边形面积</p>\n</li>\n</ul>\n<p>计算几何，求多边形的面积，实例：<a href=\"http://blog.csdn.net/qq_26891045/article/details/51493840\">传送门</a></p>\n<p>只要记住这个公式：</p>\n<center><img src=\"http://acm.hdu.edu.cn/data/images/2528-2.jpg\" alt=\"\"></center>\n\n<p>如果逆时针给出点坐标，值为正，<br>如果顺时针给出点坐标，值为负。<br>当i=n-1  i+1就是n所代表的点就是第一个点。</p>\n<ul>\n<li>圆的摆线留下的面积</li>\n</ul>\n<p>摆线留下的面积等于圆的三倍  实例：<a href=\"http://blog.csdn.net/qq_26891045/article/details/51407311\">传送门</a></p>\n<ul>\n<li>点到直线的距离(直线AX+BY+C=0)：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160524203038020\" alt=\"\"></center>\n\n<ul>\n<li>两平行线之间的距离(直线AX+BY+C=0)：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160524203059141\" alt=\"\"></center>\n\n<ul>\n<li>两直线的夹角(直线AX+BY+C=0)：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160524203250663\" alt=\"\"></center>\n\n<ul>\n<li>三角形重心</li>\n</ul>\n<p>设某个三角形的重心为G（cx，cy），顶点坐标分别为A1（x1，y1），A2（x2，y2），A3（x3，y3），则有cx = (x1 + x2 + x3)/3.同理求得cy</p>\n<ul>\n<li>多边形重心</li>\n</ul>\n<p>cx = (∑ cx[i]<em>s[i]) / （3</em>∑s[i]）;  cy = (∑ cy[i]<em>s[i] ) / （3</em>∑s[i]）;其中（cx[i], cy[i]）, s[i]分别是所划分的第i个三角形的重心坐标和面积   示例：<a href=\"http://blog.csdn.net/qq_26891045/article/details/51464782\">传送门</a></p>\n<ul>\n<li><p>锐角三角形判定公式<br>锐角三角形计算公式：a<em>a+b</em>b&gt;c*c</p>\n</li>\n<li><p>向量之间的夹角</p>\n</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160525135016850\" alt=\"\"></center>\n\n<ul>\n<li>三角形的面积</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160525133627281\" alt=\"\"></center>\n\n<ul>\n<li>多边形的面积</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160525133815657\" alt=\"\"><br>或<br><img src=\"http://img.blog.csdn.net/20160525133820958\" alt=\"\"></center>\n\n<ul>\n<li>向量叉积判断多边形凹凸</li>\n</ul>\n<p>对于连续的三个点p0,p1,p2，另向量a=p1-p0，b=p2-p1若是凸多边形，那么b相对于a一定是向逆时针方向旋转的<br>判断两向量的旋转方向，可以使用向量的叉积  a×b ＝ x1×y2 － x2×y1</p>\n<p>a×b &gt; 0 b在a的逆时针方向<br>a×b = 0 b平行于a（共线）<br>a×b &lt; 0 b在a的顺时针方向<br>要注意的是，对于最后一个点pn，还要和起始的两个点p0,p1判断一次</p>"},{"title":"AndroidStudio指定git的忽略文件","date":"2016-06-29T17:43:11.000Z","_content":"\n### AndroidStudio自动忽略###\n\n- 现在的AndroidStudio已经很智能了，当创建项目的时候自动给我们创建了一个\n\n.gitignore 并给我们忽略了一些文件\n\n```cpp\n*.iml\n.gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\n/captures\n```\n\n### 手动忽略###\n\n- 我们还可以在项目创建完成之后手动指定要忽略的文件\n\n```cpp\n.idea 文件夹\n.gradle 文件夹\n所有的 build 文件夹\n所有的 .iml 文件\nlocal.properties 文件\n```\n\n- AndroidStudio如图配置就可以实现\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E6%8C%87%E5%AE%9Agit%E7%9A%84%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6.png)</center>\n\n<!-- more -->","source":"_posts/Android/AndroidStudio指定git的忽略文件.md","raw":"---\ntitle: AndroidStudio指定git的忽略文件\ndate: 2016-06-29 17:43:11\ntags: [Android,git]\ncategories: Android\n---\n\n### AndroidStudio自动忽略###\n\n- 现在的AndroidStudio已经很智能了，当创建项目的时候自动给我们创建了一个\n\n.gitignore 并给我们忽略了一些文件\n\n```cpp\n*.iml\n.gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\n/captures\n```\n\n### 手动忽略###\n\n- 我们还可以在项目创建完成之后手动指定要忽略的文件\n\n```cpp\n.idea 文件夹\n.gradle 文件夹\n所有的 build 文件夹\n所有的 .iml 文件\nlocal.properties 文件\n```\n\n- AndroidStudio如图配置就可以实现\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E6%8C%87%E5%AE%9Agit%E7%9A%84%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6.png)</center>\n\n<!-- more -->","slug":"Android/AndroidStudio指定git的忽略文件","published":1,"updated":"2016-06-29T09:54:25.807Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qfh0006kgae3tqbmmlf","content":"<h3 id=\"AndroidStudio自动忽略\"><a href=\"#AndroidStudio自动忽略\" class=\"headerlink\" title=\"AndroidStudio自动忽略\"></a>AndroidStudio自动忽略</h3><ul>\n<li>现在的AndroidStudio已经很智能了，当创建项目的时候自动给我们创建了一个</li>\n</ul>\n<p>.gitignore 并给我们忽略了一些文件</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.iml</span><br><span class=\"line\">.gradle</span><br><span class=\"line\">/local.properties</span><br><span class=\"line\">/.idea/workspace.xml</span><br><span class=\"line\">/.idea/libraries</span><br><span class=\"line\">.DS_Store</span><br><span class=\"line\">/build</span><br><span class=\"line\">/captures</span><br></pre></td></tr></table></figure>\n<h3 id=\"手动忽略\"><a href=\"#手动忽略\" class=\"headerlink\" title=\"手动忽略\"></a>手动忽略</h3><ul>\n<li>我们还可以在项目创建完成之后手动指定要忽略的文件</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.idea 文件夹</span><br><span class=\"line\">.gradle 文件夹</span><br><span class=\"line\">所有的 build 文件夹</span><br><span class=\"line\">所有的 .iml 文件</span><br><span class=\"line\">local.properties 文件</span><br></pre></td></tr></table></figure>\n<ul>\n<li>AndroidStudio如图配置就可以实现</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E6%8C%87%E5%AE%9Agit%E7%9A%84%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6.png\" alt=\"\"></center>\n\n<a id=\"more\"></a>","excerpt":"<h3 id=\"AndroidStudio自动忽略\"><a href=\"#AndroidStudio自动忽略\" class=\"headerlink\" title=\"AndroidStudio自动忽略\"></a>AndroidStudio自动忽略</h3><ul>\n<li>现在的AndroidStudio已经很智能了，当创建项目的时候自动给我们创建了一个</li>\n</ul>\n<p>.gitignore 并给我们忽略了一些文件</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.iml</span><br><span class=\"line\">.gradle</span><br><span class=\"line\">/local.properties</span><br><span class=\"line\">/.idea/workspace.xml</span><br><span class=\"line\">/.idea/libraries</span><br><span class=\"line\">.DS_Store</span><br><span class=\"line\">/build</span><br><span class=\"line\">/captures</span><br></pre></td></tr></table></figure>\n<h3 id=\"手动忽略\"><a href=\"#手动忽略\" class=\"headerlink\" title=\"手动忽略\"></a>手动忽略</h3><ul>\n<li>我们还可以在项目创建完成之后手动指定要忽略的文件</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.idea 文件夹</span><br><span class=\"line\">.gradle 文件夹</span><br><span class=\"line\">所有的 build 文件夹</span><br><span class=\"line\">所有的 .iml 文件</span><br><span class=\"line\">local.properties 文件</span><br></pre></td></tr></table></figure>\n<ul>\n<li>AndroidStudio如图配置就可以实现</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E6%8C%87%E5%AE%9Agit%E7%9A%84%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6.png\" alt=\"\"></center>","more":""},{"title":"Android api level对照表","date":"2016-07-03T18:48:03.000Z","_content":"\n### Android api level对照表###\n\t\t\t\n|  Platform Version | API Level | VERSION_CODE | Notes     |\n| ----------------- |:----------|:-------------|:---------:|\n| Android 6.0\t| 23| \tM| \tAPI Changes\n| Android 5.1\t| 22\t| LOLLIPOP_MR1| \tPlatform Highlights\n| Android 5.0\t| 21| \tLOLLIPOP|  .\n| Android 4.4W| \t20| \tKITKAT_WATCH| KitKat for Wearables Only\n| Android 4.4| \t19| \tKITKAT| \tPlatform Highlights\n| Android 4.3| \t18\t| JELLY_BEAN_MR2| \tPlatform Highlights\n| Android 4.2, 4.2.2| \t17| \tJELLY_BEAN_MR1| \tPlatform Highlights\n| Android 4.1, 4.1.1| \t16| \tJELLY_BEAN| \tPlatform Highlights\n| Android 4.0.3, 4.0.4| \t15| \tICE_CREAM_SANDWICH_MR1| \tPlatform Highlights\n| Android 4.0, 4.0.1, 4.0.2| \t14| \tICE_CREAM_SANDWICH| .\t\n| Android 3.2| \t13| \tHONEYCOMB_MR2|  .\t\n| Android 3.1.x| \t12| \tHONEYCOMB_MR1| \tPlatform Highlights\n| Android 3.0.x| \t11| \tHONEYCOMB| \tPlatform Highlights\n| Android 2.3.4| .| .| .\t\t\t\n| Android 2.3.3| \t10| \tGINGERBREAD_MR1| \tPlatform Highlights\n| Android 2.3.2| .| .| .\t\t\t\n| Android 2.3.1| .| .| .\t\t\t\n| Android 2.3| \t9| \tGINGERBREAD| .\t\n| Android 2.2.x| \t8| \tFROYO| \tPlatform Highlights\n| Android 2.1.x| \t7| \tECLAIR_MR1| \tPlatform Highlights\n| Android 2.0.1| \t6| \tECLAIR_0_1| .\t\n| Android 2.0| \t5| \tECLAIR| .\t\n| Android 1.6| \t4| \tDONUT| \tPlatform Highlights\n| Android 1.5| \t3| \tCUPCAKE| \tPlatform Highlights\n| Android 1.1| \t2| \tBASE_1_1| .\t\n| Android 1.0| \t1| \tBASE| .\n\n<!-- more -->","source":"_posts/Android/Android-api-level对照表.md","raw":"---\ntitle: Android api level对照表\ndate: 2016-07-03 18:48:03\ntags: Android\ncategories: Android\n---\n\n### Android api level对照表###\n\t\t\t\n|  Platform Version | API Level | VERSION_CODE | Notes     |\n| ----------------- |:----------|:-------------|:---------:|\n| Android 6.0\t| 23| \tM| \tAPI Changes\n| Android 5.1\t| 22\t| LOLLIPOP_MR1| \tPlatform Highlights\n| Android 5.0\t| 21| \tLOLLIPOP|  .\n| Android 4.4W| \t20| \tKITKAT_WATCH| KitKat for Wearables Only\n| Android 4.4| \t19| \tKITKAT| \tPlatform Highlights\n| Android 4.3| \t18\t| JELLY_BEAN_MR2| \tPlatform Highlights\n| Android 4.2, 4.2.2| \t17| \tJELLY_BEAN_MR1| \tPlatform Highlights\n| Android 4.1, 4.1.1| \t16| \tJELLY_BEAN| \tPlatform Highlights\n| Android 4.0.3, 4.0.4| \t15| \tICE_CREAM_SANDWICH_MR1| \tPlatform Highlights\n| Android 4.0, 4.0.1, 4.0.2| \t14| \tICE_CREAM_SANDWICH| .\t\n| Android 3.2| \t13| \tHONEYCOMB_MR2|  .\t\n| Android 3.1.x| \t12| \tHONEYCOMB_MR1| \tPlatform Highlights\n| Android 3.0.x| \t11| \tHONEYCOMB| \tPlatform Highlights\n| Android 2.3.4| .| .| .\t\t\t\n| Android 2.3.3| \t10| \tGINGERBREAD_MR1| \tPlatform Highlights\n| Android 2.3.2| .| .| .\t\t\t\n| Android 2.3.1| .| .| .\t\t\t\n| Android 2.3| \t9| \tGINGERBREAD| .\t\n| Android 2.2.x| \t8| \tFROYO| \tPlatform Highlights\n| Android 2.1.x| \t7| \tECLAIR_MR1| \tPlatform Highlights\n| Android 2.0.1| \t6| \tECLAIR_0_1| .\t\n| Android 2.0| \t5| \tECLAIR| .\t\n| Android 1.6| \t4| \tDONUT| \tPlatform Highlights\n| Android 1.5| \t3| \tCUPCAKE| \tPlatform Highlights\n| Android 1.1| \t2| \tBASE_1_1| .\t\n| Android 1.0| \t1| \tBASE| .\n\n<!-- more -->","slug":"Android/Android-api-level对照表","published":1,"updated":"2016-07-03T11:13:11.950Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qft0009kgae8ly13j0t","content":"<h3 id=\"Android-api-level对照表\"><a href=\"#Android-api-level对照表\" class=\"headerlink\" title=\"Android api level对照表\"></a>Android api level对照表</h3><table>\n<thead>\n<tr>\n<th>Platform Version</th>\n<th style=\"text-align:left\">API Level</th>\n<th style=\"text-align:left\">VERSION_CODE</th>\n<th style=\"text-align:center\">Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Android 6.0</td>\n<td style=\"text-align:left\">23</td>\n<td style=\"text-align:left\">M</td>\n<td style=\"text-align:center\">API Changes</td>\n</tr>\n<tr>\n<td>Android 5.1</td>\n<td style=\"text-align:left\">22</td>\n<td style=\"text-align:left\">LOLLIPOP_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 5.0</td>\n<td style=\"text-align:left\">21</td>\n<td style=\"text-align:left\">LOLLIPOP</td>\n<td style=\"text-align:center\">.</td>\n</tr>\n<tr>\n<td>Android 4.4W</td>\n<td style=\"text-align:left\">20</td>\n<td style=\"text-align:left\">KITKAT_WATCH</td>\n<td style=\"text-align:center\">KitKat for Wearables Only</td>\n</tr>\n<tr>\n<td>Android 4.4</td>\n<td style=\"text-align:left\">19</td>\n<td style=\"text-align:left\">KITKAT</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.3</td>\n<td style=\"text-align:left\">18</td>\n<td style=\"text-align:left\">JELLY_BEAN_MR2</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.2, 4.2.2</td>\n<td style=\"text-align:left\">17</td>\n<td style=\"text-align:left\">JELLY_BEAN_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.1, 4.1.1</td>\n<td style=\"text-align:left\">16</td>\n<td style=\"text-align:left\">JELLY_BEAN</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.0.3, 4.0.4</td>\n<td style=\"text-align:left\">15</td>\n<td style=\"text-align:left\">ICE_CREAM_SANDWICH_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.0, 4.0.1, 4.0.2</td>\n<td style=\"text-align:left\">14</td>\n<td style=\"text-align:left\">ICE_CREAM_SANDWICH</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 3.2</td>\n<td style=\"text-align:left\">13</td>\n<td style=\"text-align:left\">HONEYCOMB_MR2</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 3.1.x</td>\n<td style=\"text-align:left\">12</td>\n<td style=\"text-align:left\">HONEYCOMB_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 3.0.x</td>\n<td style=\"text-align:left\">11</td>\n<td style=\"text-align:left\">HONEYCOMB</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 2.3.4</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:center\">.            </td>\n</tr>\n<tr>\n<td>Android 2.3.3</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">GINGERBREAD_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 2.3.2</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:center\">.            </td>\n</tr>\n<tr>\n<td>Android 2.3.1</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:center\">.            </td>\n</tr>\n<tr>\n<td>Android 2.3</td>\n<td style=\"text-align:left\">9</td>\n<td style=\"text-align:left\">GINGERBREAD</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 2.2.x</td>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\">FROYO</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 2.1.x</td>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\">ECLAIR_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 2.0.1</td>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">ECLAIR_0_1</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 2.0</td>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">ECLAIR</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 1.6</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">DONUT</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 1.5</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">CUPCAKE</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 1.1</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">BASE_1_1</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 1.0</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">BASE</td>\n<td style=\"text-align:center\">.</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a>","excerpt":"<h3 id=\"Android-api-level对照表\"><a href=\"#Android-api-level对照表\" class=\"headerlink\" title=\"Android api level对照表\"></a>Android api level对照表</h3><table>\n<thead>\n<tr>\n<th>Platform Version</th>\n<th style=\"text-align:left\">API Level</th>\n<th style=\"text-align:left\">VERSION_CODE</th>\n<th style=\"text-align:center\">Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Android 6.0</td>\n<td style=\"text-align:left\">23</td>\n<td style=\"text-align:left\">M</td>\n<td style=\"text-align:center\">API Changes</td>\n</tr>\n<tr>\n<td>Android 5.1</td>\n<td style=\"text-align:left\">22</td>\n<td style=\"text-align:left\">LOLLIPOP_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 5.0</td>\n<td style=\"text-align:left\">21</td>\n<td style=\"text-align:left\">LOLLIPOP</td>\n<td style=\"text-align:center\">.</td>\n</tr>\n<tr>\n<td>Android 4.4W</td>\n<td style=\"text-align:left\">20</td>\n<td style=\"text-align:left\">KITKAT_WATCH</td>\n<td style=\"text-align:center\">KitKat for Wearables Only</td>\n</tr>\n<tr>\n<td>Android 4.4</td>\n<td style=\"text-align:left\">19</td>\n<td style=\"text-align:left\">KITKAT</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.3</td>\n<td style=\"text-align:left\">18</td>\n<td style=\"text-align:left\">JELLY_BEAN_MR2</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.2, 4.2.2</td>\n<td style=\"text-align:left\">17</td>\n<td style=\"text-align:left\">JELLY_BEAN_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.1, 4.1.1</td>\n<td style=\"text-align:left\">16</td>\n<td style=\"text-align:left\">JELLY_BEAN</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.0.3, 4.0.4</td>\n<td style=\"text-align:left\">15</td>\n<td style=\"text-align:left\">ICE_CREAM_SANDWICH_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 4.0, 4.0.1, 4.0.2</td>\n<td style=\"text-align:left\">14</td>\n<td style=\"text-align:left\">ICE_CREAM_SANDWICH</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 3.2</td>\n<td style=\"text-align:left\">13</td>\n<td style=\"text-align:left\">HONEYCOMB_MR2</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 3.1.x</td>\n<td style=\"text-align:left\">12</td>\n<td style=\"text-align:left\">HONEYCOMB_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 3.0.x</td>\n<td style=\"text-align:left\">11</td>\n<td style=\"text-align:left\">HONEYCOMB</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 2.3.4</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:center\">.            </td>\n</tr>\n<tr>\n<td>Android 2.3.3</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">GINGERBREAD_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 2.3.2</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:center\">.            </td>\n</tr>\n<tr>\n<td>Android 2.3.1</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:center\">.            </td>\n</tr>\n<tr>\n<td>Android 2.3</td>\n<td style=\"text-align:left\">9</td>\n<td style=\"text-align:left\">GINGERBREAD</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 2.2.x</td>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\">FROYO</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 2.1.x</td>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\">ECLAIR_MR1</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 2.0.1</td>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">ECLAIR_0_1</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 2.0</td>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">ECLAIR</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 1.6</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">DONUT</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 1.5</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">CUPCAKE</td>\n<td style=\"text-align:center\">Platform Highlights</td>\n</tr>\n<tr>\n<td>Android 1.1</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">BASE_1_1</td>\n<td style=\"text-align:center\">.    </td>\n</tr>\n<tr>\n<td>Android 1.0</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">BASE</td>\n<td style=\"text-align:center\">.</td>\n</tr>\n</tbody>\n</table>","more":""},{"title":"Android中如何一次性finish掉以前打开的所有的activity","date":"2016-06-01T14:29:28.000Z","_content":"\n```java\npublic class ActivityManagerApplication extends Application {  \n  \n    private static Map<String,Activity> destoryMap = new HashMap<>();  \n  \n    private ActivityManagerApplication() {  \n    }  \n  \n    /** \n     * 添加到销毁队列 \n     * \n     * @param activity 要销毁的activity \n     */  \n  \n    public static void addDestoryActivity(Activity activity,String activityName) {  \n        destoryMap.put(activityName,activity);  \n    }  \n    /** \n    *销毁指定Activity \n    */  \n    public static void destoryActivity(String activityName) {  \n       Set<String> keySet=destoryMap.keySet();  \n        for (String key:keySet){  \n            destoryMap.get(key).finish();  \n        }  \n    }  \n}  \n```\n\n<!-- more -->","source":"_posts/Android/Android中如何一次性finish掉以前打开的所有的activity.md","raw":"---\ntitle: Android中如何一次性finish掉以前打开的所有的activity\ndate: 2016-06-01 14:29:28\ntags: [Android,Activity]\ncategories: Android \n---\n\n```java\npublic class ActivityManagerApplication extends Application {  \n  \n    private static Map<String,Activity> destoryMap = new HashMap<>();  \n  \n    private ActivityManagerApplication() {  \n    }  \n  \n    /** \n     * 添加到销毁队列 \n     * \n     * @param activity 要销毁的activity \n     */  \n  \n    public static void addDestoryActivity(Activity activity,String activityName) {  \n        destoryMap.put(activityName,activity);  \n    }  \n    /** \n    *销毁指定Activity \n    */  \n    public static void destoryActivity(String activityName) {  \n       Set<String> keySet=destoryMap.keySet();  \n        for (String key:keySet){  \n            destoryMap.get(key).finish();  \n        }  \n    }  \n}  \n```\n\n<!-- more -->","slug":"Android/Android中如何一次性finish掉以前打开的所有的activity","published":1,"updated":"2016-06-17T13:42:52.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qfz000akgaekmdgo7jl","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActivityManagerApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Map&lt;String,Activity&gt; destoryMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">ActivityManagerApplication</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">/** </span><br><span class=\"line\">     * 添加到销毁队列 </span><br><span class=\"line\">     * </span><br><span class=\"line\">     * <span class=\"doctag\">@param</span> activity 要销毁的activity </span><br><span class=\"line\">     */</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">addDestoryActivity</span><span class=\"params\">(Activity activity,String activityName)</span> </span>&#123;  </span><br><span class=\"line\">        destoryMap.put(activityName,activity);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"comment\">/** </span><br><span class=\"line\">    *销毁指定Activity </span><br><span class=\"line\">    */</span>  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">destoryActivity</span><span class=\"params\">(String activityName)</span> </span>&#123;  </span><br><span class=\"line\">       Set&lt;String&gt; keySet=destoryMap.keySet();  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String key:keySet)&#123;  </span><br><span class=\"line\">            destoryMap.get(key).finish();  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>","excerpt":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActivityManagerApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Map&lt;String,Activity&gt; destoryMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">ActivityManagerApplication</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">/** </span><br><span class=\"line\">     * 添加到销毁队列 </span><br><span class=\"line\">     * </span><br><span class=\"line\">     * <span class=\"doctag\">@param</span> activity 要销毁的activity </span><br><span class=\"line\">     */</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">addDestoryActivity</span><span class=\"params\">(Activity activity,String activityName)</span> </span>&#123;  </span><br><span class=\"line\">        destoryMap.put(activityName,activity);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"comment\">/** </span><br><span class=\"line\">    *销毁指定Activity </span><br><span class=\"line\">    */</span>  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">destoryActivity</span><span class=\"params\">(String activityName)</span> </span>&#123;  </span><br><span class=\"line\">       Set&lt;String&gt; keySet=destoryMap.keySet();  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String key:keySet)&#123;  </span><br><span class=\"line\">            destoryMap.get(key).finish();  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":""},{"title":" Android中的shape中的属性大全","date":"2016-06-01T14:22:57.000Z","_content":"\n- Android中常常使用shape来定义控件的一些显示属性，今天看了一些shape的使用，对shape有了大体的了解，稍作总结：\n\n```java\n<shape>  \n     <!-- 实心 -->  \n       <solid android:color=\"#ff9d77\"/>  \n        <!-- 渐变 -->  \n          <gradient  \n               android:startColor=\"#ff8c00\"  \n               android:endColor=\"#FFFFFF\"  \n               android:angle=\"270\" />  \n           <!-- 描边 -->  \n           <stroke  \n               android:width=\"2dp\"  \n               android:color=\"#dcdcdc\" />  \n           <!-- 圆角 -->  \n           <corners  \n               android:radius=\"2dp\" />  \n           <padding  \n               android:left=\"10dp\"  \n               android:top=\"10dp\"  \n               android:right=\"10dp\"  \n               android:bottom=\"10dp\" />  \n</shape>  \n```\n       \n- solid：实心，就是填充的意思\nAndroid:color指定填充的颜色\n\n<!-- more -->\n\n- gradient：渐变\nandroid:startColor和android:endColor分别为起始和结束颜色，ndroid:angle是渐变角度，必须为45的整数倍。\n另外渐变默认的模式为android:type=\"linear\"，即线性渐变，可以指定渐变为径向渐变，android:type=\"radial\"，径向渐变需要指定半径android:gradientRadius=\"50\"\n\n- stroke：描边\nandroid:width=\"2dp\" 描边的宽度，android:color 描边的颜色。\n我们还可以把描边弄成虚线的形式，设置方式为：\nandroid:dashWidth=\"5dp\" \nandroid:dashGap=\"3dp\"\n其中android:dashWidth表示'-'这样一个横线的宽度，android:dashGap表示之间隔开的距离\n\n- corners：圆角\nandroid:radius为角的弧度，值越大角越圆。\n我们还可以把四个角设定成不同的角度，方法为：\n\n```java\n<corners \n        android:topRightRadius=\"20dp\"    //右上角\n        android:bottomLeftRadius=\"20dp\"    //右下角\n        android:topLeftRadius=\"1dp\"    //左上角\n        android:bottomRightRadius=\"0dp\"    //左下角\n />\n```\n\n这里有个地方需要注意，bottomLeftRadius是右下角，而不是左下角，这个有点郁闷，不过不影响使用，记得别搞错了就行。\n还有网上看到有人说设置成0dp无效，不过我在测试中发现是可以的，我用的是2.2，可能修复了这个问题吧，如果无效的话那就只能设成1dp了\n\n- padding：间隔\n这个就不用多说了，XML布局文件中经常用到\n\n- 大体的就是这样，以下是一个使用的具体示例：用在Selector中作为Button的背景，分别定义了按钮的一般状态、获得焦点状态和按下时的状态，具体代码如下：\n\n```java\nmain.xml:  \n<Button  \n    android:layout_width=\"wrap_content\"  \n    android:layout_height=\"wrap_content\"  \n    android:text=\"TestShapeButton\"  \n    android:background=\"@drawable/button_selector\"  \n    />  \n  \nbutton_selector.xml:  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<selector  \n    xmlns:android=\"http://schemas.android.com/apk/res/android\">  \n    <item android:state_pressed=\"true\" >  \n        <shape>  \n            <!-- 渐变 -->  \n            <gradient  \n                android:startColor=\"#ff8c00\"  \n                android:endColor=\"#FFFFFF\"  \n                android:type=\"radial\"  \n                android:gradientRadius=\"50\" />  \n            <!-- 描边 -->  \n            <stroke  \n                android:width=\"2dp\"  \n                android:color=\"#dcdcdc\"  \n                android:dashWidth=\"5dp\"   \n                android:dashGap=\"3dp\" />  \n            <!-- 圆角 -->  \n            <corners  \n                android:radius=\"2dp\" />  \n            <padding  \n                android:left=\"10dp\"  \n                android:top=\"10dp\"  \n                android:right=\"10dp\"  \n                android:bottom=\"10dp\" />  \n        </shape>  \n    </item>  \n  \n    <item android:state_focused=\"true\" >  \n        <shape>  \n            <gradient  \n                android:startColor=\"#ffc2b7\"  \n                android:endColor=\"#ffc2b7\"  \n                android:angle=\"270\" />  \n            <stroke  \n                android:width=\"2dp\"  \n                android:color=\"#dcdcdc\" />  \n            <corners  \n                android:radius=\"2dp\" />  \n            <padding  \n                android:left=\"10dp\"  \n                android:top=\"10dp\"  \n                android:right=\"10dp\"  \n                android:bottom=\"10dp\" />  \n        </shape>  \n    </item>  \n  \n    <item>         \n        <shape>  \n            <solid android:color=\"#ff9d77\"/>  \n            <stroke  \n                android:width=\"2dp\"  \n                android:color=\"#fad3cf\" />  \n            <corners   \n                android:topRightRadius=\"5dp\"  \n                android:bottomLeftRadius=\"5dp\"  \n                android:topLeftRadius=\"0dp\"  \n                android:bottomRightRadius=\"0dp\"  \n            />  \n            <padding  \n                android:left=\"10dp\"  \n                android:top=\"10dp\"  \n                android:right=\"10dp\"  \n                android:bottom=\"10dp\" />  \n        </shape>  \n    </item>  \n</selector>  \n\n```","source":"_posts/Android/Android中的shape中的属性大全.md","raw":"---\ntitle: ' Android中的shape中的属性大全'\ndate: 2016-06-01 14:22:57\ntags: [Android,shape]\ncategories: Android\n---\n\n- Android中常常使用shape来定义控件的一些显示属性，今天看了一些shape的使用，对shape有了大体的了解，稍作总结：\n\n```java\n<shape>  \n     <!-- 实心 -->  \n       <solid android:color=\"#ff9d77\"/>  \n        <!-- 渐变 -->  \n          <gradient  \n               android:startColor=\"#ff8c00\"  \n               android:endColor=\"#FFFFFF\"  \n               android:angle=\"270\" />  \n           <!-- 描边 -->  \n           <stroke  \n               android:width=\"2dp\"  \n               android:color=\"#dcdcdc\" />  \n           <!-- 圆角 -->  \n           <corners  \n               android:radius=\"2dp\" />  \n           <padding  \n               android:left=\"10dp\"  \n               android:top=\"10dp\"  \n               android:right=\"10dp\"  \n               android:bottom=\"10dp\" />  \n</shape>  \n```\n       \n- solid：实心，就是填充的意思\nAndroid:color指定填充的颜色\n\n<!-- more -->\n\n- gradient：渐变\nandroid:startColor和android:endColor分别为起始和结束颜色，ndroid:angle是渐变角度，必须为45的整数倍。\n另外渐变默认的模式为android:type=\"linear\"，即线性渐变，可以指定渐变为径向渐变，android:type=\"radial\"，径向渐变需要指定半径android:gradientRadius=\"50\"\n\n- stroke：描边\nandroid:width=\"2dp\" 描边的宽度，android:color 描边的颜色。\n我们还可以把描边弄成虚线的形式，设置方式为：\nandroid:dashWidth=\"5dp\" \nandroid:dashGap=\"3dp\"\n其中android:dashWidth表示'-'这样一个横线的宽度，android:dashGap表示之间隔开的距离\n\n- corners：圆角\nandroid:radius为角的弧度，值越大角越圆。\n我们还可以把四个角设定成不同的角度，方法为：\n\n```java\n<corners \n        android:topRightRadius=\"20dp\"    //右上角\n        android:bottomLeftRadius=\"20dp\"    //右下角\n        android:topLeftRadius=\"1dp\"    //左上角\n        android:bottomRightRadius=\"0dp\"    //左下角\n />\n```\n\n这里有个地方需要注意，bottomLeftRadius是右下角，而不是左下角，这个有点郁闷，不过不影响使用，记得别搞错了就行。\n还有网上看到有人说设置成0dp无效，不过我在测试中发现是可以的，我用的是2.2，可能修复了这个问题吧，如果无效的话那就只能设成1dp了\n\n- padding：间隔\n这个就不用多说了，XML布局文件中经常用到\n\n- 大体的就是这样，以下是一个使用的具体示例：用在Selector中作为Button的背景，分别定义了按钮的一般状态、获得焦点状态和按下时的状态，具体代码如下：\n\n```java\nmain.xml:  \n<Button  \n    android:layout_width=\"wrap_content\"  \n    android:layout_height=\"wrap_content\"  \n    android:text=\"TestShapeButton\"  \n    android:background=\"@drawable/button_selector\"  \n    />  \n  \nbutton_selector.xml:  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<selector  \n    xmlns:android=\"http://schemas.android.com/apk/res/android\">  \n    <item android:state_pressed=\"true\" >  \n        <shape>  \n            <!-- 渐变 -->  \n            <gradient  \n                android:startColor=\"#ff8c00\"  \n                android:endColor=\"#FFFFFF\"  \n                android:type=\"radial\"  \n                android:gradientRadius=\"50\" />  \n            <!-- 描边 -->  \n            <stroke  \n                android:width=\"2dp\"  \n                android:color=\"#dcdcdc\"  \n                android:dashWidth=\"5dp\"   \n                android:dashGap=\"3dp\" />  \n            <!-- 圆角 -->  \n            <corners  \n                android:radius=\"2dp\" />  \n            <padding  \n                android:left=\"10dp\"  \n                android:top=\"10dp\"  \n                android:right=\"10dp\"  \n                android:bottom=\"10dp\" />  \n        </shape>  \n    </item>  \n  \n    <item android:state_focused=\"true\" >  \n        <shape>  \n            <gradient  \n                android:startColor=\"#ffc2b7\"  \n                android:endColor=\"#ffc2b7\"  \n                android:angle=\"270\" />  \n            <stroke  \n                android:width=\"2dp\"  \n                android:color=\"#dcdcdc\" />  \n            <corners  \n                android:radius=\"2dp\" />  \n            <padding  \n                android:left=\"10dp\"  \n                android:top=\"10dp\"  \n                android:right=\"10dp\"  \n                android:bottom=\"10dp\" />  \n        </shape>  \n    </item>  \n  \n    <item>         \n        <shape>  \n            <solid android:color=\"#ff9d77\"/>  \n            <stroke  \n                android:width=\"2dp\"  \n                android:color=\"#fad3cf\" />  \n            <corners   \n                android:topRightRadius=\"5dp\"  \n                android:bottomLeftRadius=\"5dp\"  \n                android:topLeftRadius=\"0dp\"  \n                android:bottomRightRadius=\"0dp\"  \n            />  \n            <padding  \n                android:left=\"10dp\"  \n                android:top=\"10dp\"  \n                android:right=\"10dp\"  \n                android:bottom=\"10dp\" />  \n        </shape>  \n    </item>  \n</selector>  \n\n```","slug":"Android/Android中的shape中的属性大全","published":1,"updated":"2016-06-17T13:42:19.475Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qg2000ckgaed8i2okfg","content":"<ul>\n<li>Android中常常使用shape来定义控件的一些显示属性，今天看了一些shape的使用，对shape有了大体的了解，稍作总结：</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;shape&gt;  </span><br><span class=\"line\">     &lt;!-- 实心 --&gt;  </span><br><span class=\"line\">       &lt;solid android:color=\"#ff9d77\"/&gt;  </span><br><span class=\"line\">        &lt;!-- 渐变 --&gt;  </span><br><span class=\"line\">          &lt;gradient  </span><br><span class=\"line\">               android:startColor=\"#ff8c00\"  </span><br><span class=\"line\">               android:endColor=\"#FFFFFF\"  </span><br><span class=\"line\">               android:angle=\"270\" /&gt;  </span><br><span class=\"line\">           &lt;!-- 描边 --&gt;  </span><br><span class=\"line\">           &lt;stroke  </span><br><span class=\"line\">               android:width=\"2dp\"  </span><br><span class=\"line\">               android:color=\"#dcdcdc\" /&gt;  </span><br><span class=\"line\">           &lt;!-- 圆角 --&gt;  </span><br><span class=\"line\">           &lt;corners  </span><br><span class=\"line\">               android:radius=\"2dp\" /&gt;  </span><br><span class=\"line\">           &lt;padding  </span><br><span class=\"line\">               android:left=\"10dp\"  </span><br><span class=\"line\">               android:top=\"10dp\"  </span><br><span class=\"line\">               android:right=\"10dp\"  </span><br><span class=\"line\">               android:bottom=\"10dp\" /&gt;  </span><br><span class=\"line\">&lt;/shape&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>solid：实心，就是填充的意思<br>Android:color指定填充的颜色</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li><p>gradient：渐变<br>android:startColor和android:endColor分别为起始和结束颜色，ndroid:angle是渐变角度，必须为45的整数倍。<br>另外渐变默认的模式为android:type=”linear”，即线性渐变，可以指定渐变为径向渐变，android:type=”radial”，径向渐变需要指定半径android:gradientRadius=”50”</p>\n</li>\n<li><p>stroke：描边<br>android:width=”2dp” 描边的宽度，android:color 描边的颜色。<br>我们还可以把描边弄成虚线的形式，设置方式为：<br>android:dashWidth=”5dp”<br>android:dashGap=”3dp”<br>其中android:dashWidth表示’-‘这样一个横线的宽度，android:dashGap表示之间隔开的距离</p>\n</li>\n<li><p>corners：圆角<br>android:radius为角的弧度，值越大角越圆。<br>我们还可以把四个角设定成不同的角度，方法为：</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;corners </span><br><span class=\"line\">        android:topRightRadius=<span class=\"string\">\"20dp\"</span>    <span class=\"comment\">//右上角</span></span><br><span class=\"line\">        android:bottomLeftRadius=<span class=\"string\">\"20dp\"</span>    <span class=\"comment\">//右下角</span></span><br><span class=\"line\">        android:topLeftRadius=<span class=\"string\">\"1dp\"</span>    <span class=\"comment\">//左上角</span></span><br><span class=\"line\">        android:bottomRightRadius=<span class=\"string\">\"0dp\"</span>    <span class=\"comment\">//左下角</span></span><br><span class=\"line\"> /&gt;</span><br></pre></td></tr></table></figure>\n<p>这里有个地方需要注意，bottomLeftRadius是右下角，而不是左下角，这个有点郁闷，不过不影响使用，记得别搞错了就行。<br>还有网上看到有人说设置成0dp无效，不过我在测试中发现是可以的，我用的是2.2，可能修复了这个问题吧，如果无效的话那就只能设成1dp了</p>\n<ul>\n<li><p>padding：间隔<br>这个就不用多说了，XML布局文件中经常用到</p>\n</li>\n<li><p>大体的就是这样，以下是一个使用的具体示例：用在Selector中作为Button的背景，分别定义了按钮的一般状态、获得焦点状态和按下时的状态，具体代码如下：</p>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main.xml:  </span><br><span class=\"line\">&lt;Button  </span><br><span class=\"line\">    android:layout_width=\"wrap_content\"  </span><br><span class=\"line\">    android:layout_height=\"wrap_content\"  </span><br><span class=\"line\">    android:text=\"TestShapeButton\"  </span><br><span class=\"line\">    android:background=\"@drawable/button_selector\"  </span><br><span class=\"line\">    /&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">button_selector.xml:  </span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  </span><br><span class=\"line\">&lt;selector  </span><br><span class=\"line\">    xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;  </span><br><span class=\"line\">    &lt;item android:state_pressed=\"true\" &gt;  </span><br><span class=\"line\">        &lt;shape&gt;  </span><br><span class=\"line\">            &lt;!-- 渐变 --&gt;  </span><br><span class=\"line\">            &lt;gradient  </span><br><span class=\"line\">                android:startColor=\"#ff8c00\"  </span><br><span class=\"line\">                android:endColor=\"#FFFFFF\"  </span><br><span class=\"line\">                android:type=\"radial\"  </span><br><span class=\"line\">                android:gradientRadius=\"50\" /&gt;  </span><br><span class=\"line\">            &lt;!-- 描边 --&gt;  </span><br><span class=\"line\">            &lt;stroke  </span><br><span class=\"line\">                android:width=\"2dp\"  </span><br><span class=\"line\">                android:color=\"#dcdcdc\"  </span><br><span class=\"line\">                android:dashWidth=\"5dp\"   </span><br><span class=\"line\">                android:dashGap=\"3dp\" /&gt;  </span><br><span class=\"line\">            &lt;!-- 圆角 --&gt;  </span><br><span class=\"line\">            &lt;corners  </span><br><span class=\"line\">                android:radius=\"2dp\" /&gt;  </span><br><span class=\"line\">            &lt;padding  </span><br><span class=\"line\">                android:left=\"10dp\"  </span><br><span class=\"line\">                android:top=\"10dp\"  </span><br><span class=\"line\">                android:right=\"10dp\"  </span><br><span class=\"line\">                android:bottom=\"10dp\" /&gt;  </span><br><span class=\"line\">        &lt;/shape&gt;  </span><br><span class=\"line\">    &lt;/item&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    &lt;item android:state_focused=\"true\" &gt;  </span><br><span class=\"line\">        &lt;shape&gt;  </span><br><span class=\"line\">            &lt;gradient  </span><br><span class=\"line\">                android:startColor=\"#ffc2b7\"  </span><br><span class=\"line\">                android:endColor=\"#ffc2b7\"  </span><br><span class=\"line\">                android:angle=\"270\" /&gt;  </span><br><span class=\"line\">            &lt;stroke  </span><br><span class=\"line\">                android:width=\"2dp\"  </span><br><span class=\"line\">                android:color=\"#dcdcdc\" /&gt;  </span><br><span class=\"line\">            &lt;corners  </span><br><span class=\"line\">                android:radius=\"2dp\" /&gt;  </span><br><span class=\"line\">            &lt;padding  </span><br><span class=\"line\">                android:left=\"10dp\"  </span><br><span class=\"line\">                android:top=\"10dp\"  </span><br><span class=\"line\">                android:right=\"10dp\"  </span><br><span class=\"line\">                android:bottom=\"10dp\" /&gt;  </span><br><span class=\"line\">        &lt;/shape&gt;  </span><br><span class=\"line\">    &lt;/item&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    &lt;item&gt;         </span><br><span class=\"line\">        &lt;shape&gt;  </span><br><span class=\"line\">            &lt;solid android:color=\"#ff9d77\"/&gt;  </span><br><span class=\"line\">            &lt;stroke  </span><br><span class=\"line\">                android:width=\"2dp\"  </span><br><span class=\"line\">                android:color=\"#fad3cf\" /&gt;  </span><br><span class=\"line\">            &lt;corners   </span><br><span class=\"line\">                android:topRightRadius=\"5dp\"  </span><br><span class=\"line\">                android:bottomLeftRadius=\"5dp\"  </span><br><span class=\"line\">                android:topLeftRadius=\"0dp\"  </span><br><span class=\"line\">                android:bottomRightRadius=\"0dp\"  </span><br><span class=\"line\">            /&gt;  </span><br><span class=\"line\">            &lt;padding  </span><br><span class=\"line\">                android:left=\"10dp\"  </span><br><span class=\"line\">                android:top=\"10dp\"  </span><br><span class=\"line\">                android:right=\"10dp\"  </span><br><span class=\"line\">                android:bottom=\"10dp\" /&gt;  </span><br><span class=\"line\">        &lt;/shape&gt;  </span><br><span class=\"line\">    &lt;/item&gt;  </span><br><span class=\"line\">&lt;/selector&gt;</span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li>Android中常常使用shape来定义控件的一些显示属性，今天看了一些shape的使用，对shape有了大体的了解，稍作总结：</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;shape&gt;  </span><br><span class=\"line\">     &lt;!-- 实心 --&gt;  </span><br><span class=\"line\">       &lt;solid android:color=\"#ff9d77\"/&gt;  </span><br><span class=\"line\">        &lt;!-- 渐变 --&gt;  </span><br><span class=\"line\">          &lt;gradient  </span><br><span class=\"line\">               android:startColor=\"#ff8c00\"  </span><br><span class=\"line\">               android:endColor=\"#FFFFFF\"  </span><br><span class=\"line\">               android:angle=\"270\" /&gt;  </span><br><span class=\"line\">           &lt;!-- 描边 --&gt;  </span><br><span class=\"line\">           &lt;stroke  </span><br><span class=\"line\">               android:width=\"2dp\"  </span><br><span class=\"line\">               android:color=\"#dcdcdc\" /&gt;  </span><br><span class=\"line\">           &lt;!-- 圆角 --&gt;  </span><br><span class=\"line\">           &lt;corners  </span><br><span class=\"line\">               android:radius=\"2dp\" /&gt;  </span><br><span class=\"line\">           &lt;padding  </span><br><span class=\"line\">               android:left=\"10dp\"  </span><br><span class=\"line\">               android:top=\"10dp\"  </span><br><span class=\"line\">               android:right=\"10dp\"  </span><br><span class=\"line\">               android:bottom=\"10dp\" /&gt;  </span><br><span class=\"line\">&lt;/shape&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>solid：实心，就是填充的意思<br>Android:color指定填充的颜色</li>\n</ul>","more":"<ul>\n<li><p>gradient：渐变<br>android:startColor和android:endColor分别为起始和结束颜色，ndroid:angle是渐变角度，必须为45的整数倍。<br>另外渐变默认的模式为android:type=”linear”，即线性渐变，可以指定渐变为径向渐变，android:type=”radial”，径向渐变需要指定半径android:gradientRadius=”50”</p>\n</li>\n<li><p>stroke：描边<br>android:width=”2dp” 描边的宽度，android:color 描边的颜色。<br>我们还可以把描边弄成虚线的形式，设置方式为：<br>android:dashWidth=”5dp”<br>android:dashGap=”3dp”<br>其中android:dashWidth表示’-‘这样一个横线的宽度，android:dashGap表示之间隔开的距离</p>\n</li>\n<li><p>corners：圆角<br>android:radius为角的弧度，值越大角越圆。<br>我们还可以把四个角设定成不同的角度，方法为：</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;corners </span><br><span class=\"line\">        android:topRightRadius=<span class=\"string\">\"20dp\"</span>    <span class=\"comment\">//右上角</span></span><br><span class=\"line\">        android:bottomLeftRadius=<span class=\"string\">\"20dp\"</span>    <span class=\"comment\">//右下角</span></span><br><span class=\"line\">        android:topLeftRadius=<span class=\"string\">\"1dp\"</span>    <span class=\"comment\">//左上角</span></span><br><span class=\"line\">        android:bottomRightRadius=<span class=\"string\">\"0dp\"</span>    <span class=\"comment\">//左下角</span></span><br><span class=\"line\"> /&gt;</span><br></pre></td></tr></table></figure>\n<p>这里有个地方需要注意，bottomLeftRadius是右下角，而不是左下角，这个有点郁闷，不过不影响使用，记得别搞错了就行。<br>还有网上看到有人说设置成0dp无效，不过我在测试中发现是可以的，我用的是2.2，可能修复了这个问题吧，如果无效的话那就只能设成1dp了</p>\n<ul>\n<li><p>padding：间隔<br>这个就不用多说了，XML布局文件中经常用到</p>\n</li>\n<li><p>大体的就是这样，以下是一个使用的具体示例：用在Selector中作为Button的背景，分别定义了按钮的一般状态、获得焦点状态和按下时的状态，具体代码如下：</p>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main.xml:  </span><br><span class=\"line\">&lt;Button  </span><br><span class=\"line\">    android:layout_width=\"wrap_content\"  </span><br><span class=\"line\">    android:layout_height=\"wrap_content\"  </span><br><span class=\"line\">    android:text=\"TestShapeButton\"  </span><br><span class=\"line\">    android:background=\"@drawable/button_selector\"  </span><br><span class=\"line\">    /&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">button_selector.xml:  </span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  </span><br><span class=\"line\">&lt;selector  </span><br><span class=\"line\">    xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;  </span><br><span class=\"line\">    &lt;item android:state_pressed=\"true\" &gt;  </span><br><span class=\"line\">        &lt;shape&gt;  </span><br><span class=\"line\">            &lt;!-- 渐变 --&gt;  </span><br><span class=\"line\">            &lt;gradient  </span><br><span class=\"line\">                android:startColor=\"#ff8c00\"  </span><br><span class=\"line\">                android:endColor=\"#FFFFFF\"  </span><br><span class=\"line\">                android:type=\"radial\"  </span><br><span class=\"line\">                android:gradientRadius=\"50\" /&gt;  </span><br><span class=\"line\">            &lt;!-- 描边 --&gt;  </span><br><span class=\"line\">            &lt;stroke  </span><br><span class=\"line\">                android:width=\"2dp\"  </span><br><span class=\"line\">                android:color=\"#dcdcdc\"  </span><br><span class=\"line\">                android:dashWidth=\"5dp\"   </span><br><span class=\"line\">                android:dashGap=\"3dp\" /&gt;  </span><br><span class=\"line\">            &lt;!-- 圆角 --&gt;  </span><br><span class=\"line\">            &lt;corners  </span><br><span class=\"line\">                android:radius=\"2dp\" /&gt;  </span><br><span class=\"line\">            &lt;padding  </span><br><span class=\"line\">                android:left=\"10dp\"  </span><br><span class=\"line\">                android:top=\"10dp\"  </span><br><span class=\"line\">                android:right=\"10dp\"  </span><br><span class=\"line\">                android:bottom=\"10dp\" /&gt;  </span><br><span class=\"line\">        &lt;/shape&gt;  </span><br><span class=\"line\">    &lt;/item&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    &lt;item android:state_focused=\"true\" &gt;  </span><br><span class=\"line\">        &lt;shape&gt;  </span><br><span class=\"line\">            &lt;gradient  </span><br><span class=\"line\">                android:startColor=\"#ffc2b7\"  </span><br><span class=\"line\">                android:endColor=\"#ffc2b7\"  </span><br><span class=\"line\">                android:angle=\"270\" /&gt;  </span><br><span class=\"line\">            &lt;stroke  </span><br><span class=\"line\">                android:width=\"2dp\"  </span><br><span class=\"line\">                android:color=\"#dcdcdc\" /&gt;  </span><br><span class=\"line\">            &lt;corners  </span><br><span class=\"line\">                android:radius=\"2dp\" /&gt;  </span><br><span class=\"line\">            &lt;padding  </span><br><span class=\"line\">                android:left=\"10dp\"  </span><br><span class=\"line\">                android:top=\"10dp\"  </span><br><span class=\"line\">                android:right=\"10dp\"  </span><br><span class=\"line\">                android:bottom=\"10dp\" /&gt;  </span><br><span class=\"line\">        &lt;/shape&gt;  </span><br><span class=\"line\">    &lt;/item&gt;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    &lt;item&gt;         </span><br><span class=\"line\">        &lt;shape&gt;  </span><br><span class=\"line\">            &lt;solid android:color=\"#ff9d77\"/&gt;  </span><br><span class=\"line\">            &lt;stroke  </span><br><span class=\"line\">                android:width=\"2dp\"  </span><br><span class=\"line\">                android:color=\"#fad3cf\" /&gt;  </span><br><span class=\"line\">            &lt;corners   </span><br><span class=\"line\">                android:topRightRadius=\"5dp\"  </span><br><span class=\"line\">                android:bottomLeftRadius=\"5dp\"  </span><br><span class=\"line\">                android:topLeftRadius=\"0dp\"  </span><br><span class=\"line\">                android:bottomRightRadius=\"0dp\"  </span><br><span class=\"line\">            /&gt;  </span><br><span class=\"line\">            &lt;padding  </span><br><span class=\"line\">                android:left=\"10dp\"  </span><br><span class=\"line\">                android:top=\"10dp\"  </span><br><span class=\"line\">                android:right=\"10dp\"  </span><br><span class=\"line\">                android:bottom=\"10dp\" /&gt;  </span><br><span class=\"line\">        &lt;/shape&gt;  </span><br><span class=\"line\">    &lt;/item&gt;  </span><br><span class=\"line\">&lt;/selector&gt;</span><br></pre></td></tr></table></figure>"},{"title":"Eclipse Android ADT Bundle下载地址和genymotion插件","date":"2016-07-05T17:30:40.000Z","_content":"\n### 官方###\n\n- [win32](https://dl.google.com/android/adt/adt-bundle-windows-x86-20140702.zip)\n\n- [win64](https://dl.google.com/android/adt/adt-bundle-windows-x86_64-20140702.zip)\n\n- [MAC64](http://dl.google.com/android/adt/adt-bundle-mac-x86_64-20140702.zip)\n\n- [Linux 86](http://dl.google.com/android/adt/adt-bundle-linux-x86-20140702.zip)\n\n- [Linux 64](http://dl.google.com/android/adt/adt-bundle-linux-x86_64-20140702.zip)\n\n### 百度云###\n\n- [传送门](http://pan.baidu.com/s/1hsHdxjQ)\n\n### Eclipse添加genymotion插件###\n\n- [传送门](http://pan.baidu.com/s/1mhV8gys)\n\n<!-- more -->","source":"_posts/Android/Eclipse-Android-ADT-Bundle下载地址和genymotion插件.md","raw":"---\ntitle: Eclipse Android ADT Bundle下载地址和genymotion插件\ndate: 2016-07-05 17:30:40\ntags: Eclipse\ncategories: Android\n---\n\n### 官方###\n\n- [win32](https://dl.google.com/android/adt/adt-bundle-windows-x86-20140702.zip)\n\n- [win64](https://dl.google.com/android/adt/adt-bundle-windows-x86_64-20140702.zip)\n\n- [MAC64](http://dl.google.com/android/adt/adt-bundle-mac-x86_64-20140702.zip)\n\n- [Linux 86](http://dl.google.com/android/adt/adt-bundle-linux-x86-20140702.zip)\n\n- [Linux 64](http://dl.google.com/android/adt/adt-bundle-linux-x86_64-20140702.zip)\n\n### 百度云###\n\n- [传送门](http://pan.baidu.com/s/1hsHdxjQ)\n\n### Eclipse添加genymotion插件###\n\n- [传送门](http://pan.baidu.com/s/1mhV8gys)\n\n<!-- more -->","slug":"Android/Eclipse-Android-ADT-Bundle下载地址和genymotion插件","published":1,"updated":"2016-07-05T12:58:17.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qg6000ekgaejqxrw7ev","content":"<h3 id=\"官方\"><a href=\"#官方\" class=\"headerlink\" title=\"官方\"></a>官方</h3><ul>\n<li><p><a href=\"https://dl.google.com/android/adt/adt-bundle-windows-x86-20140702.zip\" target=\"_blank\" rel=\"external\">win32</a></p>\n</li>\n<li><p><a href=\"https://dl.google.com/android/adt/adt-bundle-windows-x86_64-20140702.zip\" target=\"_blank\" rel=\"external\">win64</a></p>\n</li>\n<li><p><a href=\"http://dl.google.com/android/adt/adt-bundle-mac-x86_64-20140702.zip\" target=\"_blank\" rel=\"external\">MAC64</a></p>\n</li>\n<li><p><a href=\"http://dl.google.com/android/adt/adt-bundle-linux-x86-20140702.zip\" target=\"_blank\" rel=\"external\">Linux 86</a></p>\n</li>\n<li><p><a href=\"http://dl.google.com/android/adt/adt-bundle-linux-x86_64-20140702.zip\" target=\"_blank\" rel=\"external\">Linux 64</a></p>\n</li>\n</ul>\n<h3 id=\"百度云\"><a href=\"#百度云\" class=\"headerlink\" title=\"百度云\"></a>百度云</h3><ul>\n<li><a href=\"http://pan.baidu.com/s/1hsHdxjQ\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<h3 id=\"Eclipse添加genymotion插件\"><a href=\"#Eclipse添加genymotion插件\" class=\"headerlink\" title=\"Eclipse添加genymotion插件\"></a>Eclipse添加genymotion插件</h3><ul>\n<li><a href=\"http://pan.baidu.com/s/1mhV8gys\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<a id=\"more\"></a>","excerpt":"<h3 id=\"官方\"><a href=\"#官方\" class=\"headerlink\" title=\"官方\"></a>官方</h3><ul>\n<li><p><a href=\"https://dl.google.com/android/adt/adt-bundle-windows-x86-20140702.zip\">win32</a></p>\n</li>\n<li><p><a href=\"https://dl.google.com/android/adt/adt-bundle-windows-x86_64-20140702.zip\">win64</a></p>\n</li>\n<li><p><a href=\"http://dl.google.com/android/adt/adt-bundle-mac-x86_64-20140702.zip\">MAC64</a></p>\n</li>\n<li><p><a href=\"http://dl.google.com/android/adt/adt-bundle-linux-x86-20140702.zip\">Linux 86</a></p>\n</li>\n<li><p><a href=\"http://dl.google.com/android/adt/adt-bundle-linux-x86_64-20140702.zip\">Linux 64</a></p>\n</li>\n</ul>\n<h3 id=\"百度云\"><a href=\"#百度云\" class=\"headerlink\" title=\"百度云\"></a>百度云</h3><ul>\n<li><a href=\"http://pan.baidu.com/s/1hsHdxjQ\">传送门</a></li>\n</ul>\n<h3 id=\"Eclipse添加genymotion插件\"><a href=\"#Eclipse添加genymotion插件\" class=\"headerlink\" title=\"Eclipse添加genymotion插件\"></a>Eclipse添加genymotion插件</h3><ul>\n<li><a href=\"http://pan.baidu.com/s/1mhV8gys\">传送门</a></li>\n</ul>","more":""},{"title":"Android仿超级课程表的课程界面设计","date":"2016-06-01T14:31:01.000Z","photos":["http://img.blog.csdn.net/20150410180333267"],"_content":"<center><img src=\"http://img.blog.csdn.net/20150410180333267\" width=\"480px\" height=\"700px\"/></center>\n- 接下来先分析页面布局，从上往下看，第一行是显示标题，第二行是显示时间和周几，使用线性布局，第一列是用来显示节次的，宽度跟后面显示周几的7列不一样，可以用DP来设定；后面7列宽度可以用权重来分配，行的高度也用DP设定。 \n接着往下看就是课程表了，第一列用来显示节次，每节次的宽度跟上面行显示月份的格子一致，高度应该与显示周几的格子宽度保持一致，在运行时根据手机屏幕宽度计算显示周几格子的实际宽度来设置，并且想到后面如果要自定义多少节次的话，那么节次这一列布局使用了ListView。 \n那么显示一门课程的格子如何实现呢？为了以后不跟实现课表背景图片冲突，这里用到了FrameLayout,一门课程用RelativeLayout实现，背景必须用9图，否则不能随意变更宽高度，通过运行时往FrameLayout里添加RelativeLayout,设置一门课程显示的位置,利用周几和起始节来决定,设置RelativeLayout的marginLeft和marginTop;高度由节次来决定。 \n但是一般来说课程表是12节，一般手机屏幕都是显示不完的，必须滑动展示，但是节次里用了ListView，已经包含了ScrollView，而课程是在FrameLayout里实现的，那么必须屏蔽掉ListView的ScrollView，把ListView和FrameLayout用ScrollView包括进来，否则拖动屏幕的时候FrameLayout不会随着滑动\n\n```xml\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" >\n\n    <ScrollView \n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scrollbars=\"none\">\n\n        <RelativeLayout \n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n        <com.hengye.library.view.util.ListViewNoScroll\n            android:id=\"@+id/titlebar_course_table_listview\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:divider=\"@null\">\n\n        </com.hengye.library.view.util.ListViewNoScroll>\n\n        <FrameLayout\n            android:id=\"@+id/titlebar_course_table_framelayout\" \n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n            <RelativeLayout\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"200dp\"\n                android:layout_marginLeft=\"200dp\"\n                android:background=\"@drawable/ic_course_bg_huang_multi\"\n                android:visibility=\"gone\">\n\n                <TextView\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:text=\"中国近现代史纲要@3-102\"\n                    android:textColor=\"@color/white\"\n                    android:gravity=\"center\"/>  \n            </RelativeLayout>       \n        </FrameLayout>\n        </RelativeLayout>\n     </ScrollView>         \n\n</RelativeLayout>\n```\n\n<!-- more -->\n\n- 自定义屏蔽了ScrollView的ListView:\n\n```java\npublic class ListViewNoScroll extends ListView {\n    public ListViewNoScroll(Context context) {\n        super(context);\n    }\n\n    public ListViewNoScroll(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int expandSpec = MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE >> 2,\n                MeasureSpec.AT_MOST);\n        super.onMeasure(widthMeasureSpec, expandSpec);\n    }\n\n}\n```\n\n- 课程格子宽高度设置部分代码块：\n\n```java\nView courseView = getActivity().getLayoutInflater().inflate(R.layout.titlebar_course_item, null);\n        RelativeLayout course = (RelativeLayout) courseView.findViewById(R.id.titlebar_course_item_bg);\n        TextView courseNameTextView = (TextView) courseView.findViewById(R.id.titlebar_course_item_tx);\n                //用来设置边距        \n        int margin1Dp = getResources().getDimensionPixelSize(R.dimen.margin1dp);\n        //节次的宽度\n        int marginLessonDp = getResources().getDimensionPixelSize(R.dimen.listview_course_table_lesson_margin); \n        int lessonWidth = (mScreenWidth - marginLessonDp) / 7;      \n        //9图只能通过背景设置拉伸，如果用src方式设置只会当作普通图片处理\n//      course.setBackgroundDrawable(getResources().getDrawable(R.drawable.ic_course_bg_zi_multi));\n\n        //设置课程名字\n        courseNameTextView.setText(syllabus.getCourcesName() + \" \" + syllabus.getLocation());\n\n        //设置一门课程的高度和宽度，一节课的高度与宽度保持一致，把dp转换成像素乘以节数,宽度为屏幕减去节次的宽度后的1/7,因为要显示8列，1列是节次，7列是一周的7天;\n        int courseWidth = lessonWidth - margin1Dp * 2;\n        int courseHeight = lessonWidth * (endLesson - startLesson + 1) - margin1Dp * 2;\n        FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(courseWidth, courseHeight);\n        //设置一门课程显示的位置,利用周几和起始节来决定,设置view的marginLeft和marginTop;\n        layoutParams.setMargins(lessonWidth * (day - 1) + marginLessonDp + margin1Dp + margin1Dp, (startLesson - 1) * lessonWidth + margin1Dp, 0, 0);\n        //Android4.0以下Margin设置失效解决方法 \n        layoutParams.gravity = Gravity.TOP|Gravity.LEFT;\n        course.setLayoutParams(layoutParams);   \n```","source":"_posts/Android/Android仿超级课程表的课程界面设计.md","raw":"---\ntitle: Android仿超级课程表的课程界面设计\ndate: 2016-06-01 14:31:01\ntags: [Android,超级课程表,UI]\ncategories: Android\nphotos:\n- http://img.blog.csdn.net/20150410180333267\n---\n<center><img src=\"http://img.blog.csdn.net/20150410180333267\" width=\"480px\" height=\"700px\"/></center>\n- 接下来先分析页面布局，从上往下看，第一行是显示标题，第二行是显示时间和周几，使用线性布局，第一列是用来显示节次的，宽度跟后面显示周几的7列不一样，可以用DP来设定；后面7列宽度可以用权重来分配，行的高度也用DP设定。 \n接着往下看就是课程表了，第一列用来显示节次，每节次的宽度跟上面行显示月份的格子一致，高度应该与显示周几的格子宽度保持一致，在运行时根据手机屏幕宽度计算显示周几格子的实际宽度来设置，并且想到后面如果要自定义多少节次的话，那么节次这一列布局使用了ListView。 \n那么显示一门课程的格子如何实现呢？为了以后不跟实现课表背景图片冲突，这里用到了FrameLayout,一门课程用RelativeLayout实现，背景必须用9图，否则不能随意变更宽高度，通过运行时往FrameLayout里添加RelativeLayout,设置一门课程显示的位置,利用周几和起始节来决定,设置RelativeLayout的marginLeft和marginTop;高度由节次来决定。 \n但是一般来说课程表是12节，一般手机屏幕都是显示不完的，必须滑动展示，但是节次里用了ListView，已经包含了ScrollView，而课程是在FrameLayout里实现的，那么必须屏蔽掉ListView的ScrollView，把ListView和FrameLayout用ScrollView包括进来，否则拖动屏幕的时候FrameLayout不会随着滑动\n\n```xml\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" >\n\n    <ScrollView \n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scrollbars=\"none\">\n\n        <RelativeLayout \n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n        <com.hengye.library.view.util.ListViewNoScroll\n            android:id=\"@+id/titlebar_course_table_listview\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:divider=\"@null\">\n\n        </com.hengye.library.view.util.ListViewNoScroll>\n\n        <FrameLayout\n            android:id=\"@+id/titlebar_course_table_framelayout\" \n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n            <RelativeLayout\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"200dp\"\n                android:layout_marginLeft=\"200dp\"\n                android:background=\"@drawable/ic_course_bg_huang_multi\"\n                android:visibility=\"gone\">\n\n                <TextView\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:text=\"中国近现代史纲要@3-102\"\n                    android:textColor=\"@color/white\"\n                    android:gravity=\"center\"/>  \n            </RelativeLayout>       \n        </FrameLayout>\n        </RelativeLayout>\n     </ScrollView>         \n\n</RelativeLayout>\n```\n\n<!-- more -->\n\n- 自定义屏蔽了ScrollView的ListView:\n\n```java\npublic class ListViewNoScroll extends ListView {\n    public ListViewNoScroll(Context context) {\n        super(context);\n    }\n\n    public ListViewNoScroll(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int expandSpec = MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE >> 2,\n                MeasureSpec.AT_MOST);\n        super.onMeasure(widthMeasureSpec, expandSpec);\n    }\n\n}\n```\n\n- 课程格子宽高度设置部分代码块：\n\n```java\nView courseView = getActivity().getLayoutInflater().inflate(R.layout.titlebar_course_item, null);\n        RelativeLayout course = (RelativeLayout) courseView.findViewById(R.id.titlebar_course_item_bg);\n        TextView courseNameTextView = (TextView) courseView.findViewById(R.id.titlebar_course_item_tx);\n                //用来设置边距        \n        int margin1Dp = getResources().getDimensionPixelSize(R.dimen.margin1dp);\n        //节次的宽度\n        int marginLessonDp = getResources().getDimensionPixelSize(R.dimen.listview_course_table_lesson_margin); \n        int lessonWidth = (mScreenWidth - marginLessonDp) / 7;      \n        //9图只能通过背景设置拉伸，如果用src方式设置只会当作普通图片处理\n//      course.setBackgroundDrawable(getResources().getDrawable(R.drawable.ic_course_bg_zi_multi));\n\n        //设置课程名字\n        courseNameTextView.setText(syllabus.getCourcesName() + \" \" + syllabus.getLocation());\n\n        //设置一门课程的高度和宽度，一节课的高度与宽度保持一致，把dp转换成像素乘以节数,宽度为屏幕减去节次的宽度后的1/7,因为要显示8列，1列是节次，7列是一周的7天;\n        int courseWidth = lessonWidth - margin1Dp * 2;\n        int courseHeight = lessonWidth * (endLesson - startLesson + 1) - margin1Dp * 2;\n        FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(courseWidth, courseHeight);\n        //设置一门课程显示的位置,利用周几和起始节来决定,设置view的marginLeft和marginTop;\n        layoutParams.setMargins(lessonWidth * (day - 1) + marginLessonDp + margin1Dp + margin1Dp, (startLesson - 1) * lessonWidth + margin1Dp, 0, 0);\n        //Android4.0以下Margin设置失效解决方法 \n        layoutParams.gravity = Gravity.TOP|Gravity.LEFT;\n        course.setLayoutParams(layoutParams);   \n```","slug":"Android/Android仿超级课程表的课程界面设计","published":1,"updated":"2016-06-17T13:41:48.748Z","comments":1,"layout":"post","link":"","_id":"ciqop7qgb000gkgaetkwznd2u","content":"<p><center><img src=\"http://img.blog.csdn.net/20150410180333267\" width=\"480px\" height=\"700px\"></center></p>\n<ul>\n<li>接下来先分析页面布局，从上往下看，第一行是显示标题，第二行是显示时间和周几，使用线性布局，第一列是用来显示节次的，宽度跟后面显示周几的7列不一样，可以用DP来设定；后面7列宽度可以用权重来分配，行的高度也用DP设定。<br>接着往下看就是课程表了，第一列用来显示节次，每节次的宽度跟上面行显示月份的格子一致，高度应该与显示周几的格子宽度保持一致，在运行时根据手机屏幕宽度计算显示周几格子的实际宽度来设置，并且想到后面如果要自定义多少节次的话，那么节次这一列布局使用了ListView。<br>那么显示一门课程的格子如何实现呢？为了以后不跟实现课表背景图片冲突，这里用到了FrameLayout,一门课程用RelativeLayout实现，背景必须用9图，否则不能随意变更宽高度，通过运行时往FrameLayout里添加RelativeLayout,设置一门课程显示的位置,利用周几和起始节来决定,设置RelativeLayout的marginLeft和marginTop;高度由节次来决定。<br>但是一般来说课程表是12节，一般手机屏幕都是显示不完的，必须滑动展示，但是节次里用了ListView，已经包含了ScrollView，而课程是在FrameLayout里实现的，那么必须屏蔽掉ListView的ScrollView，把ListView和FrameLayout用ScrollView包括进来，否则拖动屏幕的时候FrameLayout不会随着滑动</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ScrollView</span> </span><br><span class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:scrollbars</span>=<span class=\"string\">\"none\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span> </span><br><span class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">com.hengye.library.view.util.ListViewNoScroll</span></span><br><span class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/titlebar_course_table_listview\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:divider</span>=<span class=\"string\">\"@null\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">com.hengye.library.view.util.ListViewNoScroll</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span><br><span class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/titlebar_course_table_framelayout\"</span> </span><br><span class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span><br><span class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span><br><span class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"200dp\"</span></span><br><span class=\"line\">                <span class=\"attr\">android:layout_marginLeft</span>=<span class=\"string\">\"200dp\"</span></span><br><span class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/ic_course_bg_huang_multi\"</span></span><br><span class=\"line\">                <span class=\"attr\">android:visibility</span>=<span class=\"string\">\"gone\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span><br><span class=\"line\">                    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">                    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">                    <span class=\"attr\">android:text</span>=<span class=\"string\">\"中国近现代史纲要@3-102\"</span></span><br><span class=\"line\">                    <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"@color/white\"</span></span><br><span class=\"line\">                    <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span>/&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span>       </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">ScrollView</span>&gt;</span>         </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li>自定义屏蔽了ScrollView的ListView:</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListViewNoScroll</span> <span class=\"keyword\">extends</span> <span class=\"title\">ListView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ListViewNoScroll</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ListViewNoScroll</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> expandSpec = MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE &gt;&gt; <span class=\"number\">2</span>,</span><br><span class=\"line\">                MeasureSpec.AT_MOST);</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onMeasure(widthMeasureSpec, expandSpec);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>课程格子宽高度设置部分代码块：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">View courseView = getActivity().getLayoutInflater().inflate(R.layout.titlebar_course_item, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        RelativeLayout course = (RelativeLayout) courseView.findViewById(R.id.titlebar_course_item_bg);</span><br><span class=\"line\">        TextView courseNameTextView = (TextView) courseView.findViewById(R.id.titlebar_course_item_tx);</span><br><span class=\"line\">                <span class=\"comment\">//用来设置边距        </span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> margin1Dp = getResources().getDimensionPixelSize(R.dimen.margin1dp);</span><br><span class=\"line\">        <span class=\"comment\">//节次的宽度</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> marginLessonDp = getResources().getDimensionPixelSize(R.dimen.listview_course_table_lesson_margin); </span><br><span class=\"line\">        <span class=\"keyword\">int</span> lessonWidth = (mScreenWidth - marginLessonDp) / <span class=\"number\">7</span>;      </span><br><span class=\"line\">        <span class=\"comment\">//9图只能通过背景设置拉伸，如果用src方式设置只会当作普通图片处理</span></span><br><span class=\"line\"><span class=\"comment\">//      course.setBackgroundDrawable(getResources().getDrawable(R.drawable.ic_course_bg_zi_multi));</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//设置课程名字</span></span><br><span class=\"line\">        courseNameTextView.setText(syllabus.getCourcesName() + <span class=\"string\">\" \"</span> + syllabus.getLocation());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//设置一门课程的高度和宽度，一节课的高度与宽度保持一致，把dp转换成像素乘以节数,宽度为屏幕减去节次的宽度后的1/7,因为要显示8列，1列是节次，7列是一周的7天;</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> courseWidth = lessonWidth - margin1Dp * <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> courseHeight = lessonWidth * (endLesson - startLesson + <span class=\"number\">1</span>) - margin1Dp * <span class=\"number\">2</span>;</span><br><span class=\"line\">        FrameLayout.LayoutParams layoutParams = <span class=\"keyword\">new</span> FrameLayout.LayoutParams(courseWidth, courseHeight);</span><br><span class=\"line\">        <span class=\"comment\">//设置一门课程显示的位置,利用周几和起始节来决定,设置view的marginLeft和marginTop;</span></span><br><span class=\"line\">        layoutParams.setMargins(lessonWidth * (day - <span class=\"number\">1</span>) + marginLessonDp + margin1Dp + margin1Dp, (startLesson - <span class=\"number\">1</span>) * lessonWidth + margin1Dp, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">//Android4.0以下Margin设置失效解决方法 </span></span><br><span class=\"line\">        layoutParams.gravity = Gravity.TOP|Gravity.LEFT;</span><br><span class=\"line\">        course.setLayoutParams(layoutParams);</span><br></pre></td></tr></table></figure>","excerpt":"<p><center><img src=\"http://img.blog.csdn.net/20150410180333267\" width=\"480px\" height=\"700px\"/></center></p>\n<ul>\n<li>接下来先分析页面布局，从上往下看，第一行是显示标题，第二行是显示时间和周几，使用线性布局，第一列是用来显示节次的，宽度跟后面显示周几的7列不一样，可以用DP来设定；后面7列宽度可以用权重来分配，行的高度也用DP设定。<br>接着往下看就是课程表了，第一列用来显示节次，每节次的宽度跟上面行显示月份的格子一致，高度应该与显示周几的格子宽度保持一致，在运行时根据手机屏幕宽度计算显示周几格子的实际宽度来设置，并且想到后面如果要自定义多少节次的话，那么节次这一列布局使用了ListView。<br>那么显示一门课程的格子如何实现呢？为了以后不跟实现课表背景图片冲突，这里用到了FrameLayout,一门课程用RelativeLayout实现，背景必须用9图，否则不能随意变更宽高度，通过运行时往FrameLayout里添加RelativeLayout,设置一门课程显示的位置,利用周几和起始节来决定,设置RelativeLayout的marginLeft和marginTop;高度由节次来决定。<br>但是一般来说课程表是12节，一般手机屏幕都是显示不完的，必须滑动展示，但是节次里用了ListView，已经包含了ScrollView，而课程是在FrameLayout里实现的，那么必须屏蔽掉ListView的ScrollView，把ListView和FrameLayout用ScrollView包括进来，否则拖动屏幕的时候FrameLayout不会随着滑动</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ScrollView</span> </span><br><span class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">        <span class=\"attr\">android:scrollbars</span>=<span class=\"string\">\"none\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span> </span><br><span class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">com.hengye.library.view.util.ListViewNoScroll</span></span><br><span class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/titlebar_course_table_listview\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:divider</span>=<span class=\"string\">\"@null\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">com.hengye.library.view.util.ListViewNoScroll</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span><br><span class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/titlebar_course_table_framelayout\"</span> </span><br><span class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span><br><span class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span><br><span class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"200dp\"</span></span><br><span class=\"line\">                <span class=\"attr\">android:layout_marginLeft</span>=<span class=\"string\">\"200dp\"</span></span><br><span class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/ic_course_bg_huang_multi\"</span></span><br><span class=\"line\">                <span class=\"attr\">android:visibility</span>=<span class=\"string\">\"gone\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span><br><span class=\"line\">                    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">                    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span><br><span class=\"line\">                    <span class=\"attr\">android:text</span>=<span class=\"string\">\"中国近现代史纲要@3-102\"</span></span><br><span class=\"line\">                    <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"@color/white\"</span></span><br><span class=\"line\">                    <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span>/&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span>       </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">ScrollView</span>&gt;</span>         </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>","more":"<ul>\n<li>自定义屏蔽了ScrollView的ListView:</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListViewNoScroll</span> <span class=\"keyword\">extends</span> <span class=\"title\">ListView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ListViewNoScroll</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ListViewNoScroll</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> expandSpec = MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE &gt;&gt; <span class=\"number\">2</span>,</span><br><span class=\"line\">                MeasureSpec.AT_MOST);</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onMeasure(widthMeasureSpec, expandSpec);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>课程格子宽高度设置部分代码块：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">View courseView = getActivity().getLayoutInflater().inflate(R.layout.titlebar_course_item, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        RelativeLayout course = (RelativeLayout) courseView.findViewById(R.id.titlebar_course_item_bg);</span><br><span class=\"line\">        TextView courseNameTextView = (TextView) courseView.findViewById(R.id.titlebar_course_item_tx);</span><br><span class=\"line\">                <span class=\"comment\">//用来设置边距        </span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> margin1Dp = getResources().getDimensionPixelSize(R.dimen.margin1dp);</span><br><span class=\"line\">        <span class=\"comment\">//节次的宽度</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> marginLessonDp = getResources().getDimensionPixelSize(R.dimen.listview_course_table_lesson_margin); </span><br><span class=\"line\">        <span class=\"keyword\">int</span> lessonWidth = (mScreenWidth - marginLessonDp) / <span class=\"number\">7</span>;      </span><br><span class=\"line\">        <span class=\"comment\">//9图只能通过背景设置拉伸，如果用src方式设置只会当作普通图片处理</span></span><br><span class=\"line\"><span class=\"comment\">//      course.setBackgroundDrawable(getResources().getDrawable(R.drawable.ic_course_bg_zi_multi));</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//设置课程名字</span></span><br><span class=\"line\">        courseNameTextView.setText(syllabus.getCourcesName() + <span class=\"string\">\" \"</span> + syllabus.getLocation());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//设置一门课程的高度和宽度，一节课的高度与宽度保持一致，把dp转换成像素乘以节数,宽度为屏幕减去节次的宽度后的1/7,因为要显示8列，1列是节次，7列是一周的7天;</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> courseWidth = lessonWidth - margin1Dp * <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> courseHeight = lessonWidth * (endLesson - startLesson + <span class=\"number\">1</span>) - margin1Dp * <span class=\"number\">2</span>;</span><br><span class=\"line\">        FrameLayout.LayoutParams layoutParams = <span class=\"keyword\">new</span> FrameLayout.LayoutParams(courseWidth, courseHeight);</span><br><span class=\"line\">        <span class=\"comment\">//设置一门课程显示的位置,利用周几和起始节来决定,设置view的marginLeft和marginTop;</span></span><br><span class=\"line\">        layoutParams.setMargins(lessonWidth * (day - <span class=\"number\">1</span>) + marginLessonDp + margin1Dp + margin1Dp, (startLesson - <span class=\"number\">1</span>) * lessonWidth + margin1Dp, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">//Android4.0以下Margin设置失效解决方法 </span></span><br><span class=\"line\">        layoutParams.gravity = Gravity.TOP|Gravity.LEFT;</span><br><span class=\"line\">        course.setLayoutParams(layoutParams);</span><br></pre></td></tr></table></figure>"},{"title":"Style.xml的妙用","date":"2016-06-01T15:55:46.000Z","_content":"\n- Style.xml的妙用\n\n<font color='RED'>Style.xml之于Android犹如css之于Jsp</font>\n\n- 妙用\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    android:layout_width=\"match_parent\"  \n    android:layout_height=\"match_parent\"  \n    android:orientation=\"vertical\" >  \n  \n    <TextView  \n        android:id=\"@+id/sensor\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"match_parent\" />  \n  \n</LinearLayout>  \n\n```\n\n这样的布局文件是很正常的。但是不如这样好\n\n<!-- more -->\n\n\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    style=\"@style/all_match\"  \n    android:orientation=\"vertical\" >  \n  \n    <TextView  \n        android:id=\"@+id/sensor\"  \n        style=\"@style/all_fill\" />  \n  \n</LinearLayout>  \n```\n\n省时省力，一眼还能看出是什么布局方式。只需要在Style.xml 中添加 这些代码即可\n\n```xml\n<style name=\"all_fill\" >  \n       <item name=\"android:layout_width\">fill_parent</item>  \n       <item name=\"android:layout_height\">fill_parent</item>  \n   </style>  \n   <style name=\"all_match\" >  \n       <item name=\"android:layout_width\">match_content</item>  \n       <item name=\"android:layout_height\">match_content</item>  \n   </style>  \n   <style name=\"width_fill\" >  \n       <item name=\"android:layout_width\">fill_parent</item>  \n       <item name=\"android:layout_height\">match_content</item>  \n   </style>  \n   <style name=\"height_fill\" >  \n       <item name=\"android:layout_width\">match_content</item>  \n       <item name=\"android:layout_height\">fill_parent</item>  \n   </style>  \n\n```","source":"_posts/Android/Style.xml的妙用.md","raw":"---\ntitle: Style.xml的妙用\ndate: 2016-06-01 15:55:46\ntags: [Style,Android]\ncategories: Android\n---\n\n- Style.xml的妙用\n\n<font color='RED'>Style.xml之于Android犹如css之于Jsp</font>\n\n- 妙用\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    android:layout_width=\"match_parent\"  \n    android:layout_height=\"match_parent\"  \n    android:orientation=\"vertical\" >  \n  \n    <TextView  \n        android:id=\"@+id/sensor\"  \n        android:layout_width=\"match_parent\"  \n        android:layout_height=\"match_parent\" />  \n  \n</LinearLayout>  \n\n```\n\n这样的布局文件是很正常的。但是不如这样好\n\n<!-- more -->\n\n\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"  \n    style=\"@style/all_match\"  \n    android:orientation=\"vertical\" >  \n  \n    <TextView  \n        android:id=\"@+id/sensor\"  \n        style=\"@style/all_fill\" />  \n  \n</LinearLayout>  \n```\n\n省时省力，一眼还能看出是什么布局方式。只需要在Style.xml 中添加 这些代码即可\n\n```xml\n<style name=\"all_fill\" >  \n       <item name=\"android:layout_width\">fill_parent</item>  \n       <item name=\"android:layout_height\">fill_parent</item>  \n   </style>  \n   <style name=\"all_match\" >  \n       <item name=\"android:layout_width\">match_content</item>  \n       <item name=\"android:layout_height\">match_content</item>  \n   </style>  \n   <style name=\"width_fill\" >  \n       <item name=\"android:layout_width\">fill_parent</item>  \n       <item name=\"android:layout_height\">match_content</item>  \n   </style>  \n   <style name=\"height_fill\" >  \n       <item name=\"android:layout_width\">match_content</item>  \n       <item name=\"android:layout_height\">fill_parent</item>  \n   </style>  \n\n```","slug":"Android/Style.xml的妙用","published":1,"updated":"2016-06-17T13:43:18.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qgr000kkgaey4t4eaa6","content":"<ul>\n<li>Style.xml的妙用</li>\n</ul>\n<font color=\"RED\">Style.xml之于Android犹如css之于Jsp</font>\n\n<ul>\n<li>妙用</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span> &gt;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span>  </span><br><span class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/sensor\"</span>  </span><br><span class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span>  </span><br><span class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span> /&gt;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样的布局文件是很正常的。但是不如这样好</p>\n<a id=\"more\"></a>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">style</span>=<span class=\"string\">\"@style/all_match\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span> &gt;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span>  </span><br><span class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/sensor\"</span>  </span><br><span class=\"line\">        <span class=\"attr\">style</span>=<span class=\"string\">\"@style/all_fill\"</span> /&gt;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>省时省力，一眼还能看出是什么布局方式。只需要在Style.xml 中添加 这些代码即可</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"all_fill\"</span> &gt;</span><span class=\"xml\">  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>fill_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>fill_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"all_match\"</span> &gt;</span><span class=\"xml\">  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>match_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>match_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"width_fill\"</span> &gt;</span><span class=\"xml\">  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>fill_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>match_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"height_fill\"</span> &gt;</span><span class=\"xml\">  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>match_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>fill_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li>Style.xml的妙用</li>\n</ul>\n<font color='RED'>Style.xml之于Android犹如css之于Jsp</font>\n\n<ul>\n<li>妙用</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span> &gt;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span>  </span><br><span class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/sensor\"</span>  </span><br><span class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span>  </span><br><span class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span> /&gt;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样的布局文件是很正常的。但是不如这样好</p>","more":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">style</span>=<span class=\"string\">\"@style/all_match\"</span>  </span><br><span class=\"line\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span> &gt;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span>  </span><br><span class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/sensor\"</span>  </span><br><span class=\"line\">        <span class=\"attr\">style</span>=<span class=\"string\">\"@style/all_fill\"</span> /&gt;</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>省时省力，一眼还能看出是什么布局方式。只需要在Style.xml 中添加 这些代码即可</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"all_fill\"</span> &gt;</span><span class=\"xml\">  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>fill_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>fill_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"all_match\"</span> &gt;</span><span class=\"xml\">  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>match_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>match_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"width_fill\"</span> &gt;</span><span class=\"xml\">  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>fill_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>match_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"height_fill\"</span> &gt;</span><span class=\"xml\">  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_width\"</span>&gt;</span>match_content<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:layout_height\"</span>&gt;</span>fill_parent<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>  </span><br><span class=\"line\">   </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":" AS中使用xUtils报错找不到org.apache.http.client.methods.HttpRequestBase的类文件","date":"2016-07-10T18:28:25.000Z","_content":"\n### AndroidStudio出现的错误###\n\n- 错误如下\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AS%E4%B8%AD%E4%BD%BF%E7%94%A8xUtils%E6%8A%A5%E9%94%99%E6%89%BE%E4%B8%8D%E5%88%B0org.apache.http.client.methods.HttpRequestBase%E7%9A%84%E7%B1%BB%E6%96%87%E4%BB%B61.png)</center>\n\n### 解决方法###\n\n- 打开对应module的build.gradle文件\n\n- 将 useLibrary 'org.apache.http.legacy'  将这一行代码添加到android{}根目录下 \n\n```cpp\nuseLibrary 'org.apache.http.legacy'\n```\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AS%E4%B8%AD%E4%BD%BF%E7%94%A8xUtils%E6%8A%A5%E9%94%99%E6%89%BE%E4%B8%8D%E5%88%B0org.apache.http.client.methods.HttpRequestBase%E7%9A%84%E7%B1%BB%E6%96%87%E4%BB%B62.png)</center>\n\n### 举一反三###\n\n- 以后类似的错误也可以学着这样解决\n\n<!-- more -->","source":"_posts/AndroidStudio/AS中使用xUtils报错找不到org-apache-http-client-methods-HttpRequestBase的类文件.md","raw":"---\ntitle: ' AS中使用xUtils报错找不到org.apache.http.client.methods.HttpRequestBase的类文件'\ndate: 2016-07-10 18:28:25\ntags: AndroidStudio\ncategories: AndroidStudio\n---\n\n### AndroidStudio出现的错误###\n\n- 错误如下\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AS%E4%B8%AD%E4%BD%BF%E7%94%A8xUtils%E6%8A%A5%E9%94%99%E6%89%BE%E4%B8%8D%E5%88%B0org.apache.http.client.methods.HttpRequestBase%E7%9A%84%E7%B1%BB%E6%96%87%E4%BB%B61.png)</center>\n\n### 解决方法###\n\n- 打开对应module的build.gradle文件\n\n- 将 useLibrary 'org.apache.http.legacy'  将这一行代码添加到android{}根目录下 \n\n```cpp\nuseLibrary 'org.apache.http.legacy'\n```\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AS%E4%B8%AD%E4%BD%BF%E7%94%A8xUtils%E6%8A%A5%E9%94%99%E6%89%BE%E4%B8%8D%E5%88%B0org.apache.http.client.methods.HttpRequestBase%E7%9A%84%E7%B1%BB%E6%96%87%E4%BB%B62.png)</center>\n\n### 举一反三###\n\n- 以后类似的错误也可以学着这样解决\n\n<!-- more -->","slug":"AndroidStudio/AS中使用xUtils报错找不到org-apache-http-client-methods-HttpRequestBase的类文件","published":1,"updated":"2016-07-10T10:36:30.750Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qgu000nkgae4ljs289u","content":"<h3 id=\"AndroidStudio出现的错误\"><a href=\"#AndroidStudio出现的错误\" class=\"headerlink\" title=\"AndroidStudio出现的错误\"></a>AndroidStudio出现的错误</h3><ul>\n<li>错误如下</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AS%E4%B8%AD%E4%BD%BF%E7%94%A8xUtils%E6%8A%A5%E9%94%99%E6%89%BE%E4%B8%8D%E5%88%B0org.apache.http.client.methods.HttpRequestBase%E7%9A%84%E7%B1%BB%E6%96%87%E4%BB%B61.png\" alt=\"\"></center>\n\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><ul>\n<li><p>打开对应module的build.gradle文件</p>\n</li>\n<li><p>将 useLibrary ‘org.apache.http.legacy’  将这一行代码添加到android{}根目录下 </p>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useLibrary 'org.apache.http.legacy'</span><br></pre></td></tr></table></figure>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AS%E4%B8%AD%E4%BD%BF%E7%94%A8xUtils%E6%8A%A5%E9%94%99%E6%89%BE%E4%B8%8D%E5%88%B0org.apache.http.client.methods.HttpRequestBase%E7%9A%84%E7%B1%BB%E6%96%87%E4%BB%B62.png\" alt=\"\"></center>\n\n<h3 id=\"举一反三\"><a href=\"#举一反三\" class=\"headerlink\" title=\"举一反三\"></a>举一反三</h3><ul>\n<li>以后类似的错误也可以学着这样解决</li>\n</ul>\n<a id=\"more\"></a>","excerpt":"<h3 id=\"AndroidStudio出现的错误\"><a href=\"#AndroidStudio出现的错误\" class=\"headerlink\" title=\"AndroidStudio出现的错误\"></a>AndroidStudio出现的错误</h3><ul>\n<li>错误如下</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AS%E4%B8%AD%E4%BD%BF%E7%94%A8xUtils%E6%8A%A5%E9%94%99%E6%89%BE%E4%B8%8D%E5%88%B0org.apache.http.client.methods.HttpRequestBase%E7%9A%84%E7%B1%BB%E6%96%87%E4%BB%B61.png\" alt=\"\"></center>\n\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><ul>\n<li><p>打开对应module的build.gradle文件</p>\n</li>\n<li><p>将 useLibrary ‘org.apache.http.legacy’  将这一行代码添加到android{}根目录下 </p>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useLibrary 'org.apache.http.legacy'</span><br></pre></td></tr></table></figure>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AS%E4%B8%AD%E4%BD%BF%E7%94%A8xUtils%E6%8A%A5%E9%94%99%E6%89%BE%E4%B8%8D%E5%88%B0org.apache.http.client.methods.HttpRequestBase%E7%9A%84%E7%B1%BB%E6%96%87%E4%BB%B62.png\" alt=\"\"></center>\n\n<h3 id=\"举一反三\"><a href=\"#举一反三\" class=\"headerlink\" title=\"举一反三\"></a>举一反三</h3><ul>\n<li>以后类似的错误也可以学着这样解决</li>\n</ul>","more":""},{"title":"Android Studio SVN的使用","date":"2016-06-01T14:52:54.000Z","_content":"\n- SVN的配置\n\n  1. 这篇文章使用的Android studio版本为1.4 RC3。\n  2. 我选择的是TortoiseSVN，版本为1.8，不要选择1.9版本（目前的最新版），因为如果你安装的是1.9版本当你在studio中配置svn时会提示你如下错误\n\n<center>![](http://i.stack.imgur.com/MQStV.jpg)</center>\n\n原因在于studio是基于Intellij IDEA开发的，而Intellij IDEA 14.1.4目前还无法使用svn1.9.0这个版本。\n\n　3. 当你安装TortoiseSVN时，command line client tools 默认是不会安装的，必须手动选择安装上，否则无法在studio中进行svn关联配置\n\n<center>![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204084756986-546433595.png)</center>　\n\n4.安装好之后就是进行studio与svn的关联了在studio中打开如下路径File->Settings->Version Control->Subversion,如下图所示：\n<center>![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204085204252-55717462.png)</center>\n\n\n<!-- more -->\n\n\n5.在Use command line client中选择你刚刚安装的svn路径bin目录下的svn.exe这个文件\n　　Use system default Subversion configuration directory 前面勾选上，这个默认就是勾选上上的，这个是svn相关配置信息的路径，保留默认路径就行。\n　　\n\n- 添加忽略文件　\n\n1.之所以要添加忽略文件或者文件夹，原因是由于每个人的studio工程配置都会有所不同，例如gradle 的版本。或者有些文件中保存了一些重要的信息，比如local.properties中配置的各种提交信息，这些信息是不能提交到svn上的，一般来说需要忽略的文件和文件夹主要有一下几类：\n\n　   .idea 文件夹\n　　 .gradle 文件夹\n　　 所有的 build 文件夹\n　　 所有的 .iml 文件\n　　 local.properties 文件\n　　\n这也是Android馆方建议我们过滤的文件夹\n\n2.添加忽略请打开如下路径:File->Settings->Version Control->Ignored Files,点击右面的+号添加你要忽略的文件夹或文件路径即可，如下图所示：\n\n<center>![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204093704830-1155838146.png)</center>\n\n3.注意：Studio中只有在未关联SVN之前添加忽略文件才有效，也就是说，这一步必须在VCS->Import into Version Control->Share Project(SubVersion)这步之前进行，否则添加的忽略文件是无效的\n\n4.下一步就是关联svn，其实过程上一步已经说了，就是执行VCS->Import into Version Control->Share Project(SubVersion)这个选项，这里需要注意一下Import into Version Control下还有一个Import into Subversion这个选项 ,这两选项其实是有区别的，Share Project(SubVersion)这个选项只是对项目同SVN进行了关联操作，并没有将代码提交，需要完成 连接后在进行提交代码操作；而Import into Subversion这个选项只是将你的svn项目提交到了svn上，并没有进行关联，执行完你会发现所有的工程文件都变成了红色，如果你是一个项目发起者，并且当你再次提交修改的项目时就会报错，提示你该项目不是svn的工作副本，无法提交，如果想提交成功，你需要删除当前项目，重新从svn上导入后便可提交成功，虽然两种方式均可，但是建议采用Share Project(SubVersion)的方式。本文也采用Share Project(SubVersion)方式提交\n\n5.点击Share Project(SubVersion)后会出现如下对话框\n<center>![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204100347408-1033591640.png)</center>\n\n　这里列出了当前svn的提交路径，如果你还没有点击上边的+号添加路径即可。选择完成后点击Share\n　![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204101744127-1148841605.png)\n　\n　选择1.8format，点击OK，成功后会发现除了忽略的文件其他均变成了绿色\n　![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102023736-1619075435.png)\n　\n　到这为止位置关联已经建立完毕，下一步是把代码提交到svn上，在顶部菜单栏选择\n　![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102150502-1907591442.png)\n　\n　或者项目右击->SubVersion->Commit Directory...\n　\n　![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102306643-1897108269.png)\n　\n6.填写commit message后点击commit。这里有的时候你点击commit后并没有任何反应，此时删除你的src目录下的test文件夹后再次提交即可。具体原因还不清楚，可能是svn检测这里有问题无法提交，或者跟studio的版本有关系。\n　　到这里项目已经成功体提交到了svn上，你可以使用svn进行合作开发了\n　\n\n- 单个文件的增加或修改\n\n很简单，在需要操作的文件上右击->Subversion->Commit File 即可\n　","source":"_posts/AndroidStudio/Android-Studio-SVN的使用.md","raw":"---\ntitle: Android Studio SVN的使用\ndate: 2016-06-01 14:52:54\ntags: [AndroidStudio,SVN]\ncategories: AndroidStudio\n---\n\n- SVN的配置\n\n  1. 这篇文章使用的Android studio版本为1.4 RC3。\n  2. 我选择的是TortoiseSVN，版本为1.8，不要选择1.9版本（目前的最新版），因为如果你安装的是1.9版本当你在studio中配置svn时会提示你如下错误\n\n<center>![](http://i.stack.imgur.com/MQStV.jpg)</center>\n\n原因在于studio是基于Intellij IDEA开发的，而Intellij IDEA 14.1.4目前还无法使用svn1.9.0这个版本。\n\n　3. 当你安装TortoiseSVN时，command line client tools 默认是不会安装的，必须手动选择安装上，否则无法在studio中进行svn关联配置\n\n<center>![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204084756986-546433595.png)</center>　\n\n4.安装好之后就是进行studio与svn的关联了在studio中打开如下路径File->Settings->Version Control->Subversion,如下图所示：\n<center>![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204085204252-55717462.png)</center>\n\n\n<!-- more -->\n\n\n5.在Use command line client中选择你刚刚安装的svn路径bin目录下的svn.exe这个文件\n　　Use system default Subversion configuration directory 前面勾选上，这个默认就是勾选上上的，这个是svn相关配置信息的路径，保留默认路径就行。\n　　\n\n- 添加忽略文件　\n\n1.之所以要添加忽略文件或者文件夹，原因是由于每个人的studio工程配置都会有所不同，例如gradle 的版本。或者有些文件中保存了一些重要的信息，比如local.properties中配置的各种提交信息，这些信息是不能提交到svn上的，一般来说需要忽略的文件和文件夹主要有一下几类：\n\n　   .idea 文件夹\n　　 .gradle 文件夹\n　　 所有的 build 文件夹\n　　 所有的 .iml 文件\n　　 local.properties 文件\n　　\n这也是Android馆方建议我们过滤的文件夹\n\n2.添加忽略请打开如下路径:File->Settings->Version Control->Ignored Files,点击右面的+号添加你要忽略的文件夹或文件路径即可，如下图所示：\n\n<center>![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204093704830-1155838146.png)</center>\n\n3.注意：Studio中只有在未关联SVN之前添加忽略文件才有效，也就是说，这一步必须在VCS->Import into Version Control->Share Project(SubVersion)这步之前进行，否则添加的忽略文件是无效的\n\n4.下一步就是关联svn，其实过程上一步已经说了，就是执行VCS->Import into Version Control->Share Project(SubVersion)这个选项，这里需要注意一下Import into Version Control下还有一个Import into Subversion这个选项 ,这两选项其实是有区别的，Share Project(SubVersion)这个选项只是对项目同SVN进行了关联操作，并没有将代码提交，需要完成 连接后在进行提交代码操作；而Import into Subversion这个选项只是将你的svn项目提交到了svn上，并没有进行关联，执行完你会发现所有的工程文件都变成了红色，如果你是一个项目发起者，并且当你再次提交修改的项目时就会报错，提示你该项目不是svn的工作副本，无法提交，如果想提交成功，你需要删除当前项目，重新从svn上导入后便可提交成功，虽然两种方式均可，但是建议采用Share Project(SubVersion)的方式。本文也采用Share Project(SubVersion)方式提交\n\n5.点击Share Project(SubVersion)后会出现如下对话框\n<center>![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204100347408-1033591640.png)</center>\n\n　这里列出了当前svn的提交路径，如果你还没有点击上边的+号添加路径即可。选择完成后点击Share\n　![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204101744127-1148841605.png)\n　\n　选择1.8format，点击OK，成功后会发现除了忽略的文件其他均变成了绿色\n　![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102023736-1619075435.png)\n　\n　到这为止位置关联已经建立完毕，下一步是把代码提交到svn上，在顶部菜单栏选择\n　![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102150502-1907591442.png)\n　\n　或者项目右击->SubVersion->Commit Directory...\n　\n　![](http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102306643-1897108269.png)\n　\n6.填写commit message后点击commit。这里有的时候你点击commit后并没有任何反应，此时删除你的src目录下的test文件夹后再次提交即可。具体原因还不清楚，可能是svn检测这里有问题无法提交，或者跟studio的版本有关系。\n　　到这里项目已经成功体提交到了svn上，你可以使用svn进行合作开发了\n　\n\n- 单个文件的增加或修改\n\n很简单，在需要操作的文件上右击->Subversion->Commit File 即可\n　","slug":"AndroidStudio/Android-Studio-SVN的使用","published":1,"updated":"2016-06-17T13:43:48.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qh0000rkgaeet7mvdwk","content":"<ul>\n<li><p>SVN的配置</p>\n<ol>\n<li>这篇文章使用的Android studio版本为1.4 RC3。</li>\n<li>我选择的是TortoiseSVN，版本为1.8，不要选择1.9版本（目前的最新版），因为如果你安装的是1.9版本当你在studio中配置svn时会提示你如下错误</li>\n</ol>\n</li>\n</ul>\n<center><img src=\"http://i.stack.imgur.com/MQStV.jpg\" alt=\"\"></center>\n\n<p>原因在于studio是基于Intellij IDEA开发的，而Intellij IDEA 14.1.4目前还无法使用svn1.9.0这个版本。</p>\n<p>　3. 当你安装TortoiseSVN时，command line client tools 默认是不会安装的，必须手动选择安装上，否则无法在studio中进行svn关联配置</p>\n<center><img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204084756986-546433595.png\" alt=\"\"></center>　<br><br>4.安装好之后就是进行studio与svn的关联了在studio中打开如下路径File-&gt;Settings-&gt;Version Control-&gt;Subversion,如下图所示：<br><center><img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204085204252-55717462.png\" alt=\"\"></center>\n\n\n<a id=\"more\"></a>\n<p>5.在Use command line client中选择你刚刚安装的svn路径bin目录下的svn.exe这个文件<br>　　Use system default Subversion configuration directory 前面勾选上，这个默认就是勾选上上的，这个是svn相关配置信息的路径，保留默认路径就行。\n　　</p>\n<ul>\n<li>添加忽略文件　</li>\n</ul>\n<p>1.之所以要添加忽略文件或者文件夹，原因是由于每个人的studio工程配置都会有所不同，例如gradle 的版本。或者有些文件中保存了一些重要的信息，比如local.properties中配置的各种提交信息，这些信息是不能提交到svn上的，一般来说需要忽略的文件和文件夹主要有一下几类：</p>\n<p>　   .idea 文件夹<br>　　 .gradle 文件夹<br>　　 所有的 build 文件夹<br>　　 所有的 .iml 文件<br>　　 local.properties 文件<br>　　<br>这也是Android馆方建议我们过滤的文件夹</p>\n<p>2.添加忽略请打开如下路径:File-&gt;Settings-&gt;Version Control-&gt;Ignored Files,点击右面的+号添加你要忽略的文件夹或文件路径即可，如下图所示：</p>\n<center><img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204093704830-1155838146.png\" alt=\"\"></center>\n\n<p>3.注意：Studio中只有在未关联SVN之前添加忽略文件才有效，也就是说，这一步必须在VCS-&gt;Import into Version Control-&gt;Share Project(SubVersion)这步之前进行，否则添加的忽略文件是无效的</p>\n<p>4.下一步就是关联svn，其实过程上一步已经说了，就是执行VCS-&gt;Import into Version Control-&gt;Share Project(SubVersion)这个选项，这里需要注意一下Import into Version Control下还有一个Import into Subversion这个选项 ,这两选项其实是有区别的，Share Project(SubVersion)这个选项只是对项目同SVN进行了关联操作，并没有将代码提交，需要完成 连接后在进行提交代码操作；而Import into Subversion这个选项只是将你的svn项目提交到了svn上，并没有进行关联，执行完你会发现所有的工程文件都变成了红色，如果你是一个项目发起者，并且当你再次提交修改的项目时就会报错，提示你该项目不是svn的工作副本，无法提交，如果想提交成功，你需要删除当前项目，重新从svn上导入后便可提交成功，虽然两种方式均可，但是建议采用Share Project(SubVersion)的方式。本文也采用Share Project(SubVersion)方式提交</p>\n<p>5.点击Share Project(SubVersion)后会出现如下对话框</p>\n<center><img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204100347408-1033591640.png\" alt=\"\"></center>\n\n<p>　这里列出了当前svn的提交路径，如果你还没有点击上边的+号添加路径即可。选择完成后点击Share<br>　<img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204101744127-1148841605.png\" alt=\"\"><br>　<br>　选择1.8format，点击OK，成功后会发现除了忽略的文件其他均变成了绿色<br>　<img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102023736-1619075435.png\" alt=\"\"><br>　<br>　到这为止位置关联已经建立完毕，下一步是把代码提交到svn上，在顶部菜单栏选择<br>　<img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102150502-1907591442.png\" alt=\"\"><br>　<br>　或者项目右击-&gt;SubVersion-&gt;Commit Directory…<br>　<br>　<img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102306643-1897108269.png\" alt=\"\"><br>　<br>6.填写commit message后点击commit。这里有的时候你点击commit后并没有任何反应，此时删除你的src目录下的test文件夹后再次提交即可。具体原因还不清楚，可能是svn检测这里有问题无法提交，或者跟studio的版本有关系。<br>　　到这里项目已经成功体提交到了svn上，你可以使用svn进行合作开发了\n　</p>\n<ul>\n<li>单个文件的增加或修改</li>\n</ul>\n<p>很简单，在需要操作的文件上右击-&gt;Subversion-&gt;Commit File 即可\n　</p>\n","excerpt":"<ul>\n<li><p>SVN的配置</p>\n<ol>\n<li>这篇文章使用的Android studio版本为1.4 RC3。</li>\n<li>我选择的是TortoiseSVN，版本为1.8，不要选择1.9版本（目前的最新版），因为如果你安装的是1.9版本当你在studio中配置svn时会提示你如下错误</li>\n</ol>\n</li>\n</ul>\n<center><img src=\"http://i.stack.imgur.com/MQStV.jpg\" alt=\"\"></center>\n\n<p>原因在于studio是基于Intellij IDEA开发的，而Intellij IDEA 14.1.4目前还无法使用svn1.9.0这个版本。</p>\n<p>　3. 当你安装TortoiseSVN时，command line client tools 默认是不会安装的，必须手动选择安装上，否则无法在studio中进行svn关联配置</p>\n<center><img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204084756986-546433595.png\" alt=\"\"></center>　<br><br>4.安装好之后就是进行studio与svn的关联了在studio中打开如下路径File-&gt;Settings-&gt;Version Control-&gt;Subversion,如下图所示：<br><center><img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204085204252-55717462.png\" alt=\"\"></center>","more":"<p>5.在Use command line client中选择你刚刚安装的svn路径bin目录下的svn.exe这个文件<br>　　Use system default Subversion configuration directory 前面勾选上，这个默认就是勾选上上的，这个是svn相关配置信息的路径，保留默认路径就行。\n　　</p>\n<ul>\n<li>添加忽略文件　</li>\n</ul>\n<p>1.之所以要添加忽略文件或者文件夹，原因是由于每个人的studio工程配置都会有所不同，例如gradle 的版本。或者有些文件中保存了一些重要的信息，比如local.properties中配置的各种提交信息，这些信息是不能提交到svn上的，一般来说需要忽略的文件和文件夹主要有一下几类：</p>\n<p>　   .idea 文件夹<br>　　 .gradle 文件夹<br>　　 所有的 build 文件夹<br>　　 所有的 .iml 文件<br>　　 local.properties 文件<br>　　<br>这也是Android馆方建议我们过滤的文件夹</p>\n<p>2.添加忽略请打开如下路径:File-&gt;Settings-&gt;Version Control-&gt;Ignored Files,点击右面的+号添加你要忽略的文件夹或文件路径即可，如下图所示：</p>\n<center><img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204093704830-1155838146.png\" alt=\"\"></center>\n\n<p>3.注意：Studio中只有在未关联SVN之前添加忽略文件才有效，也就是说，这一步必须在VCS-&gt;Import into Version Control-&gt;Share Project(SubVersion)这步之前进行，否则添加的忽略文件是无效的</p>\n<p>4.下一步就是关联svn，其实过程上一步已经说了，就是执行VCS-&gt;Import into Version Control-&gt;Share Project(SubVersion)这个选项，这里需要注意一下Import into Version Control下还有一个Import into Subversion这个选项 ,这两选项其实是有区别的，Share Project(SubVersion)这个选项只是对项目同SVN进行了关联操作，并没有将代码提交，需要完成 连接后在进行提交代码操作；而Import into Subversion这个选项只是将你的svn项目提交到了svn上，并没有进行关联，执行完你会发现所有的工程文件都变成了红色，如果你是一个项目发起者，并且当你再次提交修改的项目时就会报错，提示你该项目不是svn的工作副本，无法提交，如果想提交成功，你需要删除当前项目，重新从svn上导入后便可提交成功，虽然两种方式均可，但是建议采用Share Project(SubVersion)的方式。本文也采用Share Project(SubVersion)方式提交</p>\n<p>5.点击Share Project(SubVersion)后会出现如下对话框</p>\n<center><img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204100347408-1033591640.png\" alt=\"\"></center>\n\n<p>　这里列出了当前svn的提交路径，如果你还没有点击上边的+号添加路径即可。选择完成后点击Share<br>　<img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204101744127-1148841605.png\" alt=\"\"><br>　<br>　选择1.8format，点击OK，成功后会发现除了忽略的文件其他均变成了绿色<br>　<img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102023736-1619075435.png\" alt=\"\"><br>　<br>　到这为止位置关联已经建立完毕，下一步是把代码提交到svn上，在顶部菜单栏选择<br>　<img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102150502-1907591442.png\" alt=\"\"><br>　<br>　或者项目右击-&gt;SubVersion-&gt;Commit Directory…<br>　<br>　<img src=\"http://images2015.cnblogs.com/blog/828272/201512/828272-20151204102306643-1897108269.png\" alt=\"\"><br>　<br>6.填写commit message后点击commit。这里有的时候你点击commit后并没有任何反应，此时删除你的src目录下的test文件夹后再次提交即可。具体原因还不清楚，可能是svn检测这里有问题无法提交，或者跟studio的版本有关系。<br>　　到这里项目已经成功体提交到了svn上，你可以使用svn进行合作开发了\n　</p>\n<ul>\n<li>单个文件的增加或修改</li>\n</ul>\n<p>很简单，在需要操作的文件上右击-&gt;Subversion-&gt;Commit File 即可\n　</p>"},{"title":"AndroidStudio快捷键和使用技巧","date":"2016-06-29T21:44:57.000Z","_content":"\n### 最常用快捷键###\n\n|  快捷键       | 用途描述                         |\n| ------------- |:--------------------------------:|\n| ctrl+k| commit到版本控制软件\n| ctrl+shift+K| push到远程仓库\n| ctrl+T| 拉取版本到本地\n| shift+F10|部署到模拟器运行\n| Ctrl+Shift+Space | 自动补全代码\n| Ctrl+Alt+L  | 格式化代码\n| Ctrl + Shift + I|快速查看定义\n| Ctrl＋E| 可以显示最近编辑的文件列表\n| Shift＋Click| 可以关闭文件\n| Ctrl＋[或]| 可以跳到大括号的开头结尾\n| Ctrl＋Shift＋Backspace| 可以跳转到上次编辑的地方\n| Ctrl＋F12| 可以显示当前文件的结构\n| Ctrl＋F7| 可以查询当前元素在当前文件中的引用，然后按F3可以选择\n| Ctrl＋N| 可以快速打开类\n| Ctrl＋Shift＋N| 可以快速打开文件\n| Alt＋Q| 可以看到当前方法的声明\n| Ctrl＋W| 可以选择单词继而语句继而行继而函数\n| Alt＋F1| 可以将正在编辑的元素在各个面板中定位\n| Ctrl＋P| 可以显示参数信息\n| Ctrl＋Shift＋Insert| 可以选择剪贴板内容并插入\n| Alt＋Insert| 可以生成构造器/Getter/Setter等\n| Ctrl＋Alt＋V | 可以引入变量。例如把括号内的SQL赋成一个变量\n| Ctrl＋Alt＋T| 可以把代码包在一块内，例如try/catch\n| Alt＋Up and Alt＋Down| 可在方法间快速移动\n| Esc| 该操作仅仅把光标移回编辑器。\n| Shift + Esc|该操作会关闭当前面板，然后把光标移回到编辑器\n| Ctrl + F12|展现当前类的大纲，并可以快速跳转\n| Ctrl + Tab|切换器,可以用来快速打开文件\n| Alt + `|版本控制操作弹窗\n| Ctrl + Alt + M|提取方法\n| Ctrl + Alt + P|提取参数\n| Ctrl + Shift + J|合并行和文本\n| Ctrl + J|动态模版，非常好用\n| Ctrl + Shift + Up/Down|上下移动方法\n\n<!-- more -->\n\n### 常用快捷键###\n\n|  快捷键       | 用途描述                         |\n| ------------- |:--------------------------------:|\n| Ctrl + Shift + F12|隐藏所有面板\n| Ctrl + Shift + \"+\"/ \"-\"| 展开/折叠代码\n| Alt+回车 | 导入包,自动修正\n| Ctrl+N   | 查找类\n| Ctrl+Shift+N | 查找文件\n| Ctrl+Alt+O | 优化导入的类和包\n| Alt+Insert | 生成代码(如get,set方法,构造函数等)\n| Ctrl+E或者Alt+Shift+C  | 最近访问的文件\n| Ctrl+shift+E| 打开最近修改的文件\n| Ctrl+R | 替换文本\n| Ctrl+F | 查找文本\n| Ctrl+Shift+Space | 自动补全代码\n| Ctrl+空格 | 代码提示\n| Ctrl+Alt+Space | 类名或接口名提示\n| Ctrl+P | 方法参数提示\n| Ctrl+Shift+Alt+N | 查找类中的方法或变量\n| Alt+Shift+C | 对比最近修改的代码\n| Shift+F6  | 重构-重命名\n| Ctrl+Shift+Up/Down| 上下移动本行代码\n| Ctrl+X | 剪切行\n| Ctrl+Y | 删除行\n| Ctrl+D | 复制行\n| Ctrl+/ 或 Ctrl+Shift+/  | 注释（// 或者 /**/）\n| Ctrl+J  | 自动代码\n| Ctrl+E | 最近访问的文件\n| Ctrl+H | 显示类结构图\n| Ctrl+Q | 显示注释文档\n| Alt+F1 | 查找代码所在位置\n| Alt+1 | 快速打开或隐藏工程面板\n| Ctrl+Alt+ left/right | 返回至上次浏览的位置\n| Alt+ left/right | 切换代码视图\n| Alt+ Up/Down | 在方法间快速移动定位\n| Ctrl+Shift+Up/Down | 代码向上/下移动\n\n### 使用技巧###\n\n#### 文章####\n\n- [传送门](http://mp.weixin.qq.com/s?__biz=MzA3ODY0MzEyMA==&mid=2657236292&idx=1&sn=7584243ad7f7559d42410eda4468b01c&scene=0#wechat_redirect)\n\n#### 书签####\n\n- 添加/移除书签：F3(OS X) 、F11(Windows/Linux);\n\n- 添加/移除书签(带标记)：Alt + F3(OS X)、Ctrl + F11(Windows/Linux);\n\n- 显示全部书签：Cmd + F3(OS X) 、Shift + F11(Windows/Linux)，显示所有的书签列表，并且是可以搜索的\n\n- 上一个/下一个书签：无，可以在设置中设置快捷键\n\n- 更多：当你为某个书签指定了标记，你可以使用快捷键 Ctrl + 标记 来快速跳转到标记处，比如输入Ctrl + 1，跳到标记为1的书签处\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A71.gif)</center>\n\n#### 与分支比对####\n\n- 描述：假如你的项目是使用git来管理的，你可以将当前文件或者文件夹与其他的分支进行比对。比较有用的是可以让你了解到你与主分支有多少差别。\n\n- 调用：Menu → VCS → Git → Compare With Branch\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A72.gif)</center>\n\n#### 在外部打开文件####\n\n- 描述：通过这个快捷键，简单地点击Tab，就可以打开当前文件所在的位置或者该文件的任意上层路径。\n\n- 快捷键：Cmd + 单击Tab(OS X)、Ctrl + 点击Tab(Windows/Linux);\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A73.gif)</center>\n\n#### Select In####\n\n- 描述：拿着当前文件然后问你在哪里选中该文件。恕我直言，最有用的就是在项目结构或者资源管理器中打开 该文件。每一个操作都有数字或者字母作为前缀，可以通过这个前缀来快速跳转。通常，我会 Alt + F1 然后 回车(Enter) 来打开项目视图，然后 再用 Alt + F1 在OS X的Finder里找到文件。你可以在文件中或者直接在项目视图里使用该操作\n\n- 快捷键：Alt + F1\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A74.gif)</center>\n\n\n#### Sublime Text式的多处选择####\n\n- 描述：这个功能超级赞！该操作会识别当前选中字符串，选择下一个同样的字符串，并且添加一个光标。这意味着你可以在同一个文件里拥有多个光标，你可以同时在所有光标处输入任何东西\n\n- 快捷键：Ctrl + G(OS X)、Alt + Ｊ（Windows、Linux）\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A75.gif)</center>\n\n#### 编写正则表达式####\n\n- 描述：使用Java编写正则表达式是一件很困难的事，主要原因是：\n\n- 你必须得避开反斜杠；\n\n- 说实话，正则很难；\n\n- 看第二条。\n\n- IDE能帮我们干点啥呢？当然是一个舒服的界面来编写和测试正则啦~ - 快捷键：Alt + Enter → check regexp\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A76.gif)</center>\n\n#### 使用Enter和Tab进行代码补全的差别####\n\n- 描述：代码补全时，可以使用Enter或Tab来进行补全操作，但是两者是有差别的\n\n- 使用Enter时：从光标处插入补全的代码，对原来的代码不做任何操作\n\n- 使用Tab时：从光标处插入补全的代码，并删除后面的代码，直到遇到点号、圆括号、分号或空格为止\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A77.gif)</center>\n\n#### 提取变量####\n\n- 描述：这是一个提取变量的快捷操作。当你在没有写变量声明的直接写下值的时候，这是一个很方便生成变量声明的操作，同时还会给出一个建议的变量命名\n\n- 调用：Menu → Refactor → Extract → Variable\n\n- 快捷键：Cmd + Alt + V(OS X)、Ctrl + Alt + V(Windows/Linux)；\n\n- 更多：当你需要改变变量声明的类型，例如使用 List 替代 ArrayList，可以按下Shift + Tab，就会显示所有可用的变量类型\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A78.gif)</center>\n\n#### 取反补全####\n\n- 描述：有时你自动补全一个布尔值，然后回到该值的前面添加一个感叹号来完成取反操作，现在通过使用输入!代替enter完成补全操作，就可以跳过这些繁琐的操作了\n\n- 快捷键：代码补全的时候，按下!即可（有时需要上下键选中候选项）\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A79.gif)</center>\n\n#### 包裹代码####\n\n- 描述： 该操作可以用特定代码结构包裹住选中的代码块，通常是if语句，循环，try/catch语句或者runnable语句。 如果你没有选中任何东西，该操作会包裹当前一整行\n\n- 快捷键：Cmd + Alt + T(OS X)、Ctrl + Alt + T(Windows/Linux)\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A710.gif)</center>\n\n#### 移除包裹代码####\n\n- 描述：该操作会移除周围的代码，它可能是一条if语句，一个while循环，一个try/catch语句甚至是一个runnable语句。该操作恰恰和包裹代码（Surround With）相反\n\n- 快捷键：Cmd + Shift + Delete(OS X)、Ctrl + Shift + Delete(Windows/Linux)\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A711.gif)</center>\n","source":"_posts/AndroidStudio/AndroidStudio快捷键和使用技巧.md","raw":"---\ntitle: AndroidStudio快捷键和使用技巧\ndate: 2016-06-29 21:44:57\ntags: AndroidStudio\ncategories: AndroidStudio\n---\n\n### 最常用快捷键###\n\n|  快捷键       | 用途描述                         |\n| ------------- |:--------------------------------:|\n| ctrl+k| commit到版本控制软件\n| ctrl+shift+K| push到远程仓库\n| ctrl+T| 拉取版本到本地\n| shift+F10|部署到模拟器运行\n| Ctrl+Shift+Space | 自动补全代码\n| Ctrl+Alt+L  | 格式化代码\n| Ctrl + Shift + I|快速查看定义\n| Ctrl＋E| 可以显示最近编辑的文件列表\n| Shift＋Click| 可以关闭文件\n| Ctrl＋[或]| 可以跳到大括号的开头结尾\n| Ctrl＋Shift＋Backspace| 可以跳转到上次编辑的地方\n| Ctrl＋F12| 可以显示当前文件的结构\n| Ctrl＋F7| 可以查询当前元素在当前文件中的引用，然后按F3可以选择\n| Ctrl＋N| 可以快速打开类\n| Ctrl＋Shift＋N| 可以快速打开文件\n| Alt＋Q| 可以看到当前方法的声明\n| Ctrl＋W| 可以选择单词继而语句继而行继而函数\n| Alt＋F1| 可以将正在编辑的元素在各个面板中定位\n| Ctrl＋P| 可以显示参数信息\n| Ctrl＋Shift＋Insert| 可以选择剪贴板内容并插入\n| Alt＋Insert| 可以生成构造器/Getter/Setter等\n| Ctrl＋Alt＋V | 可以引入变量。例如把括号内的SQL赋成一个变量\n| Ctrl＋Alt＋T| 可以把代码包在一块内，例如try/catch\n| Alt＋Up and Alt＋Down| 可在方法间快速移动\n| Esc| 该操作仅仅把光标移回编辑器。\n| Shift + Esc|该操作会关闭当前面板，然后把光标移回到编辑器\n| Ctrl + F12|展现当前类的大纲，并可以快速跳转\n| Ctrl + Tab|切换器,可以用来快速打开文件\n| Alt + `|版本控制操作弹窗\n| Ctrl + Alt + M|提取方法\n| Ctrl + Alt + P|提取参数\n| Ctrl + Shift + J|合并行和文本\n| Ctrl + J|动态模版，非常好用\n| Ctrl + Shift + Up/Down|上下移动方法\n\n<!-- more -->\n\n### 常用快捷键###\n\n|  快捷键       | 用途描述                         |\n| ------------- |:--------------------------------:|\n| Ctrl + Shift + F12|隐藏所有面板\n| Ctrl + Shift + \"+\"/ \"-\"| 展开/折叠代码\n| Alt+回车 | 导入包,自动修正\n| Ctrl+N   | 查找类\n| Ctrl+Shift+N | 查找文件\n| Ctrl+Alt+O | 优化导入的类和包\n| Alt+Insert | 生成代码(如get,set方法,构造函数等)\n| Ctrl+E或者Alt+Shift+C  | 最近访问的文件\n| Ctrl+shift+E| 打开最近修改的文件\n| Ctrl+R | 替换文本\n| Ctrl+F | 查找文本\n| Ctrl+Shift+Space | 自动补全代码\n| Ctrl+空格 | 代码提示\n| Ctrl+Alt+Space | 类名或接口名提示\n| Ctrl+P | 方法参数提示\n| Ctrl+Shift+Alt+N | 查找类中的方法或变量\n| Alt+Shift+C | 对比最近修改的代码\n| Shift+F6  | 重构-重命名\n| Ctrl+Shift+Up/Down| 上下移动本行代码\n| Ctrl+X | 剪切行\n| Ctrl+Y | 删除行\n| Ctrl+D | 复制行\n| Ctrl+/ 或 Ctrl+Shift+/  | 注释（// 或者 /**/）\n| Ctrl+J  | 自动代码\n| Ctrl+E | 最近访问的文件\n| Ctrl+H | 显示类结构图\n| Ctrl+Q | 显示注释文档\n| Alt+F1 | 查找代码所在位置\n| Alt+1 | 快速打开或隐藏工程面板\n| Ctrl+Alt+ left/right | 返回至上次浏览的位置\n| Alt+ left/right | 切换代码视图\n| Alt+ Up/Down | 在方法间快速移动定位\n| Ctrl+Shift+Up/Down | 代码向上/下移动\n\n### 使用技巧###\n\n#### 文章####\n\n- [传送门](http://mp.weixin.qq.com/s?__biz=MzA3ODY0MzEyMA==&mid=2657236292&idx=1&sn=7584243ad7f7559d42410eda4468b01c&scene=0#wechat_redirect)\n\n#### 书签####\n\n- 添加/移除书签：F3(OS X) 、F11(Windows/Linux);\n\n- 添加/移除书签(带标记)：Alt + F3(OS X)、Ctrl + F11(Windows/Linux);\n\n- 显示全部书签：Cmd + F3(OS X) 、Shift + F11(Windows/Linux)，显示所有的书签列表，并且是可以搜索的\n\n- 上一个/下一个书签：无，可以在设置中设置快捷键\n\n- 更多：当你为某个书签指定了标记，你可以使用快捷键 Ctrl + 标记 来快速跳转到标记处，比如输入Ctrl + 1，跳到标记为1的书签处\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A71.gif)</center>\n\n#### 与分支比对####\n\n- 描述：假如你的项目是使用git来管理的，你可以将当前文件或者文件夹与其他的分支进行比对。比较有用的是可以让你了解到你与主分支有多少差别。\n\n- 调用：Menu → VCS → Git → Compare With Branch\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A72.gif)</center>\n\n#### 在外部打开文件####\n\n- 描述：通过这个快捷键，简单地点击Tab，就可以打开当前文件所在的位置或者该文件的任意上层路径。\n\n- 快捷键：Cmd + 单击Tab(OS X)、Ctrl + 点击Tab(Windows/Linux);\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A73.gif)</center>\n\n#### Select In####\n\n- 描述：拿着当前文件然后问你在哪里选中该文件。恕我直言，最有用的就是在项目结构或者资源管理器中打开 该文件。每一个操作都有数字或者字母作为前缀，可以通过这个前缀来快速跳转。通常，我会 Alt + F1 然后 回车(Enter) 来打开项目视图，然后 再用 Alt + F1 在OS X的Finder里找到文件。你可以在文件中或者直接在项目视图里使用该操作\n\n- 快捷键：Alt + F1\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A74.gif)</center>\n\n\n#### Sublime Text式的多处选择####\n\n- 描述：这个功能超级赞！该操作会识别当前选中字符串，选择下一个同样的字符串，并且添加一个光标。这意味着你可以在同一个文件里拥有多个光标，你可以同时在所有光标处输入任何东西\n\n- 快捷键：Ctrl + G(OS X)、Alt + Ｊ（Windows、Linux）\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A75.gif)</center>\n\n#### 编写正则表达式####\n\n- 描述：使用Java编写正则表达式是一件很困难的事，主要原因是：\n\n- 你必须得避开反斜杠；\n\n- 说实话，正则很难；\n\n- 看第二条。\n\n- IDE能帮我们干点啥呢？当然是一个舒服的界面来编写和测试正则啦~ - 快捷键：Alt + Enter → check regexp\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A76.gif)</center>\n\n#### 使用Enter和Tab进行代码补全的差别####\n\n- 描述：代码补全时，可以使用Enter或Tab来进行补全操作，但是两者是有差别的\n\n- 使用Enter时：从光标处插入补全的代码，对原来的代码不做任何操作\n\n- 使用Tab时：从光标处插入补全的代码，并删除后面的代码，直到遇到点号、圆括号、分号或空格为止\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A77.gif)</center>\n\n#### 提取变量####\n\n- 描述：这是一个提取变量的快捷操作。当你在没有写变量声明的直接写下值的时候，这是一个很方便生成变量声明的操作，同时还会给出一个建议的变量命名\n\n- 调用：Menu → Refactor → Extract → Variable\n\n- 快捷键：Cmd + Alt + V(OS X)、Ctrl + Alt + V(Windows/Linux)；\n\n- 更多：当你需要改变变量声明的类型，例如使用 List 替代 ArrayList，可以按下Shift + Tab，就会显示所有可用的变量类型\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A78.gif)</center>\n\n#### 取反补全####\n\n- 描述：有时你自动补全一个布尔值，然后回到该值的前面添加一个感叹号来完成取反操作，现在通过使用输入!代替enter完成补全操作，就可以跳过这些繁琐的操作了\n\n- 快捷键：代码补全的时候，按下!即可（有时需要上下键选中候选项）\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A79.gif)</center>\n\n#### 包裹代码####\n\n- 描述： 该操作可以用特定代码结构包裹住选中的代码块，通常是if语句，循环，try/catch语句或者runnable语句。 如果你没有选中任何东西，该操作会包裹当前一整行\n\n- 快捷键：Cmd + Alt + T(OS X)、Ctrl + Alt + T(Windows/Linux)\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A710.gif)</center>\n\n#### 移除包裹代码####\n\n- 描述：该操作会移除周围的代码，它可能是一条if语句，一个while循环，一个try/catch语句甚至是一个runnable语句。该操作恰恰和包裹代码（Surround With）相反\n\n- 快捷键：Cmd + Shift + Delete(OS X)、Ctrl + Shift + Delete(Windows/Linux)\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A711.gif)</center>\n","slug":"AndroidStudio/AndroidStudio快捷键和使用技巧","published":1,"updated":"2016-07-02T04:39:07.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qh2000tkgaeoimc9zzr","content":"<h3 id=\"最常用快捷键\"><a href=\"#最常用快捷键\" class=\"headerlink\" title=\"最常用快捷键\"></a>最常用快捷键</h3><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th style=\"text-align:center\">用途描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ctrl+k</td>\n<td style=\"text-align:center\">commit到版本控制软件</td>\n</tr>\n<tr>\n<td>ctrl+shift+K</td>\n<td style=\"text-align:center\">push到远程仓库</td>\n</tr>\n<tr>\n<td>ctrl+T</td>\n<td style=\"text-align:center\">拉取版本到本地</td>\n</tr>\n<tr>\n<td>shift+F10</td>\n<td style=\"text-align:center\">部署到模拟器运行</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Space</td>\n<td style=\"text-align:center\">自动补全代码</td>\n</tr>\n<tr>\n<td>Ctrl+Alt+L</td>\n<td style=\"text-align:center\">格式化代码</td>\n</tr>\n<tr>\n<td>Ctrl + Shift + I</td>\n<td style=\"text-align:center\">快速查看定义</td>\n</tr>\n<tr>\n<td>Ctrl＋E</td>\n<td style=\"text-align:center\">可以显示最近编辑的文件列表</td>\n</tr>\n<tr>\n<td>Shift＋Click</td>\n<td style=\"text-align:center\">可以关闭文件</td>\n</tr>\n<tr>\n<td>Ctrl＋[或]</td>\n<td style=\"text-align:center\">可以跳到大括号的开头结尾</td>\n</tr>\n<tr>\n<td>Ctrl＋Shift＋Backspace</td>\n<td style=\"text-align:center\">可以跳转到上次编辑的地方</td>\n</tr>\n<tr>\n<td>Ctrl＋F12</td>\n<td style=\"text-align:center\">可以显示当前文件的结构</td>\n</tr>\n<tr>\n<td>Ctrl＋F7</td>\n<td style=\"text-align:center\">可以查询当前元素在当前文件中的引用，然后按F3可以选择</td>\n</tr>\n<tr>\n<td>Ctrl＋N</td>\n<td style=\"text-align:center\">可以快速打开类</td>\n</tr>\n<tr>\n<td>Ctrl＋Shift＋N</td>\n<td style=\"text-align:center\">可以快速打开文件</td>\n</tr>\n<tr>\n<td>Alt＋Q</td>\n<td style=\"text-align:center\">可以看到当前方法的声明</td>\n</tr>\n<tr>\n<td>Ctrl＋W</td>\n<td style=\"text-align:center\">可以选择单词继而语句继而行继而函数</td>\n</tr>\n<tr>\n<td>Alt＋F1</td>\n<td style=\"text-align:center\">可以将正在编辑的元素在各个面板中定位</td>\n</tr>\n<tr>\n<td>Ctrl＋P</td>\n<td style=\"text-align:center\">可以显示参数信息</td>\n</tr>\n<tr>\n<td>Ctrl＋Shift＋Insert</td>\n<td style=\"text-align:center\">可以选择剪贴板内容并插入</td>\n</tr>\n<tr>\n<td>Alt＋Insert</td>\n<td style=\"text-align:center\">可以生成构造器/Getter/Setter等</td>\n</tr>\n<tr>\n<td>Ctrl＋Alt＋V</td>\n<td style=\"text-align:center\">可以引入变量。例如把括号内的SQL赋成一个变量</td>\n</tr>\n<tr>\n<td>Ctrl＋Alt＋T</td>\n<td style=\"text-align:center\">可以把代码包在一块内，例如try/catch</td>\n</tr>\n<tr>\n<td>Alt＋Up and Alt＋Down</td>\n<td style=\"text-align:center\">可在方法间快速移动</td>\n</tr>\n<tr>\n<td>Esc</td>\n<td style=\"text-align:center\">该操作仅仅把光标移回编辑器。</td>\n</tr>\n<tr>\n<td>Shift + Esc</td>\n<td style=\"text-align:center\">该操作会关闭当前面板，然后把光标移回到编辑器</td>\n</tr>\n<tr>\n<td>Ctrl + F12</td>\n<td style=\"text-align:center\">展现当前类的大纲，并可以快速跳转</td>\n</tr>\n<tr>\n<td>Ctrl + Tab</td>\n<td style=\"text-align:center\">切换器,可以用来快速打开文件</td>\n</tr>\n<tr>\n<td>Alt + `</td>\n<td style=\"text-align:center\">版本控制操作弹窗</td>\n</tr>\n<tr>\n<td>Ctrl + Alt + M</td>\n<td style=\"text-align:center\">提取方法</td>\n</tr>\n<tr>\n<td>Ctrl + Alt + P</td>\n<td style=\"text-align:center\">提取参数</td>\n</tr>\n<tr>\n<td>Ctrl + Shift + J</td>\n<td style=\"text-align:center\">合并行和文本</td>\n</tr>\n<tr>\n<td>Ctrl + J</td>\n<td style=\"text-align:center\">动态模版，非常好用</td>\n</tr>\n<tr>\n<td>Ctrl + Shift + Up/Down</td>\n<td style=\"text-align:center\">上下移动方法</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a>\n<h3 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h3><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th style=\"text-align:center\">用途描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl + Shift + F12</td>\n<td style=\"text-align:center\">隐藏所有面板</td>\n</tr>\n<tr>\n<td>Ctrl + Shift + “+”/ “-“</td>\n<td style=\"text-align:center\">展开/折叠代码</td>\n</tr>\n<tr>\n<td>Alt+回车</td>\n<td style=\"text-align:center\">导入包,自动修正</td>\n</tr>\n<tr>\n<td>Ctrl+N</td>\n<td style=\"text-align:center\">查找类</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+N</td>\n<td style=\"text-align:center\">查找文件</td>\n</tr>\n<tr>\n<td>Ctrl+Alt+O</td>\n<td style=\"text-align:center\">优化导入的类和包</td>\n</tr>\n<tr>\n<td>Alt+Insert</td>\n<td style=\"text-align:center\">生成代码(如get,set方法,构造函数等)</td>\n</tr>\n<tr>\n<td>Ctrl+E或者Alt+Shift+C</td>\n<td style=\"text-align:center\">最近访问的文件</td>\n</tr>\n<tr>\n<td>Ctrl+shift+E</td>\n<td style=\"text-align:center\">打开最近修改的文件</td>\n</tr>\n<tr>\n<td>Ctrl+R</td>\n<td style=\"text-align:center\">替换文本</td>\n</tr>\n<tr>\n<td>Ctrl+F</td>\n<td style=\"text-align:center\">查找文本</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Space</td>\n<td style=\"text-align:center\">自动补全代码</td>\n</tr>\n<tr>\n<td>Ctrl+空格</td>\n<td style=\"text-align:center\">代码提示</td>\n</tr>\n<tr>\n<td>Ctrl+Alt+Space</td>\n<td style=\"text-align:center\">类名或接口名提示</td>\n</tr>\n<tr>\n<td>Ctrl+P</td>\n<td style=\"text-align:center\">方法参数提示</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Alt+N</td>\n<td style=\"text-align:center\">查找类中的方法或变量</td>\n</tr>\n<tr>\n<td>Alt+Shift+C</td>\n<td style=\"text-align:center\">对比最近修改的代码</td>\n</tr>\n<tr>\n<td>Shift+F6</td>\n<td style=\"text-align:center\">重构-重命名</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Up/Down</td>\n<td style=\"text-align:center\">上下移动本行代码</td>\n</tr>\n<tr>\n<td>Ctrl+X</td>\n<td style=\"text-align:center\">剪切行</td>\n</tr>\n<tr>\n<td>Ctrl+Y</td>\n<td style=\"text-align:center\">删除行</td>\n</tr>\n<tr>\n<td>Ctrl+D</td>\n<td style=\"text-align:center\">复制行</td>\n</tr>\n<tr>\n<td>Ctrl+/ 或 Ctrl+Shift+/</td>\n<td style=\"text-align:center\">注释（// 或者 /**/）</td>\n</tr>\n<tr>\n<td>Ctrl+J</td>\n<td style=\"text-align:center\">自动代码</td>\n</tr>\n<tr>\n<td>Ctrl+E</td>\n<td style=\"text-align:center\">最近访问的文件</td>\n</tr>\n<tr>\n<td>Ctrl+H</td>\n<td style=\"text-align:center\">显示类结构图</td>\n</tr>\n<tr>\n<td>Ctrl+Q</td>\n<td style=\"text-align:center\">显示注释文档</td>\n</tr>\n<tr>\n<td>Alt+F1</td>\n<td style=\"text-align:center\">查找代码所在位置</td>\n</tr>\n<tr>\n<td>Alt+1</td>\n<td style=\"text-align:center\">快速打开或隐藏工程面板</td>\n</tr>\n<tr>\n<td>Ctrl+Alt+ left/right</td>\n<td style=\"text-align:center\">返回至上次浏览的位置</td>\n</tr>\n<tr>\n<td>Alt+ left/right</td>\n<td style=\"text-align:center\">切换代码视图</td>\n</tr>\n<tr>\n<td>Alt+ Up/Down</td>\n<td style=\"text-align:center\">在方法间快速移动定位</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Up/Down</td>\n<td style=\"text-align:center\">代码向上/下移动</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"使用技巧\"><a href=\"#使用技巧\" class=\"headerlink\" title=\"使用技巧\"></a>使用技巧</h3><h4 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h4><ul>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzA3ODY0MzEyMA==&amp;mid=2657236292&amp;idx=1&amp;sn=7584243ad7f7559d42410eda4468b01c&amp;scene=0#wechat_redirect\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<h4 id=\"书签\"><a href=\"#书签\" class=\"headerlink\" title=\"书签\"></a>书签</h4><ul>\n<li><p>添加/移除书签：F3(OS X) 、F11(Windows/Linux);</p>\n</li>\n<li><p>添加/移除书签(带标记)：Alt + F3(OS X)、Ctrl + F11(Windows/Linux);</p>\n</li>\n<li><p>显示全部书签：Cmd + F3(OS X) 、Shift + F11(Windows/Linux)，显示所有的书签列表，并且是可以搜索的</p>\n</li>\n<li><p>上一个/下一个书签：无，可以在设置中设置快捷键</p>\n</li>\n<li><p>更多：当你为某个书签指定了标记，你可以使用快捷键 Ctrl + 标记 来快速跳转到标记处，比如输入Ctrl + 1，跳到标记为1的书签处</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A71.gif\" alt=\"\"></center>\n\n<h4 id=\"与分支比对\"><a href=\"#与分支比对\" class=\"headerlink\" title=\"与分支比对\"></a>与分支比对</h4><ul>\n<li><p>描述：假如你的项目是使用git来管理的，你可以将当前文件或者文件夹与其他的分支进行比对。比较有用的是可以让你了解到你与主分支有多少差别。</p>\n</li>\n<li><p>调用：Menu → VCS → Git → Compare With Branch</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A72.gif\" alt=\"\"></center>\n\n<h4 id=\"在外部打开文件\"><a href=\"#在外部打开文件\" class=\"headerlink\" title=\"在外部打开文件\"></a>在外部打开文件</h4><ul>\n<li><p>描述：通过这个快捷键，简单地点击Tab，就可以打开当前文件所在的位置或者该文件的任意上层路径。</p>\n</li>\n<li><p>快捷键：Cmd + 单击Tab(OS X)、Ctrl + 点击Tab(Windows/Linux);</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A73.gif\" alt=\"\"></center>\n\n<h4 id=\"Select-In\"><a href=\"#Select-In\" class=\"headerlink\" title=\"Select In\"></a>Select In</h4><ul>\n<li><p>描述：拿着当前文件然后问你在哪里选中该文件。恕我直言，最有用的就是在项目结构或者资源管理器中打开 该文件。每一个操作都有数字或者字母作为前缀，可以通过这个前缀来快速跳转。通常，我会 Alt + F1 然后 回车(Enter) 来打开项目视图，然后 再用 Alt + F1 在OS X的Finder里找到文件。你可以在文件中或者直接在项目视图里使用该操作</p>\n</li>\n<li><p>快捷键：Alt + F1</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A74.gif\" alt=\"\"></center>\n\n\n<h4 id=\"Sublime-Text式的多处选择\"><a href=\"#Sublime-Text式的多处选择\" class=\"headerlink\" title=\"Sublime Text式的多处选择\"></a>Sublime Text式的多处选择</h4><ul>\n<li><p>描述：这个功能超级赞！该操作会识别当前选中字符串，选择下一个同样的字符串，并且添加一个光标。这意味着你可以在同一个文件里拥有多个光标，你可以同时在所有光标处输入任何东西</p>\n</li>\n<li><p>快捷键：Ctrl + G(OS X)、Alt + Ｊ（Windows、Linux）</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A75.gif\" alt=\"\"></center>\n\n<h4 id=\"编写正则表达式\"><a href=\"#编写正则表达式\" class=\"headerlink\" title=\"编写正则表达式\"></a>编写正则表达式</h4><ul>\n<li><p>描述：使用Java编写正则表达式是一件很困难的事，主要原因是：</p>\n</li>\n<li><p>你必须得避开反斜杠；</p>\n</li>\n<li><p>说实话，正则很难；</p>\n</li>\n<li><p>看第二条。</p>\n</li>\n<li><p>IDE能帮我们干点啥呢？当然是一个舒服的界面来编写和测试正则啦~ - 快捷键：Alt + Enter → check regexp</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A76.gif\" alt=\"\"></center>\n\n<h4 id=\"使用Enter和Tab进行代码补全的差别\"><a href=\"#使用Enter和Tab进行代码补全的差别\" class=\"headerlink\" title=\"使用Enter和Tab进行代码补全的差别\"></a>使用Enter和Tab进行代码补全的差别</h4><ul>\n<li><p>描述：代码补全时，可以使用Enter或Tab来进行补全操作，但是两者是有差别的</p>\n</li>\n<li><p>使用Enter时：从光标处插入补全的代码，对原来的代码不做任何操作</p>\n</li>\n<li><p>使用Tab时：从光标处插入补全的代码，并删除后面的代码，直到遇到点号、圆括号、分号或空格为止</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A77.gif\" alt=\"\"></center>\n\n<h4 id=\"提取变量\"><a href=\"#提取变量\" class=\"headerlink\" title=\"提取变量\"></a>提取变量</h4><ul>\n<li><p>描述：这是一个提取变量的快捷操作。当你在没有写变量声明的直接写下值的时候，这是一个很方便生成变量声明的操作，同时还会给出一个建议的变量命名</p>\n</li>\n<li><p>调用：Menu → Refactor → Extract → Variable</p>\n</li>\n<li><p>快捷键：Cmd + Alt + V(OS X)、Ctrl + Alt + V(Windows/Linux)；</p>\n</li>\n<li><p>更多：当你需要改变变量声明的类型，例如使用 List 替代 ArrayList，可以按下Shift + Tab，就会显示所有可用的变量类型</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A78.gif\" alt=\"\"></center>\n\n<h4 id=\"取反补全\"><a href=\"#取反补全\" class=\"headerlink\" title=\"取反补全\"></a>取反补全</h4><ul>\n<li><p>描述：有时你自动补全一个布尔值，然后回到该值的前面添加一个感叹号来完成取反操作，现在通过使用输入!代替enter完成补全操作，就可以跳过这些繁琐的操作了</p>\n</li>\n<li><p>快捷键：代码补全的时候，按下!即可（有时需要上下键选中候选项）</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A79.gif\" alt=\"\"></center>\n\n<h4 id=\"包裹代码\"><a href=\"#包裹代码\" class=\"headerlink\" title=\"包裹代码\"></a>包裹代码</h4><ul>\n<li><p>描述： 该操作可以用特定代码结构包裹住选中的代码块，通常是if语句，循环，try/catch语句或者runnable语句。 如果你没有选中任何东西，该操作会包裹当前一整行</p>\n</li>\n<li><p>快捷键：Cmd + Alt + T(OS X)、Ctrl + Alt + T(Windows/Linux)</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A710.gif\" alt=\"\"></center>\n\n<h4 id=\"移除包裹代码\"><a href=\"#移除包裹代码\" class=\"headerlink\" title=\"移除包裹代码\"></a>移除包裹代码</h4><ul>\n<li><p>描述：该操作会移除周围的代码，它可能是一条if语句，一个while循环，一个try/catch语句甚至是一个runnable语句。该操作恰恰和包裹代码（Surround With）相反</p>\n</li>\n<li><p>快捷键：Cmd + Shift + Delete(OS X)、Ctrl + Shift + Delete(Windows/Linux)</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A711.gif\" alt=\"\"></center>\n","excerpt":"<h3 id=\"最常用快捷键\"><a href=\"#最常用快捷键\" class=\"headerlink\" title=\"最常用快捷键\"></a>最常用快捷键</h3><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th style=\"text-align:center\">用途描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ctrl+k</td>\n<td style=\"text-align:center\">commit到版本控制软件</td>\n</tr>\n<tr>\n<td>ctrl+shift+K</td>\n<td style=\"text-align:center\">push到远程仓库</td>\n</tr>\n<tr>\n<td>ctrl+T</td>\n<td style=\"text-align:center\">拉取版本到本地</td>\n</tr>\n<tr>\n<td>shift+F10</td>\n<td style=\"text-align:center\">部署到模拟器运行</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Space</td>\n<td style=\"text-align:center\">自动补全代码</td>\n</tr>\n<tr>\n<td>Ctrl+Alt+L</td>\n<td style=\"text-align:center\">格式化代码</td>\n</tr>\n<tr>\n<td>Ctrl + Shift + I</td>\n<td style=\"text-align:center\">快速查看定义</td>\n</tr>\n<tr>\n<td>Ctrl＋E</td>\n<td style=\"text-align:center\">可以显示最近编辑的文件列表</td>\n</tr>\n<tr>\n<td>Shift＋Click</td>\n<td style=\"text-align:center\">可以关闭文件</td>\n</tr>\n<tr>\n<td>Ctrl＋[或]</td>\n<td style=\"text-align:center\">可以跳到大括号的开头结尾</td>\n</tr>\n<tr>\n<td>Ctrl＋Shift＋Backspace</td>\n<td style=\"text-align:center\">可以跳转到上次编辑的地方</td>\n</tr>\n<tr>\n<td>Ctrl＋F12</td>\n<td style=\"text-align:center\">可以显示当前文件的结构</td>\n</tr>\n<tr>\n<td>Ctrl＋F7</td>\n<td style=\"text-align:center\">可以查询当前元素在当前文件中的引用，然后按F3可以选择</td>\n</tr>\n<tr>\n<td>Ctrl＋N</td>\n<td style=\"text-align:center\">可以快速打开类</td>\n</tr>\n<tr>\n<td>Ctrl＋Shift＋N</td>\n<td style=\"text-align:center\">可以快速打开文件</td>\n</tr>\n<tr>\n<td>Alt＋Q</td>\n<td style=\"text-align:center\">可以看到当前方法的声明</td>\n</tr>\n<tr>\n<td>Ctrl＋W</td>\n<td style=\"text-align:center\">可以选择单词继而语句继而行继而函数</td>\n</tr>\n<tr>\n<td>Alt＋F1</td>\n<td style=\"text-align:center\">可以将正在编辑的元素在各个面板中定位</td>\n</tr>\n<tr>\n<td>Ctrl＋P</td>\n<td style=\"text-align:center\">可以显示参数信息</td>\n</tr>\n<tr>\n<td>Ctrl＋Shift＋Insert</td>\n<td style=\"text-align:center\">可以选择剪贴板内容并插入</td>\n</tr>\n<tr>\n<td>Alt＋Insert</td>\n<td style=\"text-align:center\">可以生成构造器/Getter/Setter等</td>\n</tr>\n<tr>\n<td>Ctrl＋Alt＋V</td>\n<td style=\"text-align:center\">可以引入变量。例如把括号内的SQL赋成一个变量</td>\n</tr>\n<tr>\n<td>Ctrl＋Alt＋T</td>\n<td style=\"text-align:center\">可以把代码包在一块内，例如try/catch</td>\n</tr>\n<tr>\n<td>Alt＋Up and Alt＋Down</td>\n<td style=\"text-align:center\">可在方法间快速移动</td>\n</tr>\n<tr>\n<td>Esc</td>\n<td style=\"text-align:center\">该操作仅仅把光标移回编辑器。</td>\n</tr>\n<tr>\n<td>Shift + Esc</td>\n<td style=\"text-align:center\">该操作会关闭当前面板，然后把光标移回到编辑器</td>\n</tr>\n<tr>\n<td>Ctrl + F12</td>\n<td style=\"text-align:center\">展现当前类的大纲，并可以快速跳转</td>\n</tr>\n<tr>\n<td>Ctrl + Tab</td>\n<td style=\"text-align:center\">切换器,可以用来快速打开文件</td>\n</tr>\n<tr>\n<td>Alt + `</td>\n<td style=\"text-align:center\">版本控制操作弹窗</td>\n</tr>\n<tr>\n<td>Ctrl + Alt + M</td>\n<td style=\"text-align:center\">提取方法</td>\n</tr>\n<tr>\n<td>Ctrl + Alt + P</td>\n<td style=\"text-align:center\">提取参数</td>\n</tr>\n<tr>\n<td>Ctrl + Shift + J</td>\n<td style=\"text-align:center\">合并行和文本</td>\n</tr>\n<tr>\n<td>Ctrl + J</td>\n<td style=\"text-align:center\">动态模版，非常好用</td>\n</tr>\n<tr>\n<td>Ctrl + Shift + Up/Down</td>\n<td style=\"text-align:center\">上下移动方法</td>\n</tr>\n</tbody>\n</table>","more":"<h3 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h3><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th style=\"text-align:center\">用途描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl + Shift + F12</td>\n<td style=\"text-align:center\">隐藏所有面板</td>\n</tr>\n<tr>\n<td>Ctrl + Shift + “+”/ “-“</td>\n<td style=\"text-align:center\">展开/折叠代码</td>\n</tr>\n<tr>\n<td>Alt+回车</td>\n<td style=\"text-align:center\">导入包,自动修正</td>\n</tr>\n<tr>\n<td>Ctrl+N</td>\n<td style=\"text-align:center\">查找类</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+N</td>\n<td style=\"text-align:center\">查找文件</td>\n</tr>\n<tr>\n<td>Ctrl+Alt+O</td>\n<td style=\"text-align:center\">优化导入的类和包</td>\n</tr>\n<tr>\n<td>Alt+Insert</td>\n<td style=\"text-align:center\">生成代码(如get,set方法,构造函数等)</td>\n</tr>\n<tr>\n<td>Ctrl+E或者Alt+Shift+C</td>\n<td style=\"text-align:center\">最近访问的文件</td>\n</tr>\n<tr>\n<td>Ctrl+shift+E</td>\n<td style=\"text-align:center\">打开最近修改的文件</td>\n</tr>\n<tr>\n<td>Ctrl+R</td>\n<td style=\"text-align:center\">替换文本</td>\n</tr>\n<tr>\n<td>Ctrl+F</td>\n<td style=\"text-align:center\">查找文本</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Space</td>\n<td style=\"text-align:center\">自动补全代码</td>\n</tr>\n<tr>\n<td>Ctrl+空格</td>\n<td style=\"text-align:center\">代码提示</td>\n</tr>\n<tr>\n<td>Ctrl+Alt+Space</td>\n<td style=\"text-align:center\">类名或接口名提示</td>\n</tr>\n<tr>\n<td>Ctrl+P</td>\n<td style=\"text-align:center\">方法参数提示</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Alt+N</td>\n<td style=\"text-align:center\">查找类中的方法或变量</td>\n</tr>\n<tr>\n<td>Alt+Shift+C</td>\n<td style=\"text-align:center\">对比最近修改的代码</td>\n</tr>\n<tr>\n<td>Shift+F6</td>\n<td style=\"text-align:center\">重构-重命名</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Up/Down</td>\n<td style=\"text-align:center\">上下移动本行代码</td>\n</tr>\n<tr>\n<td>Ctrl+X</td>\n<td style=\"text-align:center\">剪切行</td>\n</tr>\n<tr>\n<td>Ctrl+Y</td>\n<td style=\"text-align:center\">删除行</td>\n</tr>\n<tr>\n<td>Ctrl+D</td>\n<td style=\"text-align:center\">复制行</td>\n</tr>\n<tr>\n<td>Ctrl+/ 或 Ctrl+Shift+/</td>\n<td style=\"text-align:center\">注释（// 或者 /**/）</td>\n</tr>\n<tr>\n<td>Ctrl+J</td>\n<td style=\"text-align:center\">自动代码</td>\n</tr>\n<tr>\n<td>Ctrl+E</td>\n<td style=\"text-align:center\">最近访问的文件</td>\n</tr>\n<tr>\n<td>Ctrl+H</td>\n<td style=\"text-align:center\">显示类结构图</td>\n</tr>\n<tr>\n<td>Ctrl+Q</td>\n<td style=\"text-align:center\">显示注释文档</td>\n</tr>\n<tr>\n<td>Alt+F1</td>\n<td style=\"text-align:center\">查找代码所在位置</td>\n</tr>\n<tr>\n<td>Alt+1</td>\n<td style=\"text-align:center\">快速打开或隐藏工程面板</td>\n</tr>\n<tr>\n<td>Ctrl+Alt+ left/right</td>\n<td style=\"text-align:center\">返回至上次浏览的位置</td>\n</tr>\n<tr>\n<td>Alt+ left/right</td>\n<td style=\"text-align:center\">切换代码视图</td>\n</tr>\n<tr>\n<td>Alt+ Up/Down</td>\n<td style=\"text-align:center\">在方法间快速移动定位</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+Up/Down</td>\n<td style=\"text-align:center\">代码向上/下移动</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"使用技巧\"><a href=\"#使用技巧\" class=\"headerlink\" title=\"使用技巧\"></a>使用技巧</h3><h4 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h4><ul>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzA3ODY0MzEyMA==&amp;mid=2657236292&amp;idx=1&amp;sn=7584243ad7f7559d42410eda4468b01c&amp;scene=0#wechat_redirect\">传送门</a></li>\n</ul>\n<h4 id=\"书签\"><a href=\"#书签\" class=\"headerlink\" title=\"书签\"></a>书签</h4><ul>\n<li><p>添加/移除书签：F3(OS X) 、F11(Windows/Linux);</p>\n</li>\n<li><p>添加/移除书签(带标记)：Alt + F3(OS X)、Ctrl + F11(Windows/Linux);</p>\n</li>\n<li><p>显示全部书签：Cmd + F3(OS X) 、Shift + F11(Windows/Linux)，显示所有的书签列表，并且是可以搜索的</p>\n</li>\n<li><p>上一个/下一个书签：无，可以在设置中设置快捷键</p>\n</li>\n<li><p>更多：当你为某个书签指定了标记，你可以使用快捷键 Ctrl + 标记 来快速跳转到标记处，比如输入Ctrl + 1，跳到标记为1的书签处</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A71.gif\" alt=\"\"></center>\n\n<h4 id=\"与分支比对\"><a href=\"#与分支比对\" class=\"headerlink\" title=\"与分支比对\"></a>与分支比对</h4><ul>\n<li><p>描述：假如你的项目是使用git来管理的，你可以将当前文件或者文件夹与其他的分支进行比对。比较有用的是可以让你了解到你与主分支有多少差别。</p>\n</li>\n<li><p>调用：Menu → VCS → Git → Compare With Branch</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A72.gif\" alt=\"\"></center>\n\n<h4 id=\"在外部打开文件\"><a href=\"#在外部打开文件\" class=\"headerlink\" title=\"在外部打开文件\"></a>在外部打开文件</h4><ul>\n<li><p>描述：通过这个快捷键，简单地点击Tab，就可以打开当前文件所在的位置或者该文件的任意上层路径。</p>\n</li>\n<li><p>快捷键：Cmd + 单击Tab(OS X)、Ctrl + 点击Tab(Windows/Linux);</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A73.gif\" alt=\"\"></center>\n\n<h4 id=\"Select-In\"><a href=\"#Select-In\" class=\"headerlink\" title=\"Select In\"></a>Select In</h4><ul>\n<li><p>描述：拿着当前文件然后问你在哪里选中该文件。恕我直言，最有用的就是在项目结构或者资源管理器中打开 该文件。每一个操作都有数字或者字母作为前缀，可以通过这个前缀来快速跳转。通常，我会 Alt + F1 然后 回车(Enter) 来打开项目视图，然后 再用 Alt + F1 在OS X的Finder里找到文件。你可以在文件中或者直接在项目视图里使用该操作</p>\n</li>\n<li><p>快捷键：Alt + F1</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A74.gif\" alt=\"\"></center>\n\n\n<h4 id=\"Sublime-Text式的多处选择\"><a href=\"#Sublime-Text式的多处选择\" class=\"headerlink\" title=\"Sublime Text式的多处选择\"></a>Sublime Text式的多处选择</h4><ul>\n<li><p>描述：这个功能超级赞！该操作会识别当前选中字符串，选择下一个同样的字符串，并且添加一个光标。这意味着你可以在同一个文件里拥有多个光标，你可以同时在所有光标处输入任何东西</p>\n</li>\n<li><p>快捷键：Ctrl + G(OS X)、Alt + Ｊ（Windows、Linux）</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A75.gif\" alt=\"\"></center>\n\n<h4 id=\"编写正则表达式\"><a href=\"#编写正则表达式\" class=\"headerlink\" title=\"编写正则表达式\"></a>编写正则表达式</h4><ul>\n<li><p>描述：使用Java编写正则表达式是一件很困难的事，主要原因是：</p>\n</li>\n<li><p>你必须得避开反斜杠；</p>\n</li>\n<li><p>说实话，正则很难；</p>\n</li>\n<li><p>看第二条。</p>\n</li>\n<li><p>IDE能帮我们干点啥呢？当然是一个舒服的界面来编写和测试正则啦~ - 快捷键：Alt + Enter → check regexp</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A76.gif\" alt=\"\"></center>\n\n<h4 id=\"使用Enter和Tab进行代码补全的差别\"><a href=\"#使用Enter和Tab进行代码补全的差别\" class=\"headerlink\" title=\"使用Enter和Tab进行代码补全的差别\"></a>使用Enter和Tab进行代码补全的差别</h4><ul>\n<li><p>描述：代码补全时，可以使用Enter或Tab来进行补全操作，但是两者是有差别的</p>\n</li>\n<li><p>使用Enter时：从光标处插入补全的代码，对原来的代码不做任何操作</p>\n</li>\n<li><p>使用Tab时：从光标处插入补全的代码，并删除后面的代码，直到遇到点号、圆括号、分号或空格为止</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A77.gif\" alt=\"\"></center>\n\n<h4 id=\"提取变量\"><a href=\"#提取变量\" class=\"headerlink\" title=\"提取变量\"></a>提取变量</h4><ul>\n<li><p>描述：这是一个提取变量的快捷操作。当你在没有写变量声明的直接写下值的时候，这是一个很方便生成变量声明的操作，同时还会给出一个建议的变量命名</p>\n</li>\n<li><p>调用：Menu → Refactor → Extract → Variable</p>\n</li>\n<li><p>快捷键：Cmd + Alt + V(OS X)、Ctrl + Alt + V(Windows/Linux)；</p>\n</li>\n<li><p>更多：当你需要改变变量声明的类型，例如使用 List 替代 ArrayList，可以按下Shift + Tab，就会显示所有可用的变量类型</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A78.gif\" alt=\"\"></center>\n\n<h4 id=\"取反补全\"><a href=\"#取反补全\" class=\"headerlink\" title=\"取反补全\"></a>取反补全</h4><ul>\n<li><p>描述：有时你自动补全一个布尔值，然后回到该值的前面添加一个感叹号来完成取反操作，现在通过使用输入!代替enter完成补全操作，就可以跳过这些繁琐的操作了</p>\n</li>\n<li><p>快捷键：代码补全的时候，按下!即可（有时需要上下键选中候选项）</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A79.gif\" alt=\"\"></center>\n\n<h4 id=\"包裹代码\"><a href=\"#包裹代码\" class=\"headerlink\" title=\"包裹代码\"></a>包裹代码</h4><ul>\n<li><p>描述： 该操作可以用特定代码结构包裹住选中的代码块，通常是if语句，循环，try/catch语句或者runnable语句。 如果你没有选中任何东西，该操作会包裹当前一整行</p>\n</li>\n<li><p>快捷键：Cmd + Alt + T(OS X)、Ctrl + Alt + T(Windows/Linux)</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A710.gif\" alt=\"\"></center>\n\n<h4 id=\"移除包裹代码\"><a href=\"#移除包裹代码\" class=\"headerlink\" title=\"移除包裹代码\"></a>移除包裹代码</h4><ul>\n<li><p>描述：该操作会移除周围的代码，它可能是一条if语句，一个while循环，一个try/catch语句甚至是一个runnable语句。该操作恰恰和包裹代码（Surround With）相反</p>\n</li>\n<li><p>快捷键：Cmd + Shift + Delete(OS X)、Ctrl + Shift + Delete(Windows/Linux)</p>\n</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A711.gif\" alt=\"\"></center>"},{"title":" CPU是AMD的电脑如何安装android studio，以及studio的环境变量的配置","date":"2015-05-31T18:04:43.000Z","_content":"### AMD的电脑###\n\n我的电脑的CPU是AMD的，当初买的时候没想那么多，可是到后来才知道有那么多的问题，最近遇到的一个最大的问题就是  Android studio的安装了，先前是studio一直安装不好，后来才发现环境变量配置错误，和以前安装jdk的环境变量的时候有一点点的区别，但就是这一点点的区别搞得我焦头烂额，后来试了很多种方法终于找出了错误，后来又出现了如下错误：\n\n```cpp\n   emulator: ERROR: x86 emulation currently requires hardware acceleration!\n\n   Please ensure Intel HAXM is properly installed and usable.\n\n   CPU acceleration status: HAX kernel module is not installed!\n                              \n```\n\n到现在我才知道原来硬件是硬伤，所以就找解决的方法，接下来我就分两点把环境变量的配置和如何解决AMD没有HAXM的功能。\n\n<!-- more -->\n\n### android studio的环境变量配置###\n\n 例如：D:\\develop\\JDK\\JDK\\JDK\\bin ，但是我在我的电脑上这样配置就会出现闪退，android studio得界面刚出来一下就没了，而且打开任务管理器也看到studio闪一下就没了，后来我又把环境变量换成D:\\develop\\JDK\\JDK\\JDK，注意：这里没有bin，但是发现还是一样的，后来我又把JAVA_HOME中的其他的路径全部移动到path路径中，只留下一个D:\\develop\\JDK\\JDK\\JDK路径，后来发现成功了，所以在JAVA_HOME中只设置JDK的安装目录就是可以的，注意：没有bin。\n \n- 绝对路径法：即JDK的环境变量的配置全部使用绝对路径。是最简单的配置方法。\npath=C:\\Program Files (x86)\\Java\\jdk1.7.0_45\\bin;C:\\Program Files (x86)\\Java\\jdk1.7.0_45\\jre\\bin\n\n- JAVA_HOME法：这是最常见的配置方法，改动比较方便，较为灵活。也可以理解为相对路径。\nJAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_45\npath中=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\n\n- 完整法：是在JAVA_HOME方法的基础上增加了classpath.在某些使用过程中可能会使用到classpath来寻找路径.推荐使用这种方式。\nJAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_45\npath=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\nclasspath=,;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar（注意：classpath要以.;开头。英文状态下的“点  分号”）\n \n### 安装Genymotion###\n\n\n- 配置AMD的CPU的电脑如何跳过HAXM 加速功能直接可以运行模拟器：如果我们的电脑是搭载的AMD的CPU的话，启动模拟器和运行程序的时候会出现一个安装intel 的HAXM  加速功能的错误，但是我们的CPU不是intel的怎么办？\n\n   答案是我们可以使用外置的模拟器，我们先下载一个genymotion模拟器，[传送门](http://jingyan.baidu.com/article/3ea51489e7d8bd52e61bba36.html ) ，这个是百度教程如何下载和安装genymotion模拟器，安装完毕之后我们就要把genymotion模拟器安装到我们的android studio中了，具体的方法也很简单，[传送门](http://blog.csdn.net/hyr83960944/article/details/35987721) ，这个是 将genymotion插件安装进studio的方法，[传送门](http://blog.csdn.net/hyr83960944/article/details/37900383) ，然后在用这个连接中的方法将模拟器配置进入我们的studio，接着我们就可以启动我们先前安装好的genymotion了，然后我们再在我们的studio中运行我们的项目，选择正在运行的genymotion模拟器，然后我们就会在模拟器上看到我们兴奋的界面了，是不是很容易啊。\n   \n![genymotion](http://img.blog.csdn.net/20150920120640647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center \"运行成功的genymotion\")","source":"_posts/AndroidStudio/CPU是AMD的电脑如何安装android-studio，以及studio的环境变量的配置.md","raw":"---\ntitle: ' CPU是AMD的电脑如何安装android studio，以及studio的环境变量的配置'\ndate: 2015-05-31 18:04:43\ntags: AndroidStudio\ncategories: AndroidStudio\n---\n### AMD的电脑###\n\n我的电脑的CPU是AMD的，当初买的时候没想那么多，可是到后来才知道有那么多的问题，最近遇到的一个最大的问题就是  Android studio的安装了，先前是studio一直安装不好，后来才发现环境变量配置错误，和以前安装jdk的环境变量的时候有一点点的区别，但就是这一点点的区别搞得我焦头烂额，后来试了很多种方法终于找出了错误，后来又出现了如下错误：\n\n```cpp\n   emulator: ERROR: x86 emulation currently requires hardware acceleration!\n\n   Please ensure Intel HAXM is properly installed and usable.\n\n   CPU acceleration status: HAX kernel module is not installed!\n                              \n```\n\n到现在我才知道原来硬件是硬伤，所以就找解决的方法，接下来我就分两点把环境变量的配置和如何解决AMD没有HAXM的功能。\n\n<!-- more -->\n\n### android studio的环境变量配置###\n\n 例如：D:\\develop\\JDK\\JDK\\JDK\\bin ，但是我在我的电脑上这样配置就会出现闪退，android studio得界面刚出来一下就没了，而且打开任务管理器也看到studio闪一下就没了，后来我又把环境变量换成D:\\develop\\JDK\\JDK\\JDK，注意：这里没有bin，但是发现还是一样的，后来我又把JAVA_HOME中的其他的路径全部移动到path路径中，只留下一个D:\\develop\\JDK\\JDK\\JDK路径，后来发现成功了，所以在JAVA_HOME中只设置JDK的安装目录就是可以的，注意：没有bin。\n \n- 绝对路径法：即JDK的环境变量的配置全部使用绝对路径。是最简单的配置方法。\npath=C:\\Program Files (x86)\\Java\\jdk1.7.0_45\\bin;C:\\Program Files (x86)\\Java\\jdk1.7.0_45\\jre\\bin\n\n- JAVA_HOME法：这是最常见的配置方法，改动比较方便，较为灵活。也可以理解为相对路径。\nJAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_45\npath中=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\n\n- 完整法：是在JAVA_HOME方法的基础上增加了classpath.在某些使用过程中可能会使用到classpath来寻找路径.推荐使用这种方式。\nJAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_45\npath=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\nclasspath=,;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar（注意：classpath要以.;开头。英文状态下的“点  分号”）\n \n### 安装Genymotion###\n\n\n- 配置AMD的CPU的电脑如何跳过HAXM 加速功能直接可以运行模拟器：如果我们的电脑是搭载的AMD的CPU的话，启动模拟器和运行程序的时候会出现一个安装intel 的HAXM  加速功能的错误，但是我们的CPU不是intel的怎么办？\n\n   答案是我们可以使用外置的模拟器，我们先下载一个genymotion模拟器，[传送门](http://jingyan.baidu.com/article/3ea51489e7d8bd52e61bba36.html ) ，这个是百度教程如何下载和安装genymotion模拟器，安装完毕之后我们就要把genymotion模拟器安装到我们的android studio中了，具体的方法也很简单，[传送门](http://blog.csdn.net/hyr83960944/article/details/35987721) ，这个是 将genymotion插件安装进studio的方法，[传送门](http://blog.csdn.net/hyr83960944/article/details/37900383) ，然后在用这个连接中的方法将模拟器配置进入我们的studio，接着我们就可以启动我们先前安装好的genymotion了，然后我们再在我们的studio中运行我们的项目，选择正在运行的genymotion模拟器，然后我们就会在模拟器上看到我们兴奋的界面了，是不是很容易啊。\n   \n![genymotion](http://img.blog.csdn.net/20150920120640647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center \"运行成功的genymotion\")","slug":"AndroidStudio/CPU是AMD的电脑如何安装android-studio，以及studio的环境变量的配置","published":1,"updated":"2016-06-21T06:22:21.368Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qhb000xkgae6wdwse7v","content":"<h3 id=\"AMD的电脑\"><a href=\"#AMD的电脑\" class=\"headerlink\" title=\"AMD的电脑\"></a>AMD的电脑</h3><p>我的电脑的CPU是AMD的，当初买的时候没想那么多，可是到后来才知道有那么多的问题，最近遇到的一个最大的问题就是  Android studio的安装了，先前是studio一直安装不好，后来才发现环境变量配置错误，和以前安装jdk的环境变量的时候有一点点的区别，但就是这一点点的区别搞得我焦头烂额，后来试了很多种方法终于找出了错误，后来又出现了如下错误：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">emulator: ERROR: x86 emulation currently requires hardware acceleration!</span><br><span class=\"line\"></span><br><span class=\"line\">Please ensure Intel HAXM is properly installed and usable.</span><br><span class=\"line\"></span><br><span class=\"line\">CPU acceleration status: HAX kernel module is not installed!</span><br></pre></td></tr></table></figure>\n<p>到现在我才知道原来硬件是硬伤，所以就找解决的方法，接下来我就分两点把环境变量的配置和如何解决AMD没有HAXM的功能。</p>\n<a id=\"more\"></a>\n<h3 id=\"android-studio的环境变量配置\"><a href=\"#android-studio的环境变量配置\" class=\"headerlink\" title=\"android studio的环境变量配置\"></a>android studio的环境变量配置</h3><p> 例如：D:\\develop\\JDK\\JDK\\JDK\\bin ，但是我在我的电脑上这样配置就会出现闪退，android studio得界面刚出来一下就没了，而且打开任务管理器也看到studio闪一下就没了，后来我又把环境变量换成D:\\develop\\JDK\\JDK\\JDK，注意：这里没有bin，但是发现还是一样的，后来我又把JAVA_HOME中的其他的路径全部移动到path路径中，只留下一个D:\\develop\\JDK\\JDK\\JDK路径，后来发现成功了，所以在JAVA_HOME中只设置JDK的安装目录就是可以的，注意：没有bin。</p>\n<ul>\n<li><p>绝对路径法：即JDK的环境变量的配置全部使用绝对路径。是最简单的配置方法。<br>path=C:\\Program Files (x86)\\Java\\jdk1.7.0_45\\bin;C:\\Program Files (x86)\\Java\\jdk1.7.0_45\\jre\\bin</p>\n</li>\n<li><p>JAVA_HOME法：这是最常见的配置方法，改动比较方便，较为灵活。也可以理解为相对路径。<br>JAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_45<br>path中=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</p>\n</li>\n<li><p>完整法：是在JAVA_HOME方法的基础上增加了classpath.在某些使用过程中可能会使用到classpath来寻找路径.推荐使用这种方式。<br>JAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_45<br>path=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;<br>classpath=,;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar（注意：classpath要以.;开头。英文状态下的“点  分号”）</p>\n</li>\n</ul>\n<h3 id=\"安装Genymotion\"><a href=\"#安装Genymotion\" class=\"headerlink\" title=\"安装Genymotion\"></a>安装Genymotion</h3><ul>\n<li><p>配置AMD的CPU的电脑如何跳过HAXM 加速功能直接可以运行模拟器：如果我们的电脑是搭载的AMD的CPU的话，启动模拟器和运行程序的时候会出现一个安装intel 的HAXM  加速功能的错误，但是我们的CPU不是intel的怎么办？</p>\n<p> 答案是我们可以使用外置的模拟器，我们先下载一个genymotion模拟器，<a href=\"http://jingyan.baidu.com/article/3ea51489e7d8bd52e61bba36.html\" target=\"_blank\" rel=\"external\">传送门</a> ，这个是百度教程如何下载和安装genymotion模拟器，安装完毕之后我们就要把genymotion模拟器安装到我们的android studio中了，具体的方法也很简单，<a href=\"http://blog.csdn.net/hyr83960944/article/details/35987721\" target=\"_blank\" rel=\"external\">传送门</a> ，这个是 将genymotion插件安装进studio的方法，<a href=\"http://blog.csdn.net/hyr83960944/article/details/37900383\" target=\"_blank\" rel=\"external\">传送门</a> ，然后在用这个连接中的方法将模拟器配置进入我们的studio，接着我们就可以启动我们先前安装好的genymotion了，然后我们再在我们的studio中运行我们的项目，选择正在运行的genymotion模拟器，然后我们就会在模拟器上看到我们兴奋的界面了，是不是很容易啊。</p>\n</li>\n</ul>\n<p><img src=\"http://img.blog.csdn.net/20150920120640647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"genymotion\" title=\"运行成功的genymotion\"></p>\n","excerpt":"<h3 id=\"AMD的电脑\"><a href=\"#AMD的电脑\" class=\"headerlink\" title=\"AMD的电脑\"></a>AMD的电脑</h3><p>我的电脑的CPU是AMD的，当初买的时候没想那么多，可是到后来才知道有那么多的问题，最近遇到的一个最大的问题就是  Android studio的安装了，先前是studio一直安装不好，后来才发现环境变量配置错误，和以前安装jdk的环境变量的时候有一点点的区别，但就是这一点点的区别搞得我焦头烂额，后来试了很多种方法终于找出了错误，后来又出现了如下错误：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">emulator: ERROR: x86 emulation currently requires hardware acceleration!</span><br><span class=\"line\"></span><br><span class=\"line\">Please ensure Intel HAXM is properly installed and usable.</span><br><span class=\"line\"></span><br><span class=\"line\">CPU acceleration status: HAX kernel module is not installed!</span><br></pre></td></tr></table></figure>\n<p>到现在我才知道原来硬件是硬伤，所以就找解决的方法，接下来我就分两点把环境变量的配置和如何解决AMD没有HAXM的功能。</p>","more":"<h3 id=\"android-studio的环境变量配置\"><a href=\"#android-studio的环境变量配置\" class=\"headerlink\" title=\"android studio的环境变量配置\"></a>android studio的环境变量配置</h3><p> 例如：D:\\develop\\JDK\\JDK\\JDK\\bin ，但是我在我的电脑上这样配置就会出现闪退，android studio得界面刚出来一下就没了，而且打开任务管理器也看到studio闪一下就没了，后来我又把环境变量换成D:\\develop\\JDK\\JDK\\JDK，注意：这里没有bin，但是发现还是一样的，后来我又把JAVA_HOME中的其他的路径全部移动到path路径中，只留下一个D:\\develop\\JDK\\JDK\\JDK路径，后来发现成功了，所以在JAVA_HOME中只设置JDK的安装目录就是可以的，注意：没有bin。</p>\n<ul>\n<li><p>绝对路径法：即JDK的环境变量的配置全部使用绝对路径。是最简单的配置方法。<br>path=C:\\Program Files (x86)\\Java\\jdk1.7.0_45\\bin;C:\\Program Files (x86)\\Java\\jdk1.7.0_45\\jre\\bin</p>\n</li>\n<li><p>JAVA_HOME法：这是最常见的配置方法，改动比较方便，较为灵活。也可以理解为相对路径。<br>JAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_45<br>path中=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</p>\n</li>\n<li><p>完整法：是在JAVA_HOME方法的基础上增加了classpath.在某些使用过程中可能会使用到classpath来寻找路径.推荐使用这种方式。<br>JAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_45<br>path=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;<br>classpath=,;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar（注意：classpath要以.;开头。英文状态下的“点  分号”）</p>\n</li>\n</ul>\n<h3 id=\"安装Genymotion\"><a href=\"#安装Genymotion\" class=\"headerlink\" title=\"安装Genymotion\"></a>安装Genymotion</h3><ul>\n<li><p>配置AMD的CPU的电脑如何跳过HAXM 加速功能直接可以运行模拟器：如果我们的电脑是搭载的AMD的CPU的话，启动模拟器和运行程序的时候会出现一个安装intel 的HAXM  加速功能的错误，但是我们的CPU不是intel的怎么办？</p>\n<p> 答案是我们可以使用外置的模拟器，我们先下载一个genymotion模拟器，<a href=\"http://jingyan.baidu.com/article/3ea51489e7d8bd52e61bba36.html\">传送门</a> ，这个是百度教程如何下载和安装genymotion模拟器，安装完毕之后我们就要把genymotion模拟器安装到我们的android studio中了，具体的方法也很简单，<a href=\"http://blog.csdn.net/hyr83960944/article/details/35987721\">传送门</a> ，这个是 将genymotion插件安装进studio的方法，<a href=\"http://blog.csdn.net/hyr83960944/article/details/37900383\">传送门</a> ，然后在用这个连接中的方法将模拟器配置进入我们的studio，接着我们就可以启动我们先前安装好的genymotion了，然后我们再在我们的studio中运行我们的项目，选择正在运行的genymotion模拟器，然后我们就会在模拟器上看到我们兴奋的界面了，是不是很容易啊。</p>\n</li>\n</ul>\n<p><img src=\"http://img.blog.csdn.net/20150920120640647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"genymotion\" title=\"运行成功的genymotion\"></p>"},{"title":"Gneymotion无法启动和Oracle VM VirtualBox常见问题","date":"2016-06-01T14:44:14.000Z","_content":"### genymotion和VBOX下载\n\n- 可用的带VBOX的gemymotion [传送门](http://pan.baidu.com/s/1skWJGRV)\n\n\n- 有时候我们会遇到根源motion无法启动的问题，这里面有很大一部分原因是VirtualBox的配置问题，自从VirtualBox-4.3.12-93733-Win之后，就出现了很多的BUG，所以我们使用VirtualBox-4.3.12-93733-Win，下载地址：[传送门](http://pan.baidu.com/s/1dEn7kU9)\n\n### 模拟器无法安装应用###\n\n- 下图中模拟器无法安装应用，需要将一个包安装进模拟器就行，包的名字叫做Genymotion-ARM-Translation_v1.1，可以直接到我的百度云下载，[传送门](http://pan.baidu.com/s/1eRbZZF0) 直接将这个文件拖进模拟器的屏幕，然后重启就行\n\n<center>![](http://img.blog.csdn.net/20160309164544218?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n</br>\n\n### 不能创建虚拟主机###\n- 下图这个问题我们需要将虚拟机卸载一下，然后进去C:\\Users\\Administrator\\AppData\\Local下删除Genymobile文件夹和删除C:\\Users\\Administrator下的.VirtualBox\n就可以解决这个问题，还有就是这里有兼容性问题，如果是别的系统的话，建议使用win7兼容性模式运行\n\n<!-- more -->\n\n<center>![](http://img.blog.csdn.net/20160309165325580?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n</br>\n\n### Unable to start the virtual device###\n\n#### 配置全局网络配置####\n- 出现这个问题是我们的虚拟机的网络配置有问题，我们可以先去打开虚拟机，管理 -->全局设定-->网络-->仅主机（Host-Only）网络--双击下面的条目\n\n\n<center>![](http://img.blog.csdn.net/20160309165733985?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<center>![](http://img.blog.csdn.net/20160309165958566?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<center>![](http://img.blog.csdn.net/20160309170004208?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n#### 兼容性运行####\n\n- 可以将VBOX和genymotion都设置为win8兼容性运行，而且同时设置以管理员运行\n\n#### 设置模拟器网卡####\n\n然后我们点击我们的Android模拟器，右键-->设置 -->网络--选择刚刚设置的网卡作为模拟器的网卡，如图：\n这样就解决了我们的启动问题了\n<center>![](http://img.blog.csdn.net/20160309170226647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<center>![](http://img.blog.csdn.net/20160309170416135?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n","source":"_posts/AndroidStudio/Gneymotion无法启动和Oracle-VM-VirtualBox常见问题.md","raw":"---\ntitle: Gneymotion无法启动和Oracle VM VirtualBox常见问题\ndate: 2016-06-01 14:44:14\ntags: genymotion\ncategories: AndroidStudio\n---\n### genymotion和VBOX下载\n\n- 可用的带VBOX的gemymotion [传送门](http://pan.baidu.com/s/1skWJGRV)\n\n\n- 有时候我们会遇到根源motion无法启动的问题，这里面有很大一部分原因是VirtualBox的配置问题，自从VirtualBox-4.3.12-93733-Win之后，就出现了很多的BUG，所以我们使用VirtualBox-4.3.12-93733-Win，下载地址：[传送门](http://pan.baidu.com/s/1dEn7kU9)\n\n### 模拟器无法安装应用###\n\n- 下图中模拟器无法安装应用，需要将一个包安装进模拟器就行，包的名字叫做Genymotion-ARM-Translation_v1.1，可以直接到我的百度云下载，[传送门](http://pan.baidu.com/s/1eRbZZF0) 直接将这个文件拖进模拟器的屏幕，然后重启就行\n\n<center>![](http://img.blog.csdn.net/20160309164544218?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n</br>\n\n### 不能创建虚拟主机###\n- 下图这个问题我们需要将虚拟机卸载一下，然后进去C:\\Users\\Administrator\\AppData\\Local下删除Genymobile文件夹和删除C:\\Users\\Administrator下的.VirtualBox\n就可以解决这个问题，还有就是这里有兼容性问题，如果是别的系统的话，建议使用win7兼容性模式运行\n\n<!-- more -->\n\n<center>![](http://img.blog.csdn.net/20160309165325580?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n</br>\n\n### Unable to start the virtual device###\n\n#### 配置全局网络配置####\n- 出现这个问题是我们的虚拟机的网络配置有问题，我们可以先去打开虚拟机，管理 -->全局设定-->网络-->仅主机（Host-Only）网络--双击下面的条目\n\n\n<center>![](http://img.blog.csdn.net/20160309165733985?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<center>![](http://img.blog.csdn.net/20160309165958566?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<center>![](http://img.blog.csdn.net/20160309170004208?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n#### 兼容性运行####\n\n- 可以将VBOX和genymotion都设置为win8兼容性运行，而且同时设置以管理员运行\n\n#### 设置模拟器网卡####\n\n然后我们点击我们的Android模拟器，右键-->设置 -->网络--选择刚刚设置的网卡作为模拟器的网卡，如图：\n这样就解决了我们的启动问题了\n<center>![](http://img.blog.csdn.net/20160309170226647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<center>![](http://img.blog.csdn.net/20160309170416135?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n","slug":"AndroidStudio/Gneymotion无法启动和Oracle-VM-VirtualBox常见问题","published":1,"updated":"2016-07-03T09:22:02.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qhf0010kgaepsz83z4y","content":"<h3 id=\"genymotion和VBOX下载\"><a href=\"#genymotion和VBOX下载\" class=\"headerlink\" title=\"genymotion和VBOX下载\"></a>genymotion和VBOX下载</h3><ul>\n<li>可用的带VBOX的gemymotion <a href=\"http://pan.baidu.com/s/1skWJGRV\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<ul>\n<li>有时候我们会遇到根源motion无法启动的问题，这里面有很大一部分原因是VirtualBox的配置问题，自从VirtualBox-4.3.12-93733-Win之后，就出现了很多的BUG，所以我们使用VirtualBox-4.3.12-93733-Win，下载地址：<a href=\"http://pan.baidu.com/s/1dEn7kU9\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<h3 id=\"模拟器无法安装应用\"><a href=\"#模拟器无法安装应用\" class=\"headerlink\" title=\"模拟器无法安装应用\"></a>模拟器无法安装应用</h3><ul>\n<li>下图中模拟器无法安装应用，需要将一个包安装进模拟器就行，包的名字叫做Genymotion-ARM-Translation_v1.1，可以直接到我的百度云下载，<a href=\"http://pan.baidu.com/s/1eRbZZF0\" target=\"_blank\" rel=\"external\">传送门</a> 直接将这个文件拖进模拟器的屏幕，然后重启就行</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160309164544218?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<p><br></p>\n<h3 id=\"不能创建虚拟主机\"><a href=\"#不能创建虚拟主机\" class=\"headerlink\" title=\"不能创建虚拟主机\"></a>不能创建虚拟主机</h3><ul>\n<li>下图这个问题我们需要将虚拟机卸载一下，然后进去C:\\Users\\Administrator\\AppData\\Local下删除Genymobile文件夹和删除C:\\Users\\Administrator下的.VirtualBox<br>就可以解决这个问题，还有就是这里有兼容性问题，如果是别的系统的话，建议使用win7兼容性模式运行</li>\n</ul>\n<a id=\"more\"></a>\n<center><img src=\"http://img.blog.csdn.net/20160309165325580?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<p><br></p>\n<h3 id=\"Unable-to-start-the-virtual-device\"><a href=\"#Unable-to-start-the-virtual-device\" class=\"headerlink\" title=\"Unable to start the virtual device\"></a>Unable to start the virtual device</h3><h4 id=\"配置全局网络配置\"><a href=\"#配置全局网络配置\" class=\"headerlink\" title=\"配置全局网络配置\"></a>配置全局网络配置</h4><ul>\n<li>出现这个问题是我们的虚拟机的网络配置有问题，我们可以先去打开虚拟机，管理 –&gt;全局设定–&gt;网络–&gt;仅主机（Host-Only）网络–双击下面的条目</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160309165733985?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<center><img src=\"http://img.blog.csdn.net/20160309165958566?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<center><img src=\"http://img.blog.csdn.net/20160309170004208?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<h4 id=\"兼容性运行\"><a href=\"#兼容性运行\" class=\"headerlink\" title=\"兼容性运行\"></a>兼容性运行</h4><ul>\n<li>可以将VBOX和genymotion都设置为win8兼容性运行，而且同时设置以管理员运行</li>\n</ul>\n<h4 id=\"设置模拟器网卡\"><a href=\"#设置模拟器网卡\" class=\"headerlink\" title=\"设置模拟器网卡\"></a>设置模拟器网卡</h4><p>然后我们点击我们的Android模拟器，右键–&gt;设置 –&gt;网络–选择刚刚设置的网卡作为模拟器的网卡，如图：<br>这样就解决了我们的启动问题了</p>\n<center><img src=\"http://img.blog.csdn.net/20160309170226647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<center><img src=\"http://img.blog.csdn.net/20160309170416135?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n","excerpt":"<h3 id=\"genymotion和VBOX下载\"><a href=\"#genymotion和VBOX下载\" class=\"headerlink\" title=\"genymotion和VBOX下载\"></a>genymotion和VBOX下载</h3><ul>\n<li>可用的带VBOX的gemymotion <a href=\"http://pan.baidu.com/s/1skWJGRV\">传送门</a></li>\n</ul>\n<ul>\n<li>有时候我们会遇到根源motion无法启动的问题，这里面有很大一部分原因是VirtualBox的配置问题，自从VirtualBox-4.3.12-93733-Win之后，就出现了很多的BUG，所以我们使用VirtualBox-4.3.12-93733-Win，下载地址：<a href=\"http://pan.baidu.com/s/1dEn7kU9\">传送门</a></li>\n</ul>\n<h3 id=\"模拟器无法安装应用\"><a href=\"#模拟器无法安装应用\" class=\"headerlink\" title=\"模拟器无法安装应用\"></a>模拟器无法安装应用</h3><ul>\n<li>下图中模拟器无法安装应用，需要将一个包安装进模拟器就行，包的名字叫做Genymotion-ARM-Translation_v1.1，可以直接到我的百度云下载，<a href=\"http://pan.baidu.com/s/1eRbZZF0\">传送门</a> 直接将这个文件拖进模拟器的屏幕，然后重启就行</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160309164544218?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<p></br></p>\n<h3 id=\"不能创建虚拟主机\"><a href=\"#不能创建虚拟主机\" class=\"headerlink\" title=\"不能创建虚拟主机\"></a>不能创建虚拟主机</h3><ul>\n<li>下图这个问题我们需要将虚拟机卸载一下，然后进去C:\\Users\\Administrator\\AppData\\Local下删除Genymobile文件夹和删除C:\\Users\\Administrator下的.VirtualBox<br>就可以解决这个问题，还有就是这里有兼容性问题，如果是别的系统的话，建议使用win7兼容性模式运行</li>\n</ul>","more":"<center><img src=\"http://img.blog.csdn.net/20160309165325580?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<p></br></p>\n<h3 id=\"Unable-to-start-the-virtual-device\"><a href=\"#Unable-to-start-the-virtual-device\" class=\"headerlink\" title=\"Unable to start the virtual device\"></a>Unable to start the virtual device</h3><h4 id=\"配置全局网络配置\"><a href=\"#配置全局网络配置\" class=\"headerlink\" title=\"配置全局网络配置\"></a>配置全局网络配置</h4><ul>\n<li>出现这个问题是我们的虚拟机的网络配置有问题，我们可以先去打开虚拟机，管理 –&gt;全局设定–&gt;网络–&gt;仅主机（Host-Only）网络–双击下面的条目</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160309165733985?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<center><img src=\"http://img.blog.csdn.net/20160309165958566?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<center><img src=\"http://img.blog.csdn.net/20160309170004208?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<h4 id=\"兼容性运行\"><a href=\"#兼容性运行\" class=\"headerlink\" title=\"兼容性运行\"></a>兼容性运行</h4><ul>\n<li>可以将VBOX和genymotion都设置为win8兼容性运行，而且同时设置以管理员运行</li>\n</ul>\n<h4 id=\"设置模拟器网卡\"><a href=\"#设置模拟器网卡\" class=\"headerlink\" title=\"设置模拟器网卡\"></a>设置模拟器网卡</h4><p>然后我们点击我们的Android模拟器，右键–&gt;设置 –&gt;网络–选择刚刚设置的网卡作为模拟器的网卡，如图：<br>这样就解决了我们的启动问题了</p>\n<center><img src=\"http://img.blog.csdn.net/20160309170226647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<center><img src=\"http://img.blog.csdn.net/20160309170416135?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>"},{"title":"C++ string类型详解","date":"2016-06-01T16:16:30.000Z","_content":"\n- string是非常强大的类型，很好的封装了字符串的操作，有些时候我们可以把string当做字符的容器，string也支持大多数容器操作，下面就列出string类型所支持的所有操作，本文并不是为了讲解string的用法和应用，而是希望作为string类型的参考文档，每个函数皆在注释后有详细说明，需要用时查阅即可\n\n- ### 构造函数###\n\n```cpp\nstring();//空串  \n  \nstring(size_type length,char ch);\n//以length为长度的ch的拷贝（即length个ch）  \n  \nstring(const char *str);//以str为初值 (长度任意)  \n  \nstring(const char *str,size_type length);\n//同上，长度不限，但注意不要越界，以免发生不可预知问题  \n  \nstring(string &str, size_type index, size_type length);  \n//以index为索引开始的子串，长度为length, 或者小于length  \n  \nstring(input_iterator begin, input_iterator end);\n//以从start到end的元素为初值  \n```\n\n<!-- more -->\n\n\n- ### 支持的操作符###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2c++string%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3%E5%9B%BE%E7%89%87.png)</center>\n    \n- ### 追加文本（append）###\n\n```cpp\nbasic_string &append(const basic_string &str);\n//在字符串的末尾添加str  \n  \nbasic_string &append(const char *str);\n//在字符串末尾添加str所指向的c风格字符串  \n  \nbasic_string &append(const basic_string &str,size_type index,size_type len);  \n//在字符串的末尾添加str的子串,子串以index索引开始，长度为len  \n  \nbasic_string &append(const char *str,size_type num);\n//在字符串的末尾添加str中的num个字符  \n  \nbasic_string &append(size_type num,char ch);\n//在字符串的末尾添加num个字符ch  \n  \nbasic_string &append(input_iterator start,input_iterator end);  \n//在字符串的末尾添加以迭代器start和end表示的字符序列  \n  \npush_back('k');\n//把一个字符连接到当前字符串的结尾  \n```\n\n    \n- ### 赋值（assign)###\n\n\n```cpp\nbasic_string &assign(const basic_string &str);\n//用str为字符串赋值  \n  \nbasic_string &assign(const char *str);\n//用str c风格为字符串赋值  \n  \nbasic_string &assign(const char *str,size_type num);\n//用str的开始num个字符为字符串赋值  \n  \nbasic_string &assign(const basic_string &str,size_type index,size_type len);  \n//用str的子串为字符串赋值,子串以index索引开始，长度为len  \n  \nbasic_string &assign(size_type num,char ch);\n//用num个字符ch为字符串赋值  \n  \nstring &assign(const_iterator begin,const_itertor end);  \n//把first和last迭代器之间的部分赋给字符串  \n```\n\n\n- ### 比较（compare）###\n\n```cpp\nint compare(const basic_string &str);//比较自己和str  \n  \nint compare(size_type index,size_type length,\nconst basic_string &str);  \n//比较自己的子串和str,子串以index索引开始，长度为length  \n  \nint compare(size_type index,size_type length,\nconst basic_string &str,size_type  index2,\nsize_type length2);  \n//比较自己的子串和str的子串，其中index2\n//和length2引用str，index和length引用自己  \n  \nint compare(const char *str);//比较自己和str  \n  \nint compare(int pos, int n,const char *s)  \n//比较自己的子串，从pos开始，n个字符，和s进行比较  \n  \nint compare(size_type index,size_type length\n,const char *str,size_type length2);  \n//比较自己的子串和str的子串，其中str的\n//子串以索引0开始，长度为length2，自己的子串  \n//以index开始，长度为length  \n```\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2C++string%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3%E5%9B%BE%E7%89%87.png)</center>\n\n- ### 删除（erase）###\n\n```cpp\niterator erase(iterator first, iterator last);  \n//删除[first，last）之间的所有字符，返回删除后迭代器的位置  \n  \niterator erase(iterator it);\n//删除it指向的字符，返回删除后迭代器的位置  \n  \nstring &erase(int pos = 0, int n = npos);\n//删除pos开始的n个字符，返回修改后的字符串  \n```\n\n- ### 插入（insert）###\n\n```cpp\niterator insert(iterator i,const char &ch);\n//在迭代器i表示的位置前面插入一个字符ch  \n  \nbasic_string &insert(size_type index,const basic_string &str);\n//在字符串的位置index插入字符串str  \n  \nbasic_string &insert(size_type index,const char *str);\n//在字符串的位置index插入字符串str  \n  \nbasic_string &insert(size_type index1,const basic_string\n&str,size_type index2,size_type num);  \n//在字符串的位置index插入字符串str的子串(从index2开始，长num个字符)  \n  \nbasic_string &insert(size_type index,\nconst char *str,size_type num);  \n//在字符串的位置index插入字符串str的num个字符  \n  \nbasic_string &insert(size_type index,size_type num,char ch );  \n//在字符串的位置index插入num个字符ch的拷贝  \n  \nvoid insert(iterator i,size_type num,const char &ch);  \n//在迭代器i表示的位置前面插入num个字符ch的拷贝  \n  \nvoid insert(iterator i,iterator begin,iterator end );  \n//在迭代器i表示的位置前面插入一段字符，从start开始，以end结束  \n```\n\n\n- ### 替换（replace）###\n\n```cpp\nbasic_string &replace(size_type index,size_type num\n,const basic_string &str);  \n//用str中的num个字符替换本字符串中的字符,从index开始  \n  \nreplace(size_type index1,size_type num1,\nconst basic_string &str,size_type index2,size_type num2);  \n//用str中的num2个字符（从index2开始）替换本字符串中的字符\n//，从index1开始，最多num1个字符  \n  \nbasic_string &replace(size_type index,size_type num,\nconst char *str);  \n//用str中的num个字符（从index开始）替换本字符串中的字符  \n  \nbasic_string &replace(size_type index,size_type num1,\nconst char *str,size_type num2);  \n//用str中的num2个字符（从index2开始）替换本字符串\n//中的字符，从index1开始，num1个字符  \n  \nbasic_string &replace(size_type index,size_type num1,\nsize_type num2,char ch);  \n//用num2个ch字符替换本字符串中的字符，从index开始，num1个字符  \n  \nbasic_string &replace(iterator start,iterator end,\nconst basic_string &str);  \n//用str中的字符替换本字符串中的字符,迭代器start和end指示范围  \n  \nbasic_string &replace(iterator start,iterator end,\nconst char *str);  \n//用str替换本字符串中的内容,迭代器start和end指示范围  \n  \nbasic_string &replace(iterator start,iterator end,\nconst char *str,size_type num );  \n//用str中的num个字符替换本字符串中的内容,迭代器start和end指示范围  \n  \nbasic_string &replace(iterator start,iterator end,\nsize_type num,char ch );  \n//用num个ch字符替换本字符串中的内容，迭代器start和end指示范围  \n```\n\n- ### 查找###\n\n```cpp\n函数 find:  \n  \nsize_type find( const basic_string &str, size_type index );  \n//返回str在字符串中第一次出现的位置（从index开始查找）  \n  \nsize_type find( const char *str, size_type index );  \n//返回str在字符串中第一次出现的位置（从index开始查找）  \n  \nsize_type find( const char *str, size_type index, \nsize_type length );  \n//返回str在字符串中第一次出现的位置（从index开始查找，长度为length）  \n  \nsize_type find( char ch, size_type index );  \n//返回字符ch在字符串中第一次出现的位置（从index开始查找）  \n  \n  \n函数 find_first_of:查找在字符串中第一个与str中的某个字符匹配的字符  \n  \n    size_type find_first_of( const basic_string &str, size_type index = 0);  \n  \n    size_type find_first_of( const char *str, size_type index = 0 );  \n  \n    size_type find_first_of( const char *str, size_type index, size_type num );  \n  \n    size_type find_first_of( char ch, size_type index = 0 );  \n  \n函数 find_first_not_of:在字符串中查找第一个与str中的字符都不匹配的字符  \n  \n    size_type find_first_not_of( const basic_string &str, size_type index = 0 );  \n  \n    size_type find_first_not_of( const char *str, size_type index = 0 );  \n  \n    size_type find_first_not_of( const char *str, size_type index, size_type num );  \n  \n    size_type find_first_not_of( char ch, size_type index = 0 );  \n  \n函数 find_last_of:在字符串中查找最后一个与str中的某个字符匹配的字符  \n  \n  size_type find_last_of( const basic_string &str, size_type index = npos );  \n  \n  size_type find_last_of( const char *str, size_type index = npos );  \n  \n  size_type find_last_of( const char *str, size_type index, size_type num );  \n  \n  size_type find_last_of( char ch, size_type index = npos );  \n  \n函数 find_last_not_of:在字符串中查找最后一个与str中的字符都不匹配的字符  \n  \n    size_type find_last_not_of( const basic_string &str, size_type index = npos );  \n  \n    size_type find_last_not_of( const char *str, size_type index = npos);  \n  \n    size_type find_last_not_of( const char *str, size_type index, size_type num );  \n  \n    size_type find_last_not_of( char ch, size_type index = npos );  \n  \nrfind函数  \n  \n  size_type rfind( const basic_string &str, size_type index );  \n  //返回最后一个与str中的某个字符匹配的字符，从index开始查找  \n  \n  size_type rfind( const char *str, size_type index );  \n  //返回最后一个与str中的某个字符匹配的字符，从index开始查找  \n  \n  size_type rfind( const char *str, size_type index, \n  size_type num );  \n  //返回最后一个与str中的某个字符匹配的字符，从index开始查找,最多查找num个字符  \n  \n  size_type rfind( char ch, size_type index );  \n  //返回最后一个与ch匹配的字符，从index开始查找  \n```\n\n- ### 其他函数###\n\n```cpp\nat函数  \n     reference at( size_type index );  \n     //at()函数返回一个引用，指向在index位置的字符. 如果index  \n     //不在字符串范围内, at() 将报告\"out of range\"错误，并抛出out_of_range异常  \n  \nbegin函数  \n    iterator begin();\n    //begin()函数返回一个迭代器,指向字符串的第一个元素  \n  \nend函数  \n    iterator end();\n    //返回一个迭代器，指向字符串的末尾(最后一个字符的下一个位置)  \n  \nc_str函数  \n    const char *c_str();\n    //返回一个指向正规C字符串的指针, 内容与本字符串相同  \n  \ncapacity函数  \n    size_type capacity();\n    //返回在重新申请更多的空间前字符串可以  \n    //容纳的字符数. 这个数字至少与 size()一样大  \n  \ncopy函数  \n    size_type copy( char *str, size_type num, size_type index );  \n    //拷贝自己的num个字符到str中（从索引index开始）。返回值是拷贝的字符数  \n  \ndata函数  \n    const char *data();//返回指向自己的第一个字符的指针  \n  \nempty函数  \n    bool empty();\n    //如果字符串为空则empty()返回真(true)，否则返回假(false)  \n  \nget_allocator函数  \n    allocator_type get_allocator();//返回本字符串的配置器  \n  \nlength函数  \n    size_type length();\n    //返回字符串的长度. 这个数字应该和size()返回的数字相同  \n  \nmax_size  \n    size_type max_size();//返回字符串能保存的最大字符数  \n  \nrbegin函数  \n    rbegin();//返回一个逆向迭代器，指向最后一个字符  \n  \nrend函数  \n    rend();\n    //返回一个逆向迭代器，指向第一个元素的前一个位置  \n  \nreserve函数  \n    reserve( size_type num );\n    //保留一定容量以容纳字符串（设置capacity值）  \n  \nresize函数  \n  void resize( size_type num );\n  //改变本字符串的大小到num, 新空间的内容不确定  \n  \n  void resize( size_type num, char ch );\n  //也可以指定用ch填充  \n  \nsize函数  \n    size();//返回字符串中字符的数量  \n  \nsubstr函数  \n     basic_string substr( size_type index, size_type num = npos );  \n     //返回本字符串的一个子串，从index开始，\n     //长num个字符。如果没有指定，  \n     //将是默认值 string::npos。这样，\n     //substr()函数将简单的返回从index开始的剩余的字符串  \n  \nswap函数  \n    void swap( basic_string &str );//把str和本字符串交换  \n\n```\n\n\n- ### 示例###\n\n```cpp\n#include <iostream>  \n#include <string>  \n#include <sstream>  \nusing namespace std;  \nint main(){  \n    //1.string类重载运算符operator>>用于输入，\n    //同样重载运算符operator<<用于输出操作  \n    string str1;  \n    cin >> str1;//当用cin>>进行字符串的输入的时候，\n    //遇到空格的地方就停止字符串的读取输入  \n    cout << str1 << endl;  \n    cin.get();//这个的作用就是读取cin>>输入的结束符，\n    //不用对getline的输入产生影响！  \n    getline(cin, str1);//字符串的行输入  \n    cout << str1 << endl;  \n  \n    //2.string类的构造函数  \n    string str2 = \"aaaaa\";//最简单的字符串初始化  \n    cout << str2 << endl;  \n  \n    char *s = \"bbbbb\";  \n    string str3(s);//用c字符串s初始化  \n    cout << str3 << endl;  \n  \n    char ch = 'c';  \n    string str4(5, ch);//用n个字符ch初始化  \n    cout << str4 << endl;  \n  \n    //3.string类的字符操作  \n    string str5 = \"abcde\";  \n    ch = str5[3];//operator[]返回当前字符串中第n个字符的位置  \n    cout << ch << endl;  \n  \n    string str6 = \"abcde\";  \n    ch = str6.at(4);\n    //at()返回当前字符串中第n个字符的位置,\n    //并且提供范围检查，当越界时会抛出异常！  \n    cout << ch << endl;  \n  \n    //4.string的特性描述  \n    string str7 = \"abcdefgh\";  \n    int size;  \n    size = str7.capacity();//返回当前容量  \n    cout << size << endl;  \n    size = str7.max_size();\n    //返回string对象中可存放的最大字符串的长度  \n    cout << size << endl;  \n    size = str7.size();//返回当前字符串的大小  \n    cout << size << endl;  \n    size = str7.length();//返回当前字符串的长度  \n    cout << size << endl;  \n    bool flag;  \n    flag = str7.empty();//判断当前字符串是否为空  \n    cout << flag << endl;  \n    int len = 10;  \n    str7.resize(len, ch);\n    //把字符串当前大小置为len，并用字符ch填充不足的部分  \n    cout << str7 << endl;  \n  \n    //5.string的赋值  \n    string str8;  \n    str8 = str7;//把字符串str7赋给当前字符串  \n    cout << str8 << endl;  \n    str8.assign(str7);//把字符串str7赋给当前字符串  \n    cout << str8 << endl;  \n    str8.assign(s);//用c类型字符串s赋值  \n    cout << str8 << endl;  \n    str8.assign(s, 2);//用c类型字符串s开始的n个字符赋值  \n    cout << str8 << endl;  \n    str8.assign(len, ch);//用len个字符ch赋值给当前字符串  \n    cout << str8 << endl;  \n    str8.assign(str7, 0, 3);//把字符串str7中从0开始的3个字符赋给当前字符串  \n    cout << str8 << endl;  \n    string str9 = \"0123456789\";  \n    str8.assign(str9.begin(), str9.end());//把迭代器之间的字符赋给字符串  \n    cout << str8 << endl;  \n  \n    //6.string的连接  \n    string str10;  \n    str10 += str9;//把字符串str9连接到当前字符串的结尾  \n    cout << str10 << endl;  \n    str10.append(s);//把c类型字符串s连接到当前字符串的结尾  \n    cout << str10 << endl;  \n    str10.append(s, 2);\n    //把c类型字符串s的前2个字符连接到当前字符串的结尾  \n    cout << str10 << endl;  \n    str10.append(str9.begin(), str9.end());\n    //把迭代器之间的一段字符连接到当前字符串的结尾  \n    cout << str10 << endl;  \n    str10.push_back('k');//把一个字符连接到当前字符串的结尾  \n    cout << str10 << endl;  \n  \n    //7.string的比较  \n    flag = (str9 == str10);//判断两个字符串是否相等  \n    cout << flag << endl;  \n    flag = (str9 != str10);//判断两个字符串是否不相等  \n    cout << flag << endl;  \n    flag = (str9 > str10);//判断两个字符串是否大于关系  \n    cout << flag << endl;  \n    flag = (str9 < str10);//判断两个字符串是否为小于关系  \n    cout << flag << endl;  \n    flag = (str9 >= str10);//判断两个字符串是否为大于等于关系  \n    cout << flag << endl;  \n    flag = (str9 <= str10);//判断两个字符串否为小于等于关系  \n    cout << flag << endl;  \n  \n    //以下的3个函数同样适用于c类型的字符串，\n    //在compare函数中>时返回1，<时返回-1，=时返回0  \n    flag = str10.compare(str9);\n    //比较两个字符串的大小，通过ASCII的相减得出！  \n    cout << flag << endl;  \n    flag = str10.compare(6, 12, str9);\n    //比较str10字符串从6开始的12个字符组成的字符串与str9的大小  \n    cout << flag << endl;  \n    flag = str10.compare(6, 12, str9, 3, 5);\n    //比较str10字符串从6开始的12个字符组成的字符串\n    //与str9字符串从3开始的5个字符组成的字符串的大小  \n    cout << flag << endl;  \n  \n    //8.string的字串  \n    string str11;  \n    str11 = str10.substr(10, 15);\n    //返回从下标10开始的15个字符组成的字符串  \n    cout << str11 << endl;  \n  \n    //9.string的交换  \n    str11.swap(str10);//交换str11与str10的值  \n    cout << str11 << endl;  \n  \n    //10.string的查找，查找成功时返回所在位置，\n    //失败时返回string::npos的值，即是-1  \n    string str12 = \"abcdefghijklmnopqrstuvwxyz\";  \n    int pos;  \n    pos = str12.find('i', 0);\n    //从位置0开始查找字符i在当前字符串的位置  \n    cout << pos << endl;  \n    pos = str12.find(\"ghijk\", 0);\n    //从位置0开始查找字符串“ghijk”在当前字符串的位置  \n    cout << pos << endl;  \n    pos = str12.find(\"opqrstuvw\", 0, 4);\n    //从位置0开始查找字符串“opqrstuvw”前4个字符\n    //组成的字符串在当前字符串中的位置  \n    cout << pos << endl;  \n    pos = str12.rfind('s', string::npos);\n    //从字符串str12反向开始查找字符s在字符串中的位置  \n    cout << pos << endl;  \n    pos = str12.rfind(\"klmn\", string::npos);\n    //从字符串str12反向开始查找字符串“klmn”在字符串中的位置  \n    cout << pos << endl;  \n    pos = str12.rfind(\"opqrstuvw\", string::npos, 3);\n    //从string::pos开始从后向前查找字符串s中前n个字符\n    //组成的字符串在当前串中的位置  \n    cout << pos << endl;  \n  \n    string str13 = \"aaaabbbbccccdddeeefffggghhhiiijjjkkllmmmandjfaklsdfpopdtwptioczx\";  \n    pos = str13.find_first_of('d', 0);\n    //从位置0开始查找字符d在当前字符串第一次出现的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_of(\"eefff\", 0);\n    //从位置0开始查找字符串“eeefff“在当前字符串中第一次出现的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_of(\"efff\", 0, 3);\n    //从位置0开始查找当前串中第一个在字符串”efff“的\n    //前3个字符组成的数组里的字符的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_not_of('b', 0);\n    //从当前串中查找第一个不在串s中的字符出现的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_not_of(\"abcdefghij\", 0);\n    //从当前串中查找第一个不在串s中的字符出现的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_not_of(\"abcdefghij\", 0, 3);\n    //从当前串中查找第一个不在由字符串”abcdefghij”的\n    //前3个字符所组成的字符串中的字符出现的位置  \n    cout << pos << endl;  \n    //下面的last的格式和first的一致，只是它从后面检索！  \n    pos = str13.find_last_of('b', string::npos);  \n    cout << pos << endl;  \n    pos = str13.find_last_of(\"abcdef\", string::npos);  \n    cout << pos << endl;  \n    pos = str13.find_last_of(\"abcdef\", string::npos, 2);  \n    cout << pos << endl;  \n    pos = str13.find_last_not_of('a', string::npos);  \n    cout << pos << endl;  \n    pos = str13.find_last_not_of(\"abcdef\", string::npos);  \n    cout << pos << endl;  \n    pos = str13.find_last_not_of(\"abcdef\", string::npos, 3);  \n    cout << pos << endl;  \n  \n    //11.string的替换  \n    string str14 = \"abcdefghijklmn\";  \n    str14.replace(0, 3, \"qqqq\");\n    //删除从0开始的3个字符，然后在0处插入字符串“qqqq”  \n    cout << str14 << endl;  \n    str14.replace(0, 3, \"vvvv\", 2);\n    //删除从0开始的3个字符，然后在0处插入字符串“vvvv”的前2个字符  \n    cout << str14 << endl;  \n    str14.replace(0, 3, \"opqrstuvw\", 2, 4);\n    //删除从0开始的3个字符，然后在0处插入\n    //字符串“opqrstuvw”从位置2开始的4个字符  \n    cout << str14 << endl;  \n    str14.replace(0, 3, 8, 'c');\n    //删除从0开始的3个字符，然后在0处插入8个字符 c  \n    cout << str14 << endl;  \n    //上面的位置可以换为迭代器的位置，操作是一样的，\n    //在这里就不再重复了！  \n  \n    //12.string的插入，下面的位置处亦可以用迭代器\n    //的指针表示，操作是一样的  \n    string str15 = \"abcdefg\";  \n    str15.insert(0, \"mnop\");//在字符串的0位置开始处，插入字符串“mnop”  \n    cout << str15 << endl;  \n    str15.insert(0, 2, 'm');\n    //在字符串的0位置开始处，插入2个字符m  \n    cout << str15 << endl;  \n    str15.insert(0, \"uvwxy\", 3);\n    //在字符串的0位置开始处，插入字符串“uvwxy”中的前3个字符  \n    cout << str15 << endl;  \n    str15.insert(0, \"uvwxy\", 1, 2);\n    //在字符串的0位置开始处，插入从字符串“uvwxy”的1位置开始的2个字符  \n    cout << str15 << endl;  \n  \n    //13.string的删除  \n    string str16 = \"gfedcba\";  \n    string::iterator it;  \n    it = str16.begin();  \n    it++;  \n    str16.erase(it);\n    //删除it指向的字符，返回删除后迭代器的位置  \n    cout << str16 << endl;  \n    str16.erase(it, it+3);\n    //删除it和it+3之间的所有字符，返回删除后迭代器的位置  \n    cout << str16 << endl;  \n    str16.erase(2);\n    //删除从字符串位置3以后的所有字符，返回位置3前面的字符  \n    cout << str16 << endl;  \n  \n    //14.字符串的流处理  \n    string str17(\"hello,this is a test\");  \n    istringstream is(str17);  \n    string s1,s2,s3,s4;  \n    is>>s1>>s2>>s3>>s4;\n    //s1=\"hello,this\",s2=\"is\",s3=\"a\",s4=\"test\"  \n    ostringstream os;  \n    os<<s1<<s2<<s3<<s4;  \n    cout<<os.str() << endl;  \n  \n    //system(\"pause\");  \n}  \n```","source":"_posts/C++/C++string类型详解.md","raw":"---\ntitle: C++ string类型详解\ndate: 2016-06-01 16:16:30\ntags: [C++,STL,string]\ncategories: C++\n---\n\n- string是非常强大的类型，很好的封装了字符串的操作，有些时候我们可以把string当做字符的容器，string也支持大多数容器操作，下面就列出string类型所支持的所有操作，本文并不是为了讲解string的用法和应用，而是希望作为string类型的参考文档，每个函数皆在注释后有详细说明，需要用时查阅即可\n\n- ### 构造函数###\n\n```cpp\nstring();//空串  \n  \nstring(size_type length,char ch);\n//以length为长度的ch的拷贝（即length个ch）  \n  \nstring(const char *str);//以str为初值 (长度任意)  \n  \nstring(const char *str,size_type length);\n//同上，长度不限，但注意不要越界，以免发生不可预知问题  \n  \nstring(string &str, size_type index, size_type length);  \n//以index为索引开始的子串，长度为length, 或者小于length  \n  \nstring(input_iterator begin, input_iterator end);\n//以从start到end的元素为初值  \n```\n\n<!-- more -->\n\n\n- ### 支持的操作符###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2c++string%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3%E5%9B%BE%E7%89%87.png)</center>\n    \n- ### 追加文本（append）###\n\n```cpp\nbasic_string &append(const basic_string &str);\n//在字符串的末尾添加str  \n  \nbasic_string &append(const char *str);\n//在字符串末尾添加str所指向的c风格字符串  \n  \nbasic_string &append(const basic_string &str,size_type index,size_type len);  \n//在字符串的末尾添加str的子串,子串以index索引开始，长度为len  \n  \nbasic_string &append(const char *str,size_type num);\n//在字符串的末尾添加str中的num个字符  \n  \nbasic_string &append(size_type num,char ch);\n//在字符串的末尾添加num个字符ch  \n  \nbasic_string &append(input_iterator start,input_iterator end);  \n//在字符串的末尾添加以迭代器start和end表示的字符序列  \n  \npush_back('k');\n//把一个字符连接到当前字符串的结尾  \n```\n\n    \n- ### 赋值（assign)###\n\n\n```cpp\nbasic_string &assign(const basic_string &str);\n//用str为字符串赋值  \n  \nbasic_string &assign(const char *str);\n//用str c风格为字符串赋值  \n  \nbasic_string &assign(const char *str,size_type num);\n//用str的开始num个字符为字符串赋值  \n  \nbasic_string &assign(const basic_string &str,size_type index,size_type len);  \n//用str的子串为字符串赋值,子串以index索引开始，长度为len  \n  \nbasic_string &assign(size_type num,char ch);\n//用num个字符ch为字符串赋值  \n  \nstring &assign(const_iterator begin,const_itertor end);  \n//把first和last迭代器之间的部分赋给字符串  \n```\n\n\n- ### 比较（compare）###\n\n```cpp\nint compare(const basic_string &str);//比较自己和str  \n  \nint compare(size_type index,size_type length,\nconst basic_string &str);  \n//比较自己的子串和str,子串以index索引开始，长度为length  \n  \nint compare(size_type index,size_type length,\nconst basic_string &str,size_type  index2,\nsize_type length2);  \n//比较自己的子串和str的子串，其中index2\n//和length2引用str，index和length引用自己  \n  \nint compare(const char *str);//比较自己和str  \n  \nint compare(int pos, int n,const char *s)  \n//比较自己的子串，从pos开始，n个字符，和s进行比较  \n  \nint compare(size_type index,size_type length\n,const char *str,size_type length2);  \n//比较自己的子串和str的子串，其中str的\n//子串以索引0开始，长度为length2，自己的子串  \n//以index开始，长度为length  \n```\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2C++string%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3%E5%9B%BE%E7%89%87.png)</center>\n\n- ### 删除（erase）###\n\n```cpp\niterator erase(iterator first, iterator last);  \n//删除[first，last）之间的所有字符，返回删除后迭代器的位置  \n  \niterator erase(iterator it);\n//删除it指向的字符，返回删除后迭代器的位置  \n  \nstring &erase(int pos = 0, int n = npos);\n//删除pos开始的n个字符，返回修改后的字符串  \n```\n\n- ### 插入（insert）###\n\n```cpp\niterator insert(iterator i,const char &ch);\n//在迭代器i表示的位置前面插入一个字符ch  \n  \nbasic_string &insert(size_type index,const basic_string &str);\n//在字符串的位置index插入字符串str  \n  \nbasic_string &insert(size_type index,const char *str);\n//在字符串的位置index插入字符串str  \n  \nbasic_string &insert(size_type index1,const basic_string\n&str,size_type index2,size_type num);  \n//在字符串的位置index插入字符串str的子串(从index2开始，长num个字符)  \n  \nbasic_string &insert(size_type index,\nconst char *str,size_type num);  \n//在字符串的位置index插入字符串str的num个字符  \n  \nbasic_string &insert(size_type index,size_type num,char ch );  \n//在字符串的位置index插入num个字符ch的拷贝  \n  \nvoid insert(iterator i,size_type num,const char &ch);  \n//在迭代器i表示的位置前面插入num个字符ch的拷贝  \n  \nvoid insert(iterator i,iterator begin,iterator end );  \n//在迭代器i表示的位置前面插入一段字符，从start开始，以end结束  \n```\n\n\n- ### 替换（replace）###\n\n```cpp\nbasic_string &replace(size_type index,size_type num\n,const basic_string &str);  \n//用str中的num个字符替换本字符串中的字符,从index开始  \n  \nreplace(size_type index1,size_type num1,\nconst basic_string &str,size_type index2,size_type num2);  \n//用str中的num2个字符（从index2开始）替换本字符串中的字符\n//，从index1开始，最多num1个字符  \n  \nbasic_string &replace(size_type index,size_type num,\nconst char *str);  \n//用str中的num个字符（从index开始）替换本字符串中的字符  \n  \nbasic_string &replace(size_type index,size_type num1,\nconst char *str,size_type num2);  \n//用str中的num2个字符（从index2开始）替换本字符串\n//中的字符，从index1开始，num1个字符  \n  \nbasic_string &replace(size_type index,size_type num1,\nsize_type num2,char ch);  \n//用num2个ch字符替换本字符串中的字符，从index开始，num1个字符  \n  \nbasic_string &replace(iterator start,iterator end,\nconst basic_string &str);  \n//用str中的字符替换本字符串中的字符,迭代器start和end指示范围  \n  \nbasic_string &replace(iterator start,iterator end,\nconst char *str);  \n//用str替换本字符串中的内容,迭代器start和end指示范围  \n  \nbasic_string &replace(iterator start,iterator end,\nconst char *str,size_type num );  \n//用str中的num个字符替换本字符串中的内容,迭代器start和end指示范围  \n  \nbasic_string &replace(iterator start,iterator end,\nsize_type num,char ch );  \n//用num个ch字符替换本字符串中的内容，迭代器start和end指示范围  \n```\n\n- ### 查找###\n\n```cpp\n函数 find:  \n  \nsize_type find( const basic_string &str, size_type index );  \n//返回str在字符串中第一次出现的位置（从index开始查找）  \n  \nsize_type find( const char *str, size_type index );  \n//返回str在字符串中第一次出现的位置（从index开始查找）  \n  \nsize_type find( const char *str, size_type index, \nsize_type length );  \n//返回str在字符串中第一次出现的位置（从index开始查找，长度为length）  \n  \nsize_type find( char ch, size_type index );  \n//返回字符ch在字符串中第一次出现的位置（从index开始查找）  \n  \n  \n函数 find_first_of:查找在字符串中第一个与str中的某个字符匹配的字符  \n  \n    size_type find_first_of( const basic_string &str, size_type index = 0);  \n  \n    size_type find_first_of( const char *str, size_type index = 0 );  \n  \n    size_type find_first_of( const char *str, size_type index, size_type num );  \n  \n    size_type find_first_of( char ch, size_type index = 0 );  \n  \n函数 find_first_not_of:在字符串中查找第一个与str中的字符都不匹配的字符  \n  \n    size_type find_first_not_of( const basic_string &str, size_type index = 0 );  \n  \n    size_type find_first_not_of( const char *str, size_type index = 0 );  \n  \n    size_type find_first_not_of( const char *str, size_type index, size_type num );  \n  \n    size_type find_first_not_of( char ch, size_type index = 0 );  \n  \n函数 find_last_of:在字符串中查找最后一个与str中的某个字符匹配的字符  \n  \n  size_type find_last_of( const basic_string &str, size_type index = npos );  \n  \n  size_type find_last_of( const char *str, size_type index = npos );  \n  \n  size_type find_last_of( const char *str, size_type index, size_type num );  \n  \n  size_type find_last_of( char ch, size_type index = npos );  \n  \n函数 find_last_not_of:在字符串中查找最后一个与str中的字符都不匹配的字符  \n  \n    size_type find_last_not_of( const basic_string &str, size_type index = npos );  \n  \n    size_type find_last_not_of( const char *str, size_type index = npos);  \n  \n    size_type find_last_not_of( const char *str, size_type index, size_type num );  \n  \n    size_type find_last_not_of( char ch, size_type index = npos );  \n  \nrfind函数  \n  \n  size_type rfind( const basic_string &str, size_type index );  \n  //返回最后一个与str中的某个字符匹配的字符，从index开始查找  \n  \n  size_type rfind( const char *str, size_type index );  \n  //返回最后一个与str中的某个字符匹配的字符，从index开始查找  \n  \n  size_type rfind( const char *str, size_type index, \n  size_type num );  \n  //返回最后一个与str中的某个字符匹配的字符，从index开始查找,最多查找num个字符  \n  \n  size_type rfind( char ch, size_type index );  \n  //返回最后一个与ch匹配的字符，从index开始查找  \n```\n\n- ### 其他函数###\n\n```cpp\nat函数  \n     reference at( size_type index );  \n     //at()函数返回一个引用，指向在index位置的字符. 如果index  \n     //不在字符串范围内, at() 将报告\"out of range\"错误，并抛出out_of_range异常  \n  \nbegin函数  \n    iterator begin();\n    //begin()函数返回一个迭代器,指向字符串的第一个元素  \n  \nend函数  \n    iterator end();\n    //返回一个迭代器，指向字符串的末尾(最后一个字符的下一个位置)  \n  \nc_str函数  \n    const char *c_str();\n    //返回一个指向正规C字符串的指针, 内容与本字符串相同  \n  \ncapacity函数  \n    size_type capacity();\n    //返回在重新申请更多的空间前字符串可以  \n    //容纳的字符数. 这个数字至少与 size()一样大  \n  \ncopy函数  \n    size_type copy( char *str, size_type num, size_type index );  \n    //拷贝自己的num个字符到str中（从索引index开始）。返回值是拷贝的字符数  \n  \ndata函数  \n    const char *data();//返回指向自己的第一个字符的指针  \n  \nempty函数  \n    bool empty();\n    //如果字符串为空则empty()返回真(true)，否则返回假(false)  \n  \nget_allocator函数  \n    allocator_type get_allocator();//返回本字符串的配置器  \n  \nlength函数  \n    size_type length();\n    //返回字符串的长度. 这个数字应该和size()返回的数字相同  \n  \nmax_size  \n    size_type max_size();//返回字符串能保存的最大字符数  \n  \nrbegin函数  \n    rbegin();//返回一个逆向迭代器，指向最后一个字符  \n  \nrend函数  \n    rend();\n    //返回一个逆向迭代器，指向第一个元素的前一个位置  \n  \nreserve函数  \n    reserve( size_type num );\n    //保留一定容量以容纳字符串（设置capacity值）  \n  \nresize函数  \n  void resize( size_type num );\n  //改变本字符串的大小到num, 新空间的内容不确定  \n  \n  void resize( size_type num, char ch );\n  //也可以指定用ch填充  \n  \nsize函数  \n    size();//返回字符串中字符的数量  \n  \nsubstr函数  \n     basic_string substr( size_type index, size_type num = npos );  \n     //返回本字符串的一个子串，从index开始，\n     //长num个字符。如果没有指定，  \n     //将是默认值 string::npos。这样，\n     //substr()函数将简单的返回从index开始的剩余的字符串  \n  \nswap函数  \n    void swap( basic_string &str );//把str和本字符串交换  \n\n```\n\n\n- ### 示例###\n\n```cpp\n#include <iostream>  \n#include <string>  \n#include <sstream>  \nusing namespace std;  \nint main(){  \n    //1.string类重载运算符operator>>用于输入，\n    //同样重载运算符operator<<用于输出操作  \n    string str1;  \n    cin >> str1;//当用cin>>进行字符串的输入的时候，\n    //遇到空格的地方就停止字符串的读取输入  \n    cout << str1 << endl;  \n    cin.get();//这个的作用就是读取cin>>输入的结束符，\n    //不用对getline的输入产生影响！  \n    getline(cin, str1);//字符串的行输入  \n    cout << str1 << endl;  \n  \n    //2.string类的构造函数  \n    string str2 = \"aaaaa\";//最简单的字符串初始化  \n    cout << str2 << endl;  \n  \n    char *s = \"bbbbb\";  \n    string str3(s);//用c字符串s初始化  \n    cout << str3 << endl;  \n  \n    char ch = 'c';  \n    string str4(5, ch);//用n个字符ch初始化  \n    cout << str4 << endl;  \n  \n    //3.string类的字符操作  \n    string str5 = \"abcde\";  \n    ch = str5[3];//operator[]返回当前字符串中第n个字符的位置  \n    cout << ch << endl;  \n  \n    string str6 = \"abcde\";  \n    ch = str6.at(4);\n    //at()返回当前字符串中第n个字符的位置,\n    //并且提供范围检查，当越界时会抛出异常！  \n    cout << ch << endl;  \n  \n    //4.string的特性描述  \n    string str7 = \"abcdefgh\";  \n    int size;  \n    size = str7.capacity();//返回当前容量  \n    cout << size << endl;  \n    size = str7.max_size();\n    //返回string对象中可存放的最大字符串的长度  \n    cout << size << endl;  \n    size = str7.size();//返回当前字符串的大小  \n    cout << size << endl;  \n    size = str7.length();//返回当前字符串的长度  \n    cout << size << endl;  \n    bool flag;  \n    flag = str7.empty();//判断当前字符串是否为空  \n    cout << flag << endl;  \n    int len = 10;  \n    str7.resize(len, ch);\n    //把字符串当前大小置为len，并用字符ch填充不足的部分  \n    cout << str7 << endl;  \n  \n    //5.string的赋值  \n    string str8;  \n    str8 = str7;//把字符串str7赋给当前字符串  \n    cout << str8 << endl;  \n    str8.assign(str7);//把字符串str7赋给当前字符串  \n    cout << str8 << endl;  \n    str8.assign(s);//用c类型字符串s赋值  \n    cout << str8 << endl;  \n    str8.assign(s, 2);//用c类型字符串s开始的n个字符赋值  \n    cout << str8 << endl;  \n    str8.assign(len, ch);//用len个字符ch赋值给当前字符串  \n    cout << str8 << endl;  \n    str8.assign(str7, 0, 3);//把字符串str7中从0开始的3个字符赋给当前字符串  \n    cout << str8 << endl;  \n    string str9 = \"0123456789\";  \n    str8.assign(str9.begin(), str9.end());//把迭代器之间的字符赋给字符串  \n    cout << str8 << endl;  \n  \n    //6.string的连接  \n    string str10;  \n    str10 += str9;//把字符串str9连接到当前字符串的结尾  \n    cout << str10 << endl;  \n    str10.append(s);//把c类型字符串s连接到当前字符串的结尾  \n    cout << str10 << endl;  \n    str10.append(s, 2);\n    //把c类型字符串s的前2个字符连接到当前字符串的结尾  \n    cout << str10 << endl;  \n    str10.append(str9.begin(), str9.end());\n    //把迭代器之间的一段字符连接到当前字符串的结尾  \n    cout << str10 << endl;  \n    str10.push_back('k');//把一个字符连接到当前字符串的结尾  \n    cout << str10 << endl;  \n  \n    //7.string的比较  \n    flag = (str9 == str10);//判断两个字符串是否相等  \n    cout << flag << endl;  \n    flag = (str9 != str10);//判断两个字符串是否不相等  \n    cout << flag << endl;  \n    flag = (str9 > str10);//判断两个字符串是否大于关系  \n    cout << flag << endl;  \n    flag = (str9 < str10);//判断两个字符串是否为小于关系  \n    cout << flag << endl;  \n    flag = (str9 >= str10);//判断两个字符串是否为大于等于关系  \n    cout << flag << endl;  \n    flag = (str9 <= str10);//判断两个字符串否为小于等于关系  \n    cout << flag << endl;  \n  \n    //以下的3个函数同样适用于c类型的字符串，\n    //在compare函数中>时返回1，<时返回-1，=时返回0  \n    flag = str10.compare(str9);\n    //比较两个字符串的大小，通过ASCII的相减得出！  \n    cout << flag << endl;  \n    flag = str10.compare(6, 12, str9);\n    //比较str10字符串从6开始的12个字符组成的字符串与str9的大小  \n    cout << flag << endl;  \n    flag = str10.compare(6, 12, str9, 3, 5);\n    //比较str10字符串从6开始的12个字符组成的字符串\n    //与str9字符串从3开始的5个字符组成的字符串的大小  \n    cout << flag << endl;  \n  \n    //8.string的字串  \n    string str11;  \n    str11 = str10.substr(10, 15);\n    //返回从下标10开始的15个字符组成的字符串  \n    cout << str11 << endl;  \n  \n    //9.string的交换  \n    str11.swap(str10);//交换str11与str10的值  \n    cout << str11 << endl;  \n  \n    //10.string的查找，查找成功时返回所在位置，\n    //失败时返回string::npos的值，即是-1  \n    string str12 = \"abcdefghijklmnopqrstuvwxyz\";  \n    int pos;  \n    pos = str12.find('i', 0);\n    //从位置0开始查找字符i在当前字符串的位置  \n    cout << pos << endl;  \n    pos = str12.find(\"ghijk\", 0);\n    //从位置0开始查找字符串“ghijk”在当前字符串的位置  \n    cout << pos << endl;  \n    pos = str12.find(\"opqrstuvw\", 0, 4);\n    //从位置0开始查找字符串“opqrstuvw”前4个字符\n    //组成的字符串在当前字符串中的位置  \n    cout << pos << endl;  \n    pos = str12.rfind('s', string::npos);\n    //从字符串str12反向开始查找字符s在字符串中的位置  \n    cout << pos << endl;  \n    pos = str12.rfind(\"klmn\", string::npos);\n    //从字符串str12反向开始查找字符串“klmn”在字符串中的位置  \n    cout << pos << endl;  \n    pos = str12.rfind(\"opqrstuvw\", string::npos, 3);\n    //从string::pos开始从后向前查找字符串s中前n个字符\n    //组成的字符串在当前串中的位置  \n    cout << pos << endl;  \n  \n    string str13 = \"aaaabbbbccccdddeeefffggghhhiiijjjkkllmmmandjfaklsdfpopdtwptioczx\";  \n    pos = str13.find_first_of('d', 0);\n    //从位置0开始查找字符d在当前字符串第一次出现的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_of(\"eefff\", 0);\n    //从位置0开始查找字符串“eeefff“在当前字符串中第一次出现的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_of(\"efff\", 0, 3);\n    //从位置0开始查找当前串中第一个在字符串”efff“的\n    //前3个字符组成的数组里的字符的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_not_of('b', 0);\n    //从当前串中查找第一个不在串s中的字符出现的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_not_of(\"abcdefghij\", 0);\n    //从当前串中查找第一个不在串s中的字符出现的位置  \n    cout << pos << endl;  \n    pos = str13.find_first_not_of(\"abcdefghij\", 0, 3);\n    //从当前串中查找第一个不在由字符串”abcdefghij”的\n    //前3个字符所组成的字符串中的字符出现的位置  \n    cout << pos << endl;  \n    //下面的last的格式和first的一致，只是它从后面检索！  \n    pos = str13.find_last_of('b', string::npos);  \n    cout << pos << endl;  \n    pos = str13.find_last_of(\"abcdef\", string::npos);  \n    cout << pos << endl;  \n    pos = str13.find_last_of(\"abcdef\", string::npos, 2);  \n    cout << pos << endl;  \n    pos = str13.find_last_not_of('a', string::npos);  \n    cout << pos << endl;  \n    pos = str13.find_last_not_of(\"abcdef\", string::npos);  \n    cout << pos << endl;  \n    pos = str13.find_last_not_of(\"abcdef\", string::npos, 3);  \n    cout << pos << endl;  \n  \n    //11.string的替换  \n    string str14 = \"abcdefghijklmn\";  \n    str14.replace(0, 3, \"qqqq\");\n    //删除从0开始的3个字符，然后在0处插入字符串“qqqq”  \n    cout << str14 << endl;  \n    str14.replace(0, 3, \"vvvv\", 2);\n    //删除从0开始的3个字符，然后在0处插入字符串“vvvv”的前2个字符  \n    cout << str14 << endl;  \n    str14.replace(0, 3, \"opqrstuvw\", 2, 4);\n    //删除从0开始的3个字符，然后在0处插入\n    //字符串“opqrstuvw”从位置2开始的4个字符  \n    cout << str14 << endl;  \n    str14.replace(0, 3, 8, 'c');\n    //删除从0开始的3个字符，然后在0处插入8个字符 c  \n    cout << str14 << endl;  \n    //上面的位置可以换为迭代器的位置，操作是一样的，\n    //在这里就不再重复了！  \n  \n    //12.string的插入，下面的位置处亦可以用迭代器\n    //的指针表示，操作是一样的  \n    string str15 = \"abcdefg\";  \n    str15.insert(0, \"mnop\");//在字符串的0位置开始处，插入字符串“mnop”  \n    cout << str15 << endl;  \n    str15.insert(0, 2, 'm');\n    //在字符串的0位置开始处，插入2个字符m  \n    cout << str15 << endl;  \n    str15.insert(0, \"uvwxy\", 3);\n    //在字符串的0位置开始处，插入字符串“uvwxy”中的前3个字符  \n    cout << str15 << endl;  \n    str15.insert(0, \"uvwxy\", 1, 2);\n    //在字符串的0位置开始处，插入从字符串“uvwxy”的1位置开始的2个字符  \n    cout << str15 << endl;  \n  \n    //13.string的删除  \n    string str16 = \"gfedcba\";  \n    string::iterator it;  \n    it = str16.begin();  \n    it++;  \n    str16.erase(it);\n    //删除it指向的字符，返回删除后迭代器的位置  \n    cout << str16 << endl;  \n    str16.erase(it, it+3);\n    //删除it和it+3之间的所有字符，返回删除后迭代器的位置  \n    cout << str16 << endl;  \n    str16.erase(2);\n    //删除从字符串位置3以后的所有字符，返回位置3前面的字符  \n    cout << str16 << endl;  \n  \n    //14.字符串的流处理  \n    string str17(\"hello,this is a test\");  \n    istringstream is(str17);  \n    string s1,s2,s3,s4;  \n    is>>s1>>s2>>s3>>s4;\n    //s1=\"hello,this\",s2=\"is\",s3=\"a\",s4=\"test\"  \n    ostringstream os;  \n    os<<s1<<s2<<s3<<s4;  \n    cout<<os.str() << endl;  \n  \n    //system(\"pause\");  \n}  \n```","slug":"C++/C++string类型详解","published":1,"updated":"2016-06-17T13:45:43.325Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qhi0015kgaed67ew3i3","content":"<ul>\n<li><p>string是非常强大的类型，很好的封装了字符串的操作，有些时候我们可以把string当做字符的容器，string也支持大多数容器操作，下面就列出string类型所支持的所有操作，本文并不是为了讲解string的用法和应用，而是希望作为string类型的参考文档，每个函数皆在注释后有详细说明，需要用时查阅即可</p>\n</li>\n<li><h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">string</span>();<span class=\"comment\">//空串  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(size_type length,<span class=\"keyword\">char</span> ch);</span><br><span class=\"line\"><span class=\"comment\">//以length为长度的ch的拷贝（即length个ch）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str);<span class=\"comment\">//以str为初值 (长度任意)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type length);</span><br><span class=\"line\"><span class=\"comment\">//同上，长度不限，但注意不要越界，以免发生不可预知问题  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(<span class=\"built_in\">string</span> &amp;str, size_type index, size_type length);  </span><br><span class=\"line\"><span class=\"comment\">//以index为索引开始的子串，长度为length, 或者小于length  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(input_iterator begin, input_iterator end);</span><br><span class=\"line\"><span class=\"comment\">//以从start到end的元素为初值</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li><h3 id=\"支持的操作符\"><a href=\"#支持的操作符\" class=\"headerlink\" title=\"支持的操作符\"></a>支持的操作符</h3></li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2c++string%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3%E5%9B%BE%E7%89%87.png\" alt=\"\"></center>\n\n<ul>\n<li><h3 id=\"追加文本（append）\"><a href=\"#追加文本（append）\" class=\"headerlink\" title=\"追加文本（append）\"></a>追加文本（append）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串末尾添加str所指向的c风格字符串  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str,size_type index,size_type len)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加str的子串,子串以index索引开始，长度为len  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加str中的num个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(size_type num,<span class=\"keyword\">char</span> ch)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加num个字符ch  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(input_iterator start,input_iterator end)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加以迭代器start和end表示的字符序列  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">push_back(<span class=\"string\">'k'</span>);</span><br><span class=\"line\"><span class=\"comment\">//把一个字符连接到当前字符串的结尾</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值（assign\"><a href=\"#赋值（assign\" class=\"headerlink\" title=\"赋值（assign)\"></a>赋值（assign)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//用str为字符串赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//用str c风格为字符串赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//用str的开始num个字符为字符串赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str,size_type index,size_type len)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str的子串为字符串赋值,子串以index索引开始，长度为len  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(size_type num,<span class=\"keyword\">char</span> ch)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//用num个字符ch为字符串赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> &amp;<span class=\"title\">assign</span><span class=\"params\">(const_iterator begin,const_itertor end)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//把first和last迭代器之间的部分赋给字符串</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"比较（compare）\"><a href=\"#比较（compare）\" class=\"headerlink\" title=\"比较（compare）\"></a>比较（compare）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;<span class=\"comment\">//比较自己和str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(size_type index,size_type length,</span><br><span class=\"line\"><span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//比较自己的子串和str,子串以index索引开始，长度为length  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(size_type index,size_type length,</span><br><span class=\"line\"><span class=\"keyword\">const</span> basic_string &amp;str,size_type  index2,</span><br><span class=\"line\">size_type length2)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//比较自己的子串和str的子串，其中index2</span></span><br><span class=\"line\"><span class=\"comment\">//和length2引用str，index和length引用自己  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;<span class=\"comment\">//比较自己和str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">int</span> pos, <span class=\"keyword\">int</span> n,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *s)</span>  </span><br><span class=\"line\"><span class=\"comment\">//比较自己的子串，从pos开始，n个字符，和s进行比较  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(size_type index,size_type length</span><br><span class=\"line\">,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type length2)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//比较自己的子串和str的子串，其中str的</span></span><br><span class=\"line\"><span class=\"comment\">//子串以索引0开始，长度为length2，自己的子串  </span></span><br><span class=\"line\"><span class=\"comment\">//以index开始，长度为length</span></span><br></pre></td></tr></table></figure>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2C++string%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3%E5%9B%BE%E7%89%87.png\" alt=\"\"></center>\n\n<ul>\n<li><h3 id=\"删除（erase）\"><a href=\"#删除（erase）\" class=\"headerlink\" title=\"删除（erase）\"></a>删除（erase）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">iterator <span class=\"title\">erase</span><span class=\"params\">(iterator first, iterator last)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//删除[first，last）之间的所有字符，返回删除后迭代器的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">iterator <span class=\"title\">erase</span><span class=\"params\">(iterator it)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//删除it指向的字符，返回删除后迭代器的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> &amp;<span class=\"title\">erase</span><span class=\"params\">(<span class=\"keyword\">int</span> pos = <span class=\"number\">0</span>, <span class=\"keyword\">int</span> n = npos)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//删除pos开始的n个字符，返回修改后的字符串</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"插入（insert）\"><a href=\"#插入（insert）\" class=\"headerlink\" title=\"插入（insert）\"></a>插入（insert）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">iterator <span class=\"title\">insert</span><span class=\"params\">(iterator i,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> &amp;ch)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在迭代器i表示的位置前面插入一个字符ch  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index,<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入字符串str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入字符串str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index1,<span class=\"keyword\">const</span> basic_string</span><br><span class=\"line\">&amp;str,size_type index2,size_type num)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入字符串str的子串(从index2开始，长num个字符)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入字符串str的num个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index,size_type num,<span class=\"keyword\">char</span> ch )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入num个字符ch的拷贝  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(iterator i,size_type num,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> &amp;ch)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在迭代器i表示的位置前面插入num个字符ch的拷贝  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(iterator i,iterator begin,iterator end )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在迭代器i表示的位置前面插入一段字符，从start开始，以end结束</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"替换（replace）\"><a href=\"#替换（replace）\" class=\"headerlink\" title=\"替换（replace）\"></a>替换（replace）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(size_type index,size_type num</span><br><span class=\"line\">,<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num个字符替换本字符串中的字符,从index开始  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace(size_type index1,size_type num1,</span><br><span class=\"line\"><span class=\"keyword\">const</span> basic_string &amp;str,size_type index2,size_type num2);  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num2个字符（从index2开始）替换本字符串中的字符</span></span><br><span class=\"line\"><span class=\"comment\">//，从index1开始，最多num1个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(size_type index,size_type num,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num个字符（从index开始）替换本字符串中的字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(size_type index,size_type num1,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num2)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num2个字符（从index2开始）替换本字符串</span></span><br><span class=\"line\"><span class=\"comment\">//中的字符，从index1开始，num1个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(size_type index,size_type num1,</span><br><span class=\"line\">size_type num2,<span class=\"keyword\">char</span> ch)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用num2个ch字符替换本字符串中的字符，从index开始，num1个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(iterator start,iterator end,</span><br><span class=\"line\"><span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的字符替换本字符串中的字符,迭代器start和end指示范围  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(iterator start,iterator end,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str替换本字符串中的内容,迭代器start和end指示范围  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(iterator start,iterator end,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num个字符替换本字符串中的内容,迭代器start和end指示范围  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(iterator start,iterator end,</span><br><span class=\"line\">size_type num,<span class=\"keyword\">char</span> ch )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用num个ch字符替换本字符串中的内容，迭代器start和end指示范围</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数 find:  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">size_type <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//返回str在字符串中第一次出现的位置（从index开始查找）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">size_type <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//返回str在字符串中第一次出现的位置（从index开始查找）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">size_type <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, </span><br><span class=\"line\">size_type length )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//返回str在字符串中第一次出现的位置（从index开始查找，长度为length）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">size_type <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//返回字符ch在字符串中第一次出现的位置（从index开始查找）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">函数 find_first_of:查找在字符串中第一个与str中的某个字符匹配的字符  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_of</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index = <span class=\"number\">0</span>)</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, size_type num )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_of</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">函数 find_first_not_of:在字符串中查找第一个与str中的字符都不匹配的字符  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, size_type num )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_not_of</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">函数 find_last_of:在字符串中查找最后一个与str中的某个字符匹配的字符  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">find_last_of</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">find_last_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">find_last_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, size_type num )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">find_last_of</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">函数 find_last_not_of:在字符串中查找最后一个与str中的字符都不匹配的字符  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_last_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_last_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index = npos)</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_last_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, size_type num )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_last_not_of</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">rfind函数  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">rfind</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index )</span></span>;  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个与str中的某个字符匹配的字符，从index开始查找  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">rfind</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index )</span></span>;  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个与str中的某个字符匹配的字符，从index开始查找  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">rfind</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, </span><br><span class=\"line\">  size_type num )</span></span>;  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个与str中的某个字符匹配的字符，从index开始查找,最多查找num个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">rfind</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index )</span></span>;  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个与ch匹配的字符，从index开始查找</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"其他函数\"><a href=\"#其他函数\" class=\"headerlink\" title=\"其他函数\"></a>其他函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">at函数  </span><br><span class=\"line\">     <span class=\"function\">reference <span class=\"title\">at</span><span class=\"params\">( size_type index )</span></span>;  </span><br><span class=\"line\">     <span class=\"comment\">//at()函数返回一个引用，指向在index位置的字符. 如果index  </span></span><br><span class=\"line\">     <span class=\"comment\">//不在字符串范围内, at() 将报告\"out of range\"错误，并抛出out_of_range异常  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">begin函数  </span><br><span class=\"line\">    <span class=\"function\">iterator <span class=\"title\">begin</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//begin()函数返回一个迭代器,指向字符串的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">end函数  </span><br><span class=\"line\">    <span class=\"function\">iterator <span class=\"title\">end</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//返回一个迭代器，指向字符串的末尾(最后一个字符的下一个位置)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c_str函数  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"title\">c_str</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//返回一个指向正规C字符串的指针, 内容与本字符串相同  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">capacity函数  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">capacity</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//返回在重新申请更多的空间前字符串可以  </span></span><br><span class=\"line\">    <span class=\"comment\">//容纳的字符数. 这个数字至少与 size()一样大  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">copy函数  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">copy</span><span class=\"params\">( <span class=\"keyword\">char</span> *str, size_type num, size_type index )</span></span>;  </span><br><span class=\"line\">    <span class=\"comment\">//拷贝自己的num个字符到str中（从索引index开始）。返回值是拷贝的字符数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">data函数  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"title\">data</span><span class=\"params\">()</span></span>;<span class=\"comment\">//返回指向自己的第一个字符的指针  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">empty函数  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">empty</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//如果字符串为空则empty()返回真(true)，否则返回假(false)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">get_allocator函数  </span><br><span class=\"line\">    <span class=\"function\">allocator_type <span class=\"title\">get_allocator</span><span class=\"params\">()</span></span>;<span class=\"comment\">//返回本字符串的配置器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">length函数  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">length</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//返回字符串的长度. 这个数字应该和size()返回的数字相同  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">max_size  </span><br><span class=\"line\">    size_type <span class=\"title\">max_size</span><span class=\"params\">()</span></span>;<span class=\"comment\">//返回字符串能保存的最大字符数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">rbegin函数  </span><br><span class=\"line\">    rbegin();<span class=\"comment\">//返回一个逆向迭代器，指向最后一个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">rend函数  </span><br><span class=\"line\">    rend();</span><br><span class=\"line\">    <span class=\"comment\">//返回一个逆向迭代器，指向第一个元素的前一个位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reserve函数  </span><br><span class=\"line\">    reserve( size_type num );</span><br><span class=\"line\">    <span class=\"comment\">//保留一定容量以容纳字符串（设置capacity值）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">resize函数  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">resize</span><span class=\"params\">( size_type num )</span></span>;</span><br><span class=\"line\">  <span class=\"comment\">//改变本字符串的大小到num, 新空间的内容不确定  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">resize</span><span class=\"params\">( size_type num, <span class=\"keyword\">char</span> ch )</span></span>;</span><br><span class=\"line\">  <span class=\"comment\">//也可以指定用ch填充  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">size函数  </span><br><span class=\"line\">    size();<span class=\"comment\">//返回字符串中字符的数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">substr函数  </span><br><span class=\"line\">     <span class=\"function\">basic_string <span class=\"title\">substr</span><span class=\"params\">( size_type index, size_type num = npos )</span></span>;  </span><br><span class=\"line\">     <span class=\"comment\">//返回本字符串的一个子串，从index开始，</span></span><br><span class=\"line\">     <span class=\"comment\">//长num个字符。如果没有指定，  </span></span><br><span class=\"line\">     <span class=\"comment\">//将是默认值 string::npos。这样，</span></span><br><span class=\"line\">     <span class=\"comment\">//substr()函数将简单的返回从index开始的剩余的字符串  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap函数  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">( basic_string &amp;str )</span></span>;<span class=\"comment\">//把str和本字符串交换</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sstream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"comment\">//1.string类重载运算符operator&gt;&gt;用于输入，</span></span><br><span class=\"line\">    <span class=\"comment\">//同样重载运算符operator&lt;&lt;用于输出操作  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str1;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; str1;<span class=\"comment\">//当用cin&gt;&gt;进行字符串的输入的时候，</span></span><br><span class=\"line\">    <span class=\"comment\">//遇到空格的地方就停止字符串的读取输入  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str1 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.get();<span class=\"comment\">//这个的作用就是读取cin&gt;&gt;输入的结束符，</span></span><br><span class=\"line\">    <span class=\"comment\">//不用对getline的输入产生影响！  </span></span><br><span class=\"line\">    getline(<span class=\"built_in\">cin</span>, str1);<span class=\"comment\">//字符串的行输入  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str1 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//2.string类的构造函数  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str2 = <span class=\"string\">\"aaaaa\"</span>;<span class=\"comment\">//最简单的字符串初始化  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str2 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> *s = <span class=\"string\">\"bbbbb\"</span>;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">str3</span><span class=\"params\">(s)</span></span>;<span class=\"comment\">//用c字符串s初始化  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str3 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch = <span class=\"string\">'c'</span>;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">str4</span><span class=\"params\">(<span class=\"number\">5</span>, ch)</span></span>;<span class=\"comment\">//用n个字符ch初始化  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str4 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//3.string类的字符操作  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str5 = <span class=\"string\">\"abcde\"</span>;  </span><br><span class=\"line\">    ch = str5[<span class=\"number\">3</span>];<span class=\"comment\">//operator[]返回当前字符串中第n个字符的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; ch &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> str6 = <span class=\"string\">\"abcde\"</span>;  </span><br><span class=\"line\">    ch = str6.at(<span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"comment\">//at()返回当前字符串中第n个字符的位置,</span></span><br><span class=\"line\">    <span class=\"comment\">//并且提供范围检查，当越界时会抛出异常！  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; ch &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//4.string的特性描述  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str7 = <span class=\"string\">\"abcdefgh\"</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> size;  </span><br><span class=\"line\">    size = str7.capacity();<span class=\"comment\">//返回当前容量  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; size &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    size = str7.max_size();</span><br><span class=\"line\">    <span class=\"comment\">//返回string对象中可存放的最大字符串的长度  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; size &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    size = str7.size();<span class=\"comment\">//返回当前字符串的大小  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; size &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    size = str7.length();<span class=\"comment\">//返回当前字符串的长度  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; size &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">bool</span> flag;  </span><br><span class=\"line\">    flag = str7.empty();<span class=\"comment\">//判断当前字符串是否为空  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = <span class=\"number\">10</span>;  </span><br><span class=\"line\">    str7.resize(len, ch);</span><br><span class=\"line\">    <span class=\"comment\">//把字符串当前大小置为len，并用字符ch填充不足的部分  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str7 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//5.string的赋值  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str8;  </span><br><span class=\"line\">    str8 = str7;<span class=\"comment\">//把字符串str7赋给当前字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(str7);<span class=\"comment\">//把字符串str7赋给当前字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(s);<span class=\"comment\">//用c类型字符串s赋值  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(s, <span class=\"number\">2</span>);<span class=\"comment\">//用c类型字符串s开始的n个字符赋值  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(len, ch);<span class=\"comment\">//用len个字符ch赋值给当前字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(str7, <span class=\"number\">0</span>, <span class=\"number\">3</span>);<span class=\"comment\">//把字符串str7中从0开始的3个字符赋给当前字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> str9 = <span class=\"string\">\"0123456789\"</span>;  </span><br><span class=\"line\">    str8.assign(str9.begin(), str9.end());<span class=\"comment\">//把迭代器之间的字符赋给字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//6.string的连接  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str10;  </span><br><span class=\"line\">    str10 += str9;<span class=\"comment\">//把字符串str9连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str10.append(s);<span class=\"comment\">//把c类型字符串s连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str10.append(s, <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">//把c类型字符串s的前2个字符连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str10.append(str9.begin(), str9.end());</span><br><span class=\"line\">    <span class=\"comment\">//把迭代器之间的一段字符连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str10.push_back(<span class=\"string\">'k'</span>);<span class=\"comment\">//把一个字符连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//7.string的比较  </span></span><br><span class=\"line\">    flag = (str9 == str10);<span class=\"comment\">//判断两个字符串是否相等  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 != str10);<span class=\"comment\">//判断两个字符串是否不相等  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 &gt; str10);<span class=\"comment\">//判断两个字符串是否大于关系  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 &lt; str10);<span class=\"comment\">//判断两个字符串是否为小于关系  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 &gt;= str10);<span class=\"comment\">//判断两个字符串是否为大于等于关系  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 &lt;= str10);<span class=\"comment\">//判断两个字符串否为小于等于关系  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//以下的3个函数同样适用于c类型的字符串，</span></span><br><span class=\"line\">    <span class=\"comment\">//在compare函数中&gt;时返回1，&lt;时返回-1，=时返回0  </span></span><br><span class=\"line\">    flag = str10.compare(str9);</span><br><span class=\"line\">    <span class=\"comment\">//比较两个字符串的大小，通过ASCII的相减得出！  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = str10.compare(<span class=\"number\">6</span>, <span class=\"number\">12</span>, str9);</span><br><span class=\"line\">    <span class=\"comment\">//比较str10字符串从6开始的12个字符组成的字符串与str9的大小  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = str10.compare(<span class=\"number\">6</span>, <span class=\"number\">12</span>, str9, <span class=\"number\">3</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"comment\">//比较str10字符串从6开始的12个字符组成的字符串</span></span><br><span class=\"line\">    <span class=\"comment\">//与str9字符串从3开始的5个字符组成的字符串的大小  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//8.string的字串  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str11;  </span><br><span class=\"line\">    str11 = str10.substr(<span class=\"number\">10</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">    <span class=\"comment\">//返回从下标10开始的15个字符组成的字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str11 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//9.string的交换  </span></span><br><span class=\"line\">    str11.swap(str10);<span class=\"comment\">//交换str11与str10的值  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str11 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//10.string的查找，查找成功时返回所在位置，</span></span><br><span class=\"line\">    <span class=\"comment\">//失败时返回string::npos的值，即是-1  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str12 = <span class=\"string\">\"abcdefghijklmnopqrstuvwxyz\"</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> pos;  </span><br><span class=\"line\">    pos = str12.find(<span class=\"string\">'i'</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符i在当前字符串的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.find(<span class=\"string\">\"ghijk\"</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符串“ghijk”在当前字符串的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.find(<span class=\"string\">\"opqrstuvw\"</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符串“opqrstuvw”前4个字符</span></span><br><span class=\"line\">    <span class=\"comment\">//组成的字符串在当前字符串中的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.rfind(<span class=\"string\">'s'</span>, <span class=\"built_in\">string</span>::npos);</span><br><span class=\"line\">    <span class=\"comment\">//从字符串str12反向开始查找字符s在字符串中的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.rfind(<span class=\"string\">\"klmn\"</span>, <span class=\"built_in\">string</span>::npos);</span><br><span class=\"line\">    <span class=\"comment\">//从字符串str12反向开始查找字符串“klmn”在字符串中的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.rfind(<span class=\"string\">\"opqrstuvw\"</span>, <span class=\"built_in\">string</span>::npos, <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从string::pos开始从后向前查找字符串s中前n个字符</span></span><br><span class=\"line\">    <span class=\"comment\">//组成的字符串在当前串中的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> str13 = <span class=\"string\">\"aaaabbbbccccdddeeefffggghhhiiijjjkkllmmmandjfaklsdfpopdtwptioczx\"</span>;  </span><br><span class=\"line\">    pos = str13.find_first_of(<span class=\"string\">'d'</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符d在当前字符串第一次出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_of(<span class=\"string\">\"eefff\"</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符串“eeefff“在当前字符串中第一次出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_of(<span class=\"string\">\"efff\"</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找当前串中第一个在字符串”efff“的</span></span><br><span class=\"line\">    <span class=\"comment\">//前3个字符组成的数组里的字符的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_not_of(<span class=\"string\">'b'</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从当前串中查找第一个不在串s中的字符出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_not_of(<span class=\"string\">\"abcdefghij\"</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从当前串中查找第一个不在串s中的字符出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_not_of(<span class=\"string\">\"abcdefghij\"</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从当前串中查找第一个不在由字符串”abcdefghij”的</span></span><br><span class=\"line\">    <span class=\"comment\">//前3个字符所组成的字符串中的字符出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"comment\">//下面的last的格式和first的一致，只是它从后面检索！  </span></span><br><span class=\"line\">    pos = str13.find_last_of(<span class=\"string\">'b'</span>, <span class=\"built_in\">string</span>::npos);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_of(<span class=\"string\">\"abcdef\"</span>, <span class=\"built_in\">string</span>::npos);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_of(<span class=\"string\">\"abcdef\"</span>, <span class=\"built_in\">string</span>::npos, <span class=\"number\">2</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_not_of(<span class=\"string\">'a'</span>, <span class=\"built_in\">string</span>::npos);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_not_of(<span class=\"string\">\"abcdef\"</span>, <span class=\"built_in\">string</span>::npos);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_not_of(<span class=\"string\">\"abcdef\"</span>, <span class=\"built_in\">string</span>::npos, <span class=\"number\">3</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//11.string的替换  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str14 = <span class=\"string\">\"abcdefghijklmn\"</span>;  </span><br><span class=\"line\">    str14.replace(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"string\">\"qqqq\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从0开始的3个字符，然后在0处插入字符串“qqqq”  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str14 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str14.replace(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"string\">\"vvvv\"</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从0开始的3个字符，然后在0处插入字符串“vvvv”的前2个字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str14 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str14.replace(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"string\">\"opqrstuvw\"</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从0开始的3个字符，然后在0处插入</span></span><br><span class=\"line\">    <span class=\"comment\">//字符串“opqrstuvw”从位置2开始的4个字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str14 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str14.replace(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">8</span>, <span class=\"string\">'c'</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从0开始的3个字符，然后在0处插入8个字符 c  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str14 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"comment\">//上面的位置可以换为迭代器的位置，操作是一样的，</span></span><br><span class=\"line\">    <span class=\"comment\">//在这里就不再重复了！  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//12.string的插入，下面的位置处亦可以用迭代器</span></span><br><span class=\"line\">    <span class=\"comment\">//的指针表示，操作是一样的  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str15 = <span class=\"string\">\"abcdefg\"</span>;  </span><br><span class=\"line\">    str15.insert(<span class=\"number\">0</span>, <span class=\"string\">\"mnop\"</span>);<span class=\"comment\">//在字符串的0位置开始处，插入字符串“mnop”  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str15 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str15.insert(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"string\">'m'</span>);</span><br><span class=\"line\">    <span class=\"comment\">//在字符串的0位置开始处，插入2个字符m  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str15 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str15.insert(<span class=\"number\">0</span>, <span class=\"string\">\"uvwxy\"</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//在字符串的0位置开始处，插入字符串“uvwxy”中的前3个字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str15 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str15.insert(<span class=\"number\">0</span>, <span class=\"string\">\"uvwxy\"</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">//在字符串的0位置开始处，插入从字符串“uvwxy”的1位置开始的2个字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str15 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//13.string的删除  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str16 = <span class=\"string\">\"gfedcba\"</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">string</span>::iterator it;  </span><br><span class=\"line\">    it = str16.begin();  </span><br><span class=\"line\">    it++;  </span><br><span class=\"line\">    str16.erase(it);</span><br><span class=\"line\">    <span class=\"comment\">//删除it指向的字符，返回删除后迭代器的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str16 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str16.erase(it, it+<span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除it和it+3之间的所有字符，返回删除后迭代器的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str16 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str16.erase(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从字符串位置3以后的所有字符，返回位置3前面的字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str16 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//14.字符串的流处理  </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">str17</span><span class=\"params\">(<span class=\"string\">\"hello,this is a test\"</span>)</span></span>;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">istringstream</span> <span class=\"title\">is</span><span class=\"params\">(str17)</span></span>;  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> s1,s2,s3,s4;  </span><br><span class=\"line\">    is&gt;&gt;s1&gt;&gt;s2&gt;&gt;s3&gt;&gt;s4;</span><br><span class=\"line\">    <span class=\"comment\">//s1=\"hello,this\",s2=\"is\",s3=\"a\",s4=\"test\"  </span></span><br><span class=\"line\">    <span class=\"built_in\">ostringstream</span> os;  </span><br><span class=\"line\">    os&lt;&lt;s1&lt;&lt;s2&lt;&lt;s3&lt;&lt;s4;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;os.str() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//system(\"pause\");  </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li><p>string是非常强大的类型，很好的封装了字符串的操作，有些时候我们可以把string当做字符的容器，string也支持大多数容器操作，下面就列出string类型所支持的所有操作，本文并不是为了讲解string的用法和应用，而是希望作为string类型的参考文档，每个函数皆在注释后有详细说明，需要用时查阅即可</p>\n</li>\n<li><h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">string</span>();<span class=\"comment\">//空串  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(size_type length,<span class=\"keyword\">char</span> ch);</span><br><span class=\"line\"><span class=\"comment\">//以length为长度的ch的拷贝（即length个ch）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str);<span class=\"comment\">//以str为初值 (长度任意)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type length);</span><br><span class=\"line\"><span class=\"comment\">//同上，长度不限，但注意不要越界，以免发生不可预知问题  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(<span class=\"built_in\">string</span> &amp;str, size_type index, size_type length);  </span><br><span class=\"line\"><span class=\"comment\">//以index为索引开始的子串，长度为length, 或者小于length  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">string</span>(input_iterator begin, input_iterator end);</span><br><span class=\"line\"><span class=\"comment\">//以从start到end的元素为初值</span></span><br></pre></td></tr></table></figure>","more":"<ul>\n<li><h3 id=\"支持的操作符\"><a href=\"#支持的操作符\" class=\"headerlink\" title=\"支持的操作符\"></a>支持的操作符</h3></li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2c++string%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3%E5%9B%BE%E7%89%87.png\" alt=\"\"></center>\n\n<ul>\n<li><h3 id=\"追加文本（append）\"><a href=\"#追加文本（append）\" class=\"headerlink\" title=\"追加文本（append）\"></a>追加文本（append）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串末尾添加str所指向的c风格字符串  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str,size_type index,size_type len)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加str的子串,子串以index索引开始，长度为len  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加str中的num个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(size_type num,<span class=\"keyword\">char</span> ch)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加num个字符ch  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">append</span><span class=\"params\">(input_iterator start,input_iterator end)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的末尾添加以迭代器start和end表示的字符序列  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">push_back(<span class=\"string\">'k'</span>);</span><br><span class=\"line\"><span class=\"comment\">//把一个字符连接到当前字符串的结尾</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值（assign\"><a href=\"#赋值（assign\" class=\"headerlink\" title=\"赋值（assign)\"></a>赋值（assign)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//用str为字符串赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//用str c风格为字符串赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//用str的开始num个字符为字符串赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str,size_type index,size_type len)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str的子串为字符串赋值,子串以index索引开始，长度为len  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">assign</span><span class=\"params\">(size_type num,<span class=\"keyword\">char</span> ch)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//用num个字符ch为字符串赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> &amp;<span class=\"title\">assign</span><span class=\"params\">(const_iterator begin,const_itertor end)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//把first和last迭代器之间的部分赋给字符串</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"比较（compare）\"><a href=\"#比较（compare）\" class=\"headerlink\" title=\"比较（compare）\"></a>比较（compare）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;<span class=\"comment\">//比较自己和str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(size_type index,size_type length,</span><br><span class=\"line\"><span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//比较自己的子串和str,子串以index索引开始，长度为length  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(size_type index,size_type length,</span><br><span class=\"line\"><span class=\"keyword\">const</span> basic_string &amp;str,size_type  index2,</span><br><span class=\"line\">size_type length2)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//比较自己的子串和str的子串，其中index2</span></span><br><span class=\"line\"><span class=\"comment\">//和length2引用str，index和length引用自己  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;<span class=\"comment\">//比较自己和str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">int</span> pos, <span class=\"keyword\">int</span> n,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *s)</span>  </span><br><span class=\"line\"><span class=\"comment\">//比较自己的子串，从pos开始，n个字符，和s进行比较  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(size_type index,size_type length</span><br><span class=\"line\">,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type length2)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//比较自己的子串和str的子串，其中str的</span></span><br><span class=\"line\"><span class=\"comment\">//子串以索引0开始，长度为length2，自己的子串  </span></span><br><span class=\"line\"><span class=\"comment\">//以index开始，长度为length</span></span><br></pre></td></tr></table></figure>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2C++string%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3%E5%9B%BE%E7%89%87.png\" alt=\"\"></center>\n\n<ul>\n<li><h3 id=\"删除（erase）\"><a href=\"#删除（erase）\" class=\"headerlink\" title=\"删除（erase）\"></a>删除（erase）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">iterator <span class=\"title\">erase</span><span class=\"params\">(iterator first, iterator last)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//删除[first，last）之间的所有字符，返回删除后迭代器的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">iterator <span class=\"title\">erase</span><span class=\"params\">(iterator it)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//删除it指向的字符，返回删除后迭代器的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> &amp;<span class=\"title\">erase</span><span class=\"params\">(<span class=\"keyword\">int</span> pos = <span class=\"number\">0</span>, <span class=\"keyword\">int</span> n = npos)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//删除pos开始的n个字符，返回修改后的字符串</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"插入（insert）\"><a href=\"#插入（insert）\" class=\"headerlink\" title=\"插入（insert）\"></a>插入（insert）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">iterator <span class=\"title\">insert</span><span class=\"params\">(iterator i,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> &amp;ch)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在迭代器i表示的位置前面插入一个字符ch  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index,<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入字符串str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入字符串str  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index1,<span class=\"keyword\">const</span> basic_string</span><br><span class=\"line\">&amp;str,size_type index2,size_type num)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入字符串str的子串(从index2开始，长num个字符)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入字符串str的num个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">insert</span><span class=\"params\">(size_type index,size_type num,<span class=\"keyword\">char</span> ch )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在字符串的位置index插入num个字符ch的拷贝  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(iterator i,size_type num,<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> &amp;ch)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在迭代器i表示的位置前面插入num个字符ch的拷贝  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(iterator i,iterator begin,iterator end )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//在迭代器i表示的位置前面插入一段字符，从start开始，以end结束</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"替换（replace）\"><a href=\"#替换（replace）\" class=\"headerlink\" title=\"替换（replace）\"></a>替换（replace）</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(size_type index,size_type num</span><br><span class=\"line\">,<span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num个字符替换本字符串中的字符,从index开始  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace(size_type index1,size_type num1,</span><br><span class=\"line\"><span class=\"keyword\">const</span> basic_string &amp;str,size_type index2,size_type num2);  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num2个字符（从index2开始）替换本字符串中的字符</span></span><br><span class=\"line\"><span class=\"comment\">//，从index1开始，最多num1个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(size_type index,size_type num,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num个字符（从index开始）替换本字符串中的字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(size_type index,size_type num1,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num2)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num2个字符（从index2开始）替换本字符串</span></span><br><span class=\"line\"><span class=\"comment\">//中的字符，从index1开始，num1个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(size_type index,size_type num1,</span><br><span class=\"line\">size_type num2,<span class=\"keyword\">char</span> ch)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用num2个ch字符替换本字符串中的字符，从index开始，num1个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(iterator start,iterator end,</span><br><span class=\"line\"><span class=\"keyword\">const</span> basic_string &amp;str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的字符替换本字符串中的字符,迭代器start和end指示范围  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(iterator start,iterator end,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str替换本字符串中的内容,迭代器start和end指示范围  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(iterator start,iterator end,</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str,size_type num )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用str中的num个字符替换本字符串中的内容,迭代器start和end指示范围  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">basic_string &amp;<span class=\"title\">replace</span><span class=\"params\">(iterator start,iterator end,</span><br><span class=\"line\">size_type num,<span class=\"keyword\">char</span> ch )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//用num个ch字符替换本字符串中的内容，迭代器start和end指示范围</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数 find:  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">size_type <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//返回str在字符串中第一次出现的位置（从index开始查找）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">size_type <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//返回str在字符串中第一次出现的位置（从index开始查找）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">size_type <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, </span><br><span class=\"line\">size_type length )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//返回str在字符串中第一次出现的位置（从index开始查找，长度为length）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">size_type <span class=\"title\">find</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index )</span></span>;  </span><br><span class=\"line\"><span class=\"comment\">//返回字符ch在字符串中第一次出现的位置（从index开始查找）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">函数 find_first_of:查找在字符串中第一个与str中的某个字符匹配的字符  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_of</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index = <span class=\"number\">0</span>)</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, size_type num )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_of</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">函数 find_first_not_of:在字符串中查找第一个与str中的字符都不匹配的字符  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, size_type num )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_first_not_of</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index = <span class=\"number\">0</span> )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">函数 find_last_of:在字符串中查找最后一个与str中的某个字符匹配的字符  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">find_last_of</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">find_last_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">find_last_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, size_type num )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">find_last_of</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">函数 find_last_not_of:在字符串中查找最后一个与str中的字符都不匹配的字符  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_last_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_last_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index = npos)</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_last_not_of</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, size_type num )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">find_last_not_of</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index = npos )</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">rfind函数  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">rfind</span><span class=\"params\">( <span class=\"keyword\">const</span> basic_string &amp;str, size_type index )</span></span>;  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个与str中的某个字符匹配的字符，从index开始查找  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">rfind</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index )</span></span>;  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个与str中的某个字符匹配的字符，从index开始查找  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">rfind</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str, size_type index, </span><br><span class=\"line\">  size_type num )</span></span>;  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个与str中的某个字符匹配的字符，从index开始查找,最多查找num个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\">size_type <span class=\"title\">rfind</span><span class=\"params\">( <span class=\"keyword\">char</span> ch, size_type index )</span></span>;  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个与ch匹配的字符，从index开始查找</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"其他函数\"><a href=\"#其他函数\" class=\"headerlink\" title=\"其他函数\"></a>其他函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">at函数  </span><br><span class=\"line\">     <span class=\"function\">reference <span class=\"title\">at</span><span class=\"params\">( size_type index )</span></span>;  </span><br><span class=\"line\">     <span class=\"comment\">//at()函数返回一个引用，指向在index位置的字符. 如果index  </span></span><br><span class=\"line\">     <span class=\"comment\">//不在字符串范围内, at() 将报告\"out of range\"错误，并抛出out_of_range异常  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">begin函数  </span><br><span class=\"line\">    <span class=\"function\">iterator <span class=\"title\">begin</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//begin()函数返回一个迭代器,指向字符串的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">end函数  </span><br><span class=\"line\">    <span class=\"function\">iterator <span class=\"title\">end</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//返回一个迭代器，指向字符串的末尾(最后一个字符的下一个位置)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c_str函数  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"title\">c_str</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//返回一个指向正规C字符串的指针, 内容与本字符串相同  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">capacity函数  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">capacity</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//返回在重新申请更多的空间前字符串可以  </span></span><br><span class=\"line\">    <span class=\"comment\">//容纳的字符数. 这个数字至少与 size()一样大  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">copy函数  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">copy</span><span class=\"params\">( <span class=\"keyword\">char</span> *str, size_type num, size_type index )</span></span>;  </span><br><span class=\"line\">    <span class=\"comment\">//拷贝自己的num个字符到str中（从索引index开始）。返回值是拷贝的字符数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">data函数  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"title\">data</span><span class=\"params\">()</span></span>;<span class=\"comment\">//返回指向自己的第一个字符的指针  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">empty函数  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">empty</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//如果字符串为空则empty()返回真(true)，否则返回假(false)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">get_allocator函数  </span><br><span class=\"line\">    <span class=\"function\">allocator_type <span class=\"title\">get_allocator</span><span class=\"params\">()</span></span>;<span class=\"comment\">//返回本字符串的配置器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">length函数  </span><br><span class=\"line\">    <span class=\"function\">size_type <span class=\"title\">length</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//返回字符串的长度. 这个数字应该和size()返回的数字相同  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">max_size  </span><br><span class=\"line\">    size_type <span class=\"title\">max_size</span><span class=\"params\">()</span></span>;<span class=\"comment\">//返回字符串能保存的最大字符数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">rbegin函数  </span><br><span class=\"line\">    rbegin();<span class=\"comment\">//返回一个逆向迭代器，指向最后一个字符  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">rend函数  </span><br><span class=\"line\">    rend();</span><br><span class=\"line\">    <span class=\"comment\">//返回一个逆向迭代器，指向第一个元素的前一个位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reserve函数  </span><br><span class=\"line\">    reserve( size_type num );</span><br><span class=\"line\">    <span class=\"comment\">//保留一定容量以容纳字符串（设置capacity值）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">resize函数  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">resize</span><span class=\"params\">( size_type num )</span></span>;</span><br><span class=\"line\">  <span class=\"comment\">//改变本字符串的大小到num, 新空间的内容不确定  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">resize</span><span class=\"params\">( size_type num, <span class=\"keyword\">char</span> ch )</span></span>;</span><br><span class=\"line\">  <span class=\"comment\">//也可以指定用ch填充  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">size函数  </span><br><span class=\"line\">    size();<span class=\"comment\">//返回字符串中字符的数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">substr函数  </span><br><span class=\"line\">     <span class=\"function\">basic_string <span class=\"title\">substr</span><span class=\"params\">( size_type index, size_type num = npos )</span></span>;  </span><br><span class=\"line\">     <span class=\"comment\">//返回本字符串的一个子串，从index开始，</span></span><br><span class=\"line\">     <span class=\"comment\">//长num个字符。如果没有指定，  </span></span><br><span class=\"line\">     <span class=\"comment\">//将是默认值 string::npos。这样，</span></span><br><span class=\"line\">     <span class=\"comment\">//substr()函数将简单的返回从index开始的剩余的字符串  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap函数  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">( basic_string &amp;str )</span></span>;<span class=\"comment\">//把str和本字符串交换</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sstream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"comment\">//1.string类重载运算符operator&gt;&gt;用于输入，</span></span><br><span class=\"line\">    <span class=\"comment\">//同样重载运算符operator&lt;&lt;用于输出操作  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str1;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; str1;<span class=\"comment\">//当用cin&gt;&gt;进行字符串的输入的时候，</span></span><br><span class=\"line\">    <span class=\"comment\">//遇到空格的地方就停止字符串的读取输入  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str1 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.get();<span class=\"comment\">//这个的作用就是读取cin&gt;&gt;输入的结束符，</span></span><br><span class=\"line\">    <span class=\"comment\">//不用对getline的输入产生影响！  </span></span><br><span class=\"line\">    getline(<span class=\"built_in\">cin</span>, str1);<span class=\"comment\">//字符串的行输入  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str1 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//2.string类的构造函数  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str2 = <span class=\"string\">\"aaaaa\"</span>;<span class=\"comment\">//最简单的字符串初始化  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str2 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> *s = <span class=\"string\">\"bbbbb\"</span>;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">str3</span><span class=\"params\">(s)</span></span>;<span class=\"comment\">//用c字符串s初始化  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str3 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch = <span class=\"string\">'c'</span>;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">str4</span><span class=\"params\">(<span class=\"number\">5</span>, ch)</span></span>;<span class=\"comment\">//用n个字符ch初始化  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str4 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//3.string类的字符操作  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str5 = <span class=\"string\">\"abcde\"</span>;  </span><br><span class=\"line\">    ch = str5[<span class=\"number\">3</span>];<span class=\"comment\">//operator[]返回当前字符串中第n个字符的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; ch &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> str6 = <span class=\"string\">\"abcde\"</span>;  </span><br><span class=\"line\">    ch = str6.at(<span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"comment\">//at()返回当前字符串中第n个字符的位置,</span></span><br><span class=\"line\">    <span class=\"comment\">//并且提供范围检查，当越界时会抛出异常！  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; ch &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//4.string的特性描述  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str7 = <span class=\"string\">\"abcdefgh\"</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> size;  </span><br><span class=\"line\">    size = str7.capacity();<span class=\"comment\">//返回当前容量  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; size &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    size = str7.max_size();</span><br><span class=\"line\">    <span class=\"comment\">//返回string对象中可存放的最大字符串的长度  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; size &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    size = str7.size();<span class=\"comment\">//返回当前字符串的大小  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; size &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    size = str7.length();<span class=\"comment\">//返回当前字符串的长度  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; size &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">bool</span> flag;  </span><br><span class=\"line\">    flag = str7.empty();<span class=\"comment\">//判断当前字符串是否为空  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = <span class=\"number\">10</span>;  </span><br><span class=\"line\">    str7.resize(len, ch);</span><br><span class=\"line\">    <span class=\"comment\">//把字符串当前大小置为len，并用字符ch填充不足的部分  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str7 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//5.string的赋值  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str8;  </span><br><span class=\"line\">    str8 = str7;<span class=\"comment\">//把字符串str7赋给当前字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(str7);<span class=\"comment\">//把字符串str7赋给当前字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(s);<span class=\"comment\">//用c类型字符串s赋值  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(s, <span class=\"number\">2</span>);<span class=\"comment\">//用c类型字符串s开始的n个字符赋值  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(len, ch);<span class=\"comment\">//用len个字符ch赋值给当前字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str8.assign(str7, <span class=\"number\">0</span>, <span class=\"number\">3</span>);<span class=\"comment\">//把字符串str7中从0开始的3个字符赋给当前字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> str9 = <span class=\"string\">\"0123456789\"</span>;  </span><br><span class=\"line\">    str8.assign(str9.begin(), str9.end());<span class=\"comment\">//把迭代器之间的字符赋给字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str8 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//6.string的连接  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str10;  </span><br><span class=\"line\">    str10 += str9;<span class=\"comment\">//把字符串str9连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str10.append(s);<span class=\"comment\">//把c类型字符串s连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str10.append(s, <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">//把c类型字符串s的前2个字符连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str10.append(str9.begin(), str9.end());</span><br><span class=\"line\">    <span class=\"comment\">//把迭代器之间的一段字符连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str10.push_back(<span class=\"string\">'k'</span>);<span class=\"comment\">//把一个字符连接到当前字符串的结尾  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str10 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//7.string的比较  </span></span><br><span class=\"line\">    flag = (str9 == str10);<span class=\"comment\">//判断两个字符串是否相等  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 != str10);<span class=\"comment\">//判断两个字符串是否不相等  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 &gt; str10);<span class=\"comment\">//判断两个字符串是否大于关系  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 &lt; str10);<span class=\"comment\">//判断两个字符串是否为小于关系  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 &gt;= str10);<span class=\"comment\">//判断两个字符串是否为大于等于关系  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = (str9 &lt;= str10);<span class=\"comment\">//判断两个字符串否为小于等于关系  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//以下的3个函数同样适用于c类型的字符串，</span></span><br><span class=\"line\">    <span class=\"comment\">//在compare函数中&gt;时返回1，&lt;时返回-1，=时返回0  </span></span><br><span class=\"line\">    flag = str10.compare(str9);</span><br><span class=\"line\">    <span class=\"comment\">//比较两个字符串的大小，通过ASCII的相减得出！  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = str10.compare(<span class=\"number\">6</span>, <span class=\"number\">12</span>, str9);</span><br><span class=\"line\">    <span class=\"comment\">//比较str10字符串从6开始的12个字符组成的字符串与str9的大小  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    flag = str10.compare(<span class=\"number\">6</span>, <span class=\"number\">12</span>, str9, <span class=\"number\">3</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"comment\">//比较str10字符串从6开始的12个字符组成的字符串</span></span><br><span class=\"line\">    <span class=\"comment\">//与str9字符串从3开始的5个字符组成的字符串的大小  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; flag &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//8.string的字串  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str11;  </span><br><span class=\"line\">    str11 = str10.substr(<span class=\"number\">10</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">    <span class=\"comment\">//返回从下标10开始的15个字符组成的字符串  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str11 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//9.string的交换  </span></span><br><span class=\"line\">    str11.swap(str10);<span class=\"comment\">//交换str11与str10的值  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str11 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//10.string的查找，查找成功时返回所在位置，</span></span><br><span class=\"line\">    <span class=\"comment\">//失败时返回string::npos的值，即是-1  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str12 = <span class=\"string\">\"abcdefghijklmnopqrstuvwxyz\"</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> pos;  </span><br><span class=\"line\">    pos = str12.find(<span class=\"string\">'i'</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符i在当前字符串的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.find(<span class=\"string\">\"ghijk\"</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符串“ghijk”在当前字符串的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.find(<span class=\"string\">\"opqrstuvw\"</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符串“opqrstuvw”前4个字符</span></span><br><span class=\"line\">    <span class=\"comment\">//组成的字符串在当前字符串中的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.rfind(<span class=\"string\">'s'</span>, <span class=\"built_in\">string</span>::npos);</span><br><span class=\"line\">    <span class=\"comment\">//从字符串str12反向开始查找字符s在字符串中的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.rfind(<span class=\"string\">\"klmn\"</span>, <span class=\"built_in\">string</span>::npos);</span><br><span class=\"line\">    <span class=\"comment\">//从字符串str12反向开始查找字符串“klmn”在字符串中的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str12.rfind(<span class=\"string\">\"opqrstuvw\"</span>, <span class=\"built_in\">string</span>::npos, <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从string::pos开始从后向前查找字符串s中前n个字符</span></span><br><span class=\"line\">    <span class=\"comment\">//组成的字符串在当前串中的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> str13 = <span class=\"string\">\"aaaabbbbccccdddeeefffggghhhiiijjjkkllmmmandjfaklsdfpopdtwptioczx\"</span>;  </span><br><span class=\"line\">    pos = str13.find_first_of(<span class=\"string\">'d'</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符d在当前字符串第一次出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_of(<span class=\"string\">\"eefff\"</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找字符串“eeefff“在当前字符串中第一次出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_of(<span class=\"string\">\"efff\"</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从位置0开始查找当前串中第一个在字符串”efff“的</span></span><br><span class=\"line\">    <span class=\"comment\">//前3个字符组成的数组里的字符的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_not_of(<span class=\"string\">'b'</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从当前串中查找第一个不在串s中的字符出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_not_of(<span class=\"string\">\"abcdefghij\"</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从当前串中查找第一个不在串s中的字符出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_first_not_of(<span class=\"string\">\"abcdefghij\"</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//从当前串中查找第一个不在由字符串”abcdefghij”的</span></span><br><span class=\"line\">    <span class=\"comment\">//前3个字符所组成的字符串中的字符出现的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"comment\">//下面的last的格式和first的一致，只是它从后面检索！  </span></span><br><span class=\"line\">    pos = str13.find_last_of(<span class=\"string\">'b'</span>, <span class=\"built_in\">string</span>::npos);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_of(<span class=\"string\">\"abcdef\"</span>, <span class=\"built_in\">string</span>::npos);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_of(<span class=\"string\">\"abcdef\"</span>, <span class=\"built_in\">string</span>::npos, <span class=\"number\">2</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_not_of(<span class=\"string\">'a'</span>, <span class=\"built_in\">string</span>::npos);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_not_of(<span class=\"string\">\"abcdef\"</span>, <span class=\"built_in\">string</span>::npos);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    pos = str13.find_last_not_of(<span class=\"string\">\"abcdef\"</span>, <span class=\"built_in\">string</span>::npos, <span class=\"number\">3</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; pos &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//11.string的替换  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str14 = <span class=\"string\">\"abcdefghijklmn\"</span>;  </span><br><span class=\"line\">    str14.replace(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"string\">\"qqqq\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从0开始的3个字符，然后在0处插入字符串“qqqq”  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str14 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str14.replace(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"string\">\"vvvv\"</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从0开始的3个字符，然后在0处插入字符串“vvvv”的前2个字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str14 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str14.replace(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"string\">\"opqrstuvw\"</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从0开始的3个字符，然后在0处插入</span></span><br><span class=\"line\">    <span class=\"comment\">//字符串“opqrstuvw”从位置2开始的4个字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str14 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str14.replace(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">8</span>, <span class=\"string\">'c'</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从0开始的3个字符，然后在0处插入8个字符 c  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str14 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"comment\">//上面的位置可以换为迭代器的位置，操作是一样的，</span></span><br><span class=\"line\">    <span class=\"comment\">//在这里就不再重复了！  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//12.string的插入，下面的位置处亦可以用迭代器</span></span><br><span class=\"line\">    <span class=\"comment\">//的指针表示，操作是一样的  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str15 = <span class=\"string\">\"abcdefg\"</span>;  </span><br><span class=\"line\">    str15.insert(<span class=\"number\">0</span>, <span class=\"string\">\"mnop\"</span>);<span class=\"comment\">//在字符串的0位置开始处，插入字符串“mnop”  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str15 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str15.insert(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"string\">'m'</span>);</span><br><span class=\"line\">    <span class=\"comment\">//在字符串的0位置开始处，插入2个字符m  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str15 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str15.insert(<span class=\"number\">0</span>, <span class=\"string\">\"uvwxy\"</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//在字符串的0位置开始处，插入字符串“uvwxy”中的前3个字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str15 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str15.insert(<span class=\"number\">0</span>, <span class=\"string\">\"uvwxy\"</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">//在字符串的0位置开始处，插入从字符串“uvwxy”的1位置开始的2个字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str15 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//13.string的删除  </span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> str16 = <span class=\"string\">\"gfedcba\"</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">string</span>::iterator it;  </span><br><span class=\"line\">    it = str16.begin();  </span><br><span class=\"line\">    it++;  </span><br><span class=\"line\">    str16.erase(it);</span><br><span class=\"line\">    <span class=\"comment\">//删除it指向的字符，返回删除后迭代器的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str16 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str16.erase(it, it+<span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除it和it+3之间的所有字符，返回删除后迭代器的位置  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str16 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    str16.erase(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"comment\">//删除从字符串位置3以后的所有字符，返回位置3前面的字符  </span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str16 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//14.字符串的流处理  </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">str17</span><span class=\"params\">(<span class=\"string\">\"hello,this is a test\"</span>)</span></span>;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">istringstream</span> <span class=\"title\">is</span><span class=\"params\">(str17)</span></span>;  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> s1,s2,s3,s4;  </span><br><span class=\"line\">    is&gt;&gt;s1&gt;&gt;s2&gt;&gt;s3&gt;&gt;s4;</span><br><span class=\"line\">    <span class=\"comment\">//s1=\"hello,this\",s2=\"is\",s3=\"a\",s4=\"test\"  </span></span><br><span class=\"line\">    <span class=\"built_in\">ostringstream</span> os;  </span><br><span class=\"line\">    os&lt;&lt;s1&lt;&lt;s2&lt;&lt;s3&lt;&lt;s4;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;os.str() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//system(\"pause\");  </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"C++基础：各种输入方法总结，cin、cin.get()、cin.getline()、getline()、gets()、getchar()","date":"2016-06-01T18:21:27.000Z","_content":"\n- 输入原理简述：程序的输入都建有一个缓冲区，即输入缓冲区。每次输入过程是这样的，当一次键盘输入结束时会将输入的数据存入输入缓冲区\n\n- ### cin###\n\n根据cin>>sth 中sth的变量类型读取数据，这里变量类型可以为int，float,char,char*,string等诸多类型。这一输入操作，在遇到结束符（Space、Tab、Enter）就结束，且对于结束符，并不保存到sth中\n\n```cpp\nvoid test_input(){  \n    char ch1[10],ch2[10];  \n    cout<<\"输入两个字符串：\"<<endl;  \n    cin>>ch1;  \n    cin>>ch2;  \n    cout<<\"两个字符串分别为：\"<<endl;  \n    cout<<ch1<<endl;  \n    cout<<ch2<<endl;  \n}  \n```\n![](http://img.blog.csdn.net/20140510165644250)\n\n<!-- more -->\n\n- ### cin.get(字符数组名，接收长度，结束符)###\n\n其中结束符意味着遇到该符号结束字符串读取,默认为ENTER，读取的字符个数最多为（长度-1），因为最后一个为\"\\n\"。要注意的是，cin.get()操作遇到结束符停止读取，但并不会将结束符从缓冲区丢弃\n\n\n- ### cin.getline(字符数组名，接收长度，结束符)###\n\n其用法与cin.get(字符数组名，接收长度，结束符)极为类似。cin.get()当输入的字符串超长时，不会引起cin函数的错误，后面若有cin操作，会继续执行，只是直接从缓冲区中取数据。但是cin.getline()当输入超长时，会引起cin函数的错误，后面的cin操作将不再执行。如下代码：\n\n```cpp\nvoid test_input(){  \n    char ch1,ch2[10];  \n    cout<<\"请输入字符串：\"<<endl;  \n    cin.getline(ch2,6);//在不遇到结束符的情况下，最多可接收6-1=5个字符到ch2中  \n    cin>>ch1;  \n    cout<<ch2<<endl;  \n    cout<<ch1<<\"\\n\"<<(int)ch1<<endl;  \n}  \n```\n\n测试：如下图，输入zifuchuan[Enter]，长度大于最大长度5，就会导致cin函数错误，其后既没有像cin.get()一样直接从输入缓冲区直接读数据，也没有从键盘输入。所以此处可以注意，考虑在用cin.getline()时，适度设置其最大接受长度大一点\n\n![](http://img.blog.csdn.net/20140511001809093)\n\n- ### getline(istream is,string str,结束符)###\n\n同样，此处结束符为可选参数（默认依然为Enter）。然而，getline()与前面的诸多存在的差别在于，它string库函数下，而非前面的istream流，所有调用前要在前面加入#include<string>。与之对应这一方法读入时第二个参数为string类型，而不再是char*，要注意区别。另外，该方法也不是遇到空格就结束输入的\n\n```cpp\nvoid test_input(){  \n    string str;  \n    cout<<\"请输入string内容：\"<<endl;  \n    getline(cin,str,'a');  \n    cout<<str<<endl;  \n}  \n```\n\n![](http://img.blog.csdn.net/20140511001924250)\n![](http://img.blog.csdn.net/20140511001928703)\n\n通过以上第二个图还可以看出，这一方法只有在遇到结束符（此处为‘a’）才结束，对空格甚至回车都不敏感\n\n\n- ### gets(char *ch)###\n\ngets()方法同样接受一个字符串，但是与getline()不同，它的参数为char*，而不是string，另外若定义char ch[n]，长度为n，则样注意输入的字符串长度不要大于n，否则会报错。同样gets()对空格也不敏感\n\n```cpp\nvoid test_input(){  \n    char ch[10];  \n    cout<<\"请输入char*内容：\"<<endl;  \n    gets(ch);  \n    cout<<ch<<endl;  \n}  \n```\n\n![](http://img.blog.csdn.net/20140511002001531)\n![](http://img.blog.csdn.net/20140511002005640)\n\n好吧，就到这里吧，其实还有getchar()、getch()等，这里就不一一赘述了","source":"_posts/C++/C++基础：各种输入方法总结，cin、cin.get()、cin.getline()、getline()、gets()、getchar().md","raw":"---\ntitle: C++基础：各种输入方法总结，cin、cin.get()、cin.getline()、getline()、gets()、getchar()\ndate: 2016-06-01 18:21:27\ntags: C++\ncategories: C++\n---\n\n- 输入原理简述：程序的输入都建有一个缓冲区，即输入缓冲区。每次输入过程是这样的，当一次键盘输入结束时会将输入的数据存入输入缓冲区\n\n- ### cin###\n\n根据cin>>sth 中sth的变量类型读取数据，这里变量类型可以为int，float,char,char*,string等诸多类型。这一输入操作，在遇到结束符（Space、Tab、Enter）就结束，且对于结束符，并不保存到sth中\n\n```cpp\nvoid test_input(){  \n    char ch1[10],ch2[10];  \n    cout<<\"输入两个字符串：\"<<endl;  \n    cin>>ch1;  \n    cin>>ch2;  \n    cout<<\"两个字符串分别为：\"<<endl;  \n    cout<<ch1<<endl;  \n    cout<<ch2<<endl;  \n}  \n```\n![](http://img.blog.csdn.net/20140510165644250)\n\n<!-- more -->\n\n- ### cin.get(字符数组名，接收长度，结束符)###\n\n其中结束符意味着遇到该符号结束字符串读取,默认为ENTER，读取的字符个数最多为（长度-1），因为最后一个为\"\\n\"。要注意的是，cin.get()操作遇到结束符停止读取，但并不会将结束符从缓冲区丢弃\n\n\n- ### cin.getline(字符数组名，接收长度，结束符)###\n\n其用法与cin.get(字符数组名，接收长度，结束符)极为类似。cin.get()当输入的字符串超长时，不会引起cin函数的错误，后面若有cin操作，会继续执行，只是直接从缓冲区中取数据。但是cin.getline()当输入超长时，会引起cin函数的错误，后面的cin操作将不再执行。如下代码：\n\n```cpp\nvoid test_input(){  \n    char ch1,ch2[10];  \n    cout<<\"请输入字符串：\"<<endl;  \n    cin.getline(ch2,6);//在不遇到结束符的情况下，最多可接收6-1=5个字符到ch2中  \n    cin>>ch1;  \n    cout<<ch2<<endl;  \n    cout<<ch1<<\"\\n\"<<(int)ch1<<endl;  \n}  \n```\n\n测试：如下图，输入zifuchuan[Enter]，长度大于最大长度5，就会导致cin函数错误，其后既没有像cin.get()一样直接从输入缓冲区直接读数据，也没有从键盘输入。所以此处可以注意，考虑在用cin.getline()时，适度设置其最大接受长度大一点\n\n![](http://img.blog.csdn.net/20140511001809093)\n\n- ### getline(istream is,string str,结束符)###\n\n同样，此处结束符为可选参数（默认依然为Enter）。然而，getline()与前面的诸多存在的差别在于，它string库函数下，而非前面的istream流，所有调用前要在前面加入#include<string>。与之对应这一方法读入时第二个参数为string类型，而不再是char*，要注意区别。另外，该方法也不是遇到空格就结束输入的\n\n```cpp\nvoid test_input(){  \n    string str;  \n    cout<<\"请输入string内容：\"<<endl;  \n    getline(cin,str,'a');  \n    cout<<str<<endl;  \n}  \n```\n\n![](http://img.blog.csdn.net/20140511001924250)\n![](http://img.blog.csdn.net/20140511001928703)\n\n通过以上第二个图还可以看出，这一方法只有在遇到结束符（此处为‘a’）才结束，对空格甚至回车都不敏感\n\n\n- ### gets(char *ch)###\n\ngets()方法同样接受一个字符串，但是与getline()不同，它的参数为char*，而不是string，另外若定义char ch[n]，长度为n，则样注意输入的字符串长度不要大于n，否则会报错。同样gets()对空格也不敏感\n\n```cpp\nvoid test_input(){  \n    char ch[10];  \n    cout<<\"请输入char*内容：\"<<endl;  \n    gets(ch);  \n    cout<<ch<<endl;  \n}  \n```\n\n![](http://img.blog.csdn.net/20140511002001531)\n![](http://img.blog.csdn.net/20140511002005640)\n\n好吧，就到这里吧，其实还有getchar()、getch()等，这里就不一一赘述了","slug":"C++/C++基础：各种输入方法总结，cin、cin.get()、cin.getline()、getline()、gets()、getchar()","published":1,"updated":"2016-06-17T13:46:13.329Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qhk0017kgaepweqiopt","content":"<ul>\n<li><p>输入原理简述：程序的输入都建有一个缓冲区，即输入缓冲区。每次输入过程是这样的，当一次键盘输入结束时会将输入的数据存入输入缓冲区</p>\n</li>\n<li><h3 id=\"cin\"><a href=\"#cin\" class=\"headerlink\" title=\"cin\"></a>cin</h3></li>\n</ul>\n<p>根据cin&gt;&gt;sth 中sth的变量类型读取数据，这里变量类型可以为int，float,char,char*,string等诸多类型。这一输入操作，在遇到结束符（Space、Tab、Enter）就结束，且对于结束符，并不保存到sth中</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">test_input</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch1[<span class=\"number\">10</span>],ch2[<span class=\"number\">10</span>];  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"输入两个字符串：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;ch1;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;ch2;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"两个字符串分别为：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch1&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch2&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img.blog.csdn.net/20140510165644250\" alt=\"\"></p>\n<a id=\"more\"></a>\n<ul>\n<li><h3 id=\"cin-get-字符数组名，接收长度，结束符\"><a href=\"#cin-get-字符数组名，接收长度，结束符\" class=\"headerlink\" title=\"cin.get(字符数组名，接收长度，结束符)\"></a>cin.get(字符数组名，接收长度，结束符)</h3></li>\n</ul>\n<p>其中结束符意味着遇到该符号结束字符串读取,默认为ENTER，读取的字符个数最多为（长度-1），因为最后一个为”\\n”。要注意的是，cin.get()操作遇到结束符停止读取，但并不会将结束符从缓冲区丢弃</p>\n<ul>\n<li><h3 id=\"cin-getline-字符数组名，接收长度，结束符\"><a href=\"#cin-getline-字符数组名，接收长度，结束符\" class=\"headerlink\" title=\"cin.getline(字符数组名，接收长度，结束符)\"></a>cin.getline(字符数组名，接收长度，结束符)</h3></li>\n</ul>\n<p>其用法与cin.get(字符数组名，接收长度，结束符)极为类似。cin.get()当输入的字符串超长时，不会引起cin函数的错误，后面若有cin操作，会继续执行，只是直接从缓冲区中取数据。但是cin.getline()当输入超长时，会引起cin函数的错误，后面的cin操作将不再执行。如下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">test_input</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch1,ch2[<span class=\"number\">10</span>];  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入字符串：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.getline(ch2,<span class=\"number\">6</span>);<span class=\"comment\">//在不遇到结束符的情况下，最多可接收6-1=5个字符到ch2中  </span></span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;ch1;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch2&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch1&lt;&lt;<span class=\"string\">\"\\n\"</span>&lt;&lt;(<span class=\"keyword\">int</span>)ch1&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试：如下图，输入zifuchuan[Enter]，长度大于最大长度5，就会导致cin函数错误，其后既没有像cin.get()一样直接从输入缓冲区直接读数据，也没有从键盘输入。所以此处可以注意，考虑在用cin.getline()时，适度设置其最大接受长度大一点</p>\n<p><img src=\"http://img.blog.csdn.net/20140511001809093\" alt=\"\"></p>\n<ul>\n<li><h3 id=\"getline-istream-is-string-str-结束符\"><a href=\"#getline-istream-is-string-str-结束符\" class=\"headerlink\" title=\"getline(istream is,string str,结束符)\"></a>getline(istream is,string str,结束符)</h3></li>\n</ul>\n<p>同样，此处结束符为可选参数（默认依然为Enter）。然而，getline()与前面的诸多存在的差别在于，它string库函数下，而非前面的istream流，所有调用前要在前面加入#include<string>。与之对应这一方法读入时第二个参数为string类型，而不再是char*，要注意区别。另外，该方法也不是遇到空格就结束输入的</string></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">test_input</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> str;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入string内容：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    getline(<span class=\"built_in\">cin</span>,str,<span class=\"string\">'a'</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;str&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img.blog.csdn.net/20140511001924250\" alt=\"\"><br><img src=\"http://img.blog.csdn.net/20140511001928703\" alt=\"\"></p>\n<p>通过以上第二个图还可以看出，这一方法只有在遇到结束符（此处为‘a’）才结束，对空格甚至回车都不敏感</p>\n<ul>\n<li><h3 id=\"gets-char-ch\"><a href=\"#gets-char-ch\" class=\"headerlink\" title=\"gets(char *ch)\"></a>gets(char *ch)</h3></li>\n</ul>\n<p>gets()方法同样接受一个字符串，但是与getline()不同，它的参数为char*，而不是string，另外若定义char ch[n]，长度为n，则样注意输入的字符串长度不要大于n，否则会报错。同样gets()对空格也不敏感</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">test_input</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch[<span class=\"number\">10</span>];  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入char*内容：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    gets(ch);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img.blog.csdn.net/20140511002001531\" alt=\"\"><br><img src=\"http://img.blog.csdn.net/20140511002005640\" alt=\"\"></p>\n<p>好吧，就到这里吧，其实还有getchar()、getch()等，这里就不一一赘述了</p>\n","excerpt":"<ul>\n<li><p>输入原理简述：程序的输入都建有一个缓冲区，即输入缓冲区。每次输入过程是这样的，当一次键盘输入结束时会将输入的数据存入输入缓冲区</p>\n</li>\n<li><h3 id=\"cin\"><a href=\"#cin\" class=\"headerlink\" title=\"cin\"></a>cin</h3></li>\n</ul>\n<p>根据cin&gt;&gt;sth 中sth的变量类型读取数据，这里变量类型可以为int，float,char,char*,string等诸多类型。这一输入操作，在遇到结束符（Space、Tab、Enter）就结束，且对于结束符，并不保存到sth中</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">test_input</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch1[<span class=\"number\">10</span>],ch2[<span class=\"number\">10</span>];  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"输入两个字符串：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;ch1;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;ch2;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"两个字符串分别为：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch1&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch2&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img.blog.csdn.net/20140510165644250\" alt=\"\"></p>","more":"<ul>\n<li><h3 id=\"cin-get-字符数组名，接收长度，结束符\"><a href=\"#cin-get-字符数组名，接收长度，结束符\" class=\"headerlink\" title=\"cin.get(字符数组名，接收长度，结束符)\"></a>cin.get(字符数组名，接收长度，结束符)</h3></li>\n</ul>\n<p>其中结束符意味着遇到该符号结束字符串读取,默认为ENTER，读取的字符个数最多为（长度-1），因为最后一个为”\\n”。要注意的是，cin.get()操作遇到结束符停止读取，但并不会将结束符从缓冲区丢弃</p>\n<ul>\n<li><h3 id=\"cin-getline-字符数组名，接收长度，结束符\"><a href=\"#cin-getline-字符数组名，接收长度，结束符\" class=\"headerlink\" title=\"cin.getline(字符数组名，接收长度，结束符)\"></a>cin.getline(字符数组名，接收长度，结束符)</h3></li>\n</ul>\n<p>其用法与cin.get(字符数组名，接收长度，结束符)极为类似。cin.get()当输入的字符串超长时，不会引起cin函数的错误，后面若有cin操作，会继续执行，只是直接从缓冲区中取数据。但是cin.getline()当输入超长时，会引起cin函数的错误，后面的cin操作将不再执行。如下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">test_input</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch1,ch2[<span class=\"number\">10</span>];  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入字符串：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.getline(ch2,<span class=\"number\">6</span>);<span class=\"comment\">//在不遇到结束符的情况下，最多可接收6-1=5个字符到ch2中  </span></span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;ch1;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch2&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch1&lt;&lt;<span class=\"string\">\"\\n\"</span>&lt;&lt;(<span class=\"keyword\">int</span>)ch1&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试：如下图，输入zifuchuan[Enter]，长度大于最大长度5，就会导致cin函数错误，其后既没有像cin.get()一样直接从输入缓冲区直接读数据，也没有从键盘输入。所以此处可以注意，考虑在用cin.getline()时，适度设置其最大接受长度大一点</p>\n<p><img src=\"http://img.blog.csdn.net/20140511001809093\" alt=\"\"></p>\n<ul>\n<li><h3 id=\"getline-istream-is-string-str-结束符\"><a href=\"#getline-istream-is-string-str-结束符\" class=\"headerlink\" title=\"getline(istream is,string str,结束符)\"></a>getline(istream is,string str,结束符)</h3></li>\n</ul>\n<p>同样，此处结束符为可选参数（默认依然为Enter）。然而，getline()与前面的诸多存在的差别在于，它string库函数下，而非前面的istream流，所有调用前要在前面加入#include<string>。与之对应这一方法读入时第二个参数为string类型，而不再是char*，要注意区别。另外，该方法也不是遇到空格就结束输入的</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">test_input</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">string</span> str;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入string内容：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    getline(<span class=\"built_in\">cin</span>,str,<span class=\"string\">'a'</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;str&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img.blog.csdn.net/20140511001924250\" alt=\"\"><br><img src=\"http://img.blog.csdn.net/20140511001928703\" alt=\"\"></p>\n<p>通过以上第二个图还可以看出，这一方法只有在遇到结束符（此处为‘a’）才结束，对空格甚至回车都不敏感</p>\n<ul>\n<li><h3 id=\"gets-char-ch\"><a href=\"#gets-char-ch\" class=\"headerlink\" title=\"gets(char *ch)\"></a>gets(char *ch)</h3></li>\n</ul>\n<p>gets()方法同样接受一个字符串，但是与getline()不同，它的参数为char*，而不是string，另外若定义char ch[n]，长度为n，则样注意输入的字符串长度不要大于n，否则会报错。同样gets()对空格也不敏感</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">test_input</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch[<span class=\"number\">10</span>];  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"请输入char*内容：\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    gets(ch);  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ch&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img.blog.csdn.net/20140511002001531\" alt=\"\"><br><img src=\"http://img.blog.csdn.net/20140511002005640\" alt=\"\"></p>\n<p>好吧，就到这里吧，其实还有getchar()、getch()等，这里就不一一赘述了</p>"},{"title":" STL之map和multimap总结","date":"2016-06-01T18:40:49.000Z","_content":"\n- map和multimap都是有序关联容器，所有元素都会根据元素的键值自动被排序,包含具有唯一键的键值对。键使用比较函数Compare比较来进行排序。搜索，删除和插入操作具有对数复杂性。map和multimap通常实现为红黑树。multimap相对map来说能够允许重复值的存在\n\n\n- ### 构造，赋值，析构###\n\n```cpp\nmap c //默认构造函数；创建一个空map/multimap  \n  \nmap c(op) //创建一个空map/multimap，并以op原则作为排序准则  \n  \nmap c(c2) //复制构造函数；创建一个新的map/multimap\n//作为c2的副本（所有元素都被复制）  \n  \nmap c = c2 //复制构造函数；创建一个新的map\n//作为c2的副本（所有元素都被复制）  \n  \nmap c(rv) //移动构造函数；使用右值对象rv创建一个新map/multimap  \n  \nmap c = rv //移动构造函数；使用右值对象rv创建一个新map/multimap  \n  \nmap c(beg,end) //创建一个map/multimap，并使用\n//beg到end范围内的值进行初始化  \n  \nmap c(beg,end,op) //创建一个map/multimap，\n//并使用beg到end范围内以op原则排序后的值进行初始化  \n  \nmap c(initlist) \n//创建一个map/multimap，并使用初始化列表进行初始化  \n  \nmap c = initlist \n//创建一个map/multimap，并使用初始化列表进行初始化  \n  \nc.~map() //销毁所有元素并释放内存  \n```\n\n<!-- more -->\n\n- 在这里map可能是如下的一种：\n\n```cpp\nmap<Key,Val> //以less<>为排序准则的map  \n  \nmap<Key,Val,Op> //以op为排序准则的map  \n  \nmultimap<Key,Val> //以less<>为排序准则的multimap  \n  \nmultimap<Key,Val,Op> //以op为排序准则的multimap  \n```\n\n- ### 非变动性操作###\n\n```cpp\nc.key_comp() //返回比较准则  \n  \nc.value_comp() //返回对值比较的标准 (与key_comp()相同)  \n  \nc.empty() //判断容器是否为空，与size()==0相同，但可能更快  \n  \nc.size() //返回当前元素数量  \n  \nc.max_size() //返回可容纳的元素最大数量  \n  \nc1 == c2 //判断c1与c2是否相等  \n  \nc1 != c2 //判断c1与c2是否不相等，等同于!(c1==c2)  \n  \nc1 < c2 //判断c1是否小于c2  \n  \nc1 > c2 //判断c1是否大于c2  \n  \nc1 <= c2 //判断c1是否小于等于c2  \n  \nc1 >= c2 //判断c1是否大于等于c2  \n```\n\n\n- ### 特殊查询操作###\n\n```cpp\nc.count(key) //返回键值为key的元素个数  \n  \nc.find(key) //返回第一个键值为key的位置，若没找到返回end()  \n  \nc.lower_bound(key) //返回键值为key的第一个可插入的\n//位置，也就是键值 >= key的第一个元素位置  \n  \nc.upper_bound(key) //返回键值为key的最后一个可插入的位置，\n//也就是键值 > key的第一个元素位置  \n  \nc.equal_range(key) //返回键值为key的可插入的第一个位置和最后一个位置的区间，\n//也就是键值 == key的元素区间  \n```\n\n- ### 赋值### \n\n```cpp\nc = c2 //将c2所有元素赋值给c  \n  \nc = rv //将右值对象rv的所有元素移动赋值给c  \n  \nc = initlist //使用初始化列表进行赋值  \n  \nc1.swap(c2) //交换c1和c2的数  \n  \nswap(c1,c2) //交换c1和c2的数  \n```\n\n- ### 迭代器相关函数###\n\n```cpp\nc.begin() //返回一个双向迭代器，指向第一个元素  \n  \nc.end() //返回一个双向迭代器，指向最后一个元素  \n  \nc.cbegin() //返回一个双向常迭代器，指向第一个元素  \n  \nc.cend() //返回一个双向常迭代器，指向最后一个元素  \n  \nc.rbegin() //返回一个逆向迭代器，指向逆向迭代的第一个元素  \n  \nc.rend() //返回一个逆向迭代器，指向逆向迭代的最后一个元素  \n  \nc.crbegin() //返回一个逆向常迭代器，指向逆向迭代的第一个元素  \n  \nc.crend() //返回一个逆向常迭代器，指向逆向迭代的最后一个元素  \n```\n\n- ### 插入和移除元素###\n\n```cpp\nc.insert(val) //插入一个val的副本，返回新元素位置（对map来说不论成功与否）  \n  \nc.insert(pos,val) //插入一个val副本，返回新元素位置（pos应该是插入的搜寻起点）  \n  \nc.insert(beg,end) //将范围beg到end的所有元素的副本插入到c（无返回值）  \n  \nc.insert(initlist) //插入初始化列表的所有元素的副本（无返回值）  \n  \nc.emplace(args...) //插入一个使用args初始化的元素副本，返回新元素位置（对map来说不论成功与否）  \n  \nc.emplace_hint(pos,args...) //插入一个使用args初始化的元素副本，返回新元素\n//位置（pos应该是插入的搜寻起点）  \n  \nc.erase(val) //移除所有与val值相等的元素，并返移除的元素个数  \n  \nc.erase(pos) //移除迭代器位置的元素，并返回下个元素的位置  \n  \nc.erase(beg,end) //移除beg到end范围内的所有元素，并\n//返回下个元素的位置  \n  \nc.clear() //移除所以元素，清空容器  \n```\n\n\n- ### 键值对转递###\n\n```cpp\n//使用value_type  \nstd::map<std::string,float> coll;  \n  \ncoll.insert(std::map<std::string,float>::value_type(\"otto\",22.3));  \n  \n//使用pair<>  \nstd::map<std::string,float> coll;  \n  \ncoll.insert(std::pair<std::string,float>(\"otto\",22.3));  \n  \n//使用make_pair()  \nstd::map<std::string,float> coll;  \n  \ncoll.insert(std::make_pair(\"otto\",22.3));  \n```\n\n- 当作关联数组使用\n\n```cpp\nc[key] //返回一个指向键值为key的元素的引用，如果不存在就插入这个元素  \n  \nc.at(key) //返回一个指向键值为key的元素的引用  \n```\n\n\n- ### 实例：map集合的插入和遍历###\n\n```cpp\n#include <map>  \n#include <string>  \n#include <iostream>  \n#include <stdio.h>  \n#include <algorithm>  \nusing namespace std;  \n/** \n   map集合的插入和遍历 \n*/  \nint main(){  \n    map<string,int> coll;  \n    coll.insert(pair<string,int>(\"1\",12));  \n    coll.insert(pair<string,int>(\"2\",10));  \n    coll.insert(pair<string,int>(\"3\",11));  \n     for(map<string,int>::iterator\n     it=coll.begin();it!=coll.end();it++){  \n         int len=distance(coll.begin(),it);  \n         printf(\"元素在集合中的位置=%d\\n\",len);  \n         pair<string,int> p=*it;  \n         printf(\"元素的值=%d\\n\",p.second);  \n         printf(\"元素的键=\");  \n         cout<<p.first<<endl;  \n         printf(\"\\n\");  \n     }  \n    return 0;  \n}  \n```","source":"_posts/C++/STL之map和multimap总结.md","raw":"---\ntitle: ' STL之map和multimap总结'\ndate: 2016-06-01 18:40:49\ntags: [C++,STL,map,multimap]\ncategories: C++\n---\n\n- map和multimap都是有序关联容器，所有元素都会根据元素的键值自动被排序,包含具有唯一键的键值对。键使用比较函数Compare比较来进行排序。搜索，删除和插入操作具有对数复杂性。map和multimap通常实现为红黑树。multimap相对map来说能够允许重复值的存在\n\n\n- ### 构造，赋值，析构###\n\n```cpp\nmap c //默认构造函数；创建一个空map/multimap  \n  \nmap c(op) //创建一个空map/multimap，并以op原则作为排序准则  \n  \nmap c(c2) //复制构造函数；创建一个新的map/multimap\n//作为c2的副本（所有元素都被复制）  \n  \nmap c = c2 //复制构造函数；创建一个新的map\n//作为c2的副本（所有元素都被复制）  \n  \nmap c(rv) //移动构造函数；使用右值对象rv创建一个新map/multimap  \n  \nmap c = rv //移动构造函数；使用右值对象rv创建一个新map/multimap  \n  \nmap c(beg,end) //创建一个map/multimap，并使用\n//beg到end范围内的值进行初始化  \n  \nmap c(beg,end,op) //创建一个map/multimap，\n//并使用beg到end范围内以op原则排序后的值进行初始化  \n  \nmap c(initlist) \n//创建一个map/multimap，并使用初始化列表进行初始化  \n  \nmap c = initlist \n//创建一个map/multimap，并使用初始化列表进行初始化  \n  \nc.~map() //销毁所有元素并释放内存  \n```\n\n<!-- more -->\n\n- 在这里map可能是如下的一种：\n\n```cpp\nmap<Key,Val> //以less<>为排序准则的map  \n  \nmap<Key,Val,Op> //以op为排序准则的map  \n  \nmultimap<Key,Val> //以less<>为排序准则的multimap  \n  \nmultimap<Key,Val,Op> //以op为排序准则的multimap  \n```\n\n- ### 非变动性操作###\n\n```cpp\nc.key_comp() //返回比较准则  \n  \nc.value_comp() //返回对值比较的标准 (与key_comp()相同)  \n  \nc.empty() //判断容器是否为空，与size()==0相同，但可能更快  \n  \nc.size() //返回当前元素数量  \n  \nc.max_size() //返回可容纳的元素最大数量  \n  \nc1 == c2 //判断c1与c2是否相等  \n  \nc1 != c2 //判断c1与c2是否不相等，等同于!(c1==c2)  \n  \nc1 < c2 //判断c1是否小于c2  \n  \nc1 > c2 //判断c1是否大于c2  \n  \nc1 <= c2 //判断c1是否小于等于c2  \n  \nc1 >= c2 //判断c1是否大于等于c2  \n```\n\n\n- ### 特殊查询操作###\n\n```cpp\nc.count(key) //返回键值为key的元素个数  \n  \nc.find(key) //返回第一个键值为key的位置，若没找到返回end()  \n  \nc.lower_bound(key) //返回键值为key的第一个可插入的\n//位置，也就是键值 >= key的第一个元素位置  \n  \nc.upper_bound(key) //返回键值为key的最后一个可插入的位置，\n//也就是键值 > key的第一个元素位置  \n  \nc.equal_range(key) //返回键值为key的可插入的第一个位置和最后一个位置的区间，\n//也就是键值 == key的元素区间  \n```\n\n- ### 赋值### \n\n```cpp\nc = c2 //将c2所有元素赋值给c  \n  \nc = rv //将右值对象rv的所有元素移动赋值给c  \n  \nc = initlist //使用初始化列表进行赋值  \n  \nc1.swap(c2) //交换c1和c2的数  \n  \nswap(c1,c2) //交换c1和c2的数  \n```\n\n- ### 迭代器相关函数###\n\n```cpp\nc.begin() //返回一个双向迭代器，指向第一个元素  \n  \nc.end() //返回一个双向迭代器，指向最后一个元素  \n  \nc.cbegin() //返回一个双向常迭代器，指向第一个元素  \n  \nc.cend() //返回一个双向常迭代器，指向最后一个元素  \n  \nc.rbegin() //返回一个逆向迭代器，指向逆向迭代的第一个元素  \n  \nc.rend() //返回一个逆向迭代器，指向逆向迭代的最后一个元素  \n  \nc.crbegin() //返回一个逆向常迭代器，指向逆向迭代的第一个元素  \n  \nc.crend() //返回一个逆向常迭代器，指向逆向迭代的最后一个元素  \n```\n\n- ### 插入和移除元素###\n\n```cpp\nc.insert(val) //插入一个val的副本，返回新元素位置（对map来说不论成功与否）  \n  \nc.insert(pos,val) //插入一个val副本，返回新元素位置（pos应该是插入的搜寻起点）  \n  \nc.insert(beg,end) //将范围beg到end的所有元素的副本插入到c（无返回值）  \n  \nc.insert(initlist) //插入初始化列表的所有元素的副本（无返回值）  \n  \nc.emplace(args...) //插入一个使用args初始化的元素副本，返回新元素位置（对map来说不论成功与否）  \n  \nc.emplace_hint(pos,args...) //插入一个使用args初始化的元素副本，返回新元素\n//位置（pos应该是插入的搜寻起点）  \n  \nc.erase(val) //移除所有与val值相等的元素，并返移除的元素个数  \n  \nc.erase(pos) //移除迭代器位置的元素，并返回下个元素的位置  \n  \nc.erase(beg,end) //移除beg到end范围内的所有元素，并\n//返回下个元素的位置  \n  \nc.clear() //移除所以元素，清空容器  \n```\n\n\n- ### 键值对转递###\n\n```cpp\n//使用value_type  \nstd::map<std::string,float> coll;  \n  \ncoll.insert(std::map<std::string,float>::value_type(\"otto\",22.3));  \n  \n//使用pair<>  \nstd::map<std::string,float> coll;  \n  \ncoll.insert(std::pair<std::string,float>(\"otto\",22.3));  \n  \n//使用make_pair()  \nstd::map<std::string,float> coll;  \n  \ncoll.insert(std::make_pair(\"otto\",22.3));  \n```\n\n- 当作关联数组使用\n\n```cpp\nc[key] //返回一个指向键值为key的元素的引用，如果不存在就插入这个元素  \n  \nc.at(key) //返回一个指向键值为key的元素的引用  \n```\n\n\n- ### 实例：map集合的插入和遍历###\n\n```cpp\n#include <map>  \n#include <string>  \n#include <iostream>  \n#include <stdio.h>  \n#include <algorithm>  \nusing namespace std;  \n/** \n   map集合的插入和遍历 \n*/  \nint main(){  \n    map<string,int> coll;  \n    coll.insert(pair<string,int>(\"1\",12));  \n    coll.insert(pair<string,int>(\"2\",10));  \n    coll.insert(pair<string,int>(\"3\",11));  \n     for(map<string,int>::iterator\n     it=coll.begin();it!=coll.end();it++){  \n         int len=distance(coll.begin(),it);  \n         printf(\"元素在集合中的位置=%d\\n\",len);  \n         pair<string,int> p=*it;  \n         printf(\"元素的值=%d\\n\",p.second);  \n         printf(\"元素的键=\");  \n         cout<<p.first<<endl;  \n         printf(\"\\n\");  \n     }  \n    return 0;  \n}  \n```","slug":"C++/STL之map和multimap总结","published":1,"updated":"2016-06-17T13:48:44.030Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qhp001bkgaeejgar6bu","content":"<ul>\n<li>map和multimap都是有序关联容器，所有元素都会根据元素的键值自动被排序,包含具有唯一键的键值对。键使用比较函数Compare比较来进行排序。搜索，删除和插入操作具有对数复杂性。map和multimap通常实现为红黑树。multimap相对map来说能够允许重复值的存在</li>\n</ul>\n<ul>\n<li><h3 id=\"构造，赋值，析构\"><a href=\"#构造，赋值，析构\" class=\"headerlink\" title=\"构造，赋值，析构\"></a>构造，赋值，析构</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">map</span> c <span class=\"comment\">//默认构造函数；创建一个空map/multimap  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(op)</span> <span class=\"comment\">//创建一个空map/multimap，并以op原则作为排序准则  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(c2)</span> <span class=\"comment\">//复制构造函数；创建一个新的map/multimap</span></span><br><span class=\"line\"><span class=\"comment\">//作为c2的副本（所有元素都被复制）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> c </span>= c2 <span class=\"comment\">//复制构造函数；创建一个新的map</span></span><br><span class=\"line\"><span class=\"comment\">//作为c2的副本（所有元素都被复制）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(rv)</span> <span class=\"comment\">//移动构造函数；使用右值对象rv创建一个新map/multimap  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> c </span>= rv <span class=\"comment\">//移动构造函数；使用右值对象rv创建一个新map/multimap  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(beg,end)</span> <span class=\"comment\">//创建一个map/multimap，并使用</span></span><br><span class=\"line\"><span class=\"comment\">//beg到end范围内的值进行初始化  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(beg,end,op)</span> <span class=\"comment\">//创建一个map/multimap，</span></span><br><span class=\"line\"><span class=\"comment\">//并使用beg到end范围内以op原则排序后的值进行初始化  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(initlist)</span> </span><br><span class=\"line\"><span class=\"comment\">//创建一个map/multimap，并使用初始化列表进行初始化  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> c </span>= initlist </span><br><span class=\"line\"><span class=\"comment\">//创建一个map/multimap，并使用初始化列表进行初始化  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.~<span class=\"built_in\">map</span>() <span class=\"comment\">//销毁所有元素并释放内存</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li>在这里map可能是如下的一种：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">map</span>&lt;Key,Val&gt; <span class=\"comment\">//以less&lt;&gt;为排序准则的map  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;Key,Val,Op&gt; <span class=\"comment\">//以op为排序准则的map  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">multimap</span>&lt;Key,Val&gt; <span class=\"comment\">//以less&lt;&gt;为排序准则的multimap  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">multimap</span>&lt;Key,Val,Op&gt; <span class=\"comment\">//以op为排序准则的multimap</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"非变动性操作\"><a href=\"#非变动性操作\" class=\"headerlink\" title=\"非变动性操作\"></a>非变动性操作</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.key_comp() <span class=\"comment\">//返回比较准则  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.value_comp() <span class=\"comment\">//返回对值比较的标准 (与key_comp()相同)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.empty() <span class=\"comment\">//判断容器是否为空，与size()==0相同，但可能更快  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.size() <span class=\"comment\">//返回当前元素数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size() <span class=\"comment\">//返回可容纳的元素最大数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 == c2 <span class=\"comment\">//判断c1与c2是否相等  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 != c2 <span class=\"comment\">//判断c1与c2是否不相等，等同于!(c1==c2)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &lt; c2 <span class=\"comment\">//判断c1是否小于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &gt; c2 <span class=\"comment\">//判断c1是否大于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &lt;= c2 <span class=\"comment\">//判断c1是否小于等于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &gt;= c2 <span class=\"comment\">//判断c1是否大于等于c2</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"特殊查询操作\"><a href=\"#特殊查询操作\" class=\"headerlink\" title=\"特殊查询操作\"></a>特殊查询操作</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.count(key) <span class=\"comment\">//返回键值为key的元素个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.find(key) <span class=\"comment\">//返回第一个键值为key的位置，若没找到返回end()  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.lower_bound(key) <span class=\"comment\">//返回键值为key的第一个可插入的</span></span><br><span class=\"line\"><span class=\"comment\">//位置，也就是键值 &gt;= key的第一个元素位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.upper_bound(key) <span class=\"comment\">//返回键值为key的最后一个可插入的位置，</span></span><br><span class=\"line\"><span class=\"comment\">//也就是键值 &gt; key的第一个元素位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.equal_range(key) <span class=\"comment\">//返回键值为key的可插入的第一个位置和最后一个位置的区间，</span></span><br><span class=\"line\"><span class=\"comment\">//也就是键值 == key的元素区间</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c = c2 <span class=\"comment\">//将c2所有元素赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c = rv <span class=\"comment\">//将右值对象rv的所有元素移动赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c = initlist <span class=\"comment\">//使用初始化列表进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1.swap(c2) <span class=\"comment\">//交换c1和c2的数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap(c1,c2) <span class=\"comment\">//交换c1和c2的数</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"迭代器相关函数\"><a href=\"#迭代器相关函数\" class=\"headerlink\" title=\"迭代器相关函数\"></a>迭代器相关函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.begin() <span class=\"comment\">//返回一个双向迭代器，指向第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.end() <span class=\"comment\">//返回一个双向迭代器，指向最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.cbegin() <span class=\"comment\">//返回一个双向常迭代器，指向第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.cend() <span class=\"comment\">//返回一个双向常迭代器，指向最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rbegin() <span class=\"comment\">//返回一个逆向迭代器，指向逆向迭代的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rend() <span class=\"comment\">//返回一个逆向迭代器，指向逆向迭代的最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.crbegin() <span class=\"comment\">//返回一个逆向常迭代器，指向逆向迭代的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.crend() <span class=\"comment\">//返回一个逆向常迭代器，指向逆向迭代的最后一个元素</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"插入和移除元素\"><a href=\"#插入和移除元素\" class=\"headerlink\" title=\"插入和移除元素\"></a>插入和移除元素</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.insert(val) <span class=\"comment\">//插入一个val的副本，返回新元素位置（对map来说不论成功与否）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,val) <span class=\"comment\">//插入一个val副本，返回新元素位置（pos应该是插入的搜寻起点）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(beg,end) <span class=\"comment\">//将范围beg到end的所有元素的副本插入到c（无返回值）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(initlist) <span class=\"comment\">//插入初始化列表的所有元素的副本（无返回值）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.emplace(args...) <span class=\"comment\">//插入一个使用args初始化的元素副本，返回新元素位置（对map来说不论成功与否）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.emplace_hint(pos,args...) <span class=\"comment\">//插入一个使用args初始化的元素副本，返回新元素</span></span><br><span class=\"line\"><span class=\"comment\">//位置（pos应该是插入的搜寻起点）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(val) <span class=\"comment\">//移除所有与val值相等的元素，并返移除的元素个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(pos) <span class=\"comment\">//移除迭代器位置的元素，并返回下个元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(beg,end) <span class=\"comment\">//移除beg到end范围内的所有元素，并</span></span><br><span class=\"line\"><span class=\"comment\">//返回下个元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.clear() <span class=\"comment\">//移除所以元素，清空容器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"键值对转递\"><a href=\"#键值对转递\" class=\"headerlink\" title=\"键值对转递\"></a>键值对转递</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用value_type  </span></span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt; coll;  </span><br><span class=\"line\">  </span><br><span class=\"line\">coll.insert(<span class=\"built_in\">std</span>::<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt;::value_type(<span class=\"string\">\"otto\"</span>,<span class=\"number\">22.3</span>));  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//使用pair&lt;&gt;  </span></span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt; coll;  </span><br><span class=\"line\">  </span><br><span class=\"line\">coll.insert(<span class=\"built_in\">std</span>::pair&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt;(<span class=\"string\">\"otto\"</span>,<span class=\"number\">22.3</span>));  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//使用make_pair()  </span></span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt; coll;  </span><br><span class=\"line\">  </span><br><span class=\"line\">coll.insert(<span class=\"built_in\">std</span>::make_pair(<span class=\"string\">\"otto\"</span>,<span class=\"number\">22.3</span>));</span><br></pre></td></tr></table></figure>\n<ul>\n<li>当作关联数组使用</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c[key] <span class=\"comment\">//返回一个指向键值为key的元素的引用，如果不存在就插入这个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.at(key) <span class=\"comment\">//返回一个指向键值为key的元素的引用</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"实例：map集合的插入和遍历\"><a href=\"#实例：map集合的插入和遍历\" class=\"headerlink\" title=\"实例：map集合的插入和遍历\"></a>实例：map集合的插入和遍历</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">   map集合的插入和遍历 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt; coll;  </span><br><span class=\"line\">    coll.insert(pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;(<span class=\"string\">\"1\"</span>,<span class=\"number\">12</span>));  </span><br><span class=\"line\">    coll.insert(pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;(<span class=\"string\">\"2\"</span>,<span class=\"number\">10</span>));  </span><br><span class=\"line\">    coll.insert(pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;(<span class=\"string\">\"3\"</span>,<span class=\"number\">11</span>));  </span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;::iterator</span><br><span class=\"line\">     it=coll.begin();it!=coll.end();it++)&#123;  </span><br><span class=\"line\">         <span class=\"keyword\">int</span> len=distance(coll.begin(),it);  </span><br><span class=\"line\">         <span class=\"built_in\">printf</span>(<span class=\"string\">\"元素在集合中的位置=%d\\n\"</span>,len);  </span><br><span class=\"line\">         pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt; p=*it;  </span><br><span class=\"line\">         <span class=\"built_in\">printf</span>(<span class=\"string\">\"元素的值=%d\\n\"</span>,p.second);  </span><br><span class=\"line\">         <span class=\"built_in\">printf</span>(<span class=\"string\">\"元素的键=\"</span>);  </span><br><span class=\"line\">         <span class=\"built_in\">cout</span>&lt;&lt;p.first&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">         <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li>map和multimap都是有序关联容器，所有元素都会根据元素的键值自动被排序,包含具有唯一键的键值对。键使用比较函数Compare比较来进行排序。搜索，删除和插入操作具有对数复杂性。map和multimap通常实现为红黑树。multimap相对map来说能够允许重复值的存在</li>\n</ul>\n<ul>\n<li><h3 id=\"构造，赋值，析构\"><a href=\"#构造，赋值，析构\" class=\"headerlink\" title=\"构造，赋值，析构\"></a>构造，赋值，析构</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">map</span> c <span class=\"comment\">//默认构造函数；创建一个空map/multimap  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(op)</span> <span class=\"comment\">//创建一个空map/multimap，并以op原则作为排序准则  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(c2)</span> <span class=\"comment\">//复制构造函数；创建一个新的map/multimap</span></span><br><span class=\"line\"><span class=\"comment\">//作为c2的副本（所有元素都被复制）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> c </span>= c2 <span class=\"comment\">//复制构造函数；创建一个新的map</span></span><br><span class=\"line\"><span class=\"comment\">//作为c2的副本（所有元素都被复制）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(rv)</span> <span class=\"comment\">//移动构造函数；使用右值对象rv创建一个新map/multimap  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> c </span>= rv <span class=\"comment\">//移动构造函数；使用右值对象rv创建一个新map/multimap  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(beg,end)</span> <span class=\"comment\">//创建一个map/multimap，并使用</span></span><br><span class=\"line\"><span class=\"comment\">//beg到end范围内的值进行初始化  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(beg,end,op)</span> <span class=\"comment\">//创建一个map/multimap，</span></span><br><span class=\"line\"><span class=\"comment\">//并使用beg到end范围内以op原则排序后的值进行初始化  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> <span class=\"title\">c</span><span class=\"params\">(initlist)</span> </span><br><span class=\"line\"><span class=\"comment\">//创建一个map/multimap，并使用初始化列表进行初始化  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span> c </span>= initlist </span><br><span class=\"line\"><span class=\"comment\">//创建一个map/multimap，并使用初始化列表进行初始化  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.~<span class=\"built_in\">map</span>() <span class=\"comment\">//销毁所有元素并释放内存</span></span><br></pre></td></tr></table></figure>","more":"<ul>\n<li>在这里map可能是如下的一种：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">map</span>&lt;Key,Val&gt; <span class=\"comment\">//以less&lt;&gt;为排序准则的map  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;Key,Val,Op&gt; <span class=\"comment\">//以op为排序准则的map  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">multimap</span>&lt;Key,Val&gt; <span class=\"comment\">//以less&lt;&gt;为排序准则的multimap  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">multimap</span>&lt;Key,Val,Op&gt; <span class=\"comment\">//以op为排序准则的multimap</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"非变动性操作\"><a href=\"#非变动性操作\" class=\"headerlink\" title=\"非变动性操作\"></a>非变动性操作</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.key_comp() <span class=\"comment\">//返回比较准则  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.value_comp() <span class=\"comment\">//返回对值比较的标准 (与key_comp()相同)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.empty() <span class=\"comment\">//判断容器是否为空，与size()==0相同，但可能更快  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.size() <span class=\"comment\">//返回当前元素数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size() <span class=\"comment\">//返回可容纳的元素最大数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 == c2 <span class=\"comment\">//判断c1与c2是否相等  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 != c2 <span class=\"comment\">//判断c1与c2是否不相等，等同于!(c1==c2)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &lt; c2 <span class=\"comment\">//判断c1是否小于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &gt; c2 <span class=\"comment\">//判断c1是否大于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &lt;= c2 <span class=\"comment\">//判断c1是否小于等于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &gt;= c2 <span class=\"comment\">//判断c1是否大于等于c2</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"特殊查询操作\"><a href=\"#特殊查询操作\" class=\"headerlink\" title=\"特殊查询操作\"></a>特殊查询操作</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.count(key) <span class=\"comment\">//返回键值为key的元素个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.find(key) <span class=\"comment\">//返回第一个键值为key的位置，若没找到返回end()  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.lower_bound(key) <span class=\"comment\">//返回键值为key的第一个可插入的</span></span><br><span class=\"line\"><span class=\"comment\">//位置，也就是键值 &gt;= key的第一个元素位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.upper_bound(key) <span class=\"comment\">//返回键值为key的最后一个可插入的位置，</span></span><br><span class=\"line\"><span class=\"comment\">//也就是键值 &gt; key的第一个元素位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.equal_range(key) <span class=\"comment\">//返回键值为key的可插入的第一个位置和最后一个位置的区间，</span></span><br><span class=\"line\"><span class=\"comment\">//也就是键值 == key的元素区间</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c = c2 <span class=\"comment\">//将c2所有元素赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c = rv <span class=\"comment\">//将右值对象rv的所有元素移动赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c = initlist <span class=\"comment\">//使用初始化列表进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1.swap(c2) <span class=\"comment\">//交换c1和c2的数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap(c1,c2) <span class=\"comment\">//交换c1和c2的数</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"迭代器相关函数\"><a href=\"#迭代器相关函数\" class=\"headerlink\" title=\"迭代器相关函数\"></a>迭代器相关函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.begin() <span class=\"comment\">//返回一个双向迭代器，指向第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.end() <span class=\"comment\">//返回一个双向迭代器，指向最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.cbegin() <span class=\"comment\">//返回一个双向常迭代器，指向第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.cend() <span class=\"comment\">//返回一个双向常迭代器，指向最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rbegin() <span class=\"comment\">//返回一个逆向迭代器，指向逆向迭代的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rend() <span class=\"comment\">//返回一个逆向迭代器，指向逆向迭代的最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.crbegin() <span class=\"comment\">//返回一个逆向常迭代器，指向逆向迭代的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.crend() <span class=\"comment\">//返回一个逆向常迭代器，指向逆向迭代的最后一个元素</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"插入和移除元素\"><a href=\"#插入和移除元素\" class=\"headerlink\" title=\"插入和移除元素\"></a>插入和移除元素</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.insert(val) <span class=\"comment\">//插入一个val的副本，返回新元素位置（对map来说不论成功与否）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,val) <span class=\"comment\">//插入一个val副本，返回新元素位置（pos应该是插入的搜寻起点）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(beg,end) <span class=\"comment\">//将范围beg到end的所有元素的副本插入到c（无返回值）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(initlist) <span class=\"comment\">//插入初始化列表的所有元素的副本（无返回值）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.emplace(args...) <span class=\"comment\">//插入一个使用args初始化的元素副本，返回新元素位置（对map来说不论成功与否）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.emplace_hint(pos,args...) <span class=\"comment\">//插入一个使用args初始化的元素副本，返回新元素</span></span><br><span class=\"line\"><span class=\"comment\">//位置（pos应该是插入的搜寻起点）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(val) <span class=\"comment\">//移除所有与val值相等的元素，并返移除的元素个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(pos) <span class=\"comment\">//移除迭代器位置的元素，并返回下个元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(beg,end) <span class=\"comment\">//移除beg到end范围内的所有元素，并</span></span><br><span class=\"line\"><span class=\"comment\">//返回下个元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.clear() <span class=\"comment\">//移除所以元素，清空容器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"键值对转递\"><a href=\"#键值对转递\" class=\"headerlink\" title=\"键值对转递\"></a>键值对转递</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用value_type  </span></span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt; coll;  </span><br><span class=\"line\">  </span><br><span class=\"line\">coll.insert(<span class=\"built_in\">std</span>::<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt;::value_type(<span class=\"string\">\"otto\"</span>,<span class=\"number\">22.3</span>));  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//使用pair&lt;&gt;  </span></span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt; coll;  </span><br><span class=\"line\">  </span><br><span class=\"line\">coll.insert(<span class=\"built_in\">std</span>::pair&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt;(<span class=\"string\">\"otto\"</span>,<span class=\"number\">22.3</span>));  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//使用make_pair()  </span></span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>,<span class=\"keyword\">float</span>&gt; coll;  </span><br><span class=\"line\">  </span><br><span class=\"line\">coll.insert(<span class=\"built_in\">std</span>::make_pair(<span class=\"string\">\"otto\"</span>,<span class=\"number\">22.3</span>));</span><br></pre></td></tr></table></figure>\n<ul>\n<li>当作关联数组使用</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c[key] <span class=\"comment\">//返回一个指向键值为key的元素的引用，如果不存在就插入这个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.at(key) <span class=\"comment\">//返回一个指向键值为key的元素的引用</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"实例：map集合的插入和遍历\"><a href=\"#实例：map集合的插入和遍历\" class=\"headerlink\" title=\"实例：map集合的插入和遍历\"></a>实例：map集合的插入和遍历</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;map&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">   map集合的插入和遍历 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt; coll;  </span><br><span class=\"line\">    coll.insert(pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;(<span class=\"string\">\"1\"</span>,<span class=\"number\">12</span>));  </span><br><span class=\"line\">    coll.insert(pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;(<span class=\"string\">\"2\"</span>,<span class=\"number\">10</span>));  </span><br><span class=\"line\">    coll.insert(pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;(<span class=\"string\">\"3\"</span>,<span class=\"number\">11</span>));  </span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;::iterator</span><br><span class=\"line\">     it=coll.begin();it!=coll.end();it++)&#123;  </span><br><span class=\"line\">         <span class=\"keyword\">int</span> len=distance(coll.begin(),it);  </span><br><span class=\"line\">         <span class=\"built_in\">printf</span>(<span class=\"string\">\"元素在集合中的位置=%d\\n\"</span>,len);  </span><br><span class=\"line\">         pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt; p=*it;  </span><br><span class=\"line\">         <span class=\"built_in\">printf</span>(<span class=\"string\">\"元素的值=%d\\n\"</span>,p.second);  </span><br><span class=\"line\">         <span class=\"built_in\">printf</span>(<span class=\"string\">\"元素的键=\"</span>);  </span><br><span class=\"line\">         <span class=\"built_in\">cout</span>&lt;&lt;p.first&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">         <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":" STL之priority_queue（优先队列）","date":"2016-06-01T17:46:11.000Z","_content":"\n- 构造，析构\n\n```cpp\npriority_queue() //默认构造函数，生成一个空的排序队列  \n  \npriority_queue(const queue&);  //拷贝构造函数  \n  \npriority_queue(const Compare& comp);\n//构造生成一个空的priority_queue对象，\n//使用comp作为priority_queue的comparison  \n  \npriority_queue(const value_type* first, const value_type* last); \n//带有两个参数的构造函数，  \n//使用默认的Comparison作为第三个参数  \n  \npriority_queue& operator=(const priority_queue &);   \n//赋值运算符重载  \n  \nc.~priority_queue() //销毁所有元素并释放内存  \n```\n\n- ### 常用函数###\n\n```cpp\nempty();//判断是否为空  \n  \npush(Elem e);//队列尾部增加一元素  \n  \npop();//队列头部数据出队  \n  \ntop();//返回头部数据  \n  \nsize();//返回栈中元素个数 \n```\n\n<!-- more -->\n\n- ### 改变排列顺序###\n\npriority_queue < Type, Container, Functional \\>\n 如果我们把后面俩个参数缺省的话，优先队列就是大顶堆，\n 队头元素最大。在很多时候，我们需要的不一定是最大值，\n 也有可能是最小值。这是就需要我们来改变priority_queue中的顺序。\n 方法有两种： \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.如果加入优先队列的是基本类型，那么我们就可以这样，我们以int为例：\n```cpp\n   //注意greater<int> >这之间有一个空格    \npriority_queue<int, vector<int>, greater<int> >Q;   \n```\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.对于自定义数据类型的话，我们不论是要改变排序方式，还是不改变都要这样 --  重载 小于( < ) 运算符：\n        因为，如果你不重载比较运算符的话，编译器无法比较自定义数据类型的大小关系。然而又因为在priority_queue的内部，只需用到 小于号（<），所以我们只需要重载小于号即可。当然对于自定义数据类型来说，也是必须重载，否则将无法使用priority_queue。重载小于号，我们可以有两种方式，一种用成员函数，一种使用友元函数（这里就不多说了，不会的同学，自己在好好复习复习C++）\n        \n        \n- ### 优先队列的使用范例###\n\n```cpp\n#include <queue>  \n#include <list>  \n#include <cstdio>  \nusing namespace std;  \n/** \n  优先级队列的使用范例 \n*/  \nint main(){  \n    //优先队列默认是使用vector作为容器  \n    priority_queue<int> a;  \n   // priority_queue<int,list<int>> b;//可以这样定义，但无法使用  \n   int i;  \n   //压入数据  \n   for(i=0;i<10;i++){  \n      a.push(i*2-5);  \n      //b.push(i);//编译错误  \n   }  \n   printf(\"优先队列的大小=%d\\n\",a.size());  \n   while(!a.empty()){  \n        printf(\"%d\\n\",a.top());  \n        a.pop();//出队  \n   }  \n   putchar('\\n');  \n    return 0;  \n}  \n```\n\n- ### 优先队列带比较函数示例（针对结构体）###\n\n下面程序是针对结构体的，对数据的比较是通过对结构体重载operator()。\n程序功能是模拟排队过程，每人有姓名和优先级，优先级相同则比较姓名，开始有5个人进入队列，然后队头2个人出队，再有3个人进入队列，最后所有人都依次出队，程序会输出离开队伍的顺序\n        \n        \n```cpp\n#include <queue>  \n#include <cstring>  \n#include <cstdio>  \nusing namespace std;  \n/** \n  结构体 \n*/  \nstruct Node{  \n    char szName[20];//人名  \n    int  priority;//优先级  \n    //构造函数  \n    Node(int nri, char *pszName){  \n        strcpy(szName, pszName);  \n        priority = nri;  \n    }  \n};  \n/** \n  结构体的比较方法 改写operator() \n*/  \nstruct NodeCmp{  \n//重写operator()方法,注意这里重写的写法，operator()(参数1，...)  \n    bool operator()(const Node &na, const Node &nb){  \n        if (na.priority != nb.priority)  \n            return na.priority <= nb.priority;  \n        else  \n            return strcmp(na.szName, nb.szName) > 0;  \n    }  \n};  \n/** \n  打印节点 \n*/  \nvoid PrintfNode(Node na){  \n    printf(\"%s %d\\n\", na.szName, na.priority);  \n}  \nint main(){  \n    //优先级队列默认是使用vector作容器，底层数据结构为堆。  \n    priority_queue<Node, vector<Node>, NodeCmp> a;  \n  \n    //有5个人进入队列  \n    a.push(Node(5, \"小谭\"));  \n    a.push(Node(3, \"小刘\"));  \n    a.push(Node(1, \"小涛\"));  \n    a.push(Node(5, \"小王\"));  \n  \n    //队头的2个人出队  \n    PrintfNode(a.top());  \n    a.pop();  \n    PrintfNode(a.top());  \n    a.pop();  \n    printf(\"--------------------\\n\");  \n  \n    //再进入3个人  \n    a.push(Node(2, \"小白\"));  \n    a.push(Node(2, \"小强\"));  \n    a.push(Node(3, \"小新\"));  \n  \n    //所有人都依次出队  \n    while (!a.empty()){  \n        PrintfNode(a.top());  \n        a.pop();  \n    }  \n    return 0;  \n}  \n```\n        \n      \n\n\n\n \n","source":"_posts/C++/STL之priority-queue（优先队列）.md","raw":"---\ntitle: ' STL之priority_queue（优先队列）'\ndate: 2016-06-01 17:46:11\ntags: [C++,STL,priority_queue,优先队列]\ncategories: C++\n---\n\n- 构造，析构\n\n```cpp\npriority_queue() //默认构造函数，生成一个空的排序队列  \n  \npriority_queue(const queue&);  //拷贝构造函数  \n  \npriority_queue(const Compare& comp);\n//构造生成一个空的priority_queue对象，\n//使用comp作为priority_queue的comparison  \n  \npriority_queue(const value_type* first, const value_type* last); \n//带有两个参数的构造函数，  \n//使用默认的Comparison作为第三个参数  \n  \npriority_queue& operator=(const priority_queue &);   \n//赋值运算符重载  \n  \nc.~priority_queue() //销毁所有元素并释放内存  \n```\n\n- ### 常用函数###\n\n```cpp\nempty();//判断是否为空  \n  \npush(Elem e);//队列尾部增加一元素  \n  \npop();//队列头部数据出队  \n  \ntop();//返回头部数据  \n  \nsize();//返回栈中元素个数 \n```\n\n<!-- more -->\n\n- ### 改变排列顺序###\n\npriority_queue < Type, Container, Functional \\>\n 如果我们把后面俩个参数缺省的话，优先队列就是大顶堆，\n 队头元素最大。在很多时候，我们需要的不一定是最大值，\n 也有可能是最小值。这是就需要我们来改变priority_queue中的顺序。\n 方法有两种： \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.如果加入优先队列的是基本类型，那么我们就可以这样，我们以int为例：\n```cpp\n   //注意greater<int> >这之间有一个空格    \npriority_queue<int, vector<int>, greater<int> >Q;   \n```\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.对于自定义数据类型的话，我们不论是要改变排序方式，还是不改变都要这样 --  重载 小于( < ) 运算符：\n        因为，如果你不重载比较运算符的话，编译器无法比较自定义数据类型的大小关系。然而又因为在priority_queue的内部，只需用到 小于号（<），所以我们只需要重载小于号即可。当然对于自定义数据类型来说，也是必须重载，否则将无法使用priority_queue。重载小于号，我们可以有两种方式，一种用成员函数，一种使用友元函数（这里就不多说了，不会的同学，自己在好好复习复习C++）\n        \n        \n- ### 优先队列的使用范例###\n\n```cpp\n#include <queue>  \n#include <list>  \n#include <cstdio>  \nusing namespace std;  \n/** \n  优先级队列的使用范例 \n*/  \nint main(){  \n    //优先队列默认是使用vector作为容器  \n    priority_queue<int> a;  \n   // priority_queue<int,list<int>> b;//可以这样定义，但无法使用  \n   int i;  \n   //压入数据  \n   for(i=0;i<10;i++){  \n      a.push(i*2-5);  \n      //b.push(i);//编译错误  \n   }  \n   printf(\"优先队列的大小=%d\\n\",a.size());  \n   while(!a.empty()){  \n        printf(\"%d\\n\",a.top());  \n        a.pop();//出队  \n   }  \n   putchar('\\n');  \n    return 0;  \n}  \n```\n\n- ### 优先队列带比较函数示例（针对结构体）###\n\n下面程序是针对结构体的，对数据的比较是通过对结构体重载operator()。\n程序功能是模拟排队过程，每人有姓名和优先级，优先级相同则比较姓名，开始有5个人进入队列，然后队头2个人出队，再有3个人进入队列，最后所有人都依次出队，程序会输出离开队伍的顺序\n        \n        \n```cpp\n#include <queue>  \n#include <cstring>  \n#include <cstdio>  \nusing namespace std;  \n/** \n  结构体 \n*/  \nstruct Node{  \n    char szName[20];//人名  \n    int  priority;//优先级  \n    //构造函数  \n    Node(int nri, char *pszName){  \n        strcpy(szName, pszName);  \n        priority = nri;  \n    }  \n};  \n/** \n  结构体的比较方法 改写operator() \n*/  \nstruct NodeCmp{  \n//重写operator()方法,注意这里重写的写法，operator()(参数1，...)  \n    bool operator()(const Node &na, const Node &nb){  \n        if (na.priority != nb.priority)  \n            return na.priority <= nb.priority;  \n        else  \n            return strcmp(na.szName, nb.szName) > 0;  \n    }  \n};  \n/** \n  打印节点 \n*/  \nvoid PrintfNode(Node na){  \n    printf(\"%s %d\\n\", na.szName, na.priority);  \n}  \nint main(){  \n    //优先级队列默认是使用vector作容器，底层数据结构为堆。  \n    priority_queue<Node, vector<Node>, NodeCmp> a;  \n  \n    //有5个人进入队列  \n    a.push(Node(5, \"小谭\"));  \n    a.push(Node(3, \"小刘\"));  \n    a.push(Node(1, \"小涛\"));  \n    a.push(Node(5, \"小王\"));  \n  \n    //队头的2个人出队  \n    PrintfNode(a.top());  \n    a.pop();  \n    PrintfNode(a.top());  \n    a.pop();  \n    printf(\"--------------------\\n\");  \n  \n    //再进入3个人  \n    a.push(Node(2, \"小白\"));  \n    a.push(Node(2, \"小强\"));  \n    a.push(Node(3, \"小新\"));  \n  \n    //所有人都依次出队  \n    while (!a.empty()){  \n        PrintfNode(a.top());  \n        a.pop();  \n    }  \n    return 0;  \n}  \n```\n        \n      \n\n\n\n \n","slug":"C++/STL之priority-queue（优先队列）","published":1,"updated":"2016-06-17T13:49:19.031Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qhs001ckgaey2w2eagg","content":"<ul>\n<li>构造，析构</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">priority_queue() <span class=\"comment\">//默认构造函数，生成一个空的排序队列  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">priority_queue(<span class=\"keyword\">const</span> <span class=\"built_in\">queue</span>&amp;);  <span class=\"comment\">//拷贝构造函数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">priority_queue(<span class=\"keyword\">const</span> Compare&amp; comp);</span><br><span class=\"line\"><span class=\"comment\">//构造生成一个空的priority_queue对象，</span></span><br><span class=\"line\"><span class=\"comment\">//使用comp作为priority_queue的comparison  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">priority_queue(<span class=\"keyword\">const</span> value_type* first, <span class=\"keyword\">const</span> value_type* last); </span><br><span class=\"line\"><span class=\"comment\">//带有两个参数的构造函数，  </span></span><br><span class=\"line\"><span class=\"comment\">//使用默认的Comparison作为第三个参数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">priority_queue&amp; <span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> priority_queue &amp;);   </span><br><span class=\"line\"><span class=\"comment\">//赋值运算符重载  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.~priority_queue() <span class=\"comment\">//销毁所有元素并释放内存</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"常用函数\"><a href=\"#常用函数\" class=\"headerlink\" title=\"常用函数\"></a>常用函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">empty();<span class=\"comment\">//判断是否为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">push(Elem e);<span class=\"comment\">//队列尾部增加一元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">pop();<span class=\"comment\">//队列头部数据出队  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">top();<span class=\"comment\">//返回头部数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">size();<span class=\"comment\">//返回栈中元素个数</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li><h3 id=\"改变排列顺序\"><a href=\"#改变排列顺序\" class=\"headerlink\" title=\"改变排列顺序\"></a>改变排列顺序</h3></li>\n</ul>\n<p>priority_queue &lt; Type, Container, Functional ><br> 如果我们把后面俩个参数缺省的话，优先队列就是大顶堆，<br> 队头元素最大。在很多时候，我们需要的不一定是最大值，<br> 也有可能是最小值。这是就需要我们来改变priority_queue中的顺序。<br> 方法有两种：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.如果加入优先队列的是基本类型，那么我们就可以这样，我们以int为例：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\">//注意greater&lt;int&gt; &gt;这之间有一个空格    </span></span><br><span class=\"line\">priority_queue&lt;<span class=\"keyword\">int</span>, <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;, greater&lt;<span class=\"keyword\">int</span>&gt; &gt;Q;</span><br></pre></td></tr></table></figure></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.对于自定义数据类型的话，我们不论是要改变排序方式，还是不改变都要这样 –  重载 小于( &lt; ) 运算符：<br>        因为，如果你不重载比较运算符的话，编译器无法比较自定义数据类型的大小关系。然而又因为在priority_queue的内部，只需用到 小于号（&lt;），所以我们只需要重载小于号即可。当然对于自定义数据类型来说，也是必须重载，否则将无法使用priority_queue。重载小于号，我们可以有两种方式，一种用成员函数，一种使用友元函数（这里就不多说了，不会的同学，自己在好好复习复习C++）</p>\n<ul>\n<li><h3 id=\"优先队列的使用范例\"><a href=\"#优先队列的使用范例\" class=\"headerlink\" title=\"优先队列的使用范例\"></a>优先队列的使用范例</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;list&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  优先级队列的使用范例 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"comment\">//优先队列默认是使用vector作为容器  </span></span><br><span class=\"line\">    priority_queue&lt;<span class=\"keyword\">int</span>&gt; a;  </span><br><span class=\"line\">   <span class=\"comment\">// priority_queue&lt;int,list&lt;int&gt;&gt; b;//可以这样定义，但无法使用  </span></span><br><span class=\"line\">   <span class=\"keyword\">int</span> i;  </span><br><span class=\"line\">   <span class=\"comment\">//压入数据  </span></span><br><span class=\"line\">   <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;  </span><br><span class=\"line\">      a.push(i*<span class=\"number\">2</span><span class=\"number\">-5</span>);  </span><br><span class=\"line\">      <span class=\"comment\">//b.push(i);//编译错误  </span></span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"优先队列的大小=%d\\n\"</span>,a.size());  </span><br><span class=\"line\">   <span class=\"keyword\">while</span>(!a.empty())&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,a.top());  </span><br><span class=\"line\">        a.pop();<span class=\"comment\">//出队  </span></span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"优先队列带比较函数示例（针对结构体）\"><a href=\"#优先队列带比较函数示例（针对结构体）\" class=\"headerlink\" title=\"优先队列带比较函数示例（针对结构体）\"></a>优先队列带比较函数示例（针对结构体）</h3></li>\n</ul>\n<p>下面程序是针对结构体的，对数据的比较是通过对结构体重载operator()。<br>程序功能是模拟排队过程，每人有姓名和优先级，优先级相同则比较姓名，开始有5个人进入队列，然后队头2个人出队，再有3个人进入队列，最后所有人都依次出队，程序会输出离开队伍的顺序</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  结构体 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"keyword\">struct</span> Node&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> szName[<span class=\"number\">20</span>];<span class=\"comment\">//人名  </span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>  priority;<span class=\"comment\">//优先级  </span></span><br><span class=\"line\">    <span class=\"comment\">//构造函数  </span></span><br><span class=\"line\">    Node(<span class=\"keyword\">int</span> nri, <span class=\"keyword\">char</span> *pszName)&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">strcpy</span>(szName, pszName);  </span><br><span class=\"line\">        priority = nri;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  结构体的比较方法 改写operator() </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"keyword\">struct</span> NodeCmp&#123;  </span><br><span class=\"line\"><span class=\"comment\">//重写operator()方法,注意这里重写的写法，operator()(参数1，...)  </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"keyword\">const</span> Node &amp;na, <span class=\"keyword\">const</span> Node &amp;nb)</span></span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (na.priority != nb.priority)  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> na.priority &lt;= nb.priority;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span>  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">strcmp</span>(na.szName, nb.szName) &gt; <span class=\"number\">0</span>;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  打印节点 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintfNode</span><span class=\"params\">(Node na)</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s %d\\n\"</span>, na.szName, na.priority);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"comment\">//优先级队列默认是使用vector作容器，底层数据结构为堆。  </span></span><br><span class=\"line\">    priority_queue&lt;Node, <span class=\"built_in\">vector</span>&lt;Node&gt;, NodeCmp&gt; a;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//有5个人进入队列  </span></span><br><span class=\"line\">    a.push(Node(<span class=\"number\">5</span>, <span class=\"string\">\"小谭\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">3</span>, <span class=\"string\">\"小刘\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">1</span>, <span class=\"string\">\"小涛\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">5</span>, <span class=\"string\">\"小王\"</span>));  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//队头的2个人出队  </span></span><br><span class=\"line\">    PrintfNode(a.top());  </span><br><span class=\"line\">    a.pop();  </span><br><span class=\"line\">    PrintfNode(a.top());  </span><br><span class=\"line\">    a.pop();  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"--------------------\\n\"</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//再进入3个人  </span></span><br><span class=\"line\">    a.push(Node(<span class=\"number\">2</span>, <span class=\"string\">\"小白\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">2</span>, <span class=\"string\">\"小强\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">3</span>, <span class=\"string\">\"小新\"</span>));  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//所有人都依次出队  </span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!a.empty())&#123;  </span><br><span class=\"line\">        PrintfNode(a.top());  </span><br><span class=\"line\">        a.pop();  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"<ul>\n<li>构造，析构</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">priority_queue() <span class=\"comment\">//默认构造函数，生成一个空的排序队列  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">priority_queue(<span class=\"keyword\">const</span> <span class=\"built_in\">queue</span>&amp;);  <span class=\"comment\">//拷贝构造函数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">priority_queue(<span class=\"keyword\">const</span> Compare&amp; comp);</span><br><span class=\"line\"><span class=\"comment\">//构造生成一个空的priority_queue对象，</span></span><br><span class=\"line\"><span class=\"comment\">//使用comp作为priority_queue的comparison  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">priority_queue(<span class=\"keyword\">const</span> value_type* first, <span class=\"keyword\">const</span> value_type* last); </span><br><span class=\"line\"><span class=\"comment\">//带有两个参数的构造函数，  </span></span><br><span class=\"line\"><span class=\"comment\">//使用默认的Comparison作为第三个参数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">priority_queue&amp; <span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> priority_queue &amp;);   </span><br><span class=\"line\"><span class=\"comment\">//赋值运算符重载  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.~priority_queue() <span class=\"comment\">//销毁所有元素并释放内存</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"常用函数\"><a href=\"#常用函数\" class=\"headerlink\" title=\"常用函数\"></a>常用函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">empty();<span class=\"comment\">//判断是否为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">push(Elem e);<span class=\"comment\">//队列尾部增加一元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">pop();<span class=\"comment\">//队列头部数据出队  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">top();<span class=\"comment\">//返回头部数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">size();<span class=\"comment\">//返回栈中元素个数</span></span><br></pre></td></tr></table></figure>","more":"<ul>\n<li><h3 id=\"改变排列顺序\"><a href=\"#改变排列顺序\" class=\"headerlink\" title=\"改变排列顺序\"></a>改变排列顺序</h3></li>\n</ul>\n<p>priority_queue &lt; Type, Container, Functional ><br> 如果我们把后面俩个参数缺省的话，优先队列就是大顶堆，<br> 队头元素最大。在很多时候，我们需要的不一定是最大值，<br> 也有可能是最小值。这是就需要我们来改变priority_queue中的顺序。<br> 方法有两种：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.如果加入优先队列的是基本类型，那么我们就可以这样，我们以int为例：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\">//注意greater&lt;int&gt; &gt;这之间有一个空格    </span></span><br><span class=\"line\">priority_queue&lt;<span class=\"keyword\">int</span>, <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;, greater&lt;<span class=\"keyword\">int</span>&gt; &gt;Q;</span><br></pre></td></tr></table></figure></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.对于自定义数据类型的话，我们不论是要改变排序方式，还是不改变都要这样 –  重载 小于( &lt; ) 运算符：<br>        因为，如果你不重载比较运算符的话，编译器无法比较自定义数据类型的大小关系。然而又因为在priority_queue的内部，只需用到 小于号（&lt;），所以我们只需要重载小于号即可。当然对于自定义数据类型来说，也是必须重载，否则将无法使用priority_queue。重载小于号，我们可以有两种方式，一种用成员函数，一种使用友元函数（这里就不多说了，不会的同学，自己在好好复习复习C++）</p>\n<ul>\n<li><h3 id=\"优先队列的使用范例\"><a href=\"#优先队列的使用范例\" class=\"headerlink\" title=\"优先队列的使用范例\"></a>优先队列的使用范例</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;list&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  优先级队列的使用范例 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"comment\">//优先队列默认是使用vector作为容器  </span></span><br><span class=\"line\">    priority_queue&lt;<span class=\"keyword\">int</span>&gt; a;  </span><br><span class=\"line\">   <span class=\"comment\">// priority_queue&lt;int,list&lt;int&gt;&gt; b;//可以这样定义，但无法使用  </span></span><br><span class=\"line\">   <span class=\"keyword\">int</span> i;  </span><br><span class=\"line\">   <span class=\"comment\">//压入数据  </span></span><br><span class=\"line\">   <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;  </span><br><span class=\"line\">      a.push(i*<span class=\"number\">2</span><span class=\"number\">-5</span>);  </span><br><span class=\"line\">      <span class=\"comment\">//b.push(i);//编译错误  </span></span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"优先队列的大小=%d\\n\"</span>,a.size());  </span><br><span class=\"line\">   <span class=\"keyword\">while</span>(!a.empty())&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,a.top());  </span><br><span class=\"line\">        a.pop();<span class=\"comment\">//出队  </span></span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"优先队列带比较函数示例（针对结构体）\"><a href=\"#优先队列带比较函数示例（针对结构体）\" class=\"headerlink\" title=\"优先队列带比较函数示例（针对结构体）\"></a>优先队列带比较函数示例（针对结构体）</h3></li>\n</ul>\n<p>下面程序是针对结构体的，对数据的比较是通过对结构体重载operator()。<br>程序功能是模拟排队过程，每人有姓名和优先级，优先级相同则比较姓名，开始有5个人进入队列，然后队头2个人出队，再有3个人进入队列，最后所有人都依次出队，程序会输出离开队伍的顺序</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  结构体 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"keyword\">struct</span> Node&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">char</span> szName[<span class=\"number\">20</span>];<span class=\"comment\">//人名  </span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>  priority;<span class=\"comment\">//优先级  </span></span><br><span class=\"line\">    <span class=\"comment\">//构造函数  </span></span><br><span class=\"line\">    Node(<span class=\"keyword\">int</span> nri, <span class=\"keyword\">char</span> *pszName)&#123;  </span><br><span class=\"line\">        <span class=\"built_in\">strcpy</span>(szName, pszName);  </span><br><span class=\"line\">        priority = nri;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  结构体的比较方法 改写operator() </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"keyword\">struct</span> NodeCmp&#123;  </span><br><span class=\"line\"><span class=\"comment\">//重写operator()方法,注意这里重写的写法，operator()(参数1，...)  </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"keyword\">const</span> Node &amp;na, <span class=\"keyword\">const</span> Node &amp;nb)</span></span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (na.priority != nb.priority)  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> na.priority &lt;= nb.priority;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span>  </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">strcmp</span>(na.szName, nb.szName) &gt; <span class=\"number\">0</span>;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  打印节点 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintfNode</span><span class=\"params\">(Node na)</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s %d\\n\"</span>, na.szName, na.priority);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"comment\">//优先级队列默认是使用vector作容器，底层数据结构为堆。  </span></span><br><span class=\"line\">    priority_queue&lt;Node, <span class=\"built_in\">vector</span>&lt;Node&gt;, NodeCmp&gt; a;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//有5个人进入队列  </span></span><br><span class=\"line\">    a.push(Node(<span class=\"number\">5</span>, <span class=\"string\">\"小谭\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">3</span>, <span class=\"string\">\"小刘\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">1</span>, <span class=\"string\">\"小涛\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">5</span>, <span class=\"string\">\"小王\"</span>));  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//队头的2个人出队  </span></span><br><span class=\"line\">    PrintfNode(a.top());  </span><br><span class=\"line\">    a.pop();  </span><br><span class=\"line\">    PrintfNode(a.top());  </span><br><span class=\"line\">    a.pop();  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"--------------------\\n\"</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//再进入3个人  </span></span><br><span class=\"line\">    a.push(Node(<span class=\"number\">2</span>, <span class=\"string\">\"小白\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">2</span>, <span class=\"string\">\"小强\"</span>));  </span><br><span class=\"line\">    a.push(Node(<span class=\"number\">3</span>, <span class=\"string\">\"小新\"</span>));  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//所有人都依次出队  </span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!a.empty())&#123;  </span><br><span class=\"line\">        PrintfNode(a.top());  </span><br><span class=\"line\">        a.pop();  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":" STL之set和multiset总结","date":"2016-06-01T18:28:58.000Z","_content":"\n- 使用set或multiset之前，必须加入头文件<set>\n- Set、multiset都是集合类，差别在与set中不允许有重复元素，multiset中允许有重复元素。\n- sets和multiset内部以平衡二叉树实现\n\n\n- ### 构造，析构###\n\n```cpp\nset c  //创建空集合,不包含任何元素  \n  \nset c(op)  //以op为排序准则，产生一个空的set  \n  \nset c1(c2)  //复制c2中的元素到c1中  \n  \nset c(const value_type *first, const value_type* last)  \n//复制[first, last)之间元素构成新集合  \n  \nset c(const value_type *first, const value_type* last,op)  \n//以op为排序准则，复制[first, last)之间元素构成新集合。  \n  \nc.~set()  \n//销毁所有元素，释放内存  \n  \nmultiset mc  //创建空集合,不包含任何元素  \n  \nmultiset mc(op)  //以op为排序准则，产生一个空的set  \n  \nmultiset c1(c2)  //复制c2中的元素到c1中  \n  \nmultiset c(const value_type *first, const value_type* last)  \n//复制[first, last)之间元素构成新集合  \n  \nmultiset c(const value_type *first, const value_type* last,op)  \n//以op为排序准则，复制[first, last)之间元素构成新集合。  \n  \nc.~set()  //销毁所有元素，释放内存  \n```\n\n<!-- more -->\n\n\n- ### 支持的操作符###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2set%E5%9B%BE%E7%89%87.png)</center>\n\n- ### 其他函数###\n\n```cpp\nc.size() //返回有容器中有多少元素  \n  \nc.max_size()  //返回容器可以存放的最大数据的个数  \n  \nint size() const  //返回容器元素个数  \n  \nbool empty() const  //判断容器是否为空，若返回true，表明容器已空  \n```\n\n- ### 增加删除###\n\n```cpp\npair<iterator,bool> insert( x)  //插入元素x  \n  \niterator insert(iterator it,x)  //在迭代器it处插入元素x  \n  \nvoid insert(const value_type *first,const value_type *last) \n//插入[first, last)之间元素  \n  \niterator erase(iterator it)  //删除迭代器指针it处元素  \n  \niterator erase(iterator first,iterator last)  \n//删除[first, last)之间元素  \n  \nsize_type erase(const Key& key)  //删除元素值等于key的元素  \n  \nc.clear()  //移除所有元素，使得容器变为空  \n```\n\n- set和multiset提供的这两个插入函数返回值有所不同\nset提供的插入函数\n\n```cpp\npair<iterator,bool> insert(const value_type& elem);  \n  \niterator  insert(iterator pos_hint, const value_type& elem);  \n```\n\n- multiset提供的插入函数：\n\n```cpp\niterator  insert(const value_type& elem);  \n  \niterator  insert(iterator pos_hint, const value_type& elem);  \n```\n\n- ### 迭代器相关函数###\n\n```cpp\niterator begin()  //返回首元素的迭代器指针  \n  \niterator end()  //返回尾元素的迭代器指针  \n  \nreverse_iterator rbegin()  //返回尾元素的逆向迭代器指针  \n  \nreverse_iterator rend()  //返回首元素前一个位置的迭代器指针  \n```\n\n- ### 查找###\n\n```cpp\nconst_iterator lower_bound(const Key& key)  //返回容器中大于等于key的迭代器指针  \n  \nconst_iterator upper_bound(const Key& key)  //返回容器中大于key的迭代器指针  \n  \nint count(const Key& key) const  \n//返回容器中元素等于key的元素的个数  \n  \ns.equal_range(elem)  \n//返回 elem 可以安插的第一个位置和最后一个位置，\n//也就是(元素值 == elem) 的元素区间  \n  \n//因为 set 不允许重复，面 multiset 允许重复，\n//所以他们的 insert 操作有不有同的返回值  \n//set 提供的接口  \npair<iterator, bool> insert(const value_type& elem); \n//返回 pair<>  \n//因为 set 不允许元素重复，所以如果插入相同的元素，将会返回失败。  \n//Pari 的 secode 成员表示插入是否成功。  \n//Pair 的 first 成员返回新元素的位置。  \n  \nconst_iterator find(const Key& key) const  \n//查找功能，返回元素值等于key的迭代器指针  \n```\n\n- ### 赋值###\n\n```cpp\nc1==c2  //将c2所有的元素赋给c1  \n  \nvoid swap(set& s)  //交换集合元素  \n  \nvoid swap(multiset& s)  //交换多集合元素  \n```\n\n- ### 实例###\n\n```cpp\n#include <cstdio>  \n#include <iostream>  \n#include <stdio.h>  \n#include <string>  \n#include <set>  \nusing namespace std;  \nstruct haha{  \n    int a,b;  \n    char s;  \n    //重写了operator方法  \n    friend bool operator<(struct haha a,struct haha b){  \n        return a.s<b.s;  \n    }  \n};  \nstruct compare//自定义排序方式  \n{  \n    bool operator ()(string s1,string s2)  \n    {  \n        return s1>s2;  \n    }\n    //自定义一个仿函数  \n};  \n/** \n  用来打印set集合的元素 \n*/  \nvoid printSet(set<int>s){  \n    set<int>::iterator i;  \n    printf(\"集合元素=\");  \n    for(i=s.begin(); i!=s.end(); i++)  \n        printf(\"%d \",*i);  \n    cout<<endl;  \n}  \nint main(){  \n    /***************set集合元素插入实例****************************/  \n    printf(\" /***************set集合元素插入实例*****\n    ***********************/\\n\");  \n        set<int> s1; //创建空的set对象，元素类型为int，  \n        for (int i = 0; i < 5; i++)  \n          s1.insert(i*10);  \n        //打印集合元素  \n        printSet(s1);  \n        cout<<\"s1再次插入20\"<<endl;;  \n        if (s1.insert(20).second)//再次插入20  \n            cout<<\"插入成功！\"<<endl;  \n        else  \n            cout<<\"插入失败！\"<<endl;  \n        cout<<\"s1再次插入50\"<<endl;  \n        if (s1.insert(50).second){  \n            cout<<\"插入成功！\"<<endl;  \n            printSet(s1);  \n        }  \n        else  \n            cout<<\"插入失败！\"<<endl;  \n        pair<set<int>::iterator, bool> p;  \n        p = s1.insert(60);  \n        if (p.second){  \n            cout<<\"插入成功!\"<<endl; printSet(s1);  \n       printf(\"60插入的位置=%d\\n\",distance(s1.begin(),s1.end()));  \n        }  \n        else  \n            cout<<\"插入失败!\"<<endl;  \n  \n  \n     /***************set集合删除特定值实例***********\n     *****************/  \n     printf(\"/***************set集合删除特定值实例*****\n     ***********************/\\n\");  \n     printf(\"原始集合s1\\n\");  \n     printSet(s1);  \n    while (!s1.empty()){  \n       cout <<\" \"<< *s1.begin();  \n       //删除集合开头的元素  \n       s1.erase(s1.begin());  \n    }  \n    printf(\"\\n删除之后的元素\\n\");  \n    if(s1.size()==0){  \n       printf(\"集合为空\\n\");  \n    }else{  \n       printSet(s1);  \n    }  \n  \n    /***************set集合结构体使用实例********\n    ********************/  \n    printf(\"\\n/***************set集合结构体使用实例*****\n    ***********************/\\n\");  \n    set<struct haha>element;  \n    struct haha a,b,c,d,t;  \n    a.a=1; a.s='b';  \n    b.a=2; b.s='c';  \n    c.a=4; c.s='d';  \n    d.a=3; d.s='a';  \n    element.insert(d);  \n    element.insert(b);  \n    element.insert(c);  \n    element.insert(a);  \n    set<struct haha>::iterator it;  \n    for(it=element.begin(); it!=element.end();it++)  \n        cout<<(*it).a<<\" \";  \n    cout<<endl;  \n    for(it=element.begin(); it!=element.end();it++)  \n        cout<<(*it).s<<\" \";  \n}  \n```\n\n运行结果：\n\n<center>![](http://img.blog.csdn.net/20160523221836216)</center>\n\n\n","source":"_posts/C++/STL之set和multiset总结.md","raw":"---\ntitle: ' STL之set和multiset总结'\ndate: 2016-06-01 18:28:58\ntags: [C++,set,multiset,STL]\ncategories:\n---\n\n- 使用set或multiset之前，必须加入头文件<set>\n- Set、multiset都是集合类，差别在与set中不允许有重复元素，multiset中允许有重复元素。\n- sets和multiset内部以平衡二叉树实现\n\n\n- ### 构造，析构###\n\n```cpp\nset c  //创建空集合,不包含任何元素  \n  \nset c(op)  //以op为排序准则，产生一个空的set  \n  \nset c1(c2)  //复制c2中的元素到c1中  \n  \nset c(const value_type *first, const value_type* last)  \n//复制[first, last)之间元素构成新集合  \n  \nset c(const value_type *first, const value_type* last,op)  \n//以op为排序准则，复制[first, last)之间元素构成新集合。  \n  \nc.~set()  \n//销毁所有元素，释放内存  \n  \nmultiset mc  //创建空集合,不包含任何元素  \n  \nmultiset mc(op)  //以op为排序准则，产生一个空的set  \n  \nmultiset c1(c2)  //复制c2中的元素到c1中  \n  \nmultiset c(const value_type *first, const value_type* last)  \n//复制[first, last)之间元素构成新集合  \n  \nmultiset c(const value_type *first, const value_type* last,op)  \n//以op为排序准则，复制[first, last)之间元素构成新集合。  \n  \nc.~set()  //销毁所有元素，释放内存  \n```\n\n<!-- more -->\n\n\n- ### 支持的操作符###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2set%E5%9B%BE%E7%89%87.png)</center>\n\n- ### 其他函数###\n\n```cpp\nc.size() //返回有容器中有多少元素  \n  \nc.max_size()  //返回容器可以存放的最大数据的个数  \n  \nint size() const  //返回容器元素个数  \n  \nbool empty() const  //判断容器是否为空，若返回true，表明容器已空  \n```\n\n- ### 增加删除###\n\n```cpp\npair<iterator,bool> insert( x)  //插入元素x  \n  \niterator insert(iterator it,x)  //在迭代器it处插入元素x  \n  \nvoid insert(const value_type *first,const value_type *last) \n//插入[first, last)之间元素  \n  \niterator erase(iterator it)  //删除迭代器指针it处元素  \n  \niterator erase(iterator first,iterator last)  \n//删除[first, last)之间元素  \n  \nsize_type erase(const Key& key)  //删除元素值等于key的元素  \n  \nc.clear()  //移除所有元素，使得容器变为空  \n```\n\n- set和multiset提供的这两个插入函数返回值有所不同\nset提供的插入函数\n\n```cpp\npair<iterator,bool> insert(const value_type& elem);  \n  \niterator  insert(iterator pos_hint, const value_type& elem);  \n```\n\n- multiset提供的插入函数：\n\n```cpp\niterator  insert(const value_type& elem);  \n  \niterator  insert(iterator pos_hint, const value_type& elem);  \n```\n\n- ### 迭代器相关函数###\n\n```cpp\niterator begin()  //返回首元素的迭代器指针  \n  \niterator end()  //返回尾元素的迭代器指针  \n  \nreverse_iterator rbegin()  //返回尾元素的逆向迭代器指针  \n  \nreverse_iterator rend()  //返回首元素前一个位置的迭代器指针  \n```\n\n- ### 查找###\n\n```cpp\nconst_iterator lower_bound(const Key& key)  //返回容器中大于等于key的迭代器指针  \n  \nconst_iterator upper_bound(const Key& key)  //返回容器中大于key的迭代器指针  \n  \nint count(const Key& key) const  \n//返回容器中元素等于key的元素的个数  \n  \ns.equal_range(elem)  \n//返回 elem 可以安插的第一个位置和最后一个位置，\n//也就是(元素值 == elem) 的元素区间  \n  \n//因为 set 不允许重复，面 multiset 允许重复，\n//所以他们的 insert 操作有不有同的返回值  \n//set 提供的接口  \npair<iterator, bool> insert(const value_type& elem); \n//返回 pair<>  \n//因为 set 不允许元素重复，所以如果插入相同的元素，将会返回失败。  \n//Pari 的 secode 成员表示插入是否成功。  \n//Pair 的 first 成员返回新元素的位置。  \n  \nconst_iterator find(const Key& key) const  \n//查找功能，返回元素值等于key的迭代器指针  \n```\n\n- ### 赋值###\n\n```cpp\nc1==c2  //将c2所有的元素赋给c1  \n  \nvoid swap(set& s)  //交换集合元素  \n  \nvoid swap(multiset& s)  //交换多集合元素  \n```\n\n- ### 实例###\n\n```cpp\n#include <cstdio>  \n#include <iostream>  \n#include <stdio.h>  \n#include <string>  \n#include <set>  \nusing namespace std;  \nstruct haha{  \n    int a,b;  \n    char s;  \n    //重写了operator方法  \n    friend bool operator<(struct haha a,struct haha b){  \n        return a.s<b.s;  \n    }  \n};  \nstruct compare//自定义排序方式  \n{  \n    bool operator ()(string s1,string s2)  \n    {  \n        return s1>s2;  \n    }\n    //自定义一个仿函数  \n};  \n/** \n  用来打印set集合的元素 \n*/  \nvoid printSet(set<int>s){  \n    set<int>::iterator i;  \n    printf(\"集合元素=\");  \n    for(i=s.begin(); i!=s.end(); i++)  \n        printf(\"%d \",*i);  \n    cout<<endl;  \n}  \nint main(){  \n    /***************set集合元素插入实例****************************/  \n    printf(\" /***************set集合元素插入实例*****\n    ***********************/\\n\");  \n        set<int> s1; //创建空的set对象，元素类型为int，  \n        for (int i = 0; i < 5; i++)  \n          s1.insert(i*10);  \n        //打印集合元素  \n        printSet(s1);  \n        cout<<\"s1再次插入20\"<<endl;;  \n        if (s1.insert(20).second)//再次插入20  \n            cout<<\"插入成功！\"<<endl;  \n        else  \n            cout<<\"插入失败！\"<<endl;  \n        cout<<\"s1再次插入50\"<<endl;  \n        if (s1.insert(50).second){  \n            cout<<\"插入成功！\"<<endl;  \n            printSet(s1);  \n        }  \n        else  \n            cout<<\"插入失败！\"<<endl;  \n        pair<set<int>::iterator, bool> p;  \n        p = s1.insert(60);  \n        if (p.second){  \n            cout<<\"插入成功!\"<<endl; printSet(s1);  \n       printf(\"60插入的位置=%d\\n\",distance(s1.begin(),s1.end()));  \n        }  \n        else  \n            cout<<\"插入失败!\"<<endl;  \n  \n  \n     /***************set集合删除特定值实例***********\n     *****************/  \n     printf(\"/***************set集合删除特定值实例*****\n     ***********************/\\n\");  \n     printf(\"原始集合s1\\n\");  \n     printSet(s1);  \n    while (!s1.empty()){  \n       cout <<\" \"<< *s1.begin();  \n       //删除集合开头的元素  \n       s1.erase(s1.begin());  \n    }  \n    printf(\"\\n删除之后的元素\\n\");  \n    if(s1.size()==0){  \n       printf(\"集合为空\\n\");  \n    }else{  \n       printSet(s1);  \n    }  \n  \n    /***************set集合结构体使用实例********\n    ********************/  \n    printf(\"\\n/***************set集合结构体使用实例*****\n    ***********************/\\n\");  \n    set<struct haha>element;  \n    struct haha a,b,c,d,t;  \n    a.a=1; a.s='b';  \n    b.a=2; b.s='c';  \n    c.a=4; c.s='d';  \n    d.a=3; d.s='a';  \n    element.insert(d);  \n    element.insert(b);  \n    element.insert(c);  \n    element.insert(a);  \n    set<struct haha>::iterator it;  \n    for(it=element.begin(); it!=element.end();it++)  \n        cout<<(*it).a<<\" \";  \n    cout<<endl;  \n    for(it=element.begin(); it!=element.end();it++)  \n        cout<<(*it).s<<\" \";  \n}  \n```\n\n运行结果：\n\n<center>![](http://img.blog.csdn.net/20160523221836216)</center>\n\n\n","slug":"C++/STL之set和multiset总结","published":1,"updated":"2016-06-17T13:49:51.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qhw001gkgae0xhcwa50","content":"<ul>\n<li>使用set或multiset之前，必须加入头文件<set></set></li>\n<li>Set、multiset都是集合类，差别在与set中不允许有重复元素，multiset中允许有重复元素。</li>\n<li>sets和multiset内部以平衡二叉树实现</li>\n</ul>\n<ul>\n<li><h3 id=\"构造，析构\"><a href=\"#构造，析构\" class=\"headerlink\" title=\"构造，析构\"></a>构造，析构</h3></li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set c  //创建空集合,不包含任何元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">set c(op)  //以op为排序准则，产生一个空的set  </span><br><span class=\"line\">  </span><br><span class=\"line\">set c1(c2)  //复制c2中的元素到c1中  </span><br><span class=\"line\">  </span><br><span class=\"line\">set c(const value_type *first, const value_type* last)  </span><br><span class=\"line\">//复制[first, last)之间元素构成新集合  </span><br><span class=\"line\">  </span><br><span class=\"line\">set c(const value_type *first, const value_type* last,op)  </span><br><span class=\"line\">//以op为排序准则，复制[first, last)之间元素构成新集合。  </span><br><span class=\"line\">  </span><br><span class=\"line\">c.~set()  </span><br><span class=\"line\">//销毁所有元素，释放内存  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset mc  //创建空集合,不包含任何元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset mc(op)  //以op为排序准则，产生一个空的set  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset c1(c2)  //复制c2中的元素到c1中  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset c(const value_type *first, const value_type* last)  </span><br><span class=\"line\">//复制[first, last)之间元素构成新集合  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset c(const value_type *first, const value_type* last,op)  </span><br><span class=\"line\">//以op为排序准则，复制[first, last)之间元素构成新集合。  </span><br><span class=\"line\">  </span><br><span class=\"line\">c.~set()  //销毁所有元素，释放内存</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li><h3 id=\"支持的操作符\"><a href=\"#支持的操作符\" class=\"headerlink\" title=\"支持的操作符\"></a>支持的操作符</h3></li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2set%E5%9B%BE%E7%89%87.png\" alt=\"\"></center>\n\n<ul>\n<li><h3 id=\"其他函数\"><a href=\"#其他函数\" class=\"headerlink\" title=\"其他函数\"></a>其他函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.size() <span class=\"comment\">//返回有容器中有多少元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size()  <span class=\"comment\">//返回容器可以存放的最大数据的个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> <span class=\"keyword\">const</span>  <span class=\"comment\">//返回容器元素个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"title\">empty</span><span class=\"params\">()</span> <span class=\"keyword\">const</span>  <span class=\"comment\">//判断容器是否为空，若返回true，表明容器已空</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"增加删除\"><a href=\"#增加删除\" class=\"headerlink\" title=\"增加删除\"></a>增加删除</h3></li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair&lt;iterator,bool&gt; insert( x)  //插入元素x  </span><br><span class=\"line\">  </span><br><span class=\"line\">iterator insert(iterator it,x)  //在迭代器it处插入元素x  </span><br><span class=\"line\">  </span><br><span class=\"line\">void insert(const value_type *first,const value_type *last) </span><br><span class=\"line\">//插入[first, last)之间元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">iterator erase(iterator it)  //删除迭代器指针it处元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">iterator erase(iterator first,iterator last)  </span><br><span class=\"line\">//删除[first, last)之间元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">size_type erase(const Key&amp; key)  //删除元素值等于key的元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">c.clear()  //移除所有元素，使得容器变为空</span><br></pre></td></tr></table></figure>\n<ul>\n<li>set和multiset提供的这两个插入函数返回值有所不同<br>set提供的插入函数</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair&lt;iterator,<span class=\"keyword\">bool</span>&gt; insert(<span class=\"keyword\">const</span> value_type&amp; elem);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">iterator  <span class=\"title\">insert</span><span class=\"params\">(iterator pos_hint, <span class=\"keyword\">const</span> value_type&amp; elem)</span></span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>multiset提供的插入函数：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">iterator  <span class=\"title\">insert</span><span class=\"params\">(<span class=\"keyword\">const</span> value_type&amp; elem)</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">iterator  <span class=\"title\">insert</span><span class=\"params\">(iterator pos_hint, <span class=\"keyword\">const</span> value_type&amp; elem)</span></span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"迭代器相关函数\"><a href=\"#迭代器相关函数\" class=\"headerlink\" title=\"迭代器相关函数\"></a>迭代器相关函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">iterator <span class=\"title\">begin</span><span class=\"params\">()</span>  <span class=\"comment\">//返回首元素的迭代器指针  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">iterator <span class=\"title\">end</span><span class=\"params\">()</span>  <span class=\"comment\">//返回尾元素的迭代器指针  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reverse_iterator <span class=\"title\">rbegin</span><span class=\"params\">()</span>  <span class=\"comment\">//返回尾元素的逆向迭代器指针  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reverse_iterator <span class=\"title\">rend</span><span class=\"params\">()</span>  <span class=\"comment\">//返回首元素前一个位置的迭代器指针</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h3></li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const_iterator lower_bound(const Key&amp; key)  //返回容器中大于等于key的迭代器指针  </span><br><span class=\"line\">  </span><br><span class=\"line\">const_iterator upper_bound(const Key&amp; key)  //返回容器中大于key的迭代器指针  </span><br><span class=\"line\">  </span><br><span class=\"line\">int count(const Key&amp; key) const  </span><br><span class=\"line\">//返回容器中元素等于key的元素的个数  </span><br><span class=\"line\">  </span><br><span class=\"line\">s.equal_range(elem)  </span><br><span class=\"line\">//返回 elem 可以安插的第一个位置和最后一个位置，</span><br><span class=\"line\">//也就是(元素值 == elem) 的元素区间  </span><br><span class=\"line\">  </span><br><span class=\"line\">//因为 set 不允许重复，面 multiset 允许重复，</span><br><span class=\"line\">//所以他们的 insert 操作有不有同的返回值  </span><br><span class=\"line\">//set 提供的接口  </span><br><span class=\"line\">pair&lt;iterator, bool&gt; insert(const value_type&amp; elem); </span><br><span class=\"line\">//返回 pair&lt;&gt;  </span><br><span class=\"line\">//因为 set 不允许元素重复，所以如果插入相同的元素，将会返回失败。  </span><br><span class=\"line\">//Pari 的 secode 成员表示插入是否成功。  </span><br><span class=\"line\">//Pair 的 first 成员返回新元素的位置。  </span><br><span class=\"line\">  </span><br><span class=\"line\">const_iterator find(const Key&amp; key) const  </span><br><span class=\"line\">//查找功能，返回元素值等于key的迭代器指针</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c1==c2  <span class=\"comment\">//将c2所有的元素赋给c1  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">void</span> swap(<span class=\"built_in\">set</span>&amp; s)  <span class=\"comment\">//交换集合元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">void</span> swap(<span class=\"built_in\">multiset</span>&amp; s)  <span class=\"comment\">//交换多集合元素</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3></li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;cstdio&gt;  </span><br><span class=\"line\">#include &lt;iostream&gt;  </span><br><span class=\"line\">#include &lt;stdio.h&gt;  </span><br><span class=\"line\">#include &lt;string&gt;  </span><br><span class=\"line\">#include &lt;set&gt;  </span><br><span class=\"line\">using namespace std;  </span><br><span class=\"line\">struct haha&#123;  </span><br><span class=\"line\">    int a,b;  </span><br><span class=\"line\">    char s;  </span><br><span class=\"line\">    //重写了operator方法  </span><br><span class=\"line\">    friend bool operator&lt;(struct haha a,struct haha b)&#123;  </span><br><span class=\"line\">        return a.s&lt;b.s;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\">struct compare//自定义排序方式  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    bool operator ()(string s1,string s2)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        return s1&gt;s2;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //自定义一个仿函数  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\">/** </span><br><span class=\"line\">  用来打印set集合的元素 </span><br><span class=\"line\">*/  </span><br><span class=\"line\">void printSet(set&lt;int&gt;s)&#123;  </span><br><span class=\"line\">    set&lt;int&gt;::iterator i;  </span><br><span class=\"line\">    printf(\"集合元素=\");  </span><br><span class=\"line\">    for(i=s.begin(); i!=s.end(); i++)  </span><br><span class=\"line\">        printf(\"%d \",*i);  </span><br><span class=\"line\">    cout&lt;&lt;endl;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">int main()&#123;  </span><br><span class=\"line\">    /***************set集合元素插入实例****************************/  </span><br><span class=\"line\">    printf(\" /***************set集合元素插入实例*****</span><br><span class=\"line\">    ***********************/\\n\");  </span><br><span class=\"line\">        set&lt;int&gt; s1; //创建空的set对象，元素类型为int，  </span><br><span class=\"line\">        for (int i = 0; i &lt; 5; i++)  </span><br><span class=\"line\">          s1.insert(i*10);  </span><br><span class=\"line\">        //打印集合元素  </span><br><span class=\"line\">        printSet(s1);  </span><br><span class=\"line\">        cout&lt;&lt;\"s1再次插入20\"&lt;&lt;endl;;  </span><br><span class=\"line\">        if (s1.insert(20).second)//再次插入20  </span><br><span class=\"line\">            cout&lt;&lt;\"插入成功！\"&lt;&lt;endl;  </span><br><span class=\"line\">        else  </span><br><span class=\"line\">            cout&lt;&lt;\"插入失败！\"&lt;&lt;endl;  </span><br><span class=\"line\">        cout&lt;&lt;\"s1再次插入50\"&lt;&lt;endl;  </span><br><span class=\"line\">        if (s1.insert(50).second)&#123;  </span><br><span class=\"line\">            cout&lt;&lt;\"插入成功！\"&lt;&lt;endl;  </span><br><span class=\"line\">            printSet(s1);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        else  </span><br><span class=\"line\">            cout&lt;&lt;\"插入失败！\"&lt;&lt;endl;  </span><br><span class=\"line\">        pair&lt;set&lt;int&gt;::iterator, bool&gt; p;  </span><br><span class=\"line\">        p = s1.insert(60);  </span><br><span class=\"line\">        if (p.second)&#123;  </span><br><span class=\"line\">            cout&lt;&lt;\"插入成功!\"&lt;&lt;endl; printSet(s1);  </span><br><span class=\"line\">       printf(\"60插入的位置=%d\\n\",distance(s1.begin(),s1.end()));  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        else  </span><br><span class=\"line\">            cout&lt;&lt;\"插入失败!\"&lt;&lt;endl;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">     /***************set集合删除特定值实例***********</span><br><span class=\"line\">     *****************/  </span><br><span class=\"line\">     printf(\"/***************set集合删除特定值实例*****</span><br><span class=\"line\">     ***********************/\\n\");  </span><br><span class=\"line\">     printf(\"原始集合s1\\n\");  </span><br><span class=\"line\">     printSet(s1);  </span><br><span class=\"line\">    while (!s1.empty())&#123;  </span><br><span class=\"line\">       cout &lt;&lt;\" \"&lt;&lt; *s1.begin();  </span><br><span class=\"line\">       //删除集合开头的元素  </span><br><span class=\"line\">       s1.erase(s1.begin());  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    printf(\"\\n删除之后的元素\\n\");  </span><br><span class=\"line\">    if(s1.size()==0)&#123;  </span><br><span class=\"line\">       printf(\"集合为空\\n\");  </span><br><span class=\"line\">    &#125;else&#123;  </span><br><span class=\"line\">       printSet(s1);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    /***************set集合结构体使用实例********</span><br><span class=\"line\">    ********************/  </span><br><span class=\"line\">    printf(\"\\n/***************set集合结构体使用实例*****</span><br><span class=\"line\">    ***********************/\\n\");  </span><br><span class=\"line\">    set&lt;struct haha&gt;element;  </span><br><span class=\"line\">    struct haha a,b,c,d,t;  </span><br><span class=\"line\">    a.a=1; a.s='b';  </span><br><span class=\"line\">    b.a=2; b.s='c';  </span><br><span class=\"line\">    c.a=4; c.s='d';  </span><br><span class=\"line\">    d.a=3; d.s='a';  </span><br><span class=\"line\">    element.insert(d);  </span><br><span class=\"line\">    element.insert(b);  </span><br><span class=\"line\">    element.insert(c);  </span><br><span class=\"line\">    element.insert(a);  </span><br><span class=\"line\">    set&lt;struct haha&gt;::iterator it;  </span><br><span class=\"line\">    for(it=element.begin(); it!=element.end();it++)  </span><br><span class=\"line\">        cout&lt;&lt;(*it).a&lt;&lt;\" \";  </span><br><span class=\"line\">    cout&lt;&lt;endl;  </span><br><span class=\"line\">    for(it=element.begin(); it!=element.end();it++)  </span><br><span class=\"line\">        cout&lt;&lt;(*it).s&lt;&lt;\" \";  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<center><img src=\"http://img.blog.csdn.net/20160523221836216\" alt=\"\"></center>\n\n\n","excerpt":"<ul>\n<li>使用set或multiset之前，必须加入头文件<set></li>\n<li>Set、multiset都是集合类，差别在与set中不允许有重复元素，multiset中允许有重复元素。</li>\n<li>sets和multiset内部以平衡二叉树实现</li>\n</ul>\n<ul>\n<li><h3 id=\"构造，析构\"><a href=\"#构造，析构\" class=\"headerlink\" title=\"构造，析构\"></a>构造，析构</h3></li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set c  //创建空集合,不包含任何元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">set c(op)  //以op为排序准则，产生一个空的set  </span><br><span class=\"line\">  </span><br><span class=\"line\">set c1(c2)  //复制c2中的元素到c1中  </span><br><span class=\"line\">  </span><br><span class=\"line\">set c(const value_type *first, const value_type* last)  </span><br><span class=\"line\">//复制[first, last)之间元素构成新集合  </span><br><span class=\"line\">  </span><br><span class=\"line\">set c(const value_type *first, const value_type* last,op)  </span><br><span class=\"line\">//以op为排序准则，复制[first, last)之间元素构成新集合。  </span><br><span class=\"line\">  </span><br><span class=\"line\">c.~set()  </span><br><span class=\"line\">//销毁所有元素，释放内存  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset mc  //创建空集合,不包含任何元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset mc(op)  //以op为排序准则，产生一个空的set  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset c1(c2)  //复制c2中的元素到c1中  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset c(const value_type *first, const value_type* last)  </span><br><span class=\"line\">//复制[first, last)之间元素构成新集合  </span><br><span class=\"line\">  </span><br><span class=\"line\">multiset c(const value_type *first, const value_type* last,op)  </span><br><span class=\"line\">//以op为排序准则，复制[first, last)之间元素构成新集合。  </span><br><span class=\"line\">  </span><br><span class=\"line\">c.~set()  //销毁所有元素，释放内存</span><br></pre></td></tr></table></figure>","more":"<ul>\n<li><h3 id=\"支持的操作符\"><a href=\"#支持的操作符\" class=\"headerlink\" title=\"支持的操作符\"></a>支持的操作符</h3></li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2set%E5%9B%BE%E7%89%87.png\" alt=\"\"></center>\n\n<ul>\n<li><h3 id=\"其他函数\"><a href=\"#其他函数\" class=\"headerlink\" title=\"其他函数\"></a>其他函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.size() <span class=\"comment\">//返回有容器中有多少元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size()  <span class=\"comment\">//返回容器可以存放的最大数据的个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> <span class=\"keyword\">const</span>  <span class=\"comment\">//返回容器元素个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"title\">empty</span><span class=\"params\">()</span> <span class=\"keyword\">const</span>  <span class=\"comment\">//判断容器是否为空，若返回true，表明容器已空</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"增加删除\"><a href=\"#增加删除\" class=\"headerlink\" title=\"增加删除\"></a>增加删除</h3></li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair&lt;iterator,bool&gt; insert( x)  //插入元素x  </span><br><span class=\"line\">  </span><br><span class=\"line\">iterator insert(iterator it,x)  //在迭代器it处插入元素x  </span><br><span class=\"line\">  </span><br><span class=\"line\">void insert(const value_type *first,const value_type *last) </span><br><span class=\"line\">//插入[first, last)之间元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">iterator erase(iterator it)  //删除迭代器指针it处元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">iterator erase(iterator first,iterator last)  </span><br><span class=\"line\">//删除[first, last)之间元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">size_type erase(const Key&amp; key)  //删除元素值等于key的元素  </span><br><span class=\"line\">  </span><br><span class=\"line\">c.clear()  //移除所有元素，使得容器变为空</span><br></pre></td></tr></table></figure>\n<ul>\n<li>set和multiset提供的这两个插入函数返回值有所不同<br>set提供的插入函数</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pair&lt;iterator,<span class=\"keyword\">bool</span>&gt; insert(<span class=\"keyword\">const</span> value_type&amp; elem);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">iterator  <span class=\"title\">insert</span><span class=\"params\">(iterator pos_hint, <span class=\"keyword\">const</span> value_type&amp; elem)</span></span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>multiset提供的插入函数：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">iterator  <span class=\"title\">insert</span><span class=\"params\">(<span class=\"keyword\">const</span> value_type&amp; elem)</span></span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">iterator  <span class=\"title\">insert</span><span class=\"params\">(iterator pos_hint, <span class=\"keyword\">const</span> value_type&amp; elem)</span></span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"迭代器相关函数\"><a href=\"#迭代器相关函数\" class=\"headerlink\" title=\"迭代器相关函数\"></a>迭代器相关函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">iterator <span class=\"title\">begin</span><span class=\"params\">()</span>  <span class=\"comment\">//返回首元素的迭代器指针  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">iterator <span class=\"title\">end</span><span class=\"params\">()</span>  <span class=\"comment\">//返回尾元素的迭代器指针  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reverse_iterator <span class=\"title\">rbegin</span><span class=\"params\">()</span>  <span class=\"comment\">//返回尾元素的逆向迭代器指针  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reverse_iterator <span class=\"title\">rend</span><span class=\"params\">()</span>  <span class=\"comment\">//返回首元素前一个位置的迭代器指针</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h3></li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const_iterator lower_bound(const Key&amp; key)  //返回容器中大于等于key的迭代器指针  </span><br><span class=\"line\">  </span><br><span class=\"line\">const_iterator upper_bound(const Key&amp; key)  //返回容器中大于key的迭代器指针  </span><br><span class=\"line\">  </span><br><span class=\"line\">int count(const Key&amp; key) const  </span><br><span class=\"line\">//返回容器中元素等于key的元素的个数  </span><br><span class=\"line\">  </span><br><span class=\"line\">s.equal_range(elem)  </span><br><span class=\"line\">//返回 elem 可以安插的第一个位置和最后一个位置，</span><br><span class=\"line\">//也就是(元素值 == elem) 的元素区间  </span><br><span class=\"line\">  </span><br><span class=\"line\">//因为 set 不允许重复，面 multiset 允许重复，</span><br><span class=\"line\">//所以他们的 insert 操作有不有同的返回值  </span><br><span class=\"line\">//set 提供的接口  </span><br><span class=\"line\">pair&lt;iterator, bool&gt; insert(const value_type&amp; elem); </span><br><span class=\"line\">//返回 pair&lt;&gt;  </span><br><span class=\"line\">//因为 set 不允许元素重复，所以如果插入相同的元素，将会返回失败。  </span><br><span class=\"line\">//Pari 的 secode 成员表示插入是否成功。  </span><br><span class=\"line\">//Pair 的 first 成员返回新元素的位置。  </span><br><span class=\"line\">  </span><br><span class=\"line\">const_iterator find(const Key&amp; key) const  </span><br><span class=\"line\">//查找功能，返回元素值等于key的迭代器指针</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c1==c2  <span class=\"comment\">//将c2所有的元素赋给c1  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">void</span> swap(<span class=\"built_in\">set</span>&amp; s)  <span class=\"comment\">//交换集合元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">void</span> swap(<span class=\"built_in\">multiset</span>&amp; s)  <span class=\"comment\">//交换多集合元素</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3></li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;cstdio&gt;  </span><br><span class=\"line\">#include &lt;iostream&gt;  </span><br><span class=\"line\">#include &lt;stdio.h&gt;  </span><br><span class=\"line\">#include &lt;string&gt;  </span><br><span class=\"line\">#include &lt;set&gt;  </span><br><span class=\"line\">using namespace std;  </span><br><span class=\"line\">struct haha&#123;  </span><br><span class=\"line\">    int a,b;  </span><br><span class=\"line\">    char s;  </span><br><span class=\"line\">    //重写了operator方法  </span><br><span class=\"line\">    friend bool operator&lt;(struct haha a,struct haha b)&#123;  </span><br><span class=\"line\">        return a.s&lt;b.s;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\">struct compare//自定义排序方式  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    bool operator ()(string s1,string s2)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        return s1&gt;s2;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //自定义一个仿函数  </span><br><span class=\"line\">&#125;;  </span><br><span class=\"line\">/** </span><br><span class=\"line\">  用来打印set集合的元素 </span><br><span class=\"line\">*/  </span><br><span class=\"line\">void printSet(set&lt;int&gt;s)&#123;  </span><br><span class=\"line\">    set&lt;int&gt;::iterator i;  </span><br><span class=\"line\">    printf(\"集合元素=\");  </span><br><span class=\"line\">    for(i=s.begin(); i!=s.end(); i++)  </span><br><span class=\"line\">        printf(\"%d \",*i);  </span><br><span class=\"line\">    cout&lt;&lt;endl;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">int main()&#123;  </span><br><span class=\"line\">    /***************set集合元素插入实例****************************/  </span><br><span class=\"line\">    printf(\" /***************set集合元素插入实例*****</span><br><span class=\"line\">    ***********************/\\n\");  </span><br><span class=\"line\">        set&lt;int&gt; s1; //创建空的set对象，元素类型为int，  </span><br><span class=\"line\">        for (int i = 0; i &lt; 5; i++)  </span><br><span class=\"line\">          s1.insert(i*10);  </span><br><span class=\"line\">        //打印集合元素  </span><br><span class=\"line\">        printSet(s1);  </span><br><span class=\"line\">        cout&lt;&lt;\"s1再次插入20\"&lt;&lt;endl;;  </span><br><span class=\"line\">        if (s1.insert(20).second)//再次插入20  </span><br><span class=\"line\">            cout&lt;&lt;\"插入成功！\"&lt;&lt;endl;  </span><br><span class=\"line\">        else  </span><br><span class=\"line\">            cout&lt;&lt;\"插入失败！\"&lt;&lt;endl;  </span><br><span class=\"line\">        cout&lt;&lt;\"s1再次插入50\"&lt;&lt;endl;  </span><br><span class=\"line\">        if (s1.insert(50).second)&#123;  </span><br><span class=\"line\">            cout&lt;&lt;\"插入成功！\"&lt;&lt;endl;  </span><br><span class=\"line\">            printSet(s1);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        else  </span><br><span class=\"line\">            cout&lt;&lt;\"插入失败！\"&lt;&lt;endl;  </span><br><span class=\"line\">        pair&lt;set&lt;int&gt;::iterator, bool&gt; p;  </span><br><span class=\"line\">        p = s1.insert(60);  </span><br><span class=\"line\">        if (p.second)&#123;  </span><br><span class=\"line\">            cout&lt;&lt;\"插入成功!\"&lt;&lt;endl; printSet(s1);  </span><br><span class=\"line\">       printf(\"60插入的位置=%d\\n\",distance(s1.begin(),s1.end()));  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        else  </span><br><span class=\"line\">            cout&lt;&lt;\"插入失败!\"&lt;&lt;endl;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">     /***************set集合删除特定值实例***********</span><br><span class=\"line\">     *****************/  </span><br><span class=\"line\">     printf(\"/***************set集合删除特定值实例*****</span><br><span class=\"line\">     ***********************/\\n\");  </span><br><span class=\"line\">     printf(\"原始集合s1\\n\");  </span><br><span class=\"line\">     printSet(s1);  </span><br><span class=\"line\">    while (!s1.empty())&#123;  </span><br><span class=\"line\">       cout &lt;&lt;\" \"&lt;&lt; *s1.begin();  </span><br><span class=\"line\">       //删除集合开头的元素  </span><br><span class=\"line\">       s1.erase(s1.begin());  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    printf(\"\\n删除之后的元素\\n\");  </span><br><span class=\"line\">    if(s1.size()==0)&#123;  </span><br><span class=\"line\">       printf(\"集合为空\\n\");  </span><br><span class=\"line\">    &#125;else&#123;  </span><br><span class=\"line\">       printSet(s1);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    /***************set集合结构体使用实例********</span><br><span class=\"line\">    ********************/  </span><br><span class=\"line\">    printf(\"\\n/***************set集合结构体使用实例*****</span><br><span class=\"line\">    ***********************/\\n\");  </span><br><span class=\"line\">    set&lt;struct haha&gt;element;  </span><br><span class=\"line\">    struct haha a,b,c,d,t;  </span><br><span class=\"line\">    a.a=1; a.s='b';  </span><br><span class=\"line\">    b.a=2; b.s='c';  </span><br><span class=\"line\">    c.a=4; c.s='d';  </span><br><span class=\"line\">    d.a=3; d.s='a';  </span><br><span class=\"line\">    element.insert(d);  </span><br><span class=\"line\">    element.insert(b);  </span><br><span class=\"line\">    element.insert(c);  </span><br><span class=\"line\">    element.insert(a);  </span><br><span class=\"line\">    set&lt;struct haha&gt;::iterator it;  </span><br><span class=\"line\">    for(it=element.begin(); it!=element.end();it++)  </span><br><span class=\"line\">        cout&lt;&lt;(*it).a&lt;&lt;\" \";  </span><br><span class=\"line\">    cout&lt;&lt;endl;  </span><br><span class=\"line\">    for(it=element.begin(); it!=element.end();it++)  </span><br><span class=\"line\">        cout&lt;&lt;(*it).s&lt;&lt;\" \";  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<center><img src=\"http://img.blog.csdn.net/20160523221836216\" alt=\"\"></center>"},{"title":" STL之算法总结","date":"2016-06-01T17:59:21.000Z","_content":"\n- STL算法部分主要由头文件<algorithm>,<numeric>,<functional>组成。\n要使用 STL中的算法函数必须包含头文件<algorithm>，\n对于数值算法须包含<numeric>，<functional>中则定义了一些模板类，用来声明函数对象。\nSTL中算法大致分为四类：\n①非可变序列算法：指不直接修改其所操作的容器内容的算法。\n②可变序列算法：指可以修改它们所操作的容器内容的算法。\n③排序算法：包括对序列进行排序和合并的算法、搜索算法以及有序序列上的集合操作。\n④数值算法：对容器内容进行数值计算。\n\n\n- ### 查找算法(13个)：判断容器中是否包含某个值###\n\n```cpp\nadjacent_find  \n//在iterator对标识元素范围内，查找一对相邻    \n//重复元素，找到则返回指向这对元素的第一个元素的ForwardIterator。  \n//否则返回last。重载版本使用输入的二元操作符代替相等的判断。    \n    \nbinary_search  \n//在有序序列中查找value，找到返回true。 \n//重载的版本实用指定的比较函数对象或函数指针来判断相等。  \n  \nincludes  //判断区间1是否包含2，是binary_search的扩展  \n    \ncount  \n//利用等于操作符，把标志范围内的元素与输入值比较，返回相等元素个数。    \n    \ncount_if  \n//利用输入的操作符，对标志范围内的元素进行操作，\n//返回结果为true的个数。    \n    \nequal_range  \n//功能类似equal，返回一对iterator，    \n//第一个表示lower_bound，第二个表示upper_bound。    \n    \nfind  \n//利用底层元素的等于操作符，对指定范围内的元素    \n//与输入值进行比较。当匹配时，结束搜索，\n//返回该元素的一个InputIterator。    \n    \nfind_end  \n//在指定范围内查找\"由输入的另外一对iterator标志    \n//的第二个序列\"的最后一次出现。找到则返回最后一对的    \n//第一个ForwardIterator，否则返回输入的\"另外一对\"的    \n//第一个ForwardIterator。重载版本使用用户输入的操作符代替等于操作。    \n    \nfind_first_of  \n//在指定范围内查找\"由输入的另外一对iterator标志    \n//的第二个序列\"中任意一个元素的第一次出现\n//重载版本中使用了用户自定义操作符。    \n    \nfind_if  //使用输入的函数代替等于操作符执行find。    \n    \nlower_bound  \n//返回一个ForwardIterator，指向在有序    \n//序列范围内的可以插入指定值而不破坏容器顺序的第一个    \n//位置。重载函数使用自定义比较操作。    \n    \nupper_bound  \n//返回一个ForwardIterator，指向在    \n//有序序列范围内插入value而不破坏容器顺序的最后    \n//一个位置，该位置标志一个大于value的值。\n//重载函数使用自定义比较操作。    \n    \nsearch  //给出两个范围，返回一个ForwardIterator，    \n//查找成功指向第一个范围内第一次出现子序列(第二个范围)    \n//的位置，查找失败指向last1。重载版本使用自定义的比较操作。    \n    \nsearch_n  \n//在指定范围内查找val出现n次的子序列。重载版本使用自定义的比较操作。   \n```\n\n<!-- more -->\n\n- ### 排序和通用算法(14个)：提供元素排序策略###\n\n```cpp\ninplace_merge  \n//合并两个有序序列，结果序列覆盖两端范围。\n//重载版本使用输入的操作进行排序。  \n  \nmerge  \n//合并两个有序序列，存放到另一个序列。重载版本使用自定义的比较。  \n  \nnth_element  \n//将范围内的序列重新排序，使所有小于第n个元素的元素  \n//都出现在它前面，而大于它的都出现在后面。\n//重载版本使用自定义的比较操作。  \n  \npartial_sort  \n//对序列做部分排序，被排序元素个数正好可以被放到范围内。  \n//重载版本使用自定义的比较操作。  \n  \npartial_sort_copy  //与partial_sort类似，不过将经过排序的序列复制到另一个容器。  \n  \npartition  \n//对指定范围内元素重新排序，使用输入的函数，\n//把结果为true的元素放在结果为false的元素之前。  \n  \nrandom_shuffle  \n//对指定范围内的元素随机调整次序。重载版本输入一个随机数产生操作。  \n  \nreverse  //将指定范围内元素重新反序排序。  \n  \nreverse_copy  //与reverse类似，不过将结果写入另一个容器。  \n  \nrotate  \n//将指定范围内元素移到容器末尾，由middle指向的\n元素成为容器第一个元素。  \n  \nrotate_copy  //与rotate类似，不过将结果写入另一个容器。  \n  \nsort  \n//以升序重新排列指定范围内的元素。重载版本使用自定义的比较操作。  \n  \nstable_sort  //与sort类似，不过保留相等元素之间的顺序关系。  \n  \nstable_partition  \n//与partition类似，不过不保证保留容器中的相对顺序。 \n```\n\n- ### 删除和替换算法(15个)###\n\n```cpp\ncopy  //复制序列  \n  \ncopy_backward //与copy相同，不过元素是以相反顺序被拷贝。  \n  \niter_swap  //交换两个ForwardIterator的值。  \n  \nremove  \n//删除指定范围内所有等于指定元素的元素。注意，  \n//该函数不是真正删除函数。内置函数不适合使用remove和remove_if函数。  \n  \nremove_copy  //将所有不匹配元素复制到一个制定容器，  \n//返回OutputIterator指向被拷贝的末元素的下一个位置。  \n  \nremove_if  //删除指定范围内输入操作结果为true的所有元素。  \n  \nremove_copy_if  //将所有不匹配元素拷贝到一个指定容器。  \n  \nreplace  //将指定范围内所有等于vold的元素都用vnew代替。  \n  \nreplace_copy  //与replace类似，不过将结果写入另一个容器。  \n  \nreplace_if  //将指定范围内所有操作结果为true的元素用新值代替。  \n  \nreplace_copy_if  //与replace_if，不过将结果写入另一个容器。  \n  \nswap  //交换存储在两个对象中的值。  \n  \nswap_range  //将指定范围内的元素与另一个序列元素值进行交换。  \n  \nunique  \n//清除序列中重复元素，和remove类似，它也不能  \n//真正删除元素。重载版本使用自定义比较操作。  \n  \nunique_copy  //与unique类似，不过把结果输出到另一个容器。  \n```\n\n- ### 排列组合算法(2个)：提供计算给定集合按一定顺序的所有可能排列组合###\n\n```cpp\nnext_permutation  \n//取出当前范围内的排列，并重新排序为  \n//下一个排列。重载版本使用自定义的比较操作。  \n  \nprev_permutation  \n//取出指定范围内的序列并将它重新排序  \n//为上一个序列。如果不存在上一个序列则返回false。\n//重载版本使用自定义的比较操作。  \n```\n\n- ### 算术算法(4个)###\n\n```cpp\naccumulate  //iterator对标识的序列段元素之和，加到一个由  \n//val指定的初始值上。重载版本不再做加法，而是传进来的\n//二元操作符被应用到元素上。  \n  \npartial_sum  //创建一个新序列，其中每个元素值代表指定  \n//范围内该位置前所有元素之和。重载版本使用自定义操作代替加法。  \n  \ninner_product  //对两个序列做内积(对应元素相乘，再求和)并  \n//将内积加到一个输入的初始值上。重载版本使用用户定义的操作。  \n  \nadjacent_difference  //创建一个新序列，新序列中每个新值代表  \n//当前元素与上一个元素的差。重载版本用指定二元操作计算相邻元素的差。  \n```\n\n- ### 生成和异变算法(6个)###\n\n```cpp\nfill  //将输入值赋给标志范围内的所有元素。  \n  \nfill_n  //将输入值赋给first到first+n范围内的所有元素。  \n  \nfor_each  //用指定函数依次对指定范围内所有元素进行迭代访问，  \n//返回所指定的函数类型。该函数不得修改序列中的元素。  \n  \ngenerate  //连续调用输入的函数来填充指定的范围。  \n  \ngenerate_n  \n//与generate函数类似，填充从指定iterator开始的n个元素。  \n  \ntransform  \n//将输入的操作作用与指定范围内的每个元素，并产生一个新的序列。  \n//重载版本将操作作用在一对元素上，另外一个元素来自输入的\n//另外一个序列。结果输出到指定容器\n```\n\n- ### 关系算法(8个)###\n\n```cpp\nequal  //如果两个序列在标志范围内元素都相等，返回true。  \n//重载版本使用输入的操作符代替默认的等于操作符。  \n  \nincludes  //判断第一个指定范围内的所有元素是否都被第二个  \n//范围包含，使用底层元素的<操作符，成功返回true。\n//重载版本使用用户输入的函数。  \n  \nlexicographical_compare  //比较两个序列。重载版本使用用户自定义比较操作。  \n  \nmax  //返回两个元素中较大一个。重载版本使用自定义比较操作。  \n  \nmax_element  //返回一个ForwardIterator，指出序列中最大的\n//元素。重载版本使用自定义比较操作。  \n  \nmin  //返回两个元素中较小一个。重载版本使用自定义比较操作。  \n  \nmin_element  //返回一个ForwardIterator，指出序列中最小的\n//元素。重载版本使用自定义比较操作。  \n  \nmismatch  //并行比较两个序列，指出第一个\n//不匹配的位置，返回一对iterator，  \n//标志第一个不匹配元素位置。如果都匹配，返回每个\n//容器的last。重载版本使用自定义的比较操作。  \n```\n\n- ### 集合算法(4个)###\n\n```cpp\nset_union  //构造一个有序序列，包含两个序列中所有的不重复\n//元素。重载版本使用自定义的比较操作。  \n  \nset_intersection  //构造一个有序序列，其中元素在两个序列中\n//都存在。重载版本使用自定义的比较操作。  \n  \nset_difference  \n//构造一个有序序列，该序列仅保留第一个序列中存在的而  \n//第二个中不存在的元素。重载版本使用自定义的比较操作。  \n  \nset_symmetric_difference  //构造一个有序序列，该序列取两个序列的对称差集(并集-交集)。  \n```\n\n- ### 堆算法(4个)###\n\n```cpp\nmake_heap  \n//把指定范围内的元素生成一个堆。重载版本使用自定义比较操作。  \n  \npop_heap  \n//并不真正把最大元素从堆中弹出，而是重新排序堆。它把  \n//first和last-1交换，然后重新生成一个堆。可使用容器的back来访问  \n//被\"弹出\"的元素或者使用pop_back进行真正的删除。重载版本\n//使用自定义的比较操作。  \n  \npush_heap  \n//假设first到last-1是一个有效堆，要被加入到堆的元素存放在  \n//位置last-1，重新生成堆。在指向该函数前，必须先把元素插入\n//容器后。重载版本使用指定的比较操作。  \n  \nsort_heap  //对指定范围内的序列重新排序，它假设该序列是\n//个有序堆。重载版本使用自定义比较操作。  \n```\n\n\n- ### 常用算法图示###\n\n<center>![](http://img.blog.csdn.net/20160519155043788)</center>","source":"_posts/C++/STL之算法总结.md","raw":"---\ntitle: ' STL之算法总结'\ndate: 2016-06-01 17:59:21\ntags: [C++,STL,算法]\ncategories: C++\n---\n\n- STL算法部分主要由头文件<algorithm>,<numeric>,<functional>组成。\n要使用 STL中的算法函数必须包含头文件<algorithm>，\n对于数值算法须包含<numeric>，<functional>中则定义了一些模板类，用来声明函数对象。\nSTL中算法大致分为四类：\n①非可变序列算法：指不直接修改其所操作的容器内容的算法。\n②可变序列算法：指可以修改它们所操作的容器内容的算法。\n③排序算法：包括对序列进行排序和合并的算法、搜索算法以及有序序列上的集合操作。\n④数值算法：对容器内容进行数值计算。\n\n\n- ### 查找算法(13个)：判断容器中是否包含某个值###\n\n```cpp\nadjacent_find  \n//在iterator对标识元素范围内，查找一对相邻    \n//重复元素，找到则返回指向这对元素的第一个元素的ForwardIterator。  \n//否则返回last。重载版本使用输入的二元操作符代替相等的判断。    \n    \nbinary_search  \n//在有序序列中查找value，找到返回true。 \n//重载的版本实用指定的比较函数对象或函数指针来判断相等。  \n  \nincludes  //判断区间1是否包含2，是binary_search的扩展  \n    \ncount  \n//利用等于操作符，把标志范围内的元素与输入值比较，返回相等元素个数。    \n    \ncount_if  \n//利用输入的操作符，对标志范围内的元素进行操作，\n//返回结果为true的个数。    \n    \nequal_range  \n//功能类似equal，返回一对iterator，    \n//第一个表示lower_bound，第二个表示upper_bound。    \n    \nfind  \n//利用底层元素的等于操作符，对指定范围内的元素    \n//与输入值进行比较。当匹配时，结束搜索，\n//返回该元素的一个InputIterator。    \n    \nfind_end  \n//在指定范围内查找\"由输入的另外一对iterator标志    \n//的第二个序列\"的最后一次出现。找到则返回最后一对的    \n//第一个ForwardIterator，否则返回输入的\"另外一对\"的    \n//第一个ForwardIterator。重载版本使用用户输入的操作符代替等于操作。    \n    \nfind_first_of  \n//在指定范围内查找\"由输入的另外一对iterator标志    \n//的第二个序列\"中任意一个元素的第一次出现\n//重载版本中使用了用户自定义操作符。    \n    \nfind_if  //使用输入的函数代替等于操作符执行find。    \n    \nlower_bound  \n//返回一个ForwardIterator，指向在有序    \n//序列范围内的可以插入指定值而不破坏容器顺序的第一个    \n//位置。重载函数使用自定义比较操作。    \n    \nupper_bound  \n//返回一个ForwardIterator，指向在    \n//有序序列范围内插入value而不破坏容器顺序的最后    \n//一个位置，该位置标志一个大于value的值。\n//重载函数使用自定义比较操作。    \n    \nsearch  //给出两个范围，返回一个ForwardIterator，    \n//查找成功指向第一个范围内第一次出现子序列(第二个范围)    \n//的位置，查找失败指向last1。重载版本使用自定义的比较操作。    \n    \nsearch_n  \n//在指定范围内查找val出现n次的子序列。重载版本使用自定义的比较操作。   \n```\n\n<!-- more -->\n\n- ### 排序和通用算法(14个)：提供元素排序策略###\n\n```cpp\ninplace_merge  \n//合并两个有序序列，结果序列覆盖两端范围。\n//重载版本使用输入的操作进行排序。  \n  \nmerge  \n//合并两个有序序列，存放到另一个序列。重载版本使用自定义的比较。  \n  \nnth_element  \n//将范围内的序列重新排序，使所有小于第n个元素的元素  \n//都出现在它前面，而大于它的都出现在后面。\n//重载版本使用自定义的比较操作。  \n  \npartial_sort  \n//对序列做部分排序，被排序元素个数正好可以被放到范围内。  \n//重载版本使用自定义的比较操作。  \n  \npartial_sort_copy  //与partial_sort类似，不过将经过排序的序列复制到另一个容器。  \n  \npartition  \n//对指定范围内元素重新排序，使用输入的函数，\n//把结果为true的元素放在结果为false的元素之前。  \n  \nrandom_shuffle  \n//对指定范围内的元素随机调整次序。重载版本输入一个随机数产生操作。  \n  \nreverse  //将指定范围内元素重新反序排序。  \n  \nreverse_copy  //与reverse类似，不过将结果写入另一个容器。  \n  \nrotate  \n//将指定范围内元素移到容器末尾，由middle指向的\n元素成为容器第一个元素。  \n  \nrotate_copy  //与rotate类似，不过将结果写入另一个容器。  \n  \nsort  \n//以升序重新排列指定范围内的元素。重载版本使用自定义的比较操作。  \n  \nstable_sort  //与sort类似，不过保留相等元素之间的顺序关系。  \n  \nstable_partition  \n//与partition类似，不过不保证保留容器中的相对顺序。 \n```\n\n- ### 删除和替换算法(15个)###\n\n```cpp\ncopy  //复制序列  \n  \ncopy_backward //与copy相同，不过元素是以相反顺序被拷贝。  \n  \niter_swap  //交换两个ForwardIterator的值。  \n  \nremove  \n//删除指定范围内所有等于指定元素的元素。注意，  \n//该函数不是真正删除函数。内置函数不适合使用remove和remove_if函数。  \n  \nremove_copy  //将所有不匹配元素复制到一个制定容器，  \n//返回OutputIterator指向被拷贝的末元素的下一个位置。  \n  \nremove_if  //删除指定范围内输入操作结果为true的所有元素。  \n  \nremove_copy_if  //将所有不匹配元素拷贝到一个指定容器。  \n  \nreplace  //将指定范围内所有等于vold的元素都用vnew代替。  \n  \nreplace_copy  //与replace类似，不过将结果写入另一个容器。  \n  \nreplace_if  //将指定范围内所有操作结果为true的元素用新值代替。  \n  \nreplace_copy_if  //与replace_if，不过将结果写入另一个容器。  \n  \nswap  //交换存储在两个对象中的值。  \n  \nswap_range  //将指定范围内的元素与另一个序列元素值进行交换。  \n  \nunique  \n//清除序列中重复元素，和remove类似，它也不能  \n//真正删除元素。重载版本使用自定义比较操作。  \n  \nunique_copy  //与unique类似，不过把结果输出到另一个容器。  \n```\n\n- ### 排列组合算法(2个)：提供计算给定集合按一定顺序的所有可能排列组合###\n\n```cpp\nnext_permutation  \n//取出当前范围内的排列，并重新排序为  \n//下一个排列。重载版本使用自定义的比较操作。  \n  \nprev_permutation  \n//取出指定范围内的序列并将它重新排序  \n//为上一个序列。如果不存在上一个序列则返回false。\n//重载版本使用自定义的比较操作。  \n```\n\n- ### 算术算法(4个)###\n\n```cpp\naccumulate  //iterator对标识的序列段元素之和，加到一个由  \n//val指定的初始值上。重载版本不再做加法，而是传进来的\n//二元操作符被应用到元素上。  \n  \npartial_sum  //创建一个新序列，其中每个元素值代表指定  \n//范围内该位置前所有元素之和。重载版本使用自定义操作代替加法。  \n  \ninner_product  //对两个序列做内积(对应元素相乘，再求和)并  \n//将内积加到一个输入的初始值上。重载版本使用用户定义的操作。  \n  \nadjacent_difference  //创建一个新序列，新序列中每个新值代表  \n//当前元素与上一个元素的差。重载版本用指定二元操作计算相邻元素的差。  \n```\n\n- ### 生成和异变算法(6个)###\n\n```cpp\nfill  //将输入值赋给标志范围内的所有元素。  \n  \nfill_n  //将输入值赋给first到first+n范围内的所有元素。  \n  \nfor_each  //用指定函数依次对指定范围内所有元素进行迭代访问，  \n//返回所指定的函数类型。该函数不得修改序列中的元素。  \n  \ngenerate  //连续调用输入的函数来填充指定的范围。  \n  \ngenerate_n  \n//与generate函数类似，填充从指定iterator开始的n个元素。  \n  \ntransform  \n//将输入的操作作用与指定范围内的每个元素，并产生一个新的序列。  \n//重载版本将操作作用在一对元素上，另外一个元素来自输入的\n//另外一个序列。结果输出到指定容器\n```\n\n- ### 关系算法(8个)###\n\n```cpp\nequal  //如果两个序列在标志范围内元素都相等，返回true。  \n//重载版本使用输入的操作符代替默认的等于操作符。  \n  \nincludes  //判断第一个指定范围内的所有元素是否都被第二个  \n//范围包含，使用底层元素的<操作符，成功返回true。\n//重载版本使用用户输入的函数。  \n  \nlexicographical_compare  //比较两个序列。重载版本使用用户自定义比较操作。  \n  \nmax  //返回两个元素中较大一个。重载版本使用自定义比较操作。  \n  \nmax_element  //返回一个ForwardIterator，指出序列中最大的\n//元素。重载版本使用自定义比较操作。  \n  \nmin  //返回两个元素中较小一个。重载版本使用自定义比较操作。  \n  \nmin_element  //返回一个ForwardIterator，指出序列中最小的\n//元素。重载版本使用自定义比较操作。  \n  \nmismatch  //并行比较两个序列，指出第一个\n//不匹配的位置，返回一对iterator，  \n//标志第一个不匹配元素位置。如果都匹配，返回每个\n//容器的last。重载版本使用自定义的比较操作。  \n```\n\n- ### 集合算法(4个)###\n\n```cpp\nset_union  //构造一个有序序列，包含两个序列中所有的不重复\n//元素。重载版本使用自定义的比较操作。  \n  \nset_intersection  //构造一个有序序列，其中元素在两个序列中\n//都存在。重载版本使用自定义的比较操作。  \n  \nset_difference  \n//构造一个有序序列，该序列仅保留第一个序列中存在的而  \n//第二个中不存在的元素。重载版本使用自定义的比较操作。  \n  \nset_symmetric_difference  //构造一个有序序列，该序列取两个序列的对称差集(并集-交集)。  \n```\n\n- ### 堆算法(4个)###\n\n```cpp\nmake_heap  \n//把指定范围内的元素生成一个堆。重载版本使用自定义比较操作。  \n  \npop_heap  \n//并不真正把最大元素从堆中弹出，而是重新排序堆。它把  \n//first和last-1交换，然后重新生成一个堆。可使用容器的back来访问  \n//被\"弹出\"的元素或者使用pop_back进行真正的删除。重载版本\n//使用自定义的比较操作。  \n  \npush_heap  \n//假设first到last-1是一个有效堆，要被加入到堆的元素存放在  \n//位置last-1，重新生成堆。在指向该函数前，必须先把元素插入\n//容器后。重载版本使用指定的比较操作。  \n  \nsort_heap  //对指定范围内的序列重新排序，它假设该序列是\n//个有序堆。重载版本使用自定义比较操作。  \n```\n\n\n- ### 常用算法图示###\n\n<center>![](http://img.blog.csdn.net/20160519155043788)</center>","slug":"C++/STL之算法总结","published":1,"updated":"2016-06-17T13:50:17.775Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qhy001ikgaeztc1ynqv","content":"<ul>\n<li>STL算法部分主要由头文件<algorithm>,<numeric>,<functional>组成。<br>要使用 STL中的算法函数必须包含头文件<algorithm>，<br>对于数值算法须包含<numeric>，<functional>中则定义了一些模板类，用来声明函数对象。<br>STL中算法大致分为四类：<br>①非可变序列算法：指不直接修改其所操作的容器内容的算法。<br>②可变序列算法：指可以修改它们所操作的容器内容的算法。<br>③排序算法：包括对序列进行排序和合并的算法、搜索算法以及有序序列上的集合操作。<br>④数值算法：对容器内容进行数值计算。</functional></numeric></algorithm></functional></numeric></algorithm></li>\n</ul>\n<ul>\n<li><h3 id=\"查找算法-13个-：判断容器中是否包含某个值\"><a href=\"#查找算法-13个-：判断容器中是否包含某个值\" class=\"headerlink\" title=\"查找算法(13个)：判断容器中是否包含某个值\"></a>查找算法(13个)：判断容器中是否包含某个值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adjacent_find  </span><br><span class=\"line\"><span class=\"comment\">//在iterator对标识元素范围内，查找一对相邻    </span></span><br><span class=\"line\"><span class=\"comment\">//重复元素，找到则返回指向这对元素的第一个元素的ForwardIterator。  </span></span><br><span class=\"line\"><span class=\"comment\">//否则返回last。重载版本使用输入的二元操作符代替相等的判断。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">binary_search  </span><br><span class=\"line\"><span class=\"comment\">//在有序序列中查找value，找到返回true。 </span></span><br><span class=\"line\"><span class=\"comment\">//重载的版本实用指定的比较函数对象或函数指针来判断相等。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">includes  <span class=\"comment\">//判断区间1是否包含2，是binary_search的扩展  </span></span><br><span class=\"line\">    </span><br><span class=\"line\">count  </span><br><span class=\"line\"><span class=\"comment\">//利用等于操作符，把标志范围内的元素与输入值比较，返回相等元素个数。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">count_if  </span><br><span class=\"line\"><span class=\"comment\">//利用输入的操作符，对标志范围内的元素进行操作，</span></span><br><span class=\"line\"><span class=\"comment\">//返回结果为true的个数。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">equal_range  </span><br><span class=\"line\"><span class=\"comment\">//功能类似equal，返回一对iterator，    </span></span><br><span class=\"line\"><span class=\"comment\">//第一个表示lower_bound，第二个表示upper_bound。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">find  </span><br><span class=\"line\"><span class=\"comment\">//利用底层元素的等于操作符，对指定范围内的元素    </span></span><br><span class=\"line\"><span class=\"comment\">//与输入值进行比较。当匹配时，结束搜索，</span></span><br><span class=\"line\"><span class=\"comment\">//返回该元素的一个InputIterator。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">find_end  </span><br><span class=\"line\"><span class=\"comment\">//在指定范围内查找\"由输入的另外一对iterator标志    </span></span><br><span class=\"line\"><span class=\"comment\">//的第二个序列\"的最后一次出现。找到则返回最后一对的    </span></span><br><span class=\"line\"><span class=\"comment\">//第一个ForwardIterator，否则返回输入的\"另外一对\"的    </span></span><br><span class=\"line\"><span class=\"comment\">//第一个ForwardIterator。重载版本使用用户输入的操作符代替等于操作。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">find_first_of  </span><br><span class=\"line\"><span class=\"comment\">//在指定范围内查找\"由输入的另外一对iterator标志    </span></span><br><span class=\"line\"><span class=\"comment\">//的第二个序列\"中任意一个元素的第一次出现</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本中使用了用户自定义操作符。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">find_if  <span class=\"comment\">//使用输入的函数代替等于操作符执行find。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">lower_bound  </span><br><span class=\"line\"><span class=\"comment\">//返回一个ForwardIterator，指向在有序    </span></span><br><span class=\"line\"><span class=\"comment\">//序列范围内的可以插入指定值而不破坏容器顺序的第一个    </span></span><br><span class=\"line\"><span class=\"comment\">//位置。重载函数使用自定义比较操作。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">upper_bound  </span><br><span class=\"line\"><span class=\"comment\">//返回一个ForwardIterator，指向在    </span></span><br><span class=\"line\"><span class=\"comment\">//有序序列范围内插入value而不破坏容器顺序的最后    </span></span><br><span class=\"line\"><span class=\"comment\">//一个位置，该位置标志一个大于value的值。</span></span><br><span class=\"line\"><span class=\"comment\">//重载函数使用自定义比较操作。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">search  <span class=\"comment\">//给出两个范围，返回一个ForwardIterator，    </span></span><br><span class=\"line\"><span class=\"comment\">//查找成功指向第一个范围内第一次出现子序列(第二个范围)    </span></span><br><span class=\"line\"><span class=\"comment\">//的位置，查找失败指向last1。重载版本使用自定义的比较操作。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">search_n  </span><br><span class=\"line\"><span class=\"comment\">//在指定范围内查找val出现n次的子序列。重载版本使用自定义的比较操作。</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li><h3 id=\"排序和通用算法-14个-：提供元素排序策略\"><a href=\"#排序和通用算法-14个-：提供元素排序策略\" class=\"headerlink\" title=\"排序和通用算法(14个)：提供元素排序策略\"></a>排序和通用算法(14个)：提供元素排序策略</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inplace_merge  </span><br><span class=\"line\"><span class=\"comment\">//合并两个有序序列，结果序列覆盖两端范围。</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用输入的操作进行排序。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">merge  </span><br><span class=\"line\"><span class=\"comment\">//合并两个有序序列，存放到另一个序列。重载版本使用自定义的比较。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">nth_element  </span><br><span class=\"line\"><span class=\"comment\">//将范围内的序列重新排序，使所有小于第n个元素的元素  </span></span><br><span class=\"line\"><span class=\"comment\">//都出现在它前面，而大于它的都出现在后面。</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">partial_sort  </span><br><span class=\"line\"><span class=\"comment\">//对序列做部分排序，被排序元素个数正好可以被放到范围内。  </span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">partial_sort_copy  <span class=\"comment\">//与partial_sort类似，不过将经过排序的序列复制到另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">partition  </span><br><span class=\"line\"><span class=\"comment\">//对指定范围内元素重新排序，使用输入的函数，</span></span><br><span class=\"line\"><span class=\"comment\">//把结果为true的元素放在结果为false的元素之前。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">random_shuffle  </span><br><span class=\"line\"><span class=\"comment\">//对指定范围内的元素随机调整次序。重载版本输入一个随机数产生操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reverse  <span class=\"comment\">//将指定范围内元素重新反序排序。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reverse_copy  <span class=\"comment\">//与reverse类似，不过将结果写入另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">rotate  </span><br><span class=\"line\"><span class=\"comment\">//将指定范围内元素移到容器末尾，由middle指向的</span></span><br><span class=\"line\">元素成为容器第一个元素。  </span><br><span class=\"line\">  </span><br><span class=\"line\">rotate_copy  <span class=\"comment\">//与rotate类似，不过将结果写入另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">sort  </span><br><span class=\"line\"><span class=\"comment\">//以升序重新排列指定范围内的元素。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">stable_sort  <span class=\"comment\">//与sort类似，不过保留相等元素之间的顺序关系。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">stable_partition  </span><br><span class=\"line\"><span class=\"comment\">//与partition类似，不过不保证保留容器中的相对顺序。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"删除和替换算法-15个\"><a href=\"#删除和替换算法-15个\" class=\"headerlink\" title=\"删除和替换算法(15个)\"></a>删除和替换算法(15个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">copy  <span class=\"comment\">//复制序列  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">copy_backward <span class=\"comment\">//与copy相同，不过元素是以相反顺序被拷贝。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">iter_swap  <span class=\"comment\">//交换两个ForwardIterator的值。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">remove  </span><br><span class=\"line\"><span class=\"comment\">//删除指定范围内所有等于指定元素的元素。注意，  </span></span><br><span class=\"line\"><span class=\"comment\">//该函数不是真正删除函数。内置函数不适合使用remove和remove_if函数。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">remove_copy  <span class=\"comment\">//将所有不匹配元素复制到一个制定容器，  </span></span><br><span class=\"line\"><span class=\"comment\">//返回OutputIterator指向被拷贝的末元素的下一个位置。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">remove_if  <span class=\"comment\">//删除指定范围内输入操作结果为true的所有元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">remove_copy_if  <span class=\"comment\">//将所有不匹配元素拷贝到一个指定容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace  <span class=\"comment\">//将指定范围内所有等于vold的元素都用vnew代替。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace_copy  <span class=\"comment\">//与replace类似，不过将结果写入另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace_if  <span class=\"comment\">//将指定范围内所有操作结果为true的元素用新值代替。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace_copy_if  <span class=\"comment\">//与replace_if，不过将结果写入另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap  <span class=\"comment\">//交换存储在两个对象中的值。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap_range  <span class=\"comment\">//将指定范围内的元素与另一个序列元素值进行交换。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">unique  </span><br><span class=\"line\"><span class=\"comment\">//清除序列中重复元素，和remove类似，它也不能  </span></span><br><span class=\"line\"><span class=\"comment\">//真正删除元素。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">unique_copy  <span class=\"comment\">//与unique类似，不过把结果输出到另一个容器。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"排列组合算法-2个-：提供计算给定集合按一定顺序的所有可能排列组合\"><a href=\"#排列组合算法-2个-：提供计算给定集合按一定顺序的所有可能排列组合\" class=\"headerlink\" title=\"排列组合算法(2个)：提供计算给定集合按一定顺序的所有可能排列组合\"></a>排列组合算法(2个)：提供计算给定集合按一定顺序的所有可能排列组合</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">next_permutation  </span><br><span class=\"line\"><span class=\"comment\">//取出当前范围内的排列，并重新排序为  </span></span><br><span class=\"line\"><span class=\"comment\">//下一个排列。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">prev_permutation  </span><br><span class=\"line\"><span class=\"comment\">//取出指定范围内的序列并将它重新排序  </span></span><br><span class=\"line\"><span class=\"comment\">//为上一个序列。如果不存在上一个序列则返回false。</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用自定义的比较操作。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"算术算法-4个\"><a href=\"#算术算法-4个\" class=\"headerlink\" title=\"算术算法(4个)\"></a>算术算法(4个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">accumulate  <span class=\"comment\">//iterator对标识的序列段元素之和，加到一个由  </span></span><br><span class=\"line\"><span class=\"comment\">//val指定的初始值上。重载版本不再做加法，而是传进来的</span></span><br><span class=\"line\"><span class=\"comment\">//二元操作符被应用到元素上。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">partial_sum  <span class=\"comment\">//创建一个新序列，其中每个元素值代表指定  </span></span><br><span class=\"line\"><span class=\"comment\">//范围内该位置前所有元素之和。重载版本使用自定义操作代替加法。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">inner_product  <span class=\"comment\">//对两个序列做内积(对应元素相乘，再求和)并  </span></span><br><span class=\"line\"><span class=\"comment\">//将内积加到一个输入的初始值上。重载版本使用用户定义的操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">adjacent_difference  <span class=\"comment\">//创建一个新序列，新序列中每个新值代表  </span></span><br><span class=\"line\"><span class=\"comment\">//当前元素与上一个元素的差。重载版本用指定二元操作计算相邻元素的差。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"生成和异变算法-6个\"><a href=\"#生成和异变算法-6个\" class=\"headerlink\" title=\"生成和异变算法(6个)\"></a>生成和异变算法(6个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fill  <span class=\"comment\">//将输入值赋给标志范围内的所有元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">fill_n  <span class=\"comment\">//将输入值赋给first到first+n范围内的所有元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">for_each  <span class=\"comment\">//用指定函数依次对指定范围内所有元素进行迭代访问，  </span></span><br><span class=\"line\"><span class=\"comment\">//返回所指定的函数类型。该函数不得修改序列中的元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">generate  <span class=\"comment\">//连续调用输入的函数来填充指定的范围。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">generate_n  </span><br><span class=\"line\"><span class=\"comment\">//与generate函数类似，填充从指定iterator开始的n个元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">transform  </span><br><span class=\"line\"><span class=\"comment\">//将输入的操作作用与指定范围内的每个元素，并产生一个新的序列。  </span></span><br><span class=\"line\"><span class=\"comment\">//重载版本将操作作用在一对元素上，另外一个元素来自输入的</span></span><br><span class=\"line\"><span class=\"comment\">//另外一个序列。结果输出到指定容器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"关系算法-8个\"><a href=\"#关系算法-8个\" class=\"headerlink\" title=\"关系算法(8个)\"></a>关系算法(8个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">equal  <span class=\"comment\">//如果两个序列在标志范围内元素都相等，返回true。  </span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用输入的操作符代替默认的等于操作符。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">includes  <span class=\"comment\">//判断第一个指定范围内的所有元素是否都被第二个  </span></span><br><span class=\"line\"><span class=\"comment\">//范围包含，使用底层元素的&lt;操作符，成功返回true。</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用用户输入的函数。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">lexicographical_compare  <span class=\"comment\">//比较两个序列。重载版本使用用户自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">max  <span class=\"comment\">//返回两个元素中较大一个。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">max_element  <span class=\"comment\">//返回一个ForwardIterator，指出序列中最大的</span></span><br><span class=\"line\"><span class=\"comment\">//元素。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">min  <span class=\"comment\">//返回两个元素中较小一个。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">min_element  <span class=\"comment\">//返回一个ForwardIterator，指出序列中最小的</span></span><br><span class=\"line\"><span class=\"comment\">//元素。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">mismatch  <span class=\"comment\">//并行比较两个序列，指出第一个</span></span><br><span class=\"line\"><span class=\"comment\">//不匹配的位置，返回一对iterator，  </span></span><br><span class=\"line\"><span class=\"comment\">//标志第一个不匹配元素位置。如果都匹配，返回每个</span></span><br><span class=\"line\"><span class=\"comment\">//容器的last。重载版本使用自定义的比较操作。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"集合算法-4个\"><a href=\"#集合算法-4个\" class=\"headerlink\" title=\"集合算法(4个)\"></a>集合算法(4个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set_union  <span class=\"comment\">//构造一个有序序列，包含两个序列中所有的不重复</span></span><br><span class=\"line\"><span class=\"comment\">//元素。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">set_intersection  <span class=\"comment\">//构造一个有序序列，其中元素在两个序列中</span></span><br><span class=\"line\"><span class=\"comment\">//都存在。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">set_difference  </span><br><span class=\"line\"><span class=\"comment\">//构造一个有序序列，该序列仅保留第一个序列中存在的而  </span></span><br><span class=\"line\"><span class=\"comment\">//第二个中不存在的元素。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">set_symmetric_difference  <span class=\"comment\">//构造一个有序序列，该序列取两个序列的对称差集(并集-交集)。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"堆算法-4个\"><a href=\"#堆算法-4个\" class=\"headerlink\" title=\"堆算法(4个)\"></a>堆算法(4个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make_heap  </span><br><span class=\"line\"><span class=\"comment\">//把指定范围内的元素生成一个堆。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">pop_heap  </span><br><span class=\"line\"><span class=\"comment\">//并不真正把最大元素从堆中弹出，而是重新排序堆。它把  </span></span><br><span class=\"line\"><span class=\"comment\">//first和last-1交换，然后重新生成一个堆。可使用容器的back来访问  </span></span><br><span class=\"line\"><span class=\"comment\">//被\"弹出\"的元素或者使用pop_back进行真正的删除。重载版本</span></span><br><span class=\"line\"><span class=\"comment\">//使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">push_heap  </span><br><span class=\"line\"><span class=\"comment\">//假设first到last-1是一个有效堆，要被加入到堆的元素存放在  </span></span><br><span class=\"line\"><span class=\"comment\">//位置last-1，重新生成堆。在指向该函数前，必须先把元素插入</span></span><br><span class=\"line\"><span class=\"comment\">//容器后。重载版本使用指定的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">sort_heap  <span class=\"comment\">//对指定范围内的序列重新排序，它假设该序列是</span></span><br><span class=\"line\"><span class=\"comment\">//个有序堆。重载版本使用自定义比较操作。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"常用算法图示\"><a href=\"#常用算法图示\" class=\"headerlink\" title=\"常用算法图示\"></a>常用算法图示</h3></li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160519155043788\" alt=\"\"></center>","excerpt":"<ul>\n<li>STL算法部分主要由头文件<algorithm>,<numeric>,<functional>组成。<br>要使用 STL中的算法函数必须包含头文件<algorithm>，<br>对于数值算法须包含<numeric>，<functional>中则定义了一些模板类，用来声明函数对象。<br>STL中算法大致分为四类：<br>①非可变序列算法：指不直接修改其所操作的容器内容的算法。<br>②可变序列算法：指可以修改它们所操作的容器内容的算法。<br>③排序算法：包括对序列进行排序和合并的算法、搜索算法以及有序序列上的集合操作。<br>④数值算法：对容器内容进行数值计算。</li>\n</ul>\n<ul>\n<li><h3 id=\"查找算法-13个-：判断容器中是否包含某个值\"><a href=\"#查找算法-13个-：判断容器中是否包含某个值\" class=\"headerlink\" title=\"查找算法(13个)：判断容器中是否包含某个值\"></a>查找算法(13个)：判断容器中是否包含某个值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adjacent_find  </span><br><span class=\"line\"><span class=\"comment\">//在iterator对标识元素范围内，查找一对相邻    </span></span><br><span class=\"line\"><span class=\"comment\">//重复元素，找到则返回指向这对元素的第一个元素的ForwardIterator。  </span></span><br><span class=\"line\"><span class=\"comment\">//否则返回last。重载版本使用输入的二元操作符代替相等的判断。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">binary_search  </span><br><span class=\"line\"><span class=\"comment\">//在有序序列中查找value，找到返回true。 </span></span><br><span class=\"line\"><span class=\"comment\">//重载的版本实用指定的比较函数对象或函数指针来判断相等。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">includes  <span class=\"comment\">//判断区间1是否包含2，是binary_search的扩展  </span></span><br><span class=\"line\">    </span><br><span class=\"line\">count  </span><br><span class=\"line\"><span class=\"comment\">//利用等于操作符，把标志范围内的元素与输入值比较，返回相等元素个数。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">count_if  </span><br><span class=\"line\"><span class=\"comment\">//利用输入的操作符，对标志范围内的元素进行操作，</span></span><br><span class=\"line\"><span class=\"comment\">//返回结果为true的个数。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">equal_range  </span><br><span class=\"line\"><span class=\"comment\">//功能类似equal，返回一对iterator，    </span></span><br><span class=\"line\"><span class=\"comment\">//第一个表示lower_bound，第二个表示upper_bound。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">find  </span><br><span class=\"line\"><span class=\"comment\">//利用底层元素的等于操作符，对指定范围内的元素    </span></span><br><span class=\"line\"><span class=\"comment\">//与输入值进行比较。当匹配时，结束搜索，</span></span><br><span class=\"line\"><span class=\"comment\">//返回该元素的一个InputIterator。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">find_end  </span><br><span class=\"line\"><span class=\"comment\">//在指定范围内查找\"由输入的另外一对iterator标志    </span></span><br><span class=\"line\"><span class=\"comment\">//的第二个序列\"的最后一次出现。找到则返回最后一对的    </span></span><br><span class=\"line\"><span class=\"comment\">//第一个ForwardIterator，否则返回输入的\"另外一对\"的    </span></span><br><span class=\"line\"><span class=\"comment\">//第一个ForwardIterator。重载版本使用用户输入的操作符代替等于操作。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">find_first_of  </span><br><span class=\"line\"><span class=\"comment\">//在指定范围内查找\"由输入的另外一对iterator标志    </span></span><br><span class=\"line\"><span class=\"comment\">//的第二个序列\"中任意一个元素的第一次出现</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本中使用了用户自定义操作符。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">find_if  <span class=\"comment\">//使用输入的函数代替等于操作符执行find。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">lower_bound  </span><br><span class=\"line\"><span class=\"comment\">//返回一个ForwardIterator，指向在有序    </span></span><br><span class=\"line\"><span class=\"comment\">//序列范围内的可以插入指定值而不破坏容器顺序的第一个    </span></span><br><span class=\"line\"><span class=\"comment\">//位置。重载函数使用自定义比较操作。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">upper_bound  </span><br><span class=\"line\"><span class=\"comment\">//返回一个ForwardIterator，指向在    </span></span><br><span class=\"line\"><span class=\"comment\">//有序序列范围内插入value而不破坏容器顺序的最后    </span></span><br><span class=\"line\"><span class=\"comment\">//一个位置，该位置标志一个大于value的值。</span></span><br><span class=\"line\"><span class=\"comment\">//重载函数使用自定义比较操作。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">search  <span class=\"comment\">//给出两个范围，返回一个ForwardIterator，    </span></span><br><span class=\"line\"><span class=\"comment\">//查找成功指向第一个范围内第一次出现子序列(第二个范围)    </span></span><br><span class=\"line\"><span class=\"comment\">//的位置，查找失败指向last1。重载版本使用自定义的比较操作。    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">search_n  </span><br><span class=\"line\"><span class=\"comment\">//在指定范围内查找val出现n次的子序列。重载版本使用自定义的比较操作。</span></span><br></pre></td></tr></table></figure>","more":"<ul>\n<li><h3 id=\"排序和通用算法-14个-：提供元素排序策略\"><a href=\"#排序和通用算法-14个-：提供元素排序策略\" class=\"headerlink\" title=\"排序和通用算法(14个)：提供元素排序策略\"></a>排序和通用算法(14个)：提供元素排序策略</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">inplace_merge  </span><br><span class=\"line\"><span class=\"comment\">//合并两个有序序列，结果序列覆盖两端范围。</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用输入的操作进行排序。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">merge  </span><br><span class=\"line\"><span class=\"comment\">//合并两个有序序列，存放到另一个序列。重载版本使用自定义的比较。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">nth_element  </span><br><span class=\"line\"><span class=\"comment\">//将范围内的序列重新排序，使所有小于第n个元素的元素  </span></span><br><span class=\"line\"><span class=\"comment\">//都出现在它前面，而大于它的都出现在后面。</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">partial_sort  </span><br><span class=\"line\"><span class=\"comment\">//对序列做部分排序，被排序元素个数正好可以被放到范围内。  </span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">partial_sort_copy  <span class=\"comment\">//与partial_sort类似，不过将经过排序的序列复制到另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">partition  </span><br><span class=\"line\"><span class=\"comment\">//对指定范围内元素重新排序，使用输入的函数，</span></span><br><span class=\"line\"><span class=\"comment\">//把结果为true的元素放在结果为false的元素之前。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">random_shuffle  </span><br><span class=\"line\"><span class=\"comment\">//对指定范围内的元素随机调整次序。重载版本输入一个随机数产生操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reverse  <span class=\"comment\">//将指定范围内元素重新反序排序。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">reverse_copy  <span class=\"comment\">//与reverse类似，不过将结果写入另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">rotate  </span><br><span class=\"line\"><span class=\"comment\">//将指定范围内元素移到容器末尾，由middle指向的</span></span><br><span class=\"line\">元素成为容器第一个元素。  </span><br><span class=\"line\">  </span><br><span class=\"line\">rotate_copy  <span class=\"comment\">//与rotate类似，不过将结果写入另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">sort  </span><br><span class=\"line\"><span class=\"comment\">//以升序重新排列指定范围内的元素。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">stable_sort  <span class=\"comment\">//与sort类似，不过保留相等元素之间的顺序关系。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">stable_partition  </span><br><span class=\"line\"><span class=\"comment\">//与partition类似，不过不保证保留容器中的相对顺序。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"删除和替换算法-15个\"><a href=\"#删除和替换算法-15个\" class=\"headerlink\" title=\"删除和替换算法(15个)\"></a>删除和替换算法(15个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">copy  <span class=\"comment\">//复制序列  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">copy_backward <span class=\"comment\">//与copy相同，不过元素是以相反顺序被拷贝。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">iter_swap  <span class=\"comment\">//交换两个ForwardIterator的值。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">remove  </span><br><span class=\"line\"><span class=\"comment\">//删除指定范围内所有等于指定元素的元素。注意，  </span></span><br><span class=\"line\"><span class=\"comment\">//该函数不是真正删除函数。内置函数不适合使用remove和remove_if函数。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">remove_copy  <span class=\"comment\">//将所有不匹配元素复制到一个制定容器，  </span></span><br><span class=\"line\"><span class=\"comment\">//返回OutputIterator指向被拷贝的末元素的下一个位置。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">remove_if  <span class=\"comment\">//删除指定范围内输入操作结果为true的所有元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">remove_copy_if  <span class=\"comment\">//将所有不匹配元素拷贝到一个指定容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace  <span class=\"comment\">//将指定范围内所有等于vold的元素都用vnew代替。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace_copy  <span class=\"comment\">//与replace类似，不过将结果写入另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace_if  <span class=\"comment\">//将指定范围内所有操作结果为true的元素用新值代替。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">replace_copy_if  <span class=\"comment\">//与replace_if，不过将结果写入另一个容器。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap  <span class=\"comment\">//交换存储在两个对象中的值。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap_range  <span class=\"comment\">//将指定范围内的元素与另一个序列元素值进行交换。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">unique  </span><br><span class=\"line\"><span class=\"comment\">//清除序列中重复元素，和remove类似，它也不能  </span></span><br><span class=\"line\"><span class=\"comment\">//真正删除元素。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">unique_copy  <span class=\"comment\">//与unique类似，不过把结果输出到另一个容器。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"排列组合算法-2个-：提供计算给定集合按一定顺序的所有可能排列组合\"><a href=\"#排列组合算法-2个-：提供计算给定集合按一定顺序的所有可能排列组合\" class=\"headerlink\" title=\"排列组合算法(2个)：提供计算给定集合按一定顺序的所有可能排列组合\"></a>排列组合算法(2个)：提供计算给定集合按一定顺序的所有可能排列组合</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">next_permutation  </span><br><span class=\"line\"><span class=\"comment\">//取出当前范围内的排列，并重新排序为  </span></span><br><span class=\"line\"><span class=\"comment\">//下一个排列。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">prev_permutation  </span><br><span class=\"line\"><span class=\"comment\">//取出指定范围内的序列并将它重新排序  </span></span><br><span class=\"line\"><span class=\"comment\">//为上一个序列。如果不存在上一个序列则返回false。</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用自定义的比较操作。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"算术算法-4个\"><a href=\"#算术算法-4个\" class=\"headerlink\" title=\"算术算法(4个)\"></a>算术算法(4个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">accumulate  <span class=\"comment\">//iterator对标识的序列段元素之和，加到一个由  </span></span><br><span class=\"line\"><span class=\"comment\">//val指定的初始值上。重载版本不再做加法，而是传进来的</span></span><br><span class=\"line\"><span class=\"comment\">//二元操作符被应用到元素上。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">partial_sum  <span class=\"comment\">//创建一个新序列，其中每个元素值代表指定  </span></span><br><span class=\"line\"><span class=\"comment\">//范围内该位置前所有元素之和。重载版本使用自定义操作代替加法。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">inner_product  <span class=\"comment\">//对两个序列做内积(对应元素相乘，再求和)并  </span></span><br><span class=\"line\"><span class=\"comment\">//将内积加到一个输入的初始值上。重载版本使用用户定义的操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">adjacent_difference  <span class=\"comment\">//创建一个新序列，新序列中每个新值代表  </span></span><br><span class=\"line\"><span class=\"comment\">//当前元素与上一个元素的差。重载版本用指定二元操作计算相邻元素的差。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"生成和异变算法-6个\"><a href=\"#生成和异变算法-6个\" class=\"headerlink\" title=\"生成和异变算法(6个)\"></a>生成和异变算法(6个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fill  <span class=\"comment\">//将输入值赋给标志范围内的所有元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">fill_n  <span class=\"comment\">//将输入值赋给first到first+n范围内的所有元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">for_each  <span class=\"comment\">//用指定函数依次对指定范围内所有元素进行迭代访问，  </span></span><br><span class=\"line\"><span class=\"comment\">//返回所指定的函数类型。该函数不得修改序列中的元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">generate  <span class=\"comment\">//连续调用输入的函数来填充指定的范围。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">generate_n  </span><br><span class=\"line\"><span class=\"comment\">//与generate函数类似，填充从指定iterator开始的n个元素。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">transform  </span><br><span class=\"line\"><span class=\"comment\">//将输入的操作作用与指定范围内的每个元素，并产生一个新的序列。  </span></span><br><span class=\"line\"><span class=\"comment\">//重载版本将操作作用在一对元素上，另外一个元素来自输入的</span></span><br><span class=\"line\"><span class=\"comment\">//另外一个序列。结果输出到指定容器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"关系算法-8个\"><a href=\"#关系算法-8个\" class=\"headerlink\" title=\"关系算法(8个)\"></a>关系算法(8个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">equal  <span class=\"comment\">//如果两个序列在标志范围内元素都相等，返回true。  </span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用输入的操作符代替默认的等于操作符。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">includes  <span class=\"comment\">//判断第一个指定范围内的所有元素是否都被第二个  </span></span><br><span class=\"line\"><span class=\"comment\">//范围包含，使用底层元素的&lt;操作符，成功返回true。</span></span><br><span class=\"line\"><span class=\"comment\">//重载版本使用用户输入的函数。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">lexicographical_compare  <span class=\"comment\">//比较两个序列。重载版本使用用户自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">max  <span class=\"comment\">//返回两个元素中较大一个。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">max_element  <span class=\"comment\">//返回一个ForwardIterator，指出序列中最大的</span></span><br><span class=\"line\"><span class=\"comment\">//元素。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">min  <span class=\"comment\">//返回两个元素中较小一个。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">min_element  <span class=\"comment\">//返回一个ForwardIterator，指出序列中最小的</span></span><br><span class=\"line\"><span class=\"comment\">//元素。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">mismatch  <span class=\"comment\">//并行比较两个序列，指出第一个</span></span><br><span class=\"line\"><span class=\"comment\">//不匹配的位置，返回一对iterator，  </span></span><br><span class=\"line\"><span class=\"comment\">//标志第一个不匹配元素位置。如果都匹配，返回每个</span></span><br><span class=\"line\"><span class=\"comment\">//容器的last。重载版本使用自定义的比较操作。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"集合算法-4个\"><a href=\"#集合算法-4个\" class=\"headerlink\" title=\"集合算法(4个)\"></a>集合算法(4个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set_union  <span class=\"comment\">//构造一个有序序列，包含两个序列中所有的不重复</span></span><br><span class=\"line\"><span class=\"comment\">//元素。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">set_intersection  <span class=\"comment\">//构造一个有序序列，其中元素在两个序列中</span></span><br><span class=\"line\"><span class=\"comment\">//都存在。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">set_difference  </span><br><span class=\"line\"><span class=\"comment\">//构造一个有序序列，该序列仅保留第一个序列中存在的而  </span></span><br><span class=\"line\"><span class=\"comment\">//第二个中不存在的元素。重载版本使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">set_symmetric_difference  <span class=\"comment\">//构造一个有序序列，该序列取两个序列的对称差集(并集-交集)。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"堆算法-4个\"><a href=\"#堆算法-4个\" class=\"headerlink\" title=\"堆算法(4个)\"></a>堆算法(4个)</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make_heap  </span><br><span class=\"line\"><span class=\"comment\">//把指定范围内的元素生成一个堆。重载版本使用自定义比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">pop_heap  </span><br><span class=\"line\"><span class=\"comment\">//并不真正把最大元素从堆中弹出，而是重新排序堆。它把  </span></span><br><span class=\"line\"><span class=\"comment\">//first和last-1交换，然后重新生成一个堆。可使用容器的back来访问  </span></span><br><span class=\"line\"><span class=\"comment\">//被\"弹出\"的元素或者使用pop_back进行真正的删除。重载版本</span></span><br><span class=\"line\"><span class=\"comment\">//使用自定义的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">push_heap  </span><br><span class=\"line\"><span class=\"comment\">//假设first到last-1是一个有效堆，要被加入到堆的元素存放在  </span></span><br><span class=\"line\"><span class=\"comment\">//位置last-1，重新生成堆。在指向该函数前，必须先把元素插入</span></span><br><span class=\"line\"><span class=\"comment\">//容器后。重载版本使用指定的比较操作。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">sort_heap  <span class=\"comment\">//对指定范围内的序列重新排序，它假设该序列是</span></span><br><span class=\"line\"><span class=\"comment\">//个有序堆。重载版本使用自定义比较操作。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"常用算法图示\"><a href=\"#常用算法图示\" class=\"headerlink\" title=\"常用算法图示\"></a>常用算法图示</h3></li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160519155043788\" alt=\"\"></center>"},{"title":"STL容器总结之Vector","date":"2016-06-01T16:45:37.000Z","_content":"\n- vector 是一种序列容器，是对大小可变数组的封装\n\n![](http://img.blog.csdn.net/20160406151211233)\n\n数组中的元素是连续存储的，所以除了能够通过迭代器访问外，还可以通过常规的指针偏移量访问元素。换句话说，可以将指向 vector 元素的指针传入以指向数组元素的指针作为参数的函数。\n\nvector 会在需要时自动调整所占内存的大小。与对应的静态数组相比，vector 所占的内存通常要更多，因为它还分配了额外的内存以应对将来可能的扩张。于是，vector 就不必在每次插入元素时都重新分配一次内存了，除非这块预留的内存用尽。已分配内存的总大小可以通过 capacity() 函数查询。所占的额外的内存可以通过调用 shrink_to_fit() 返还给系统。\n\n从性能方面考虑，内存重分配操作的代价通常很大。如果事先知道元素个数，可以使用 reserve() 函数消除重新分配操作。\n针对 vector 的各种常见操作的复杂度（效率）如下：\n随机访问 - 常数 O(1)\n在尾部增删元素 - 平摊（amortized）常数 O(1)\n增删元素 - 至 vector 尾部的线性距离 O(n)\n\n\n- ### 头文件及构造，析构，复制###\n\n头文件\n\n```cpp\n#include <vector>       //头文件包含    \nusing namespace std;  //或者using std::vector;   \n```\n\n<!-- more -->\n\n   构造，复制，析构\n\n```cpp\nvector<int>v1;              //空的vector，元素类型为int，执行的是默认初始化    \n    \nvector<int>v2(v1);   //拷贝覆盖，v2与v1中元素个数、值都相同    \n    \nvector<int>v3=v1;   //同上    \n    \nvector<int>v4(5,3);  //v4包含了5个重复元素，元素值为3    \n    \nvector<int>v5(10);  //v5包含10个重复元素，执行的是默认初始化    \n    \n//列表初始化，是C++11提供的新标准    \nvector<int>v6{1,2,3,4}; //v6包含4个元素，其值为{...}中的元素    \n    \nvector<int>v7={1,2,3,4};    //同上    \n    \nc.~vector() //销毁所有元素并释放内存   \n```\n\n\n- ### 非变动性操作###\n\n```cpp\nc.empty() //判断容器是否为空，与size()==0相同，但可能更快  \n  \nc.size() //返回当前元素数量  \n  \n//重新设定容器大小，c.size()会发生改变。  \nresize()  \n//c.size()<n时，扩大容器，多余的元素追加在末尾，\n//执行默认初始化；反之，则将容器截断，保留前面n个元素  \nc.resize(n);  \n//c.size()<n时，扩大容器，多余的元素追加在末尾，\n//其值都为val；反之，则将容器截断，保留前面n个元素  \nc.resize(n,val);  \n  \nc.max_size() //返回可容纳的元素最大数量  \n  \nc.capacity() //返回在不重新分配的情况下可容纳的元素的最大数量  \n  \nc.reserve(num) //如果容量不够，进行扩大  \n  \nc.shrink_to_fit() //按要求根据元素的数量去缩小容量  \n  \nc1 == c2 //判断c1与c2是否相等  \n  \nc1 != c2 //判断c1与c2是否不相等，等同于!(c1==c2)  \n  \nc1 < c2 //判断c1是否小于c2  \n  \nc1 > c2 //判断c1是否大于c2  \n  \nc1 <= c2 //判断c1是否小于等于c2  \n  \nc1 >= c2 //判断c1是否大于等于c2  \n```\n\n- ### 赋值###\n\n```cpp\nc = c2 //将c2所有元素赋值给c  \n  \nc = rv //将右值对象rv的所有元素移动赋值给c  \n  \nc = initlist //使用初始化列表进行赋值  \n  \nc.assign(initlist) //使用初始化列表进行赋值  \n  \nc.assign(n,elem) //使用n个elem元素进行赋值  \n  \nc.assign(beg,end) //使用beg到end范围内的元素进行赋值  \n  \nc1.swap(c2) //交换c1和c2的数  \n  \nswap(c1,c2) //交换c1和c2的数  \n```\n\n- ### 元素存取###\n\n```cpp\nc[idx] //返回索引idx所标示的元素，不进行范围检查  \n  \nc.at(idx) //返回索引idx所标示的元素，如果越界，抛出range-error  \n  \nc.front() //返回第一个元素，不检查第一个元素是否存在  \n  \nc.back() //返回最后一个元素，不检查最后一个元素是否存在  \n```\n\n- ### 迭代器相关函数###\n\n```cpp\nc.begin() //返回一个随机存取迭代器，指向第一个元素  \n  \nc.end() //返回一个随机存取迭代器，指向最后一个元素  \n  \nc.cbegin() //返回一个随机存取常迭代器，指向第一个元素  \n  \nc.cend() //返回一个随机存取常迭代器，指向最后一个元素  \n  \nc.rbegin() //返回一个逆向迭代器，指向逆向迭代的第一个元素  \n  \nc.rend() //返回一个逆向迭代器，指向逆向迭代的最后一个元素  \n  \nc.crbegin() //返回一个逆向常迭代器，指向逆向迭代的第一个元素  \n  \nc.crend() //返回一个逆向常迭代器，指向逆向迭代的最后一个元素  \n```\n\n\n- ### 移除和插入元素###\n\n```cpp\nc.push_back(elem) //在末尾添加一个elem副本  \n  \nc.pop_back() //移除末尾元素（但不回传）  \n  \nc.insert(pos,elem) //在迭代器位置前面插入一个elem副本，并返回新元素的位置  \n  \nc.insert(pos,n,elem)\n//在迭代器位置前面插入n个elem副本，并返回第一个\n//新元素的位置；若无新插入值，返回原位置  \n  \nc.insert(pos,beg,end) //在迭代器位置前面插入范围beg到end的所有元素的副本，\n//并返回第一个新元素的位置；若无新插入值，返回原位置  \n  \nc.insert(pos,initlist) //在迭代器位置前面插入初始化列表的所有元素的副本，\n//并返回第一个新元素的位置；若无新插入值，返回原位置  \n  \nc.emplace(pos,args...) //在迭代器位置前面插入一个使用args初始化的元素副本，\n//并返回新元素的位置  \n  \nc.emplace_back(args...) //在末尾添加一个使用args初始化的元素副本，无返回值  \n  \nc.erase(pos) //移除迭代器位置的元素，并返回下个元素的位置  \n  \nc.erase(beg,end) \n//移除beg到end范围内的所有元素，并返回下个元素的位置  \n  \nc.resize(num) \n//将元素数量设为num（如果size()增大，多出来的元素\n//使用默认构造函数创建）  \n  \nc.resize(num,elem) //将元素数量设为num（如果size()增大，多出来的元素都是elem的副本）  \n  \nc.clear() //移除所以元素，清空容器  \n```\n\n- ### 例子###\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \n#include<vector>  \nusing namespace std;  \nint main(){  \n  //构造两个vector  \n  vector<int> c;  \n  vector<int> c1;  \n  vector<int> c2;  \n  //在尾部插入元素  \n  c.push_back(1);  \n  c.push_back(2);  \n  c.push_back(3);  \n  c.push_back(4);  \n  c.push_back(5);  \n  c1=c;//将c赋值给c1  \n  c2=c1;//将c1赋值给c2  \n  //输出两个集合的大小，验证赋值操作  \n  printf(\"c=%d  c1=%d\\n\",c.size(),c1.size());  \n  c1.clear();//清除所有元素  \n  c1.~vector();//将所有元素销毁并释放内存  \n  printf(\"最大容量=%d\\n\",c.max_size());\n  //返回可容纳的元素的最大容量  \n  \n  for(int i=0;i<c.size();i++){  \n    printf(\"赋值前%d= %d\\n\",i,c.at(i));  \n  }  \n  c.assign(1,12);//将c的第一个元素赋值为12  \n  for(int i=0;i<c.size();i++){  \n    printf(\"赋值后%d= %d\\n\",i,c.at(i));  \n  }  \n  c.push_back(1);  \n  c.push_back(2);  \n  c.push_back(3);  \n  c.push_back(4);  \n  c.push_back(5);  \n  //返回索引所对应的元素  \n  printf(\"索引是0的元素=%d\\n\",c[0]);  \n  //返回第一个元素  \n  printf(\"第一个元素=%d\\n\",c.front());  \n  //返回最后一个元素  \n  printf(\"最后一个元素=%d\\n\",c.back());  \n  for(int i=0;i<c.size();i++){  \n    printf(\"插入前%d= %d\\n\",i,c.at(i));  \n  }  \n  //插入元素,在第一个位置之前  \n  c.insert(c.begin(),10);  \n  for(int i=0;i<c.size();i++){  \n    printf(\"插入后%d= %d\\n\",i,c.at(i));  \n  }  \n  //删除第一个元素  \n  c.erase(c.begin());  \n   for(int i=0;i<c.size();i++){  \n    printf(\"删除第一个元素%d= %d\\n\",i,c.at(i));  \n  }  \n  c.erase(c.begin(),c.begin()+2);  \n   for(int i=0;i<c.size();i++){  \n    printf(\"删除第一和二个元素%d= %d\\n\",i,c.at(i));  \n  }  \n  \n}  \n```","source":"_posts/C++/STL容器总结之Vector.md","raw":"---\ntitle: STL容器总结之Vector\ndate: 2016-06-01 16:45:37\ntags: [STL,C++,Vector]\ncategories: C++\n---\n\n- vector 是一种序列容器，是对大小可变数组的封装\n\n![](http://img.blog.csdn.net/20160406151211233)\n\n数组中的元素是连续存储的，所以除了能够通过迭代器访问外，还可以通过常规的指针偏移量访问元素。换句话说，可以将指向 vector 元素的指针传入以指向数组元素的指针作为参数的函数。\n\nvector 会在需要时自动调整所占内存的大小。与对应的静态数组相比，vector 所占的内存通常要更多，因为它还分配了额外的内存以应对将来可能的扩张。于是，vector 就不必在每次插入元素时都重新分配一次内存了，除非这块预留的内存用尽。已分配内存的总大小可以通过 capacity() 函数查询。所占的额外的内存可以通过调用 shrink_to_fit() 返还给系统。\n\n从性能方面考虑，内存重分配操作的代价通常很大。如果事先知道元素个数，可以使用 reserve() 函数消除重新分配操作。\n针对 vector 的各种常见操作的复杂度（效率）如下：\n随机访问 - 常数 O(1)\n在尾部增删元素 - 平摊（amortized）常数 O(1)\n增删元素 - 至 vector 尾部的线性距离 O(n)\n\n\n- ### 头文件及构造，析构，复制###\n\n头文件\n\n```cpp\n#include <vector>       //头文件包含    \nusing namespace std;  //或者using std::vector;   \n```\n\n<!-- more -->\n\n   构造，复制，析构\n\n```cpp\nvector<int>v1;              //空的vector，元素类型为int，执行的是默认初始化    \n    \nvector<int>v2(v1);   //拷贝覆盖，v2与v1中元素个数、值都相同    \n    \nvector<int>v3=v1;   //同上    \n    \nvector<int>v4(5,3);  //v4包含了5个重复元素，元素值为3    \n    \nvector<int>v5(10);  //v5包含10个重复元素，执行的是默认初始化    \n    \n//列表初始化，是C++11提供的新标准    \nvector<int>v6{1,2,3,4}; //v6包含4个元素，其值为{...}中的元素    \n    \nvector<int>v7={1,2,3,4};    //同上    \n    \nc.~vector() //销毁所有元素并释放内存   \n```\n\n\n- ### 非变动性操作###\n\n```cpp\nc.empty() //判断容器是否为空，与size()==0相同，但可能更快  \n  \nc.size() //返回当前元素数量  \n  \n//重新设定容器大小，c.size()会发生改变。  \nresize()  \n//c.size()<n时，扩大容器，多余的元素追加在末尾，\n//执行默认初始化；反之，则将容器截断，保留前面n个元素  \nc.resize(n);  \n//c.size()<n时，扩大容器，多余的元素追加在末尾，\n//其值都为val；反之，则将容器截断，保留前面n个元素  \nc.resize(n,val);  \n  \nc.max_size() //返回可容纳的元素最大数量  \n  \nc.capacity() //返回在不重新分配的情况下可容纳的元素的最大数量  \n  \nc.reserve(num) //如果容量不够，进行扩大  \n  \nc.shrink_to_fit() //按要求根据元素的数量去缩小容量  \n  \nc1 == c2 //判断c1与c2是否相等  \n  \nc1 != c2 //判断c1与c2是否不相等，等同于!(c1==c2)  \n  \nc1 < c2 //判断c1是否小于c2  \n  \nc1 > c2 //判断c1是否大于c2  \n  \nc1 <= c2 //判断c1是否小于等于c2  \n  \nc1 >= c2 //判断c1是否大于等于c2  \n```\n\n- ### 赋值###\n\n```cpp\nc = c2 //将c2所有元素赋值给c  \n  \nc = rv //将右值对象rv的所有元素移动赋值给c  \n  \nc = initlist //使用初始化列表进行赋值  \n  \nc.assign(initlist) //使用初始化列表进行赋值  \n  \nc.assign(n,elem) //使用n个elem元素进行赋值  \n  \nc.assign(beg,end) //使用beg到end范围内的元素进行赋值  \n  \nc1.swap(c2) //交换c1和c2的数  \n  \nswap(c1,c2) //交换c1和c2的数  \n```\n\n- ### 元素存取###\n\n```cpp\nc[idx] //返回索引idx所标示的元素，不进行范围检查  \n  \nc.at(idx) //返回索引idx所标示的元素，如果越界，抛出range-error  \n  \nc.front() //返回第一个元素，不检查第一个元素是否存在  \n  \nc.back() //返回最后一个元素，不检查最后一个元素是否存在  \n```\n\n- ### 迭代器相关函数###\n\n```cpp\nc.begin() //返回一个随机存取迭代器，指向第一个元素  \n  \nc.end() //返回一个随机存取迭代器，指向最后一个元素  \n  \nc.cbegin() //返回一个随机存取常迭代器，指向第一个元素  \n  \nc.cend() //返回一个随机存取常迭代器，指向最后一个元素  \n  \nc.rbegin() //返回一个逆向迭代器，指向逆向迭代的第一个元素  \n  \nc.rend() //返回一个逆向迭代器，指向逆向迭代的最后一个元素  \n  \nc.crbegin() //返回一个逆向常迭代器，指向逆向迭代的第一个元素  \n  \nc.crend() //返回一个逆向常迭代器，指向逆向迭代的最后一个元素  \n```\n\n\n- ### 移除和插入元素###\n\n```cpp\nc.push_back(elem) //在末尾添加一个elem副本  \n  \nc.pop_back() //移除末尾元素（但不回传）  \n  \nc.insert(pos,elem) //在迭代器位置前面插入一个elem副本，并返回新元素的位置  \n  \nc.insert(pos,n,elem)\n//在迭代器位置前面插入n个elem副本，并返回第一个\n//新元素的位置；若无新插入值，返回原位置  \n  \nc.insert(pos,beg,end) //在迭代器位置前面插入范围beg到end的所有元素的副本，\n//并返回第一个新元素的位置；若无新插入值，返回原位置  \n  \nc.insert(pos,initlist) //在迭代器位置前面插入初始化列表的所有元素的副本，\n//并返回第一个新元素的位置；若无新插入值，返回原位置  \n  \nc.emplace(pos,args...) //在迭代器位置前面插入一个使用args初始化的元素副本，\n//并返回新元素的位置  \n  \nc.emplace_back(args...) //在末尾添加一个使用args初始化的元素副本，无返回值  \n  \nc.erase(pos) //移除迭代器位置的元素，并返回下个元素的位置  \n  \nc.erase(beg,end) \n//移除beg到end范围内的所有元素，并返回下个元素的位置  \n  \nc.resize(num) \n//将元素数量设为num（如果size()增大，多出来的元素\n//使用默认构造函数创建）  \n  \nc.resize(num,elem) //将元素数量设为num（如果size()增大，多出来的元素都是elem的副本）  \n  \nc.clear() //移除所以元素，清空容器  \n```\n\n- ### 例子###\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \n#include<vector>  \nusing namespace std;  \nint main(){  \n  //构造两个vector  \n  vector<int> c;  \n  vector<int> c1;  \n  vector<int> c2;  \n  //在尾部插入元素  \n  c.push_back(1);  \n  c.push_back(2);  \n  c.push_back(3);  \n  c.push_back(4);  \n  c.push_back(5);  \n  c1=c;//将c赋值给c1  \n  c2=c1;//将c1赋值给c2  \n  //输出两个集合的大小，验证赋值操作  \n  printf(\"c=%d  c1=%d\\n\",c.size(),c1.size());  \n  c1.clear();//清除所有元素  \n  c1.~vector();//将所有元素销毁并释放内存  \n  printf(\"最大容量=%d\\n\",c.max_size());\n  //返回可容纳的元素的最大容量  \n  \n  for(int i=0;i<c.size();i++){  \n    printf(\"赋值前%d= %d\\n\",i,c.at(i));  \n  }  \n  c.assign(1,12);//将c的第一个元素赋值为12  \n  for(int i=0;i<c.size();i++){  \n    printf(\"赋值后%d= %d\\n\",i,c.at(i));  \n  }  \n  c.push_back(1);  \n  c.push_back(2);  \n  c.push_back(3);  \n  c.push_back(4);  \n  c.push_back(5);  \n  //返回索引所对应的元素  \n  printf(\"索引是0的元素=%d\\n\",c[0]);  \n  //返回第一个元素  \n  printf(\"第一个元素=%d\\n\",c.front());  \n  //返回最后一个元素  \n  printf(\"最后一个元素=%d\\n\",c.back());  \n  for(int i=0;i<c.size();i++){  \n    printf(\"插入前%d= %d\\n\",i,c.at(i));  \n  }  \n  //插入元素,在第一个位置之前  \n  c.insert(c.begin(),10);  \n  for(int i=0;i<c.size();i++){  \n    printf(\"插入后%d= %d\\n\",i,c.at(i));  \n  }  \n  //删除第一个元素  \n  c.erase(c.begin());  \n   for(int i=0;i<c.size();i++){  \n    printf(\"删除第一个元素%d= %d\\n\",i,c.at(i));  \n  }  \n  c.erase(c.begin(),c.begin()+2);  \n   for(int i=0;i<c.size();i++){  \n    printf(\"删除第一和二个元素%d= %d\\n\",i,c.at(i));  \n  }  \n  \n}  \n```","slug":"C++/STL容器总结之Vector","published":1,"updated":"2016-06-17T13:48:11.246Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qi4001nkgae6aymqunz","content":"<ul>\n<li>vector 是一种序列容器，是对大小可变数组的封装</li>\n</ul>\n<p><img src=\"http://img.blog.csdn.net/20160406151211233\" alt=\"\"></p>\n<p>数组中的元素是连续存储的，所以除了能够通过迭代器访问外，还可以通过常规的指针偏移量访问元素。换句话说，可以将指向 vector 元素的指针传入以指向数组元素的指针作为参数的函数。</p>\n<p>vector 会在需要时自动调整所占内存的大小。与对应的静态数组相比，vector 所占的内存通常要更多，因为它还分配了额外的内存以应对将来可能的扩张。于是，vector 就不必在每次插入元素时都重新分配一次内存了，除非这块预留的内存用尽。已分配内存的总大小可以通过 capacity() 函数查询。所占的额外的内存可以通过调用 shrink_to_fit() 返还给系统。</p>\n<p>从性能方面考虑，内存重分配操作的代价通常很大。如果事先知道元素个数，可以使用 reserve() 函数消除重新分配操作。<br>针对 vector 的各种常见操作的复杂度（效率）如下：<br>随机访问 - 常数 O(1)<br>在尾部增删元素 - 平摊（amortized）常数 O(1)<br>增删元素 - 至 vector 尾部的线性距离 O(n)</p>\n<ul>\n<li><h3 id=\"头文件及构造，析构，复制\"><a href=\"#头文件及构造，析构，复制\" class=\"headerlink\" title=\"头文件及构造，析构，复制\"></a>头文件及构造，析构，复制</h3></li>\n</ul>\n<p>头文件</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span>       <span class=\"comment\">//头文件包含    </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  <span class=\"comment\">//或者using std::vector;</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>   构造，复制，析构</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v1;              <span class=\"comment\">//空的vector，元素类型为int，执行的是默认初始化    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v2(v1);   <span class=\"comment\">//拷贝覆盖，v2与v1中元素个数、值都相同    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v3=v1;   <span class=\"comment\">//同上    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v4(<span class=\"number\">5</span>,<span class=\"number\">3</span>);  <span class=\"comment\">//v4包含了5个重复元素，元素值为3    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v5(<span class=\"number\">10</span>);  <span class=\"comment\">//v5包含10个重复元素，执行的是默认初始化    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//列表初始化，是C++11提供的新标准    </span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v6&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;; <span class=\"comment\">//v6包含4个元素，其值为&#123;...&#125;中的元素    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v7=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;    <span class=\"comment\">//同上    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.~<span class=\"built_in\">vector</span>() <span class=\"comment\">//销毁所有元素并释放内存</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"非变动性操作\"><a href=\"#非变动性操作\" class=\"headerlink\" title=\"非变动性操作\"></a>非变动性操作</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.empty() <span class=\"comment\">//判断容器是否为空，与size()==0相同，但可能更快  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.size() <span class=\"comment\">//返回当前元素数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//重新设定容器大小，c.size()会发生改变。  </span></span><br><span class=\"line\">resize()  </span><br><span class=\"line\"><span class=\"comment\">//c.size()&lt;n时，扩大容器，多余的元素追加在末尾，</span></span><br><span class=\"line\"><span class=\"comment\">//执行默认初始化；反之，则将容器截断，保留前面n个元素  </span></span><br><span class=\"line\">c.resize(n);  </span><br><span class=\"line\"><span class=\"comment\">//c.size()&lt;n时，扩大容器，多余的元素追加在末尾，</span></span><br><span class=\"line\"><span class=\"comment\">//其值都为val；反之，则将容器截断，保留前面n个元素  </span></span><br><span class=\"line\">c.resize(n,val);  </span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size() <span class=\"comment\">//返回可容纳的元素最大数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.capacity() <span class=\"comment\">//返回在不重新分配的情况下可容纳的元素的最大数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.reserve(num) <span class=\"comment\">//如果容量不够，进行扩大  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.shrink_to_fit() <span class=\"comment\">//按要求根据元素的数量去缩小容量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 == c2 <span class=\"comment\">//判断c1与c2是否相等  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 != c2 <span class=\"comment\">//判断c1与c2是否不相等，等同于!(c1==c2)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &lt; c2 <span class=\"comment\">//判断c1是否小于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &gt; c2 <span class=\"comment\">//判断c1是否大于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &lt;= c2 <span class=\"comment\">//判断c1是否小于等于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &gt;= c2 <span class=\"comment\">//判断c1是否大于等于c2</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c = c2 <span class=\"comment\">//将c2所有元素赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c = rv <span class=\"comment\">//将右值对象rv的所有元素移动赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c = initlist <span class=\"comment\">//使用初始化列表进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(initlist) <span class=\"comment\">//使用初始化列表进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(n,elem) <span class=\"comment\">//使用n个elem元素进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(beg,end) <span class=\"comment\">//使用beg到end范围内的元素进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1.swap(c2) <span class=\"comment\">//交换c1和c2的数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap(c1,c2) <span class=\"comment\">//交换c1和c2的数</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"元素存取\"><a href=\"#元素存取\" class=\"headerlink\" title=\"元素存取\"></a>元素存取</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c[idx] <span class=\"comment\">//返回索引idx所标示的元素，不进行范围检查  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.at(idx) <span class=\"comment\">//返回索引idx所标示的元素，如果越界，抛出range-error  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.front() <span class=\"comment\">//返回第一个元素，不检查第一个元素是否存在  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.back() <span class=\"comment\">//返回最后一个元素，不检查最后一个元素是否存在</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"迭代器相关函数\"><a href=\"#迭代器相关函数\" class=\"headerlink\" title=\"迭代器相关函数\"></a>迭代器相关函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.begin() <span class=\"comment\">//返回一个随机存取迭代器，指向第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.end() <span class=\"comment\">//返回一个随机存取迭代器，指向最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.cbegin() <span class=\"comment\">//返回一个随机存取常迭代器，指向第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.cend() <span class=\"comment\">//返回一个随机存取常迭代器，指向最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rbegin() <span class=\"comment\">//返回一个逆向迭代器，指向逆向迭代的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rend() <span class=\"comment\">//返回一个逆向迭代器，指向逆向迭代的最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.crbegin() <span class=\"comment\">//返回一个逆向常迭代器，指向逆向迭代的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.crend() <span class=\"comment\">//返回一个逆向常迭代器，指向逆向迭代的最后一个元素</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"移除和插入元素\"><a href=\"#移除和插入元素\" class=\"headerlink\" title=\"移除和插入元素\"></a>移除和插入元素</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.push_back(elem) <span class=\"comment\">//在末尾添加一个elem副本  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.pop_back() <span class=\"comment\">//移除末尾元素（但不回传）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,elem) <span class=\"comment\">//在迭代器位置前面插入一个elem副本，并返回新元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,n,elem)</span><br><span class=\"line\"><span class=\"comment\">//在迭代器位置前面插入n个elem副本，并返回第一个</span></span><br><span class=\"line\"><span class=\"comment\">//新元素的位置；若无新插入值，返回原位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,beg,end) <span class=\"comment\">//在迭代器位置前面插入范围beg到end的所有元素的副本，</span></span><br><span class=\"line\"><span class=\"comment\">//并返回第一个新元素的位置；若无新插入值，返回原位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,initlist) <span class=\"comment\">//在迭代器位置前面插入初始化列表的所有元素的副本，</span></span><br><span class=\"line\"><span class=\"comment\">//并返回第一个新元素的位置；若无新插入值，返回原位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.emplace(pos,args...) <span class=\"comment\">//在迭代器位置前面插入一个使用args初始化的元素副本，</span></span><br><span class=\"line\"><span class=\"comment\">//并返回新元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.emplace_back(args...) <span class=\"comment\">//在末尾添加一个使用args初始化的元素副本，无返回值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(pos) <span class=\"comment\">//移除迭代器位置的元素，并返回下个元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(beg,end) </span><br><span class=\"line\"><span class=\"comment\">//移除beg到end范围内的所有元素，并返回下个元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.resize(num) </span><br><span class=\"line\"><span class=\"comment\">//将元素数量设为num（如果size()增大，多出来的元素</span></span><br><span class=\"line\"><span class=\"comment\">//使用默认构造函数创建）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.resize(num,elem) <span class=\"comment\">//将元素数量设为num（如果size()增大，多出来的元素都是elem的副本）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.clear() <span class=\"comment\">//移除所以元素，清空容器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"comment\">//构造两个vector  </span></span><br><span class=\"line\">  <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; c;  </span><br><span class=\"line\">  <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; c1;  </span><br><span class=\"line\">  <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; c2;  </span><br><span class=\"line\">  <span class=\"comment\">//在尾部插入元素  </span></span><br><span class=\"line\">  c.push_back(<span class=\"number\">1</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">2</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">3</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">4</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">5</span>);  </span><br><span class=\"line\">  c1=c;<span class=\"comment\">//将c赋值给c1  </span></span><br><span class=\"line\">  c2=c1;<span class=\"comment\">//将c1赋值给c2  </span></span><br><span class=\"line\">  <span class=\"comment\">//输出两个集合的大小，验证赋值操作  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"c=%d  c1=%d\\n\"</span>,c.size(),c1.size());  </span><br><span class=\"line\">  c1.clear();<span class=\"comment\">//清除所有元素  </span></span><br><span class=\"line\">  c1.~<span class=\"built_in\">vector</span>();<span class=\"comment\">//将所有元素销毁并释放内存  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"最大容量=%d\\n\"</span>,c.max_size());</span><br><span class=\"line\">  <span class=\"comment\">//返回可容纳的元素的最大容量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"赋值前%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  c.assign(<span class=\"number\">1</span>,<span class=\"number\">12</span>);<span class=\"comment\">//将c的第一个元素赋值为12  </span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"赋值后%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">1</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">2</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">3</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">4</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">5</span>);  </span><br><span class=\"line\">  <span class=\"comment\">//返回索引所对应的元素  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"索引是0的元素=%d\\n\"</span>,c[<span class=\"number\">0</span>]);  </span><br><span class=\"line\">  <span class=\"comment\">//返回第一个元素  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"第一个元素=%d\\n\"</span>,c.front());  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个元素  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"最后一个元素=%d\\n\"</span>,c.back());  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"插入前%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  <span class=\"comment\">//插入元素,在第一个位置之前  </span></span><br><span class=\"line\">  c.insert(c.begin(),<span class=\"number\">10</span>);  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"插入后%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  <span class=\"comment\">//删除第一个元素  </span></span><br><span class=\"line\">  c.erase(c.begin());  </span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"删除第一个元素%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  c.erase(c.begin(),c.begin()+<span class=\"number\">2</span>);  </span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"删除第一和二个元素%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li>vector 是一种序列容器，是对大小可变数组的封装</li>\n</ul>\n<p><img src=\"http://img.blog.csdn.net/20160406151211233\" alt=\"\"></p>\n<p>数组中的元素是连续存储的，所以除了能够通过迭代器访问外，还可以通过常规的指针偏移量访问元素。换句话说，可以将指向 vector 元素的指针传入以指向数组元素的指针作为参数的函数。</p>\n<p>vector 会在需要时自动调整所占内存的大小。与对应的静态数组相比，vector 所占的内存通常要更多，因为它还分配了额外的内存以应对将来可能的扩张。于是，vector 就不必在每次插入元素时都重新分配一次内存了，除非这块预留的内存用尽。已分配内存的总大小可以通过 capacity() 函数查询。所占的额外的内存可以通过调用 shrink_to_fit() 返还给系统。</p>\n<p>从性能方面考虑，内存重分配操作的代价通常很大。如果事先知道元素个数，可以使用 reserve() 函数消除重新分配操作。<br>针对 vector 的各种常见操作的复杂度（效率）如下：<br>随机访问 - 常数 O(1)<br>在尾部增删元素 - 平摊（amortized）常数 O(1)<br>增删元素 - 至 vector 尾部的线性距离 O(n)</p>\n<ul>\n<li><h3 id=\"头文件及构造，析构，复制\"><a href=\"#头文件及构造，析构，复制\" class=\"headerlink\" title=\"头文件及构造，析构，复制\"></a>头文件及构造，析构，复制</h3></li>\n</ul>\n<p>头文件</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span>       <span class=\"comment\">//头文件包含    </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  <span class=\"comment\">//或者using std::vector;</span></span><br></pre></td></tr></table></figure>","more":"<p>   构造，复制，析构</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v1;              <span class=\"comment\">//空的vector，元素类型为int，执行的是默认初始化    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v2(v1);   <span class=\"comment\">//拷贝覆盖，v2与v1中元素个数、值都相同    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v3=v1;   <span class=\"comment\">//同上    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v4(<span class=\"number\">5</span>,<span class=\"number\">3</span>);  <span class=\"comment\">//v4包含了5个重复元素，元素值为3    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v5(<span class=\"number\">10</span>);  <span class=\"comment\">//v5包含10个重复元素，执行的是默认初始化    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//列表初始化，是C++11提供的新标准    </span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v6&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;; <span class=\"comment\">//v6包含4个元素，其值为&#123;...&#125;中的元素    </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v7=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;    <span class=\"comment\">//同上    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.~<span class=\"built_in\">vector</span>() <span class=\"comment\">//销毁所有元素并释放内存</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"非变动性操作\"><a href=\"#非变动性操作\" class=\"headerlink\" title=\"非变动性操作\"></a>非变动性操作</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.empty() <span class=\"comment\">//判断容器是否为空，与size()==0相同，但可能更快  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.size() <span class=\"comment\">//返回当前元素数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//重新设定容器大小，c.size()会发生改变。  </span></span><br><span class=\"line\">resize()  </span><br><span class=\"line\"><span class=\"comment\">//c.size()&lt;n时，扩大容器，多余的元素追加在末尾，</span></span><br><span class=\"line\"><span class=\"comment\">//执行默认初始化；反之，则将容器截断，保留前面n个元素  </span></span><br><span class=\"line\">c.resize(n);  </span><br><span class=\"line\"><span class=\"comment\">//c.size()&lt;n时，扩大容器，多余的元素追加在末尾，</span></span><br><span class=\"line\"><span class=\"comment\">//其值都为val；反之，则将容器截断，保留前面n个元素  </span></span><br><span class=\"line\">c.resize(n,val);  </span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size() <span class=\"comment\">//返回可容纳的元素最大数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.capacity() <span class=\"comment\">//返回在不重新分配的情况下可容纳的元素的最大数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.reserve(num) <span class=\"comment\">//如果容量不够，进行扩大  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.shrink_to_fit() <span class=\"comment\">//按要求根据元素的数量去缩小容量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 == c2 <span class=\"comment\">//判断c1与c2是否相等  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 != c2 <span class=\"comment\">//判断c1与c2是否不相等，等同于!(c1==c2)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &lt; c2 <span class=\"comment\">//判断c1是否小于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &gt; c2 <span class=\"comment\">//判断c1是否大于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &lt;= c2 <span class=\"comment\">//判断c1是否小于等于c2  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1 &gt;= c2 <span class=\"comment\">//判断c1是否大于等于c2</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c = c2 <span class=\"comment\">//将c2所有元素赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c = rv <span class=\"comment\">//将右值对象rv的所有元素移动赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c = initlist <span class=\"comment\">//使用初始化列表进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(initlist) <span class=\"comment\">//使用初始化列表进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(n,elem) <span class=\"comment\">//使用n个elem元素进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(beg,end) <span class=\"comment\">//使用beg到end范围内的元素进行赋值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1.swap(c2) <span class=\"comment\">//交换c1和c2的数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">swap(c1,c2) <span class=\"comment\">//交换c1和c2的数</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"元素存取\"><a href=\"#元素存取\" class=\"headerlink\" title=\"元素存取\"></a>元素存取</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c[idx] <span class=\"comment\">//返回索引idx所标示的元素，不进行范围检查  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.at(idx) <span class=\"comment\">//返回索引idx所标示的元素，如果越界，抛出range-error  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.front() <span class=\"comment\">//返回第一个元素，不检查第一个元素是否存在  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.back() <span class=\"comment\">//返回最后一个元素，不检查最后一个元素是否存在</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"迭代器相关函数\"><a href=\"#迭代器相关函数\" class=\"headerlink\" title=\"迭代器相关函数\"></a>迭代器相关函数</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.begin() <span class=\"comment\">//返回一个随机存取迭代器，指向第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.end() <span class=\"comment\">//返回一个随机存取迭代器，指向最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.cbegin() <span class=\"comment\">//返回一个随机存取常迭代器，指向第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.cend() <span class=\"comment\">//返回一个随机存取常迭代器，指向最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rbegin() <span class=\"comment\">//返回一个逆向迭代器，指向逆向迭代的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rend() <span class=\"comment\">//返回一个逆向迭代器，指向逆向迭代的最后一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.crbegin() <span class=\"comment\">//返回一个逆向常迭代器，指向逆向迭代的第一个元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.crend() <span class=\"comment\">//返回一个逆向常迭代器，指向逆向迭代的最后一个元素</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"移除和插入元素\"><a href=\"#移除和插入元素\" class=\"headerlink\" title=\"移除和插入元素\"></a>移除和插入元素</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.push_back(elem) <span class=\"comment\">//在末尾添加一个elem副本  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.pop_back() <span class=\"comment\">//移除末尾元素（但不回传）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,elem) <span class=\"comment\">//在迭代器位置前面插入一个elem副本，并返回新元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,n,elem)</span><br><span class=\"line\"><span class=\"comment\">//在迭代器位置前面插入n个elem副本，并返回第一个</span></span><br><span class=\"line\"><span class=\"comment\">//新元素的位置；若无新插入值，返回原位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,beg,end) <span class=\"comment\">//在迭代器位置前面插入范围beg到end的所有元素的副本，</span></span><br><span class=\"line\"><span class=\"comment\">//并返回第一个新元素的位置；若无新插入值，返回原位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,initlist) <span class=\"comment\">//在迭代器位置前面插入初始化列表的所有元素的副本，</span></span><br><span class=\"line\"><span class=\"comment\">//并返回第一个新元素的位置；若无新插入值，返回原位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.emplace(pos,args...) <span class=\"comment\">//在迭代器位置前面插入一个使用args初始化的元素副本，</span></span><br><span class=\"line\"><span class=\"comment\">//并返回新元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.emplace_back(args...) <span class=\"comment\">//在末尾添加一个使用args初始化的元素副本，无返回值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(pos) <span class=\"comment\">//移除迭代器位置的元素，并返回下个元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(beg,end) </span><br><span class=\"line\"><span class=\"comment\">//移除beg到end范围内的所有元素，并返回下个元素的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.resize(num) </span><br><span class=\"line\"><span class=\"comment\">//将元素数量设为num（如果size()增大，多出来的元素</span></span><br><span class=\"line\"><span class=\"comment\">//使用默认构造函数创建）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.resize(num,elem) <span class=\"comment\">//将元素数量设为num（如果size()增大，多出来的元素都是elem的副本）  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.clear() <span class=\"comment\">//移除所以元素，清空容器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"comment\">//构造两个vector  </span></span><br><span class=\"line\">  <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; c;  </span><br><span class=\"line\">  <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; c1;  </span><br><span class=\"line\">  <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; c2;  </span><br><span class=\"line\">  <span class=\"comment\">//在尾部插入元素  </span></span><br><span class=\"line\">  c.push_back(<span class=\"number\">1</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">2</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">3</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">4</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">5</span>);  </span><br><span class=\"line\">  c1=c;<span class=\"comment\">//将c赋值给c1  </span></span><br><span class=\"line\">  c2=c1;<span class=\"comment\">//将c1赋值给c2  </span></span><br><span class=\"line\">  <span class=\"comment\">//输出两个集合的大小，验证赋值操作  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"c=%d  c1=%d\\n\"</span>,c.size(),c1.size());  </span><br><span class=\"line\">  c1.clear();<span class=\"comment\">//清除所有元素  </span></span><br><span class=\"line\">  c1.~<span class=\"built_in\">vector</span>();<span class=\"comment\">//将所有元素销毁并释放内存  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"最大容量=%d\\n\"</span>,c.max_size());</span><br><span class=\"line\">  <span class=\"comment\">//返回可容纳的元素的最大容量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"赋值前%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  c.assign(<span class=\"number\">1</span>,<span class=\"number\">12</span>);<span class=\"comment\">//将c的第一个元素赋值为12  </span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"赋值后%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">1</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">2</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">3</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">4</span>);  </span><br><span class=\"line\">  c.push_back(<span class=\"number\">5</span>);  </span><br><span class=\"line\">  <span class=\"comment\">//返回索引所对应的元素  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"索引是0的元素=%d\\n\"</span>,c[<span class=\"number\">0</span>]);  </span><br><span class=\"line\">  <span class=\"comment\">//返回第一个元素  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"第一个元素=%d\\n\"</span>,c.front());  </span><br><span class=\"line\">  <span class=\"comment\">//返回最后一个元素  </span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"最后一个元素=%d\\n\"</span>,c.back());  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"插入前%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  <span class=\"comment\">//插入元素,在第一个位置之前  </span></span><br><span class=\"line\">  c.insert(c.begin(),<span class=\"number\">10</span>);  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"插入后%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  <span class=\"comment\">//删除第一个元素  </span></span><br><span class=\"line\">  c.erase(c.begin());  </span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"删除第一个元素%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  c.erase(c.begin(),c.begin()+<span class=\"number\">2</span>);  </span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;c.size();i++)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"删除第一和二个元素%d= %d\\n\"</span>,i,c.at(i));  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"STL容器总结之deque","date":"2016-06-01T17:26:50.000Z","_content":"\n- deque双向队列是一种双向开口的连续线性空间，可以高效的在头尾两端插入和删除元素，deque在接口上和vector非常相似，下面列出deque的常用成员函数\n\n\n- ### 构造，析构###\n\n```cpp\ndeque<Elem> c //创建一个空的deque  \n  \ndeque<Elem> c1(c2) //赋值deque  \n  \ndeque<Elem> c(n) \n//创建deque，含有n个数据，数据均有缺省结构函数产生  \n  \ndeque<Elem> c(n,Elem) //创建一个含有n个Elem拷贝的deque  \n  \ndeque<Elem> c(begin,end) //创建一个以[begin,end)区间的deque  \n//利用int数组iArray，创建一个deque对象d  \nint iArray[]={1,2,3,4,5,6,7};  \ndeque<int> d(iArray, iArray+7);  \n  \nc~deque<Elem>() //销毁所有数据，并释放内存  \n```\n\n- ### 赋值###\n\n```cpp\nc.assign(begin,end) //将[begin,end)区间中的数据赋值给c  \n  \nc.assign(n,Elem) //将n个Elem的拷贝赋值给c  \n  \nc.swap(c2) //将c2和c的元素互换  \n```\n\n<!-- more -->\n\n- ### 数据访问###\n\n```cpp\nc.at(index) //返回索引index所指定的数据，如果index越界，抛出out_of_ranga  \n  \nc[index] //返回容器指定位置的元素值  \n  \nc.front() //返回第一个数据  \n  \nc.back() //返回最后一个数据  \n  \nc.begin() //返回指向第一个元素的迭代器  \n  \nc.end() //返回指向最后一个数据的下一个位置的迭代器  \n  \nc.rbegin() \n//返回逆向队列的第一个数据,也就是返回容器中倒数第一个元素的迭代器  \n  \nc.rend() \n//返回指向逆向队列的最后一个数据的下一个位置的迭代器，  \n//也就是返回容器中倒数最后一个元素之后的迭代器  \n```\n\n- ### 插入数据###\n\n```cpp\nc.push_back(Elem) //在尾部加入一个数据  \n  \nc.push_front(Elem) //在头部插入一个数据  \n  \nc.insert(pos,Elem) //在pos位置插入一个Elem拷贝，返回新数据的位置  \n  \nc.insert(pos,n,Elem) //在pos位置插入n个Elem数据，无返回值  \n  \nc.insert(pos,begin,end)\n//在pos位置插入在[begin,end)区间的数据，无返回值\n```\n\n- ### 删除数据###\n\n```cpp\nc.pop_back() //删除最后一个数据  \n  \nc.pop_front() //删除头部一个数据  \n  \nc.erase(pos) //删除pos位置的数据，返回下一个数据的位置  \n  \nc.erase(begin,end) \n//删除[begin,end)区间的数据，返回下一个数据的位置  \n```\n\n- ### 其他操作###\n\n```cpp\nc.empty() //判断容器是否为空  \n  \nc.max_size() //返回容器中最大数据的数量  \n  \nc.resize(num) //重新指定队列的长度  \n  \nc.size() //返回容器中实际数据的个数  \n  \nc1.swap(c2) //将c1和c2元素互换  \nswap(c1,c2) //同上  \n```\n\n- deque的实现比较复杂，内部会维护一个map（注意！不是STL中的map容器）即一小块连续的空间，该空间中每个元素都是指针，指向另一段（较大的）区域，这个区域称为缓冲区，缓冲区用来保存deque中的数据。因此deque在随机访问和遍历数据会比vector慢。具体的deque实现可以参考《STL源码剖析》，当然此书中使用的SGI STL与VS2008所使用的PJ STL的实现方法还是有区别的。下面给出了deque的结构图：\n\n![](http://hi.csdn.net/attachment/201111/8/0_13207172099IU6.gif)\n\n- ### 示例###\n\n```cpp\n#include <deque>  \n#include <cstdio>  \n#include <algorithm>  \nusing namespace std;  \n/** \n  双端队列queue \n*/  \nint main(){  \n    //创建一个有20个元素的queue队列  \n    deque<int> ideq(20);  \n    deque<int>::iterator pos;  \n    int i;  \n    //使用assign()赋值  assign在计算机中就是赋值的意思  \n    for (i = 0; i < 20; ++i)  \n        ideq[i] = i;  \n  \n    //输出deque  \n    printf(\"输出deque中数据:\\n\");  \n    for (i = 0; i < 20; ++i)  \n        printf(\"%d \", ideq[i]);  \n    putchar('\\n');  \n  \n    //在头尾加入新数据  \n    printf(\"\\n在头尾加入新数据...\\n\");  \n    ideq.push_back(100);  \n    ideq.push_front(i);  \n  \n    //输出deque  \n    printf(\"\\n输出deque中数据:\\n\");  \n    for (pos = ideq.begin(); pos != ideq.end(); pos++)  \n        printf(\"%d \", *pos);  \n    putchar('\\n');  \n  \n    //查找  \n    const int FINDNUMBER = 19;  \n    printf(\"\\n查找%d\\n\", FINDNUMBER);  \n    pos = find(ideq.begin(), ideq.end(), FINDNUMBER);  \n    if (pos != ideq.end())  \n        printf(\"find %d success\\n\", *pos);  \n    else  \n        printf(\"find failed\\n\");  \n  \n    //在头尾删除数据  \n    printf(\"\\n在头尾删除数据...\\n\");  \n    ideq.pop_back();  \n    ideq.pop_front();  \n  \n    //输出deque  \n    printf(\"\\n输出deque中数据:\\n\");  \n    for (pos = ideq.begin(); pos != ideq.end(); pos++)  \n        printf(\"%d \", *pos);  \n    putchar('\\n');  \n    return 0;  \n}  \n```\n\n运行结果如下：\n\n![](http://hi.csdn.net/attachment/201111/8/0_1320717228QV1x.gif)\n\n- 另外要注意一点。对于deque和vector来说，尽量少用erase(pos)和erase(beg,end)。因为这在中间删除数据后会导致后面的数据向前移动，从而使效率低下。\n","source":"_posts/C++/STL容器总结之deque.md","raw":"---\ntitle: STL容器总结之deque\ndate: 2016-06-01 17:26:50\ntags: [C++,STL,deque]\ncategories: C++\n---\n\n- deque双向队列是一种双向开口的连续线性空间，可以高效的在头尾两端插入和删除元素，deque在接口上和vector非常相似，下面列出deque的常用成员函数\n\n\n- ### 构造，析构###\n\n```cpp\ndeque<Elem> c //创建一个空的deque  \n  \ndeque<Elem> c1(c2) //赋值deque  \n  \ndeque<Elem> c(n) \n//创建deque，含有n个数据，数据均有缺省结构函数产生  \n  \ndeque<Elem> c(n,Elem) //创建一个含有n个Elem拷贝的deque  \n  \ndeque<Elem> c(begin,end) //创建一个以[begin,end)区间的deque  \n//利用int数组iArray，创建一个deque对象d  \nint iArray[]={1,2,3,4,5,6,7};  \ndeque<int> d(iArray, iArray+7);  \n  \nc~deque<Elem>() //销毁所有数据，并释放内存  \n```\n\n- ### 赋值###\n\n```cpp\nc.assign(begin,end) //将[begin,end)区间中的数据赋值给c  \n  \nc.assign(n,Elem) //将n个Elem的拷贝赋值给c  \n  \nc.swap(c2) //将c2和c的元素互换  \n```\n\n<!-- more -->\n\n- ### 数据访问###\n\n```cpp\nc.at(index) //返回索引index所指定的数据，如果index越界，抛出out_of_ranga  \n  \nc[index] //返回容器指定位置的元素值  \n  \nc.front() //返回第一个数据  \n  \nc.back() //返回最后一个数据  \n  \nc.begin() //返回指向第一个元素的迭代器  \n  \nc.end() //返回指向最后一个数据的下一个位置的迭代器  \n  \nc.rbegin() \n//返回逆向队列的第一个数据,也就是返回容器中倒数第一个元素的迭代器  \n  \nc.rend() \n//返回指向逆向队列的最后一个数据的下一个位置的迭代器，  \n//也就是返回容器中倒数最后一个元素之后的迭代器  \n```\n\n- ### 插入数据###\n\n```cpp\nc.push_back(Elem) //在尾部加入一个数据  \n  \nc.push_front(Elem) //在头部插入一个数据  \n  \nc.insert(pos,Elem) //在pos位置插入一个Elem拷贝，返回新数据的位置  \n  \nc.insert(pos,n,Elem) //在pos位置插入n个Elem数据，无返回值  \n  \nc.insert(pos,begin,end)\n//在pos位置插入在[begin,end)区间的数据，无返回值\n```\n\n- ### 删除数据###\n\n```cpp\nc.pop_back() //删除最后一个数据  \n  \nc.pop_front() //删除头部一个数据  \n  \nc.erase(pos) //删除pos位置的数据，返回下一个数据的位置  \n  \nc.erase(begin,end) \n//删除[begin,end)区间的数据，返回下一个数据的位置  \n```\n\n- ### 其他操作###\n\n```cpp\nc.empty() //判断容器是否为空  \n  \nc.max_size() //返回容器中最大数据的数量  \n  \nc.resize(num) //重新指定队列的长度  \n  \nc.size() //返回容器中实际数据的个数  \n  \nc1.swap(c2) //将c1和c2元素互换  \nswap(c1,c2) //同上  \n```\n\n- deque的实现比较复杂，内部会维护一个map（注意！不是STL中的map容器）即一小块连续的空间，该空间中每个元素都是指针，指向另一段（较大的）区域，这个区域称为缓冲区，缓冲区用来保存deque中的数据。因此deque在随机访问和遍历数据会比vector慢。具体的deque实现可以参考《STL源码剖析》，当然此书中使用的SGI STL与VS2008所使用的PJ STL的实现方法还是有区别的。下面给出了deque的结构图：\n\n![](http://hi.csdn.net/attachment/201111/8/0_13207172099IU6.gif)\n\n- ### 示例###\n\n```cpp\n#include <deque>  \n#include <cstdio>  \n#include <algorithm>  \nusing namespace std;  \n/** \n  双端队列queue \n*/  \nint main(){  \n    //创建一个有20个元素的queue队列  \n    deque<int> ideq(20);  \n    deque<int>::iterator pos;  \n    int i;  \n    //使用assign()赋值  assign在计算机中就是赋值的意思  \n    for (i = 0; i < 20; ++i)  \n        ideq[i] = i;  \n  \n    //输出deque  \n    printf(\"输出deque中数据:\\n\");  \n    for (i = 0; i < 20; ++i)  \n        printf(\"%d \", ideq[i]);  \n    putchar('\\n');  \n  \n    //在头尾加入新数据  \n    printf(\"\\n在头尾加入新数据...\\n\");  \n    ideq.push_back(100);  \n    ideq.push_front(i);  \n  \n    //输出deque  \n    printf(\"\\n输出deque中数据:\\n\");  \n    for (pos = ideq.begin(); pos != ideq.end(); pos++)  \n        printf(\"%d \", *pos);  \n    putchar('\\n');  \n  \n    //查找  \n    const int FINDNUMBER = 19;  \n    printf(\"\\n查找%d\\n\", FINDNUMBER);  \n    pos = find(ideq.begin(), ideq.end(), FINDNUMBER);  \n    if (pos != ideq.end())  \n        printf(\"find %d success\\n\", *pos);  \n    else  \n        printf(\"find failed\\n\");  \n  \n    //在头尾删除数据  \n    printf(\"\\n在头尾删除数据...\\n\");  \n    ideq.pop_back();  \n    ideq.pop_front();  \n  \n    //输出deque  \n    printf(\"\\n输出deque中数据:\\n\");  \n    for (pos = ideq.begin(); pos != ideq.end(); pos++)  \n        printf(\"%d \", *pos);  \n    putchar('\\n');  \n    return 0;  \n}  \n```\n\n运行结果如下：\n\n![](http://hi.csdn.net/attachment/201111/8/0_1320717228QV1x.gif)\n\n- 另外要注意一点。对于deque和vector来说，尽量少用erase(pos)和erase(beg,end)。因为这在中间删除数据后会导致后面的数据向前移动，从而使效率低下。\n","slug":"C++/STL容器总结之deque","published":1,"updated":"2016-06-17T13:46:37.598Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qic001okgaelbu4uh8y","content":"<ul>\n<li>deque双向队列是一种双向开口的连续线性空间，可以高效的在头尾两端插入和删除元素，deque在接口上和vector非常相似，下面列出deque的常用成员函数</li>\n</ul>\n<ul>\n<li><h3 id=\"构造，析构\"><a href=\"#构造，析构\" class=\"headerlink\" title=\"构造，析构\"></a>构造，析构</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c <span class=\"comment\">//创建一个空的deque  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c1(c2) <span class=\"comment\">//赋值deque  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c(n) </span><br><span class=\"line\"><span class=\"comment\">//创建deque，含有n个数据，数据均有缺省结构函数产生  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c(n,Elem) <span class=\"comment\">//创建一个含有n个Elem拷贝的deque  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c(begin,end) <span class=\"comment\">//创建一个以[begin,end)区间的deque  </span></span><br><span class=\"line\"><span class=\"comment\">//利用int数组iArray，创建一个deque对象d  </span></span><br><span class=\"line\"><span class=\"keyword\">int</span> iArray[]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>&#125;;  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;<span class=\"keyword\">int</span>&gt; d(iArray, iArray+<span class=\"number\">7</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">c~<span class=\"built_in\">deque</span>&lt;Elem&gt;() <span class=\"comment\">//销毁所有数据，并释放内存</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.assign(begin,end) <span class=\"comment\">//将[begin,end)区间中的数据赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(n,Elem) <span class=\"comment\">//将n个Elem的拷贝赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.swap(c2) <span class=\"comment\">//将c2和c的元素互换</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li><h3 id=\"数据访问\"><a href=\"#数据访问\" class=\"headerlink\" title=\"数据访问\"></a>数据访问</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.at(index) <span class=\"comment\">//返回索引index所指定的数据，如果index越界，抛出out_of_ranga  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c[index] <span class=\"comment\">//返回容器指定位置的元素值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.front() <span class=\"comment\">//返回第一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.back() <span class=\"comment\">//返回最后一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.begin() <span class=\"comment\">//返回指向第一个元素的迭代器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.end() <span class=\"comment\">//返回指向最后一个数据的下一个位置的迭代器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rbegin() </span><br><span class=\"line\"><span class=\"comment\">//返回逆向队列的第一个数据,也就是返回容器中倒数第一个元素的迭代器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rend() </span><br><span class=\"line\"><span class=\"comment\">//返回指向逆向队列的最后一个数据的下一个位置的迭代器，  </span></span><br><span class=\"line\"><span class=\"comment\">//也就是返回容器中倒数最后一个元素之后的迭代器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.push_back(Elem) <span class=\"comment\">//在尾部加入一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.push_front(Elem) <span class=\"comment\">//在头部插入一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,Elem) <span class=\"comment\">//在pos位置插入一个Elem拷贝，返回新数据的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,n,Elem) <span class=\"comment\">//在pos位置插入n个Elem数据，无返回值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,begin,end)</span><br><span class=\"line\"><span class=\"comment\">//在pos位置插入在[begin,end)区间的数据，无返回值</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.pop_back() <span class=\"comment\">//删除最后一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.pop_front() <span class=\"comment\">//删除头部一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(pos) <span class=\"comment\">//删除pos位置的数据，返回下一个数据的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(begin,end) </span><br><span class=\"line\"><span class=\"comment\">//删除[begin,end)区间的数据，返回下一个数据的位置</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"其他操作\"><a href=\"#其他操作\" class=\"headerlink\" title=\"其他操作\"></a>其他操作</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.empty() <span class=\"comment\">//判断容器是否为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size() <span class=\"comment\">//返回容器中最大数据的数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.resize(num) <span class=\"comment\">//重新指定队列的长度  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.size() <span class=\"comment\">//返回容器中实际数据的个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1.swap(c2) <span class=\"comment\">//将c1和c2元素互换  </span></span><br><span class=\"line\">swap(c1,c2) <span class=\"comment\">//同上</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>deque的实现比较复杂，内部会维护一个map（注意！不是STL中的map容器）即一小块连续的空间，该空间中每个元素都是指针，指向另一段（较大的）区域，这个区域称为缓冲区，缓冲区用来保存deque中的数据。因此deque在随机访问和遍历数据会比vector慢。具体的deque实现可以参考《STL源码剖析》，当然此书中使用的SGI STL与VS2008所使用的PJ STL的实现方法还是有区别的。下面给出了deque的结构图：</li>\n</ul>\n<p><img src=\"http://hi.csdn.net/attachment/201111/8/0_13207172099IU6.gif\" alt=\"\"></p>\n<ul>\n<li><h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;deque&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  双端队列queue </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"comment\">//创建一个有20个元素的queue队列  </span></span><br><span class=\"line\">    <span class=\"built_in\">deque</span>&lt;<span class=\"keyword\">int</span>&gt; ideq(<span class=\"number\">20</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">deque</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator pos;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;  </span><br><span class=\"line\">    <span class=\"comment\">//使用assign()赋值  assign在计算机中就是赋值的意思  </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; ++i)  </span><br><span class=\"line\">        ideq[i] = i;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//输出deque  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"输出deque中数据:\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; ++i)  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, ideq[i]);  </span><br><span class=\"line\">    <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//在头尾加入新数据  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n在头尾加入新数据...\\n\"</span>);  </span><br><span class=\"line\">    ideq.push_back(<span class=\"number\">100</span>);  </span><br><span class=\"line\">    ideq.push_front(i);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//输出deque  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n输出deque中数据:\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (pos = ideq.begin(); pos != ideq.end(); pos++)  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, *pos);  </span><br><span class=\"line\">    <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//查找  </span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> FINDNUMBER = <span class=\"number\">19</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n查找%d\\n\"</span>, FINDNUMBER);  </span><br><span class=\"line\">    pos = find(ideq.begin(), ideq.end(), FINDNUMBER);  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pos != ideq.end())  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"find %d success\\n\"</span>, *pos);  </span><br><span class=\"line\">    <span class=\"keyword\">else</span>  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"find failed\\n\"</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//在头尾删除数据  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n在头尾删除数据...\\n\"</span>);  </span><br><span class=\"line\">    ideq.pop_back();  </span><br><span class=\"line\">    ideq.pop_front();  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//输出deque  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n输出deque中数据:\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (pos = ideq.begin(); pos != ideq.end(); pos++)  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, *pos);  </span><br><span class=\"line\">    <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下：</p>\n<p><img src=\"http://hi.csdn.net/attachment/201111/8/0_1320717228QV1x.gif\" alt=\"\"></p>\n<ul>\n<li>另外要注意一点。对于deque和vector来说，尽量少用erase(pos)和erase(beg,end)。因为这在中间删除数据后会导致后面的数据向前移动，从而使效率低下。</li>\n</ul>\n","excerpt":"<ul>\n<li>deque双向队列是一种双向开口的连续线性空间，可以高效的在头尾两端插入和删除元素，deque在接口上和vector非常相似，下面列出deque的常用成员函数</li>\n</ul>\n<ul>\n<li><h3 id=\"构造，析构\"><a href=\"#构造，析构\" class=\"headerlink\" title=\"构造，析构\"></a>构造，析构</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c <span class=\"comment\">//创建一个空的deque  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c1(c2) <span class=\"comment\">//赋值deque  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c(n) </span><br><span class=\"line\"><span class=\"comment\">//创建deque，含有n个数据，数据均有缺省结构函数产生  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c(n,Elem) <span class=\"comment\">//创建一个含有n个Elem拷贝的deque  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;Elem&gt; c(begin,end) <span class=\"comment\">//创建一个以[begin,end)区间的deque  </span></span><br><span class=\"line\"><span class=\"comment\">//利用int数组iArray，创建一个deque对象d  </span></span><br><span class=\"line\"><span class=\"keyword\">int</span> iArray[]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>&#125;;  </span><br><span class=\"line\"><span class=\"built_in\">deque</span>&lt;<span class=\"keyword\">int</span>&gt; d(iArray, iArray+<span class=\"number\">7</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">c~<span class=\"built_in\">deque</span>&lt;Elem&gt;() <span class=\"comment\">//销毁所有数据，并释放内存</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.assign(begin,end) <span class=\"comment\">//将[begin,end)区间中的数据赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(n,Elem) <span class=\"comment\">//将n个Elem的拷贝赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.swap(c2) <span class=\"comment\">//将c2和c的元素互换</span></span><br></pre></td></tr></table></figure>","more":"<ul>\n<li><h3 id=\"数据访问\"><a href=\"#数据访问\" class=\"headerlink\" title=\"数据访问\"></a>数据访问</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.at(index) <span class=\"comment\">//返回索引index所指定的数据，如果index越界，抛出out_of_ranga  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c[index] <span class=\"comment\">//返回容器指定位置的元素值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.front() <span class=\"comment\">//返回第一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.back() <span class=\"comment\">//返回最后一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.begin() <span class=\"comment\">//返回指向第一个元素的迭代器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.end() <span class=\"comment\">//返回指向最后一个数据的下一个位置的迭代器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rbegin() </span><br><span class=\"line\"><span class=\"comment\">//返回逆向队列的第一个数据,也就是返回容器中倒数第一个元素的迭代器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rend() </span><br><span class=\"line\"><span class=\"comment\">//返回指向逆向队列的最后一个数据的下一个位置的迭代器，  </span></span><br><span class=\"line\"><span class=\"comment\">//也就是返回容器中倒数最后一个元素之后的迭代器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.push_back(Elem) <span class=\"comment\">//在尾部加入一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.push_front(Elem) <span class=\"comment\">//在头部插入一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,Elem) <span class=\"comment\">//在pos位置插入一个Elem拷贝，返回新数据的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,n,Elem) <span class=\"comment\">//在pos位置插入n个Elem数据，无返回值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,begin,end)</span><br><span class=\"line\"><span class=\"comment\">//在pos位置插入在[begin,end)区间的数据，无返回值</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.pop_back() <span class=\"comment\">//删除最后一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.pop_front() <span class=\"comment\">//删除头部一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(pos) <span class=\"comment\">//删除pos位置的数据，返回下一个数据的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.erase(begin,end) </span><br><span class=\"line\"><span class=\"comment\">//删除[begin,end)区间的数据，返回下一个数据的位置</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"其他操作\"><a href=\"#其他操作\" class=\"headerlink\" title=\"其他操作\"></a>其他操作</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.empty() <span class=\"comment\">//判断容器是否为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size() <span class=\"comment\">//返回容器中最大数据的数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.resize(num) <span class=\"comment\">//重新指定队列的长度  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.size() <span class=\"comment\">//返回容器中实际数据的个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c1.swap(c2) <span class=\"comment\">//将c1和c2元素互换  </span></span><br><span class=\"line\">swap(c1,c2) <span class=\"comment\">//同上</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>deque的实现比较复杂，内部会维护一个map（注意！不是STL中的map容器）即一小块连续的空间，该空间中每个元素都是指针，指向另一段（较大的）区域，这个区域称为缓冲区，缓冲区用来保存deque中的数据。因此deque在随机访问和遍历数据会比vector慢。具体的deque实现可以参考《STL源码剖析》，当然此书中使用的SGI STL与VS2008所使用的PJ STL的实现方法还是有区别的。下面给出了deque的结构图：</li>\n</ul>\n<p><img src=\"http://hi.csdn.net/attachment/201111/8/0_13207172099IU6.gif\" alt=\"\"></p>\n<ul>\n<li><h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;deque&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  双端队列queue </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"comment\">//创建一个有20个元素的queue队列  </span></span><br><span class=\"line\">    <span class=\"built_in\">deque</span>&lt;<span class=\"keyword\">int</span>&gt; ideq(<span class=\"number\">20</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">deque</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator pos;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;  </span><br><span class=\"line\">    <span class=\"comment\">//使用assign()赋值  assign在计算机中就是赋值的意思  </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; ++i)  </span><br><span class=\"line\">        ideq[i] = i;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//输出deque  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"输出deque中数据:\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; ++i)  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, ideq[i]);  </span><br><span class=\"line\">    <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//在头尾加入新数据  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n在头尾加入新数据...\\n\"</span>);  </span><br><span class=\"line\">    ideq.push_back(<span class=\"number\">100</span>);  </span><br><span class=\"line\">    ideq.push_front(i);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//输出deque  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n输出deque中数据:\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (pos = ideq.begin(); pos != ideq.end(); pos++)  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, *pos);  </span><br><span class=\"line\">    <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//查找  </span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> FINDNUMBER = <span class=\"number\">19</span>;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n查找%d\\n\"</span>, FINDNUMBER);  </span><br><span class=\"line\">    pos = find(ideq.begin(), ideq.end(), FINDNUMBER);  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (pos != ideq.end())  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"find %d success\\n\"</span>, *pos);  </span><br><span class=\"line\">    <span class=\"keyword\">else</span>  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"find failed\\n\"</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//在头尾删除数据  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n在头尾删除数据...\\n\"</span>);  </span><br><span class=\"line\">    ideq.pop_back();  </span><br><span class=\"line\">    ideq.pop_front();  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//输出deque  </span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n输出deque中数据:\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (pos = ideq.begin(); pos != ideq.end(); pos++)  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>, *pos);  </span><br><span class=\"line\">    <span class=\"built_in\">putchar</span>(<span class=\"string\">'\\n'</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下：</p>\n<p><img src=\"http://hi.csdn.net/attachment/201111/8/0_1320717228QV1x.gif\" alt=\"\"></p>\n<ul>\n<li>另外要注意一点。对于deque和vector来说，尽量少用erase(pos)和erase(beg,end)。因为这在中间删除数据后会导致后面的数据向前移动，从而使效率低下。</li>\n</ul>"},{"title":"STL容器总结之list","date":"2016-06-01T17:18:12.000Z","_content":"\n\n- 在使用std::list<>链表时，难免会对数据进行添加删除操作。而遍历链表则有两种方式：通过索引访问，象数组一样处理；通过std::list<>::iterator链表遍历器进行访问\nSTL 中的list 就是一 双向链表，可高效地进行插入删除元素。\nlist不支持随机访问。所以没有 at(pos)和operator[]。\n\n list 对象list1, list2 分别有元素list1(1,2,3),list2(4,5,6) 。list< int>::iterator it;\n\n\n- ### 构造，析构###\n\n```cpp\nlist<Elem> c //创建一个空的list  \n  \nlist<Elem> c1(c2) //复制另一个同类型元素的list  \n  \nlist<Elem>c(n) //创建n个元素的list，每个元素值由默认构造函数确定  \n  \nlist<Elem>c(n,elem) //创建n个元素的list，每个元素的值为elem  \n  \nlist<Elem>c(begin,end) //由迭代器创建list,迭代区间为[begin,end)  \n  \nc.~list();             // 销毁所有元素,释放内存 \n```\n\n<!-- more -->\n\n- ### 其他###\n\n```cpp\nc.size() //返回容器的元素个数  \n  \nc.swap(c2) //将c2和c的元素互换  \n  \nc.empty() //判断容器是否为空  \n  \nc.max_size() //返回容器中最大数据的数量  \n  \nc.resize(num) //重新指定链表的长度  \n  \nc.reverse() //反转链表  \n  \nc.sort() //对列表进行排序，默认升序，可以自定义回调函数  \n//示例  \nlist 对象L1(4,3,5,1,4)  \nL1.sort( );                 // L1(1,3,4,4,5)  \nL1.sort( greater <int >() ); // L1(5,4,4,3,1)  \n  \nc.merge() //合并两个有序列表使之有序  \n//示例  \n// 升序  \nlist1.merge(list2); // list1(1,2,3,4,5,6) list2 现为空  \n// 降序  \nL1( 3,2,1), L2(6,5,4)  \nL1.merge(L2, greater <int >() );\n// list1(6,5,4,3,2,1) list2 现为空  \n  \nc.splice() \n//对两个链表进行结合( 三个重载函数) 结合后第二个链表清空  \n\n\n//示例  \nlist1.splice( ++list1.begin(),list2);  \n// list1(1,4,5,6,2,3) list2 为空  \n  list1.splice( ++list1.begin(),list2,list2.begin());  \n// list1( 1,4,2,3); list2(5,6)  \nlist1.splice( ++list1.begin(),list2,++list2.begin(),list2.end());  \n//list1( 1, 5,6, 2,3); list2(4)  \n```\n\n- ### 赋值###\n\n```cpp\nc.assign(begin,end) //将[begin,end)区间中的数据赋值给c  \n  \nc.assign(n,Elem) //将n个Elem的拷贝赋值给c  \n  \nc.swap(c2) //将c2和c的元素互换  \n```\n\n- ### 数据访问###\n\n```cpp\nc.front() //返回第一个数据  \n  \nc.back() //返回最后一个数据  \n  \nc.begin() //返回指向第一个元素的迭代器(指针)  \n  \nc.end() //返回指向最后一个数据的下一个位置的迭代器(指针)  \n  \nc.rbegin() \n//返回逆向队列的第一个数据,也就是返回容器中倒数第一个元素的迭代器  \n  \nc.rend() \n//返回指向逆向队列的最后一个数据的下一个位置的迭代器，  \n//也就是返回容器中倒数最后一个元素之后的迭代器  \n```\n\n- ### 插入数据###\n\n```cpp\nc.push_back(Elem) //list元素尾部增加一个元素x  \n  \nc.push_front(Elem) //list元素首元素钱添加一个元素X  \n  \nc.insert(pos,Elem) //在pos位置插入一个Elem拷贝，返回新数据的位置  \n  \nc.insert(pos,n,Elem) //在pos位置插入n个Elem数据，无返回值  \n  \nc.insert(pos,begin,end)\n//在pos位置插入在[begin,end)区间的数据，无返回值 \n```\n\n- ### 删除数据###\n\n```cpp\nc.pop_back() //删除容器尾元素，当且仅当容器不为空    \n    \nc.pop_front() //删除容器首元素，当且仅当容器不为空    \n    \nc.remove(Elem) //删除容器中所有元素值等于x的元素   \n  \n/**  \n remove_if()删除条件满足的元素(会遍历一次链表)  \n*/    \nvoid remove_if_test(){    \nShowList(g_list1);    \ng_list1.remove_if(myFun);    \nShowList(g_list1);    \n}    \n    \nc.clear() //删除容器中的所有元素    \n    \nc.erase(pos) //删除pos位置的数据，返回下一个数据的位置    \n    \nc.erase(begin,end) \n//删除[begin,end)区间的数据，返回下一个数据的位置    \n    \nc.unique() //删除相邻重复元素    \n//示例    \nL1( 1, 1 ,4,3,5,1)    \nL1.unique( );         // L1(1,4,3,5,1)    \n```\n\n\n- ### 示例###\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \n#include<list>  \nusing namespace std;  \nlist < int > g_list1;  \nlist < int > g_list2;  \n/** \n  初始化全局列表 \n*/  \nvoid InitList(){  \n// push_back()增加一元素到链表尾  \ng_list1.push_back( 1 );  \ng_list1.push_back( 2 );  \ng_list1.push_back( 3 );  \n// push_front()增加一元素到链表头  \ng_list2.push_front( 6 );  \ng_list2.push_front( 5 );  \ng_list2.push_front( 4 );  \n}  \n/** \n  输出一个链表 \n*/  \nvoid ShowList(list < int >& listTemp){  \n// size()返回链表中元素个数  \ncout << listTemp.size() << endl;  \n  \nfor (list < int > ::iterator it = listTemp.begin();\nit != listTemp.end(); ++ it){  \n    cout << * it << ' ' ;  \n}  \n   cout << endl;  \n}  \n/** \n  构造函数，空链表 \n*/  \nvoid constructor_test0(){  \nlist < int > listTemp;  \ncout << listTemp.size() << endl;  \n}  \n/** \n 构造函数，建一个含三个默认值是0的元素的链表 \n*/  \nvoid constructor_test1(){  \n  list < int > listTemp( 3 );  \n  ShowList(listTemp);  \n}  \n/** \n  构造函数，建一个含五个元素的链表，值都是1 \n*/  \nvoid constructor_test2(){  \n  list < int > listTemp( 5 , 1 );  \n  ShowList(listTemp);  \n}  \n/** \n  构造函数，建一个g_list1的copy链表 \n*/  \nvoid constructor_test3(){  \n list < int > listTemp(g_list1);  \n ShowList(listTemp);  \n}  \n/** \n  构造函数，listTemp含g_list1一个区域的元素[_First, _Last) \n*/  \nvoid constructor_test4(){  \n list < int > listTemp(g_list1.begin(), g_list1.end());  \n ShowList(listTemp);  \n}  \n/** \n assign()分配值，有两个重载 \n template <class InputIterator> \n void assign ( InputIterator first, InputIterator last ); \n void assign ( size_type n, const T& u ); \n*/  \nvoid assign_test(){  \n  list < int > listTemp( 5 , 1 );  \n  ShowList(listTemp);  \n  listTemp.assign( 4 , 3 );  \n  ShowList(listTemp);  \n  \n  listTemp.assign( ++ g_list1.begin(), g_list1.end());  \n  ShowList(listTemp);  \n}  \n/** \n operator= \n*/  \nvoid operator_equality_test(){  \n g_list1 = g_list2;  \n ShowList(g_list1);  \n ShowList(g_list2);  \n}  \n/** \n  front()返回第一个元素的引用 \n*/  \nvoid front_test7(){  \n  cout << g_list1.front() << endl;  \n}  \n/** \n  back()返回最后一元素的引用 \n*/  \nvoid back_test(){  \n cout << g_list1.back() << endl;  \n}  \n/** \n  begin()返回第一个元素的指针(iterator) \n*/  \nvoid begin_test(){  \n list < int > ::iterator it1 = g_list1.begin();  \n cout << *++ it1 << endl;  \n  \n list < int > ::const_iterator it2 = g_list1.begin();  \n it2 ++ ;  \n // (*it2)++; // *it2 为const 不用修改  \n cout << * it2 << endl;  \n  \n}  \n/** \n  end()返回 [最后一个元素的下一位置的指针] \n  (list为空时end()= begin()) \n*/  \nvoid end_test(){  \nlist < int > ::iterator it = g_list1.end(); // 注意是：最后一个元素的下一位置的指针  \n-- it;  \ncout << * it << endl;  \n}  \n/** \n  rbegin()返回链表最后一元素的后向指针 \n*/  \nvoid rbegin_test(){  \n list < int > ::reverse_iterator it = g_list1.rbegin();  \n for (; it != g_list1.rend(); ++ it){  \n cout << * it << ' ' ;  \n}  \n cout << endl;  \n}  \n/** \n  rend()返回链表第一元素的下一位置的后向指针 \n*/  \nvoid rend_test(){  \nlist < int > ::reverse_iterator it = g_list1.rend();  \n-- it;  \ncout << * it << endl;  \n}  \n/** \n  push_back()增加一元素到链表尾 \n*/  \nvoid push_back_test(){  \nShowList(g_list1);  \ng_list1.push_back( 4 );  \nShowList(g_list1);  \n}  \n/** \n  push_front()增加一元素到链表头 \n*/  \nvoid push_front_test(){  \nShowList(g_list1);  \ng_list1.push_front( 4 );  \nShowList(g_list1);  \n}  \n/** \n  pop_back()删除链表尾的一个元素 \n*/  \nvoid pop_back_test(){  \nShowList(g_list1);  \ncout << endl;  \n  \ng_list1.pop_back();  \nShowList(g_list1);  \n  \n}  \n/** \n pop_front()删除链表头的一元素 \n*/  \nvoid pop_front_test(){  \nShowList(g_list1);  \ncout << endl;  \n  \ng_list1.pop_front();  \nShowList(g_list1);  \n}  \n/** \n clear()删除所有元素 \n*/  \nvoid clear_test(){  \nShowList(g_list1);  \ng_list1.clear();  \nShowList(g_list1);  \n}  \n/** \n  erase()删除一个元素或一个区域的元素(两个重载函数) \n*/  \nvoid erase_test()  \n{  \nShowList(g_list1);  \ng_list1.erase(g_list1.begin());  \nShowList(g_list1);  \n  \ncout << endl;  \n  \nShowList(g_list2);  \ng_list2.erase( ++ g_list2.begin(), g_list2.end());  \nShowList(g_list2);  \n}  \n/** \n  remove()删除链表中匹配值的元素(匹配元素全部删除) \n*/  \nvoid remove_test(){  \nShowList(g_list1);  \ng_list1.push_back( 1 );  \nShowList(g_list1);  \n  \ng_list1.remove( 1 );  \nShowList(g_list1);  \n}  \n  \nbool myFun( const int & value) { return (value < 2 ); }  \n/** \n remove_if()删除条件满足的元素(会遍历一次链表) \n*/  \nvoid remove_if_test(){  \nShowList(g_list1);  \ng_list1.remove_if(myFun);  \nShowList(g_list1);  \n}  \n/** \n  empty()判断是否链表为空 \n*/  \nvoid empty_test()  \n{  \nlist < int > listTemp;  \nif (listTemp.empty())  \ncout << \" listTemp为空 \" << endl;  \nelse  \ncout << \" listTemp不为空 \" << endl;  \n}  \n/** \n max_size()返回链表最大可能长度:1073741823 \n*/  \nvoid max_size_test(){  \nlist < int > ::size_type nMax = g_list1.max_size();  \ncout << nMax << endl;  \n}  \n/** \nresize()重新定义链表长度(两重载函数)： \n*/  \nvoid resize_test(){  \nShowList(g_list1);  \ng_list1.resize( 9 ); // 用默认值填补  \nShowList(g_list1);  \ncout << endl;  \n  \nShowList(g_list2);  \ng_list2.resize( 9 , 51 ); // 用指定值填补  \nShowList(g_list2);  \n}  \n/** \nreverse()反转链表 \n*/  \nvoid reverse_test(){  \nShowList(g_list1);  \ng_list1.reverse();  \nShowList(g_list1);  \n}  \n/** \n  sort()对链表排序，默认升序(两个重载函数) \n*/  \nvoid sort_test(){  \nlist < int > listTemp;  \nlistTemp.push_back( 9 );  \nlistTemp.push_back( 3 );  \nlistTemp.push_back( 5 );  \nlistTemp.push_back( 1 );  \nlistTemp.push_back( 4 );  \nlistTemp.push_back( 3 );  \n  \nShowList(listTemp);  \nlistTemp.sort();  \nShowList(listTemp);  \n  \nlistTemp.sort(greater < int > ());  \nShowList(listTemp);  \n}  \n/** \n  merge()合并两个升序序链表并使之成为另一个升序. \n*/  \nvoid merge_test1(){  \nlist < int > listTemp2;  \nlistTemp2.push_back( 3 );  \nlistTemp2.push_back( 4 );  \n  \nlist < int > listTemp3;  \nlistTemp3.push_back( 9 );  \nlistTemp3.push_back( 10 );  \n  \nShowList(listTemp2);  \ncout << endl;  \nShowList(listTemp3);  \ncout << endl;  \n  \nlistTemp2.merge(listTemp3);  \nShowList(listTemp2);  \n}  \n  \nbool myCmp ( int first, int second)  \n{ return ( int (first) > int (second) ); }  \n/** \n  merge()合并两个降序链表并使之成为另一个降序. \n*/  \nvoid merge_test2(){  \nlist < int > listTemp2;  \nlistTemp2.push_back( 4 );  \nlistTemp2.push_back( 3 );  \n  \nlist < int > listTemp3;  \nlistTemp3.push_back( 10 );  \nlistTemp3.push_back( 9 );  \n  \nShowList(listTemp2);  \ncout << endl;  \nShowList(listTemp3);  \ncout << endl;  \n  \n// listTemp2.merge(listTemp3, greater<int>()); // 第二个参数可以是自己定义的函数如下  \nlistTemp2.merge(listTemp3, myCmp);  \nShowList(listTemp2);  \n}  \n/** \n   splice()对两个链表进行结合(三个重载函数),结合后第二个链表清空 \n   void splice ( iterator position, list<T,Allocator>& x ); \n   void splice ( iterator position,\n   list<T,Allocator>& x, iterator i ); \n   void splice ( iterator position, \n   list<T,Allocator>& x, iterator first, iterator last ); \n*/  \nvoid splice_test(){  \nlist < int > listTemp1(g_list1);  \nlist < int > listTemp2(g_list2);  \n  \nShowList(listTemp1);  \nShowList(listTemp2);  \ncout << endl;  \n  \n//  \nlistTemp1.splice( ++ listTemp1.begin(), listTemp2);  \nShowList(listTemp1);  \nShowList(listTemp2);  \n  \n//  \nlistTemp1.assign(g_list1.begin(), g_list1.end());  \nlistTemp2.assign(g_list2.begin(), g_list2.end());  \nlistTemp1.splice( ++ listTemp1.begin(), listTemp2, ++ listTemp2.begin());  \nShowList(listTemp1);  \nShowList(listTemp2);  \n  \n//  \nlistTemp1.assign(g_list1.begin(), g_list1.end());  \nlistTemp2.assign(g_list2.begin(), g_list2.end());  \nlistTemp1.splice( ++ listTemp1.begin(), listTemp2, ++ listTemp2.begin(), listTemp2.end());  \nShowList(listTemp1);  \nShowList(listTemp2);  \n  \n}  \n/** \n   insert()在指定位置插入一个或多个元素(三个重载函数) \n   iterator insert ( iterator position, const T& x ); \n   void insert ( iterator position, size_type n, const T& x ); \n   template <class InputIterator> \n   void insert ( iterator position, InputIterator first, InputIterator last ); \n*/  \nvoid insert_test(){  \nlist < int > listTemp1(g_list1);  \nShowList(listTemp1);  \nlistTemp1.insert(listTemp1.begin(), 51 );  \nShowList(listTemp1);  \ncout << endl;  \n  \nlist < int > listTemp2(g_list1);  \nShowList(listTemp2);  \nlistTemp2.insert(listTemp2.begin(), 9 , 51 );  \nShowList(listTemp2);  \ncout << endl;  \n  \nlist < int > listTemp3(g_list1);  \nShowList(listTemp3);  \nlistTemp3.insert(listTemp3.begin(),g_list2.begin(), g_list2.end());  \nShowList(listTemp3);  \n  \n}  \n/** \n swap()交换两个链表(两个重载) \n*/  \nvoid swap_test(){  \nShowList(g_list1);  \nShowList(g_list2);  \ncout << endl;  \n  \ng_list1.swap(g_list2);  \nShowList(g_list1);  \nShowList(g_list2);  \n}  \n  \nbool same_integral_part ( double first, double second)  \n{ return ( int (first) == int (second) ); }  \n/** \n unique()删除相邻重复元素 \n*/  \nvoid unique_test(){  \nlist < int > listTemp;  \nlistTemp.push_back( 1 );  \nlistTemp.push_back( 1 );  \nlistTemp.push_back( 4 );  \nlistTemp.push_back( 3 );  \nlistTemp.push_back( 5 );  \nlistTemp.push_back( 1 );  \nlist < int > listTemp2(listTemp);  \n  \nShowList(listTemp);  \nlistTemp.unique(); // 不会删除不相邻的相同元素  \nShowList(listTemp);  \ncout << endl;  \n  \nlistTemp.sort();  \nShowList(listTemp);  \nlistTemp.unique();  \nShowList(listTemp);  \ncout << endl;  \n  \nlistTemp2.sort();  \nShowList(listTemp2);  \nlistTemp2.unique(same_integral_part);  \nShowList(listTemp2);  \n  \n}  \n/** \n  主函数，列表测试 \n*/  \nint main(){  \nInitList();  \n ShowList(g_list1);  \n ShowList(g_list2);  \n  \n constructor_test0();  \n constructor_test1();  \n constructor_test2();  \n constructor_test3();  \n constructor_test4();  \n assign_test();  \n operator_equality_test();  \n front_test7();  \n back_test();  \n begin_test();  \n end_test();  \n rbegin_test();  \n rend_test();  \n push_back_test();  \n push_front_test();  \n pop_back_test();  \n pop_front_test();  \n clear_test();  \n erase_test();  \n remove_test();  \n remove_if_test();  \n empty_test();  \n max_size_test();  \n resize_test();  \n reverse_test();  \n sort_test();  \n merge_test1();  \n merge_test2();  \n splice_test();  \n insert_test();  \n swap_test();  \n unique_test();  \nreturn 0 ;  \n}  \n```","source":"_posts/C++/STL容器总结之list.md","raw":"---\ntitle: STL容器总结之list\ndate: 2016-06-01 17:18:12\ntags: [C++,STL,list]\ncategories: C++\n---\n\n\n- 在使用std::list<>链表时，难免会对数据进行添加删除操作。而遍历链表则有两种方式：通过索引访问，象数组一样处理；通过std::list<>::iterator链表遍历器进行访问\nSTL 中的list 就是一 双向链表，可高效地进行插入删除元素。\nlist不支持随机访问。所以没有 at(pos)和operator[]。\n\n list 对象list1, list2 分别有元素list1(1,2,3),list2(4,5,6) 。list< int>::iterator it;\n\n\n- ### 构造，析构###\n\n```cpp\nlist<Elem> c //创建一个空的list  \n  \nlist<Elem> c1(c2) //复制另一个同类型元素的list  \n  \nlist<Elem>c(n) //创建n个元素的list，每个元素值由默认构造函数确定  \n  \nlist<Elem>c(n,elem) //创建n个元素的list，每个元素的值为elem  \n  \nlist<Elem>c(begin,end) //由迭代器创建list,迭代区间为[begin,end)  \n  \nc.~list();             // 销毁所有元素,释放内存 \n```\n\n<!-- more -->\n\n- ### 其他###\n\n```cpp\nc.size() //返回容器的元素个数  \n  \nc.swap(c2) //将c2和c的元素互换  \n  \nc.empty() //判断容器是否为空  \n  \nc.max_size() //返回容器中最大数据的数量  \n  \nc.resize(num) //重新指定链表的长度  \n  \nc.reverse() //反转链表  \n  \nc.sort() //对列表进行排序，默认升序，可以自定义回调函数  \n//示例  \nlist 对象L1(4,3,5,1,4)  \nL1.sort( );                 // L1(1,3,4,4,5)  \nL1.sort( greater <int >() ); // L1(5,4,4,3,1)  \n  \nc.merge() //合并两个有序列表使之有序  \n//示例  \n// 升序  \nlist1.merge(list2); // list1(1,2,3,4,5,6) list2 现为空  \n// 降序  \nL1( 3,2,1), L2(6,5,4)  \nL1.merge(L2, greater <int >() );\n// list1(6,5,4,3,2,1) list2 现为空  \n  \nc.splice() \n//对两个链表进行结合( 三个重载函数) 结合后第二个链表清空  \n\n\n//示例  \nlist1.splice( ++list1.begin(),list2);  \n// list1(1,4,5,6,2,3) list2 为空  \n  list1.splice( ++list1.begin(),list2,list2.begin());  \n// list1( 1,4,2,3); list2(5,6)  \nlist1.splice( ++list1.begin(),list2,++list2.begin(),list2.end());  \n//list1( 1, 5,6, 2,3); list2(4)  \n```\n\n- ### 赋值###\n\n```cpp\nc.assign(begin,end) //将[begin,end)区间中的数据赋值给c  \n  \nc.assign(n,Elem) //将n个Elem的拷贝赋值给c  \n  \nc.swap(c2) //将c2和c的元素互换  \n```\n\n- ### 数据访问###\n\n```cpp\nc.front() //返回第一个数据  \n  \nc.back() //返回最后一个数据  \n  \nc.begin() //返回指向第一个元素的迭代器(指针)  \n  \nc.end() //返回指向最后一个数据的下一个位置的迭代器(指针)  \n  \nc.rbegin() \n//返回逆向队列的第一个数据,也就是返回容器中倒数第一个元素的迭代器  \n  \nc.rend() \n//返回指向逆向队列的最后一个数据的下一个位置的迭代器，  \n//也就是返回容器中倒数最后一个元素之后的迭代器  \n```\n\n- ### 插入数据###\n\n```cpp\nc.push_back(Elem) //list元素尾部增加一个元素x  \n  \nc.push_front(Elem) //list元素首元素钱添加一个元素X  \n  \nc.insert(pos,Elem) //在pos位置插入一个Elem拷贝，返回新数据的位置  \n  \nc.insert(pos,n,Elem) //在pos位置插入n个Elem数据，无返回值  \n  \nc.insert(pos,begin,end)\n//在pos位置插入在[begin,end)区间的数据，无返回值 \n```\n\n- ### 删除数据###\n\n```cpp\nc.pop_back() //删除容器尾元素，当且仅当容器不为空    \n    \nc.pop_front() //删除容器首元素，当且仅当容器不为空    \n    \nc.remove(Elem) //删除容器中所有元素值等于x的元素   \n  \n/**  \n remove_if()删除条件满足的元素(会遍历一次链表)  \n*/    \nvoid remove_if_test(){    \nShowList(g_list1);    \ng_list1.remove_if(myFun);    \nShowList(g_list1);    \n}    \n    \nc.clear() //删除容器中的所有元素    \n    \nc.erase(pos) //删除pos位置的数据，返回下一个数据的位置    \n    \nc.erase(begin,end) \n//删除[begin,end)区间的数据，返回下一个数据的位置    \n    \nc.unique() //删除相邻重复元素    \n//示例    \nL1( 1, 1 ,4,3,5,1)    \nL1.unique( );         // L1(1,4,3,5,1)    \n```\n\n\n- ### 示例###\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \n#include<list>  \nusing namespace std;  \nlist < int > g_list1;  \nlist < int > g_list2;  \n/** \n  初始化全局列表 \n*/  \nvoid InitList(){  \n// push_back()增加一元素到链表尾  \ng_list1.push_back( 1 );  \ng_list1.push_back( 2 );  \ng_list1.push_back( 3 );  \n// push_front()增加一元素到链表头  \ng_list2.push_front( 6 );  \ng_list2.push_front( 5 );  \ng_list2.push_front( 4 );  \n}  \n/** \n  输出一个链表 \n*/  \nvoid ShowList(list < int >& listTemp){  \n// size()返回链表中元素个数  \ncout << listTemp.size() << endl;  \n  \nfor (list < int > ::iterator it = listTemp.begin();\nit != listTemp.end(); ++ it){  \n    cout << * it << ' ' ;  \n}  \n   cout << endl;  \n}  \n/** \n  构造函数，空链表 \n*/  \nvoid constructor_test0(){  \nlist < int > listTemp;  \ncout << listTemp.size() << endl;  \n}  \n/** \n 构造函数，建一个含三个默认值是0的元素的链表 \n*/  \nvoid constructor_test1(){  \n  list < int > listTemp( 3 );  \n  ShowList(listTemp);  \n}  \n/** \n  构造函数，建一个含五个元素的链表，值都是1 \n*/  \nvoid constructor_test2(){  \n  list < int > listTemp( 5 , 1 );  \n  ShowList(listTemp);  \n}  \n/** \n  构造函数，建一个g_list1的copy链表 \n*/  \nvoid constructor_test3(){  \n list < int > listTemp(g_list1);  \n ShowList(listTemp);  \n}  \n/** \n  构造函数，listTemp含g_list1一个区域的元素[_First, _Last) \n*/  \nvoid constructor_test4(){  \n list < int > listTemp(g_list1.begin(), g_list1.end());  \n ShowList(listTemp);  \n}  \n/** \n assign()分配值，有两个重载 \n template <class InputIterator> \n void assign ( InputIterator first, InputIterator last ); \n void assign ( size_type n, const T& u ); \n*/  \nvoid assign_test(){  \n  list < int > listTemp( 5 , 1 );  \n  ShowList(listTemp);  \n  listTemp.assign( 4 , 3 );  \n  ShowList(listTemp);  \n  \n  listTemp.assign( ++ g_list1.begin(), g_list1.end());  \n  ShowList(listTemp);  \n}  \n/** \n operator= \n*/  \nvoid operator_equality_test(){  \n g_list1 = g_list2;  \n ShowList(g_list1);  \n ShowList(g_list2);  \n}  \n/** \n  front()返回第一个元素的引用 \n*/  \nvoid front_test7(){  \n  cout << g_list1.front() << endl;  \n}  \n/** \n  back()返回最后一元素的引用 \n*/  \nvoid back_test(){  \n cout << g_list1.back() << endl;  \n}  \n/** \n  begin()返回第一个元素的指针(iterator) \n*/  \nvoid begin_test(){  \n list < int > ::iterator it1 = g_list1.begin();  \n cout << *++ it1 << endl;  \n  \n list < int > ::const_iterator it2 = g_list1.begin();  \n it2 ++ ;  \n // (*it2)++; // *it2 为const 不用修改  \n cout << * it2 << endl;  \n  \n}  \n/** \n  end()返回 [最后一个元素的下一位置的指针] \n  (list为空时end()= begin()) \n*/  \nvoid end_test(){  \nlist < int > ::iterator it = g_list1.end(); // 注意是：最后一个元素的下一位置的指针  \n-- it;  \ncout << * it << endl;  \n}  \n/** \n  rbegin()返回链表最后一元素的后向指针 \n*/  \nvoid rbegin_test(){  \n list < int > ::reverse_iterator it = g_list1.rbegin();  \n for (; it != g_list1.rend(); ++ it){  \n cout << * it << ' ' ;  \n}  \n cout << endl;  \n}  \n/** \n  rend()返回链表第一元素的下一位置的后向指针 \n*/  \nvoid rend_test(){  \nlist < int > ::reverse_iterator it = g_list1.rend();  \n-- it;  \ncout << * it << endl;  \n}  \n/** \n  push_back()增加一元素到链表尾 \n*/  \nvoid push_back_test(){  \nShowList(g_list1);  \ng_list1.push_back( 4 );  \nShowList(g_list1);  \n}  \n/** \n  push_front()增加一元素到链表头 \n*/  \nvoid push_front_test(){  \nShowList(g_list1);  \ng_list1.push_front( 4 );  \nShowList(g_list1);  \n}  \n/** \n  pop_back()删除链表尾的一个元素 \n*/  \nvoid pop_back_test(){  \nShowList(g_list1);  \ncout << endl;  \n  \ng_list1.pop_back();  \nShowList(g_list1);  \n  \n}  \n/** \n pop_front()删除链表头的一元素 \n*/  \nvoid pop_front_test(){  \nShowList(g_list1);  \ncout << endl;  \n  \ng_list1.pop_front();  \nShowList(g_list1);  \n}  \n/** \n clear()删除所有元素 \n*/  \nvoid clear_test(){  \nShowList(g_list1);  \ng_list1.clear();  \nShowList(g_list1);  \n}  \n/** \n  erase()删除一个元素或一个区域的元素(两个重载函数) \n*/  \nvoid erase_test()  \n{  \nShowList(g_list1);  \ng_list1.erase(g_list1.begin());  \nShowList(g_list1);  \n  \ncout << endl;  \n  \nShowList(g_list2);  \ng_list2.erase( ++ g_list2.begin(), g_list2.end());  \nShowList(g_list2);  \n}  \n/** \n  remove()删除链表中匹配值的元素(匹配元素全部删除) \n*/  \nvoid remove_test(){  \nShowList(g_list1);  \ng_list1.push_back( 1 );  \nShowList(g_list1);  \n  \ng_list1.remove( 1 );  \nShowList(g_list1);  \n}  \n  \nbool myFun( const int & value) { return (value < 2 ); }  \n/** \n remove_if()删除条件满足的元素(会遍历一次链表) \n*/  \nvoid remove_if_test(){  \nShowList(g_list1);  \ng_list1.remove_if(myFun);  \nShowList(g_list1);  \n}  \n/** \n  empty()判断是否链表为空 \n*/  \nvoid empty_test()  \n{  \nlist < int > listTemp;  \nif (listTemp.empty())  \ncout << \" listTemp为空 \" << endl;  \nelse  \ncout << \" listTemp不为空 \" << endl;  \n}  \n/** \n max_size()返回链表最大可能长度:1073741823 \n*/  \nvoid max_size_test(){  \nlist < int > ::size_type nMax = g_list1.max_size();  \ncout << nMax << endl;  \n}  \n/** \nresize()重新定义链表长度(两重载函数)： \n*/  \nvoid resize_test(){  \nShowList(g_list1);  \ng_list1.resize( 9 ); // 用默认值填补  \nShowList(g_list1);  \ncout << endl;  \n  \nShowList(g_list2);  \ng_list2.resize( 9 , 51 ); // 用指定值填补  \nShowList(g_list2);  \n}  \n/** \nreverse()反转链表 \n*/  \nvoid reverse_test(){  \nShowList(g_list1);  \ng_list1.reverse();  \nShowList(g_list1);  \n}  \n/** \n  sort()对链表排序，默认升序(两个重载函数) \n*/  \nvoid sort_test(){  \nlist < int > listTemp;  \nlistTemp.push_back( 9 );  \nlistTemp.push_back( 3 );  \nlistTemp.push_back( 5 );  \nlistTemp.push_back( 1 );  \nlistTemp.push_back( 4 );  \nlistTemp.push_back( 3 );  \n  \nShowList(listTemp);  \nlistTemp.sort();  \nShowList(listTemp);  \n  \nlistTemp.sort(greater < int > ());  \nShowList(listTemp);  \n}  \n/** \n  merge()合并两个升序序链表并使之成为另一个升序. \n*/  \nvoid merge_test1(){  \nlist < int > listTemp2;  \nlistTemp2.push_back( 3 );  \nlistTemp2.push_back( 4 );  \n  \nlist < int > listTemp3;  \nlistTemp3.push_back( 9 );  \nlistTemp3.push_back( 10 );  \n  \nShowList(listTemp2);  \ncout << endl;  \nShowList(listTemp3);  \ncout << endl;  \n  \nlistTemp2.merge(listTemp3);  \nShowList(listTemp2);  \n}  \n  \nbool myCmp ( int first, int second)  \n{ return ( int (first) > int (second) ); }  \n/** \n  merge()合并两个降序链表并使之成为另一个降序. \n*/  \nvoid merge_test2(){  \nlist < int > listTemp2;  \nlistTemp2.push_back( 4 );  \nlistTemp2.push_back( 3 );  \n  \nlist < int > listTemp3;  \nlistTemp3.push_back( 10 );  \nlistTemp3.push_back( 9 );  \n  \nShowList(listTemp2);  \ncout << endl;  \nShowList(listTemp3);  \ncout << endl;  \n  \n// listTemp2.merge(listTemp3, greater<int>()); // 第二个参数可以是自己定义的函数如下  \nlistTemp2.merge(listTemp3, myCmp);  \nShowList(listTemp2);  \n}  \n/** \n   splice()对两个链表进行结合(三个重载函数),结合后第二个链表清空 \n   void splice ( iterator position, list<T,Allocator>& x ); \n   void splice ( iterator position,\n   list<T,Allocator>& x, iterator i ); \n   void splice ( iterator position, \n   list<T,Allocator>& x, iterator first, iterator last ); \n*/  \nvoid splice_test(){  \nlist < int > listTemp1(g_list1);  \nlist < int > listTemp2(g_list2);  \n  \nShowList(listTemp1);  \nShowList(listTemp2);  \ncout << endl;  \n  \n//  \nlistTemp1.splice( ++ listTemp1.begin(), listTemp2);  \nShowList(listTemp1);  \nShowList(listTemp2);  \n  \n//  \nlistTemp1.assign(g_list1.begin(), g_list1.end());  \nlistTemp2.assign(g_list2.begin(), g_list2.end());  \nlistTemp1.splice( ++ listTemp1.begin(), listTemp2, ++ listTemp2.begin());  \nShowList(listTemp1);  \nShowList(listTemp2);  \n  \n//  \nlistTemp1.assign(g_list1.begin(), g_list1.end());  \nlistTemp2.assign(g_list2.begin(), g_list2.end());  \nlistTemp1.splice( ++ listTemp1.begin(), listTemp2, ++ listTemp2.begin(), listTemp2.end());  \nShowList(listTemp1);  \nShowList(listTemp2);  \n  \n}  \n/** \n   insert()在指定位置插入一个或多个元素(三个重载函数) \n   iterator insert ( iterator position, const T& x ); \n   void insert ( iterator position, size_type n, const T& x ); \n   template <class InputIterator> \n   void insert ( iterator position, InputIterator first, InputIterator last ); \n*/  \nvoid insert_test(){  \nlist < int > listTemp1(g_list1);  \nShowList(listTemp1);  \nlistTemp1.insert(listTemp1.begin(), 51 );  \nShowList(listTemp1);  \ncout << endl;  \n  \nlist < int > listTemp2(g_list1);  \nShowList(listTemp2);  \nlistTemp2.insert(listTemp2.begin(), 9 , 51 );  \nShowList(listTemp2);  \ncout << endl;  \n  \nlist < int > listTemp3(g_list1);  \nShowList(listTemp3);  \nlistTemp3.insert(listTemp3.begin(),g_list2.begin(), g_list2.end());  \nShowList(listTemp3);  \n  \n}  \n/** \n swap()交换两个链表(两个重载) \n*/  \nvoid swap_test(){  \nShowList(g_list1);  \nShowList(g_list2);  \ncout << endl;  \n  \ng_list1.swap(g_list2);  \nShowList(g_list1);  \nShowList(g_list2);  \n}  \n  \nbool same_integral_part ( double first, double second)  \n{ return ( int (first) == int (second) ); }  \n/** \n unique()删除相邻重复元素 \n*/  \nvoid unique_test(){  \nlist < int > listTemp;  \nlistTemp.push_back( 1 );  \nlistTemp.push_back( 1 );  \nlistTemp.push_back( 4 );  \nlistTemp.push_back( 3 );  \nlistTemp.push_back( 5 );  \nlistTemp.push_back( 1 );  \nlist < int > listTemp2(listTemp);  \n  \nShowList(listTemp);  \nlistTemp.unique(); // 不会删除不相邻的相同元素  \nShowList(listTemp);  \ncout << endl;  \n  \nlistTemp.sort();  \nShowList(listTemp);  \nlistTemp.unique();  \nShowList(listTemp);  \ncout << endl;  \n  \nlistTemp2.sort();  \nShowList(listTemp2);  \nlistTemp2.unique(same_integral_part);  \nShowList(listTemp2);  \n  \n}  \n/** \n  主函数，列表测试 \n*/  \nint main(){  \nInitList();  \n ShowList(g_list1);  \n ShowList(g_list2);  \n  \n constructor_test0();  \n constructor_test1();  \n constructor_test2();  \n constructor_test3();  \n constructor_test4();  \n assign_test();  \n operator_equality_test();  \n front_test7();  \n back_test();  \n begin_test();  \n end_test();  \n rbegin_test();  \n rend_test();  \n push_back_test();  \n push_front_test();  \n pop_back_test();  \n pop_front_test();  \n clear_test();  \n erase_test();  \n remove_test();  \n remove_if_test();  \n empty_test();  \n max_size_test();  \n resize_test();  \n reverse_test();  \n sort_test();  \n merge_test1();  \n merge_test2();  \n splice_test();  \n insert_test();  \n swap_test();  \n unique_test();  \nreturn 0 ;  \n}  \n```","slug":"C++/STL容器总结之list","published":1,"updated":"2016-06-17T13:47:13.001Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qif001rkgaec8z55chn","content":"<ul>\n<li><p>在使用std::list&lt;&gt;链表时，难免会对数据进行添加删除操作。而遍历链表则有两种方式：通过索引访问，象数组一样处理；通过std::list&lt;&gt;::iterator链表遍历器进行访问<br>STL 中的list 就是一 双向链表，可高效地进行插入删除元素。<br>list不支持随机访问。所以没有 at(pos)和operator[]。</p>\n<p>list 对象list1, list2 分别有元素list1(1,2,3),list2(4,5,6) 。list&lt; int&gt;::iterator it;</p>\n</li>\n</ul>\n<ul>\n<li><h3 id=\"构造，析构\"><a href=\"#构造，析构\" class=\"headerlink\" title=\"构造，析构\"></a>构造，析构</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt; c <span class=\"comment\">//创建一个空的list  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt; c1(c2) <span class=\"comment\">//复制另一个同类型元素的list  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt;c(n) <span class=\"comment\">//创建n个元素的list，每个元素值由默认构造函数确定  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt;c(n,elem) <span class=\"comment\">//创建n个元素的list，每个元素的值为elem  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt;c(begin,end) <span class=\"comment\">//由迭代器创建list,迭代区间为[begin,end)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.~<span class=\"built_in\">list</span>();             <span class=\"comment\">// 销毁所有元素,释放内存</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li><h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.size() <span class=\"comment\">//返回容器的元素个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.swap(c2) <span class=\"comment\">//将c2和c的元素互换  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.empty() <span class=\"comment\">//判断容器是否为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size() <span class=\"comment\">//返回容器中最大数据的数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.resize(num) <span class=\"comment\">//重新指定链表的长度  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.reverse() <span class=\"comment\">//反转链表  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.sort() <span class=\"comment\">//对列表进行排序，默认升序，可以自定义回调函数  </span></span><br><span class=\"line\"><span class=\"comment\">//示例  </span></span><br><span class=\"line\"><span class=\"built_in\">list</span> 对象L1(<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>)  </span><br><span class=\"line\">L1.sort( );                 <span class=\"comment\">// L1(1,3,4,4,5)  </span></span><br><span class=\"line\">L1.sort( greater &lt;<span class=\"keyword\">int</span> &gt;() ); <span class=\"comment\">// L1(5,4,4,3,1)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.merge() <span class=\"comment\">//合并两个有序列表使之有序  </span></span><br><span class=\"line\"><span class=\"comment\">//示例  </span></span><br><span class=\"line\"><span class=\"comment\">// 升序  </span></span><br><span class=\"line\">list1.merge(list2); <span class=\"comment\">// list1(1,2,3,4,5,6) list2 现为空  </span></span><br><span class=\"line\"><span class=\"comment\">// 降序  </span></span><br><span class=\"line\">L1( <span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>), L2(<span class=\"number\">6</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>)  </span><br><span class=\"line\">L1.merge(L2, greater &lt;<span class=\"keyword\">int</span> &gt;() );</span><br><span class=\"line\"><span class=\"comment\">// list1(6,5,4,3,2,1) list2 现为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.splice() </span><br><span class=\"line\"><span class=\"comment\">//对两个链表进行结合( 三个重载函数) 结合后第二个链表清空  </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//示例  </span></span><br><span class=\"line\">list1.splice( ++list1.begin(),list2);  </span><br><span class=\"line\"><span class=\"comment\">// list1(1,4,5,6,2,3) list2 为空  </span></span><br><span class=\"line\">  list1.splice( ++list1.begin(),list2,list2.begin());  </span><br><span class=\"line\"><span class=\"comment\">// list1( 1,4,2,3); list2(5,6)  </span></span><br><span class=\"line\">list1.splice( ++list1.begin(),list2,++list2.begin(),list2.end());  </span><br><span class=\"line\"><span class=\"comment\">//list1( 1, 5,6, 2,3); list2(4)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.assign(begin,end) <span class=\"comment\">//将[begin,end)区间中的数据赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(n,Elem) <span class=\"comment\">//将n个Elem的拷贝赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.swap(c2) <span class=\"comment\">//将c2和c的元素互换</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"数据访问\"><a href=\"#数据访问\" class=\"headerlink\" title=\"数据访问\"></a>数据访问</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.front() <span class=\"comment\">//返回第一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.back() <span class=\"comment\">//返回最后一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.begin() <span class=\"comment\">//返回指向第一个元素的迭代器(指针)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.end() <span class=\"comment\">//返回指向最后一个数据的下一个位置的迭代器(指针)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rbegin() </span><br><span class=\"line\"><span class=\"comment\">//返回逆向队列的第一个数据,也就是返回容器中倒数第一个元素的迭代器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rend() </span><br><span class=\"line\"><span class=\"comment\">//返回指向逆向队列的最后一个数据的下一个位置的迭代器，  </span></span><br><span class=\"line\"><span class=\"comment\">//也就是返回容器中倒数最后一个元素之后的迭代器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.push_back(Elem) <span class=\"comment\">//list元素尾部增加一个元素x  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.push_front(Elem) <span class=\"comment\">//list元素首元素钱添加一个元素X  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,Elem) <span class=\"comment\">//在pos位置插入一个Elem拷贝，返回新数据的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,n,Elem) <span class=\"comment\">//在pos位置插入n个Elem数据，无返回值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,begin,end)</span><br><span class=\"line\"><span class=\"comment\">//在pos位置插入在[begin,end)区间的数据，无返回值</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.pop_back() <span class=\"comment\">//删除容器尾元素，当且仅当容器不为空    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.pop_front() <span class=\"comment\">//删除容器首元素，当且仅当容器不为空    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.remove(Elem) <span class=\"comment\">//删除容器中所有元素值等于x的元素   </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">/**  </span><br><span class=\"line\"> remove_if()删除条件满足的元素(会遍历一次链表)  </span><br><span class=\"line\">*/</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove_if_test</span><span class=\"params\">()</span></span>&#123;    </span><br><span class=\"line\">ShowList(g_list1);    </span><br><span class=\"line\">g_list1.remove_if(myFun);    </span><br><span class=\"line\">ShowList(g_list1);    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\">c.clear() <span class=\"comment\">//删除容器中的所有元素    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.erase(pos) <span class=\"comment\">//删除pos位置的数据，返回下一个数据的位置    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.erase(begin,end) </span><br><span class=\"line\"><span class=\"comment\">//删除[begin,end)区间的数据，返回下一个数据的位置    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.unique() <span class=\"comment\">//删除相邻重复元素    </span></span><br><span class=\"line\"><span class=\"comment\">//示例    </span></span><br><span class=\"line\">L1( <span class=\"number\">1</span>, <span class=\"number\">1</span> ,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">1</span>)    </span><br><span class=\"line\">L1.unique( );         <span class=\"comment\">// L1(1,4,3,5,1)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;list&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; g_list1;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; g_list2;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  初始化全局列表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitList</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"comment\">// push_back()增加一元素到链表尾  </span></span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">2</span> );  </span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\"><span class=\"comment\">// push_front()增加一元素到链表头  </span></span><br><span class=\"line\">g_list2.push_front( <span class=\"number\">6</span> );  </span><br><span class=\"line\">g_list2.push_front( <span class=\"number\">5</span> );  </span><br><span class=\"line\">g_list2.push_front( <span class=\"number\">4</span> );  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  输出一个链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowList</span><span class=\"params\">(<span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt;&amp; listTemp)</span></span>&#123;  </span><br><span class=\"line\"><span class=\"comment\">// size()返回链表中元素个数  </span></span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; listTemp.size() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::iterator it = listTemp.begin();</span><br><span class=\"line\">it != listTemp.end(); ++ it)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; * it &lt;&lt; <span class=\"string\">' '</span> ;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">   <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  构造函数，空链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test0</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp;  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; listTemp.size() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> 构造函数，建一个含三个默认值是0的元素的链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test1</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp( <span class=\"number\">3</span> );  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  构造函数，建一个含五个元素的链表，值都是1 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test2</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp( <span class=\"number\">5</span> , <span class=\"number\">1</span> );  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  构造函数，建一个g_list1的copy链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test3</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp(g_list1);  </span><br><span class=\"line\"> ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  构造函数，listTemp含g_list1一个区域的元素[_First, _Last) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test4</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp(g_list1.begin(), g_list1.end());  </span><br><span class=\"line\"> ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> assign()分配值，有两个重载 </span><br><span class=\"line\"> template &lt;class InputIterator&gt; </span><br><span class=\"line\"> void assign ( InputIterator first, InputIterator last ); </span><br><span class=\"line\"> void assign ( size_type n, const T&amp; u ); </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">assign_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp( <span class=\"number\">5</span> , <span class=\"number\">1</span> );  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">  listTemp.assign( <span class=\"number\">4</span> , <span class=\"number\">3</span> );  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">  </span><br><span class=\"line\">  listTemp.assign( ++ g_list1.begin(), g_list1.end());  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> operator= </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">operator_equality_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> g_list1 = g_list2;  </span><br><span class=\"line\"> ShowList(g_list1);  </span><br><span class=\"line\"> ShowList(g_list2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  front()返回第一个元素的引用 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">front_test7</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; g_list1.front() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  back()返回最后一元素的引用 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">back_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; g_list1.back() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  begin()返回第一个元素的指针(iterator) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">begin_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::iterator it1 = g_list1.begin();  </span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; *++ it1 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::const_iterator it2 = g_list1.begin();  </span><br><span class=\"line\"> it2 ++ ;  </span><br><span class=\"line\"> <span class=\"comment\">// (*it2)++; // *it2 为const 不用修改  </span></span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; * it2 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  end()返回 [最后一个元素的下一位置的指针] </span><br><span class=\"line\">  (list为空时end()= begin()) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">end_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::iterator it = g_list1.end(); <span class=\"comment\">// 注意是：最后一个元素的下一位置的指针  </span></span><br><span class=\"line\">-- it;  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; * it &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  rbegin()返回链表最后一元素的后向指针 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">rbegin_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::reverse_iterator it = g_list1.rbegin();  </span><br><span class=\"line\"> <span class=\"keyword\">for</span> (; it != g_list1.rend(); ++ it)&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; * it &lt;&lt; <span class=\"string\">' '</span> ;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  rend()返回链表第一元素的下一位置的后向指针 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">rend_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::reverse_iterator it = g_list1.rend();  </span><br><span class=\"line\">-- it;  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; * it &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  push_back()增加一元素到链表尾 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push_back_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  push_front()增加一元素到链表头 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push_front_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.push_front( <span class=\"number\">4</span> );  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  pop_back()删除链表尾的一个元素 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop_back_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">g_list1.pop_back();  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> pop_front()删除链表头的一元素 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop_front_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">g_list1.pop_front();  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> clear()删除所有元素 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.clear();  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  erase()删除一个元素或一个区域的元素(两个重载函数) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">erase_test</span><span class=\"params\">()</span>  </span><br><span class=\"line\"></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.erase(g_list1.begin());  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">g_list2.erase( ++ g_list2.begin(), g_list2.end());  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  remove()删除链表中匹配值的元素(匹配元素全部删除) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">  </span><br><span class=\"line\">g_list1.remove( <span class=\"number\">1</span> );  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">myFun</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> &amp; value)</span> </span>&#123; <span class=\"keyword\">return</span> (value &lt; <span class=\"number\">2</span> ); &#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> remove_if()删除条件满足的元素(会遍历一次链表) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove_if_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.remove_if(myFun);  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  empty()判断是否链表为空 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">empty_test</span><span class=\"params\">()</span>  </span><br><span class=\"line\"></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp;  </span><br><span class=\"line\"><span class=\"keyword\">if</span> (listTemp.empty())  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" listTemp为空 \"</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\"><span class=\"keyword\">else</span>  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" listTemp不为空 \"</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> max_size()返回链表最大可能长度:1073741823 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">max_size_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::size_type nMax = g_list1.max_size();  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; nMax &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">resize()重新定义链表长度(两重载函数)： </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">resize_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.resize( <span class=\"number\">9</span> ); <span class=\"comment\">// 用默认值填补  </span></span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">g_list2.resize( <span class=\"number\">9</span> , <span class=\"number\">51</span> ); <span class=\"comment\">// 用指定值填补  </span></span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">reverse()反转链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">reverse_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.reverse();  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  sort()对链表排序，默认升序(两个重载函数) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp;  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">9</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">5</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">listTemp.sort();  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">  </span><br><span class=\"line\">listTemp.sort(greater &lt; <span class=\"keyword\">int</span> &gt; ());  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  merge()合并两个升序序链表并使之成为另一个升序. </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge_test1</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2;  </span><br><span class=\"line\">listTemp2.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">listTemp2.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp3;  </span><br><span class=\"line\">listTemp3.push_back( <span class=\"number\">9</span> );  </span><br><span class=\"line\">listTemp3.push_back( <span class=\"number\">10</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">ShowList(listTemp3);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">listTemp2.merge(listTemp3);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">myCmp</span> <span class=\"params\">( <span class=\"keyword\">int</span> first, <span class=\"keyword\">int</span> second)</span>  </span><br><span class=\"line\"></span>&#123; <span class=\"keyword\">return</span> ( <span class=\"keyword\">int</span> (first) &gt; <span class=\"keyword\">int</span> (second) ); &#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  merge()合并两个降序链表并使之成为另一个降序. </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge_test2</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2;  </span><br><span class=\"line\">listTemp2.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">listTemp2.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp3;  </span><br><span class=\"line\">listTemp3.push_back( <span class=\"number\">10</span> );  </span><br><span class=\"line\">listTemp3.push_back( <span class=\"number\">9</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">ShowList(listTemp3);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// listTemp2.merge(listTemp3, greater&lt;int&gt;()); // 第二个参数可以是自己定义的函数如下  </span></span><br><span class=\"line\">listTemp2.merge(listTemp3, myCmp);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">   splice()对两个链表进行结合(三个重载函数),结合后第二个链表清空 </span><br><span class=\"line\">   void splice ( iterator position, list&lt;T,Allocator&gt;&amp; x ); </span><br><span class=\"line\">   void splice ( iterator position,</span><br><span class=\"line\">   list&lt;T,Allocator&gt;&amp; x, iterator i ); </span><br><span class=\"line\">   void splice ( iterator position, </span><br><span class=\"line\">   list&lt;T,Allocator&gt;&amp; x, iterator first, iterator last ); </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">splice_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp1(g_list1);  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2(g_list2);  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//  </span></span><br><span class=\"line\">listTemp1.splice( ++ listTemp1.begin(), listTemp2);  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//  </span></span><br><span class=\"line\">listTemp1.assign(g_list1.begin(), g_list1.end());  </span><br><span class=\"line\">listTemp2.assign(g_list2.begin(), g_list2.end());  </span><br><span class=\"line\">listTemp1.splice( ++ listTemp1.begin(), listTemp2, ++ listTemp2.begin());  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//  </span></span><br><span class=\"line\">listTemp1.assign(g_list1.begin(), g_list1.end());  </span><br><span class=\"line\">listTemp2.assign(g_list2.begin(), g_list2.end());  </span><br><span class=\"line\">listTemp1.splice( ++ listTemp1.begin(), listTemp2, ++ listTemp2.begin(), listTemp2.end());  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">   insert()在指定位置插入一个或多个元素(三个重载函数) </span><br><span class=\"line\">   iterator insert ( iterator position, const T&amp; x ); </span><br><span class=\"line\">   void insert ( iterator position, size_type n, const T&amp; x ); </span><br><span class=\"line\">   template &lt;class InputIterator&gt; </span><br><span class=\"line\">   void insert ( iterator position, InputIterator first, InputIterator last ); </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp1(g_list1);  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">listTemp1.insert(listTemp1.begin(), <span class=\"number\">51</span> );  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2(g_list1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">listTemp2.insert(listTemp2.begin(), <span class=\"number\">9</span> , <span class=\"number\">51</span> );  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp3(g_list1);  </span><br><span class=\"line\">ShowList(listTemp3);  </span><br><span class=\"line\">listTemp3.insert(listTemp3.begin(),g_list2.begin(), g_list2.end());  </span><br><span class=\"line\">ShowList(listTemp3);  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> swap()交换两个链表(两个重载) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">g_list1.swap(g_list2);  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">same_integral_part</span> <span class=\"params\">( <span class=\"keyword\">double</span> first, <span class=\"keyword\">double</span> second)</span>  </span><br><span class=\"line\"></span>&#123; <span class=\"keyword\">return</span> ( <span class=\"keyword\">int</span> (first) == <span class=\"keyword\">int</span> (second) ); &#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> unique()删除相邻重复元素 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unique_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp;  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">5</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2(listTemp);  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">listTemp.unique(); <span class=\"comment\">// 不会删除不相邻的相同元素  </span></span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">listTemp.sort();  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">listTemp.unique();  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">listTemp2.sort();  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">listTemp2.unique(same_integral_part);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  主函数，列表测试 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">InitList();  </span><br><span class=\"line\"> ShowList(g_list1);  </span><br><span class=\"line\"> ShowList(g_list2);  </span><br><span class=\"line\">  </span><br><span class=\"line\"> constructor_test0();  </span><br><span class=\"line\"> constructor_test1();  </span><br><span class=\"line\"> constructor_test2();  </span><br><span class=\"line\"> constructor_test3();  </span><br><span class=\"line\"> constructor_test4();  </span><br><span class=\"line\"> assign_test();  </span><br><span class=\"line\"> operator_equality_test();  </span><br><span class=\"line\"> front_test7();  </span><br><span class=\"line\"> back_test();  </span><br><span class=\"line\"> begin_test();  </span><br><span class=\"line\"> end_test();  </span><br><span class=\"line\"> rbegin_test();  </span><br><span class=\"line\"> rend_test();  </span><br><span class=\"line\"> push_back_test();  </span><br><span class=\"line\"> push_front_test();  </span><br><span class=\"line\"> pop_back_test();  </span><br><span class=\"line\"> pop_front_test();  </span><br><span class=\"line\"> clear_test();  </span><br><span class=\"line\"> erase_test();  </span><br><span class=\"line\"> remove_test();  </span><br><span class=\"line\"> remove_if_test();  </span><br><span class=\"line\"> empty_test();  </span><br><span class=\"line\"> max_size_test();  </span><br><span class=\"line\"> resize_test();  </span><br><span class=\"line\"> reverse_test();  </span><br><span class=\"line\"> sort_test();  </span><br><span class=\"line\"> merge_test1();  </span><br><span class=\"line\"> merge_test2();  </span><br><span class=\"line\"> splice_test();  </span><br><span class=\"line\"> insert_test();  </span><br><span class=\"line\"> swap_test();  </span><br><span class=\"line\"> unique_test();  </span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span> ;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li><p>在使用std::list&lt;&gt;链表时，难免会对数据进行添加删除操作。而遍历链表则有两种方式：通过索引访问，象数组一样处理；通过std::list&lt;&gt;::iterator链表遍历器进行访问<br>STL 中的list 就是一 双向链表，可高效地进行插入删除元素。<br>list不支持随机访问。所以没有 at(pos)和operator[]。</p>\n<p>list 对象list1, list2 分别有元素list1(1,2,3),list2(4,5,6) 。list&lt; int&gt;::iterator it;</p>\n</li>\n</ul>\n<ul>\n<li><h3 id=\"构造，析构\"><a href=\"#构造，析构\" class=\"headerlink\" title=\"构造，析构\"></a>构造，析构</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt; c <span class=\"comment\">//创建一个空的list  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt; c1(c2) <span class=\"comment\">//复制另一个同类型元素的list  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt;c(n) <span class=\"comment\">//创建n个元素的list，每个元素值由默认构造函数确定  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt;c(n,elem) <span class=\"comment\">//创建n个元素的list，每个元素的值为elem  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span>&lt;Elem&gt;c(begin,end) <span class=\"comment\">//由迭代器创建list,迭代区间为[begin,end)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.~<span class=\"built_in\">list</span>();             <span class=\"comment\">// 销毁所有元素,释放内存</span></span><br></pre></td></tr></table></figure>","more":"<ul>\n<li><h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.size() <span class=\"comment\">//返回容器的元素个数  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.swap(c2) <span class=\"comment\">//将c2和c的元素互换  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.empty() <span class=\"comment\">//判断容器是否为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.max_size() <span class=\"comment\">//返回容器中最大数据的数量  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.resize(num) <span class=\"comment\">//重新指定链表的长度  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.reverse() <span class=\"comment\">//反转链表  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.sort() <span class=\"comment\">//对列表进行排序，默认升序，可以自定义回调函数  </span></span><br><span class=\"line\"><span class=\"comment\">//示例  </span></span><br><span class=\"line\"><span class=\"built_in\">list</span> 对象L1(<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>)  </span><br><span class=\"line\">L1.sort( );                 <span class=\"comment\">// L1(1,3,4,4,5)  </span></span><br><span class=\"line\">L1.sort( greater &lt;<span class=\"keyword\">int</span> &gt;() ); <span class=\"comment\">// L1(5,4,4,3,1)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.merge() <span class=\"comment\">//合并两个有序列表使之有序  </span></span><br><span class=\"line\"><span class=\"comment\">//示例  </span></span><br><span class=\"line\"><span class=\"comment\">// 升序  </span></span><br><span class=\"line\">list1.merge(list2); <span class=\"comment\">// list1(1,2,3,4,5,6) list2 现为空  </span></span><br><span class=\"line\"><span class=\"comment\">// 降序  </span></span><br><span class=\"line\">L1( <span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>), L2(<span class=\"number\">6</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>)  </span><br><span class=\"line\">L1.merge(L2, greater &lt;<span class=\"keyword\">int</span> &gt;() );</span><br><span class=\"line\"><span class=\"comment\">// list1(6,5,4,3,2,1) list2 现为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.splice() </span><br><span class=\"line\"><span class=\"comment\">//对两个链表进行结合( 三个重载函数) 结合后第二个链表清空  </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//示例  </span></span><br><span class=\"line\">list1.splice( ++list1.begin(),list2);  </span><br><span class=\"line\"><span class=\"comment\">// list1(1,4,5,6,2,3) list2 为空  </span></span><br><span class=\"line\">  list1.splice( ++list1.begin(),list2,list2.begin());  </span><br><span class=\"line\"><span class=\"comment\">// list1( 1,4,2,3); list2(5,6)  </span></span><br><span class=\"line\">list1.splice( ++list1.begin(),list2,++list2.begin(),list2.end());  </span><br><span class=\"line\"><span class=\"comment\">//list1( 1, 5,6, 2,3); list2(4)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.assign(begin,end) <span class=\"comment\">//将[begin,end)区间中的数据赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.assign(n,Elem) <span class=\"comment\">//将n个Elem的拷贝赋值给c  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.swap(c2) <span class=\"comment\">//将c2和c的元素互换</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"数据访问\"><a href=\"#数据访问\" class=\"headerlink\" title=\"数据访问\"></a>数据访问</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.front() <span class=\"comment\">//返回第一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.back() <span class=\"comment\">//返回最后一个数据  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.begin() <span class=\"comment\">//返回指向第一个元素的迭代器(指针)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.end() <span class=\"comment\">//返回指向最后一个数据的下一个位置的迭代器(指针)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rbegin() </span><br><span class=\"line\"><span class=\"comment\">//返回逆向队列的第一个数据,也就是返回容器中倒数第一个元素的迭代器  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.rend() </span><br><span class=\"line\"><span class=\"comment\">//返回指向逆向队列的最后一个数据的下一个位置的迭代器，  </span></span><br><span class=\"line\"><span class=\"comment\">//也就是返回容器中倒数最后一个元素之后的迭代器</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.push_back(Elem) <span class=\"comment\">//list元素尾部增加一个元素x  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.push_front(Elem) <span class=\"comment\">//list元素首元素钱添加一个元素X  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,Elem) <span class=\"comment\">//在pos位置插入一个Elem拷贝，返回新数据的位置  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,n,Elem) <span class=\"comment\">//在pos位置插入n个Elem数据，无返回值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">c.insert(pos,begin,end)</span><br><span class=\"line\"><span class=\"comment\">//在pos位置插入在[begin,end)区间的数据，无返回值</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.pop_back() <span class=\"comment\">//删除容器尾元素，当且仅当容器不为空    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.pop_front() <span class=\"comment\">//删除容器首元素，当且仅当容器不为空    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.remove(Elem) <span class=\"comment\">//删除容器中所有元素值等于x的元素   </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">/**  </span><br><span class=\"line\"> remove_if()删除条件满足的元素(会遍历一次链表)  </span><br><span class=\"line\">*/</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove_if_test</span><span class=\"params\">()</span></span>&#123;    </span><br><span class=\"line\">ShowList(g_list1);    </span><br><span class=\"line\">g_list1.remove_if(myFun);    </span><br><span class=\"line\">ShowList(g_list1);    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\">c.clear() <span class=\"comment\">//删除容器中的所有元素    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.erase(pos) <span class=\"comment\">//删除pos位置的数据，返回下一个数据的位置    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.erase(begin,end) </span><br><span class=\"line\"><span class=\"comment\">//删除[begin,end)区间的数据，返回下一个数据的位置    </span></span><br><span class=\"line\">    </span><br><span class=\"line\">c.unique() <span class=\"comment\">//删除相邻重复元素    </span></span><br><span class=\"line\"><span class=\"comment\">//示例    </span></span><br><span class=\"line\">L1( <span class=\"number\">1</span>, <span class=\"number\">1</span> ,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">1</span>)    </span><br><span class=\"line\">L1.unique( );         <span class=\"comment\">// L1(1,4,3,5,1)</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;list&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; g_list1;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; g_list2;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  初始化全局列表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitList</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"comment\">// push_back()增加一元素到链表尾  </span></span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">2</span> );  </span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\"><span class=\"comment\">// push_front()增加一元素到链表头  </span></span><br><span class=\"line\">g_list2.push_front( <span class=\"number\">6</span> );  </span><br><span class=\"line\">g_list2.push_front( <span class=\"number\">5</span> );  </span><br><span class=\"line\">g_list2.push_front( <span class=\"number\">4</span> );  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  输出一个链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowList</span><span class=\"params\">(<span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt;&amp; listTemp)</span></span>&#123;  </span><br><span class=\"line\"><span class=\"comment\">// size()返回链表中元素个数  </span></span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; listTemp.size() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::iterator it = listTemp.begin();</span><br><span class=\"line\">it != listTemp.end(); ++ it)&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; * it &lt;&lt; <span class=\"string\">' '</span> ;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">   <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  构造函数，空链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test0</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp;  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; listTemp.size() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> 构造函数，建一个含三个默认值是0的元素的链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test1</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp( <span class=\"number\">3</span> );  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  构造函数，建一个含五个元素的链表，值都是1 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test2</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp( <span class=\"number\">5</span> , <span class=\"number\">1</span> );  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  构造函数，建一个g_list1的copy链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test3</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp(g_list1);  </span><br><span class=\"line\"> ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  构造函数，listTemp含g_list1一个区域的元素[_First, _Last) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">constructor_test4</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp(g_list1.begin(), g_list1.end());  </span><br><span class=\"line\"> ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> assign()分配值，有两个重载 </span><br><span class=\"line\"> template &lt;class InputIterator&gt; </span><br><span class=\"line\"> void assign ( InputIterator first, InputIterator last ); </span><br><span class=\"line\"> void assign ( size_type n, const T&amp; u ); </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">assign_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp( <span class=\"number\">5</span> , <span class=\"number\">1</span> );  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">  listTemp.assign( <span class=\"number\">4</span> , <span class=\"number\">3</span> );  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">  </span><br><span class=\"line\">  listTemp.assign( ++ g_list1.begin(), g_list1.end());  </span><br><span class=\"line\">  ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> operator= </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">operator_equality_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> g_list1 = g_list2;  </span><br><span class=\"line\"> ShowList(g_list1);  </span><br><span class=\"line\"> ShowList(g_list2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  front()返回第一个元素的引用 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">front_test7</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"built_in\">cout</span> &lt;&lt; g_list1.front() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  back()返回最后一元素的引用 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">back_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; g_list1.back() &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  begin()返回第一个元素的指针(iterator) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">begin_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::iterator it1 = g_list1.begin();  </span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; *++ it1 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::const_iterator it2 = g_list1.begin();  </span><br><span class=\"line\"> it2 ++ ;  </span><br><span class=\"line\"> <span class=\"comment\">// (*it2)++; // *it2 为const 不用修改  </span></span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; * it2 &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  end()返回 [最后一个元素的下一位置的指针] </span><br><span class=\"line\">  (list为空时end()= begin()) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">end_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::iterator it = g_list1.end(); <span class=\"comment\">// 注意是：最后一个元素的下一位置的指针  </span></span><br><span class=\"line\">-- it;  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; * it &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  rbegin()返回链表最后一元素的后向指针 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">rbegin_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::reverse_iterator it = g_list1.rbegin();  </span><br><span class=\"line\"> <span class=\"keyword\">for</span> (; it != g_list1.rend(); ++ it)&#123;  </span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; * it &lt;&lt; <span class=\"string\">' '</span> ;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"> <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  rend()返回链表第一元素的下一位置的后向指针 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">rend_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::reverse_iterator it = g_list1.rend();  </span><br><span class=\"line\">-- it;  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; * it &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  push_back()增加一元素到链表尾 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push_back_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  push_front()增加一元素到链表头 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push_front_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.push_front( <span class=\"number\">4</span> );  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  pop_back()删除链表尾的一个元素 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop_back_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">g_list1.pop_back();  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> pop_front()删除链表头的一元素 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop_front_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">g_list1.pop_front();  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> clear()删除所有元素 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.clear();  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  erase()删除一个元素或一个区域的元素(两个重载函数) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">erase_test</span><span class=\"params\">()</span>  </span><br><span class=\"line\"></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.erase(g_list1.begin());  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">g_list2.erase( ++ g_list2.begin(), g_list2.end());  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  remove()删除链表中匹配值的元素(匹配元素全部删除) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">  </span><br><span class=\"line\">g_list1.remove( <span class=\"number\">1</span> );  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">myFun</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> &amp; value)</span> </span>&#123; <span class=\"keyword\">return</span> (value &lt; <span class=\"number\">2</span> ); &#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> remove_if()删除条件满足的元素(会遍历一次链表) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove_if_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.remove_if(myFun);  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  empty()判断是否链表为空 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">empty_test</span><span class=\"params\">()</span>  </span><br><span class=\"line\"></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp;  </span><br><span class=\"line\"><span class=\"keyword\">if</span> (listTemp.empty())  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" listTemp为空 \"</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\"><span class=\"keyword\">else</span>  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" listTemp不为空 \"</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> max_size()返回链表最大可能长度:1073741823 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">max_size_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; ::size_type nMax = g_list1.max_size();  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; nMax &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">resize()重新定义链表长度(两重载函数)： </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">resize_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.resize( <span class=\"number\">9</span> ); <span class=\"comment\">// 用默认值填补  </span></span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">g_list2.resize( <span class=\"number\">9</span> , <span class=\"number\">51</span> ); <span class=\"comment\">// 用指定值填补  </span></span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">reverse()反转链表 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">reverse_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">g_list1.reverse();  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  sort()对链表排序，默认升序(两个重载函数) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp;  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">9</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">5</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">listTemp.sort();  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">  </span><br><span class=\"line\">listTemp.sort(greater &lt; <span class=\"keyword\">int</span> &gt; ());  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  merge()合并两个升序序链表并使之成为另一个升序. </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge_test1</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2;  </span><br><span class=\"line\">listTemp2.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">listTemp2.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp3;  </span><br><span class=\"line\">listTemp3.push_back( <span class=\"number\">9</span> );  </span><br><span class=\"line\">listTemp3.push_back( <span class=\"number\">10</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">ShowList(listTemp3);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">listTemp2.merge(listTemp3);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">myCmp</span> <span class=\"params\">( <span class=\"keyword\">int</span> first, <span class=\"keyword\">int</span> second)</span>  </span><br><span class=\"line\"></span>&#123; <span class=\"keyword\">return</span> ( <span class=\"keyword\">int</span> (first) &gt; <span class=\"keyword\">int</span> (second) ); &#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  merge()合并两个降序链表并使之成为另一个降序. </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">merge_test2</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2;  </span><br><span class=\"line\">listTemp2.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">listTemp2.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp3;  </span><br><span class=\"line\">listTemp3.push_back( <span class=\"number\">10</span> );  </span><br><span class=\"line\">listTemp3.push_back( <span class=\"number\">9</span> );  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">ShowList(listTemp3);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// listTemp2.merge(listTemp3, greater&lt;int&gt;()); // 第二个参数可以是自己定义的函数如下  </span></span><br><span class=\"line\">listTemp2.merge(listTemp3, myCmp);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">   splice()对两个链表进行结合(三个重载函数),结合后第二个链表清空 </span><br><span class=\"line\">   void splice ( iterator position, list&lt;T,Allocator&gt;&amp; x ); </span><br><span class=\"line\">   void splice ( iterator position,</span><br><span class=\"line\">   list&lt;T,Allocator&gt;&amp; x, iterator i ); </span><br><span class=\"line\">   void splice ( iterator position, </span><br><span class=\"line\">   list&lt;T,Allocator&gt;&amp; x, iterator first, iterator last ); </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">splice_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp1(g_list1);  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2(g_list2);  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//  </span></span><br><span class=\"line\">listTemp1.splice( ++ listTemp1.begin(), listTemp2);  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//  </span></span><br><span class=\"line\">listTemp1.assign(g_list1.begin(), g_list1.end());  </span><br><span class=\"line\">listTemp2.assign(g_list2.begin(), g_list2.end());  </span><br><span class=\"line\">listTemp1.splice( ++ listTemp1.begin(), listTemp2, ++ listTemp2.begin());  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//  </span></span><br><span class=\"line\">listTemp1.assign(g_list1.begin(), g_list1.end());  </span><br><span class=\"line\">listTemp2.assign(g_list2.begin(), g_list2.end());  </span><br><span class=\"line\">listTemp1.splice( ++ listTemp1.begin(), listTemp2, ++ listTemp2.begin(), listTemp2.end());  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">   insert()在指定位置插入一个或多个元素(三个重载函数) </span><br><span class=\"line\">   iterator insert ( iterator position, const T&amp; x ); </span><br><span class=\"line\">   void insert ( iterator position, size_type n, const T&amp; x ); </span><br><span class=\"line\">   template &lt;class InputIterator&gt; </span><br><span class=\"line\">   void insert ( iterator position, InputIterator first, InputIterator last ); </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp1(g_list1);  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\">listTemp1.insert(listTemp1.begin(), <span class=\"number\">51</span> );  </span><br><span class=\"line\">ShowList(listTemp1);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2(g_list1);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">listTemp2.insert(listTemp2.begin(), <span class=\"number\">9</span> , <span class=\"number\">51</span> );  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp3(g_list1);  </span><br><span class=\"line\">ShowList(listTemp3);  </span><br><span class=\"line\">listTemp3.insert(listTemp3.begin(),g_list2.begin(), g_list2.end());  </span><br><span class=\"line\">ShowList(listTemp3);  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> swap()交换两个链表(两个重载) </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">g_list1.swap(g_list2);  </span><br><span class=\"line\">ShowList(g_list1);  </span><br><span class=\"line\">ShowList(g_list2);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">same_integral_part</span> <span class=\"params\">( <span class=\"keyword\">double</span> first, <span class=\"keyword\">double</span> second)</span>  </span><br><span class=\"line\"></span>&#123; <span class=\"keyword\">return</span> ( <span class=\"keyword\">int</span> (first) == <span class=\"keyword\">int</span> (second) ); &#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\"> unique()删除相邻重复元素 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unique_test</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp;  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">4</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">3</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">5</span> );  </span><br><span class=\"line\">listTemp.push_back( <span class=\"number\">1</span> );  </span><br><span class=\"line\"><span class=\"built_in\">list</span> &lt; <span class=\"keyword\">int</span> &gt; listTemp2(listTemp);  </span><br><span class=\"line\">  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">listTemp.unique(); <span class=\"comment\">// 不会删除不相邻的相同元素  </span></span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">listTemp.sort();  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\">listTemp.unique();  </span><br><span class=\"line\">ShowList(listTemp);  </span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">listTemp2.sort();  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">listTemp2.unique(same_integral_part);  </span><br><span class=\"line\">ShowList(listTemp2);  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  主函数，列表测试 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">InitList();  </span><br><span class=\"line\"> ShowList(g_list1);  </span><br><span class=\"line\"> ShowList(g_list2);  </span><br><span class=\"line\">  </span><br><span class=\"line\"> constructor_test0();  </span><br><span class=\"line\"> constructor_test1();  </span><br><span class=\"line\"> constructor_test2();  </span><br><span class=\"line\"> constructor_test3();  </span><br><span class=\"line\"> constructor_test4();  </span><br><span class=\"line\"> assign_test();  </span><br><span class=\"line\"> operator_equality_test();  </span><br><span class=\"line\"> front_test7();  </span><br><span class=\"line\"> back_test();  </span><br><span class=\"line\"> begin_test();  </span><br><span class=\"line\"> end_test();  </span><br><span class=\"line\"> rbegin_test();  </span><br><span class=\"line\"> rend_test();  </span><br><span class=\"line\"> push_back_test();  </span><br><span class=\"line\"> push_front_test();  </span><br><span class=\"line\"> pop_back_test();  </span><br><span class=\"line\"> pop_front_test();  </span><br><span class=\"line\"> clear_test();  </span><br><span class=\"line\"> erase_test();  </span><br><span class=\"line\"> remove_test();  </span><br><span class=\"line\"> remove_if_test();  </span><br><span class=\"line\"> empty_test();  </span><br><span class=\"line\"> max_size_test();  </span><br><span class=\"line\"> resize_test();  </span><br><span class=\"line\"> reverse_test();  </span><br><span class=\"line\"> sort_test();  </span><br><span class=\"line\"> merge_test1();  </span><br><span class=\"line\"> merge_test2();  </span><br><span class=\"line\"> splice_test();  </span><br><span class=\"line\"> insert_test();  </span><br><span class=\"line\"> swap_test();  </span><br><span class=\"line\"> unique_test();  </span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span> ;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Socket简易聊天工具","date":"2016-06-27T19:41:56.000Z","_content":"\n### 演示###\n\n- 代码运行如图，看起来还不错，哈哈哈\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/socket%E8%81%8A%E5%A4%A9%E5%B7%A5%E5%85%B7%E5%95%8A.png)</center>\n\n\n<!-- more -->\n\n\n### 服务端###\n\n```java\npackage qiu;\n\nimport java.awt.BorderLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.print.Printable;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.Calendar;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\n\n/**\n *  简单聊天软件的服务器\n * */\npublic class MyServer extends JFrame implements ActionListener{\n    \n\tJTextArea jTextArea =null;//用来显示纯文本的单行区域\n\tJTextField jTextField=null;//可以允许用来编辑单行文本\n\tJButton sendButton=null;\n\tJPanel jPanel=null;\n\tJScrollPane jScrollPane =null;\n\t//把信息发给客户端对象\n\tPrintWriter printWriter =null;\n/**\n  *  服务端的主函数\n  * */\npublic static void main(String[] args) {\n\t// TODO Auto-generated method stub\n       new MyServer();\n}\n/**\n *  服务端的构造函数,用来进行初始化\n * */\npublic MyServer(){\n\t//这里是对GUI的初始化\n\tjTextArea = new JTextArea();\n\tjTextField= new JTextField(20);\n\tsendButton= new JButton(\"发送\");\n\tsendButton.addActionListener(this);\n\tsendButton.setActionCommand(\"send\");\n\tjScrollPane= new JScrollPane(jTextArea);\n\tjPanel = new JPanel();\n\tjPanel.add(jTextField);//添加编辑框\n\tjPanel.add(sendButton);//添加按钮\n\t\t\n\t//将两个面板添加布局\n\tthis.add(jScrollPane,BorderLayout.CENTER);\n\tthis.add(jPanel,BorderLayout.SOUTH);\n\t\t\n\tthis.setSize(400,300);\n\tthis.setTitle(\"聊天服务器\");\n\tthis.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//设置退出按钮\n\tthis.setVisible(true);\n    this.setResizable(true);\t\n        \n    //下面是socket服务器的搭建\n    try {\n\t\t//服务器监听\n       \tServerSocket ss = new ServerSocket(9988);\n\t\t//等待客户端连接\n       \tSocket socket = ss.accept();\n       \t//获得客户端发送过来的数据的流\n       \tBufferedReader br = new BufferedReader\n      \t\t\t(new InputStreamReader(socket.getInputStream()));\n       \tprintWriter = new PrintWriter(socket.getOutputStream(),true);\n       \t//读取从客户端发送过来的信息\n       \twhile(true){\n      \t\tString info = br.readLine();\n       \t\tjTextArea.append(\"客户端 \"+getTime()+\"\\r\\n\"+info+\"\\r\\n\");\n       \t}\n\t\t\t\n\t} catch (IOException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t}   }\n/**\n * 用来获取当前的时间\n * @return 当前的时间\n */\npublic String getTime(){\n\t//可以对每个单独时间域进行修改\n\tCalendar c = Calendar.getInstance();\n\tint hour = c.get(Calendar.HOUR_OF_DAY);//获取小时\n\tint minute = c.get(Calendar.MINUTE);\n\tint second = c.get(Calendar.SECOND);\n\t\t\n\treturn hour+\":\"+minute+\":\"+second;\t\n   }\n\t\n/**\n * 当button被点击的时候调用\n */\n@Override\npublic void actionPerformed(ActionEvent e) {\n\t// TODO Auto-generated method stub\n\t//当按钮按下的时候调用\n\tif(e.getActionCommand().equals(\"send\")){\n\t\t//把服务器在jTextField写的内容发送给客户端\n\t\tString info= jTextField.getText();\n\t\tjTextArea.append(\"服务器 \"+getTime()+\"\\r\\n\"+info+\"\\r\\n\");\n\t\tprintWriter.println(info);\n\t\t//清楚发送框内容\n\t\tjTextField.setText(\"\");\n\t\t\t\n\t\t}\t\n\t}\n}\n```\n\n### 客户端###\n\n```java\npackage qiu;\n\nimport java.awt.BorderLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\nimport java.util.Calendar;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\n\n/**\n * 简单聊天软件的客户端\n * */\npublic class MyClient extends JFrame implements ActionListener{\n    \n\tJTextArea jTextArea=null;\n\tJTextField jTextField=null;\n\tJPanel jPanel=null;\n\tJScrollPane jScrollPane=null;\n\tJButton sendButton=null;\n\tPrintWriter printWriter=null;\n\t\n/**\n  *  客户端的主函数\n  * */\npublic static void main(String[] args) {\n\t// TODO Auto-generated method stub\n      new MyClient();\n}\n/**\n * 客户端构造函数用来初始化\n * */\npublic MyClient(){\n\t//GUI初始化\n\tjTextArea= new JTextArea();\n\tjTextField=new JTextField(20);\n\tsendButton= new JButton(\"发送\");\n\tsendButton.addActionListener(this);\n\tsendButton.setActionCommand(\"send\");\n\tjScrollPane=new JScrollPane(jTextArea);\n\tjPanel=new JPanel();\n\t\n\tjPanel.add(jTextField);\n\tjPanel.add(sendButton);\n\t\t\n\tthis.add(jScrollPane,BorderLayout.CENTER);\n\tthis.add(jPanel,BorderLayout.SOUTH);\n\t\t\n\tthis.setSize(400, 300);\n\tthis.setTitle(\"聊天客户端\");\n\tthis.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\tthis.setVisible(true);\n    this.setResizable(true);\t\n        \n    //socket通信代码\n     try {\n    \tSocket s= new Socket(\"127.0.0.1\",9988);\n\t\tBufferedReader br = new BufferedReader\n\t\t\t\t(new InputStreamReader(s.getInputStream()));\n\t\tprintWriter= new PrintWriter(s.getOutputStream(),true);\n        while(true){\n          \t//不停的读取服务器发过来的信息\n            String string=br.readLine();\n            jTextArea.append(\"服务器 \"+getTime()+\"\\r\\n\"+string+\"\\r\\n\");\n            }\n\t\t\t\n\t} catch (UnknownHostException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t} catch (IOException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t}\n}\n\n/**\n  * 用来获取当前的时间\n  * @return 当前的时间\n  */\npublic String getTime(){\n\t//可以对每个单独时间域进行修改\n\tCalendar c = Calendar.getInstance();\n\tint hour = c.get(Calendar.HOUR_OF_DAY);//获取小时\n\tint minute = c.get(Calendar.MINUTE);\n\tint second = c.get(Calendar.SECOND);\n\t\t\n\treturn hour+\":\"+minute+\":\"+second;\t\n}\n/**\n  * 当button被点击的时候调用\n  */\n@Override\npublic void actionPerformed(ActionEvent e) {\n\t// TODO Auto-generated method stub\n\tif(sendButton.getActionCommand().equals(\"send\")){\n\t\tString info= jTextField.getText();\n\t\t//将客户端发送的信息发送给服务端\n\t\tjTextArea.append(\"客户端 \"+getTime()+\"\\r\\n\"+info+\"\\r\\n\");\n\t\tprintWriter.println(info);\n\t\tjTextField.setText(\"\");\n\t\t}\n\t}\n}\n```\n","source":"_posts/JAVA/Socket简易聊天工具.md","raw":"---\ntitle: Socket简易聊天工具\ndate: 2016-06-27 19:41:56\ntags: [JAVA,Socket]\ncategories: JAVA\n---\n\n### 演示###\n\n- 代码运行如图，看起来还不错，哈哈哈\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/socket%E8%81%8A%E5%A4%A9%E5%B7%A5%E5%85%B7%E5%95%8A.png)</center>\n\n\n<!-- more -->\n\n\n### 服务端###\n\n```java\npackage qiu;\n\nimport java.awt.BorderLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.print.Printable;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.Calendar;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\n\n/**\n *  简单聊天软件的服务器\n * */\npublic class MyServer extends JFrame implements ActionListener{\n    \n\tJTextArea jTextArea =null;//用来显示纯文本的单行区域\n\tJTextField jTextField=null;//可以允许用来编辑单行文本\n\tJButton sendButton=null;\n\tJPanel jPanel=null;\n\tJScrollPane jScrollPane =null;\n\t//把信息发给客户端对象\n\tPrintWriter printWriter =null;\n/**\n  *  服务端的主函数\n  * */\npublic static void main(String[] args) {\n\t// TODO Auto-generated method stub\n       new MyServer();\n}\n/**\n *  服务端的构造函数,用来进行初始化\n * */\npublic MyServer(){\n\t//这里是对GUI的初始化\n\tjTextArea = new JTextArea();\n\tjTextField= new JTextField(20);\n\tsendButton= new JButton(\"发送\");\n\tsendButton.addActionListener(this);\n\tsendButton.setActionCommand(\"send\");\n\tjScrollPane= new JScrollPane(jTextArea);\n\tjPanel = new JPanel();\n\tjPanel.add(jTextField);//添加编辑框\n\tjPanel.add(sendButton);//添加按钮\n\t\t\n\t//将两个面板添加布局\n\tthis.add(jScrollPane,BorderLayout.CENTER);\n\tthis.add(jPanel,BorderLayout.SOUTH);\n\t\t\n\tthis.setSize(400,300);\n\tthis.setTitle(\"聊天服务器\");\n\tthis.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//设置退出按钮\n\tthis.setVisible(true);\n    this.setResizable(true);\t\n        \n    //下面是socket服务器的搭建\n    try {\n\t\t//服务器监听\n       \tServerSocket ss = new ServerSocket(9988);\n\t\t//等待客户端连接\n       \tSocket socket = ss.accept();\n       \t//获得客户端发送过来的数据的流\n       \tBufferedReader br = new BufferedReader\n      \t\t\t(new InputStreamReader(socket.getInputStream()));\n       \tprintWriter = new PrintWriter(socket.getOutputStream(),true);\n       \t//读取从客户端发送过来的信息\n       \twhile(true){\n      \t\tString info = br.readLine();\n       \t\tjTextArea.append(\"客户端 \"+getTime()+\"\\r\\n\"+info+\"\\r\\n\");\n       \t}\n\t\t\t\n\t} catch (IOException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t}   }\n/**\n * 用来获取当前的时间\n * @return 当前的时间\n */\npublic String getTime(){\n\t//可以对每个单独时间域进行修改\n\tCalendar c = Calendar.getInstance();\n\tint hour = c.get(Calendar.HOUR_OF_DAY);//获取小时\n\tint minute = c.get(Calendar.MINUTE);\n\tint second = c.get(Calendar.SECOND);\n\t\t\n\treturn hour+\":\"+minute+\":\"+second;\t\n   }\n\t\n/**\n * 当button被点击的时候调用\n */\n@Override\npublic void actionPerformed(ActionEvent e) {\n\t// TODO Auto-generated method stub\n\t//当按钮按下的时候调用\n\tif(e.getActionCommand().equals(\"send\")){\n\t\t//把服务器在jTextField写的内容发送给客户端\n\t\tString info= jTextField.getText();\n\t\tjTextArea.append(\"服务器 \"+getTime()+\"\\r\\n\"+info+\"\\r\\n\");\n\t\tprintWriter.println(info);\n\t\t//清楚发送框内容\n\t\tjTextField.setText(\"\");\n\t\t\t\n\t\t}\t\n\t}\n}\n```\n\n### 客户端###\n\n```java\npackage qiu;\n\nimport java.awt.BorderLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\nimport java.util.Calendar;\n\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\n\n/**\n * 简单聊天软件的客户端\n * */\npublic class MyClient extends JFrame implements ActionListener{\n    \n\tJTextArea jTextArea=null;\n\tJTextField jTextField=null;\n\tJPanel jPanel=null;\n\tJScrollPane jScrollPane=null;\n\tJButton sendButton=null;\n\tPrintWriter printWriter=null;\n\t\n/**\n  *  客户端的主函数\n  * */\npublic static void main(String[] args) {\n\t// TODO Auto-generated method stub\n      new MyClient();\n}\n/**\n * 客户端构造函数用来初始化\n * */\npublic MyClient(){\n\t//GUI初始化\n\tjTextArea= new JTextArea();\n\tjTextField=new JTextField(20);\n\tsendButton= new JButton(\"发送\");\n\tsendButton.addActionListener(this);\n\tsendButton.setActionCommand(\"send\");\n\tjScrollPane=new JScrollPane(jTextArea);\n\tjPanel=new JPanel();\n\t\n\tjPanel.add(jTextField);\n\tjPanel.add(sendButton);\n\t\t\n\tthis.add(jScrollPane,BorderLayout.CENTER);\n\tthis.add(jPanel,BorderLayout.SOUTH);\n\t\t\n\tthis.setSize(400, 300);\n\tthis.setTitle(\"聊天客户端\");\n\tthis.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\tthis.setVisible(true);\n    this.setResizable(true);\t\n        \n    //socket通信代码\n     try {\n    \tSocket s= new Socket(\"127.0.0.1\",9988);\n\t\tBufferedReader br = new BufferedReader\n\t\t\t\t(new InputStreamReader(s.getInputStream()));\n\t\tprintWriter= new PrintWriter(s.getOutputStream(),true);\n        while(true){\n          \t//不停的读取服务器发过来的信息\n            String string=br.readLine();\n            jTextArea.append(\"服务器 \"+getTime()+\"\\r\\n\"+string+\"\\r\\n\");\n            }\n\t\t\t\n\t} catch (UnknownHostException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t} catch (IOException e) {\n\t\t// TODO Auto-generated catch block\n\t\te.printStackTrace();\n\t}\n}\n\n/**\n  * 用来获取当前的时间\n  * @return 当前的时间\n  */\npublic String getTime(){\n\t//可以对每个单独时间域进行修改\n\tCalendar c = Calendar.getInstance();\n\tint hour = c.get(Calendar.HOUR_OF_DAY);//获取小时\n\tint minute = c.get(Calendar.MINUTE);\n\tint second = c.get(Calendar.SECOND);\n\t\t\n\treturn hour+\":\"+minute+\":\"+second;\t\n}\n/**\n  * 当button被点击的时候调用\n  */\n@Override\npublic void actionPerformed(ActionEvent e) {\n\t// TODO Auto-generated method stub\n\tif(sendButton.getActionCommand().equals(\"send\")){\n\t\tString info= jTextField.getText();\n\t\t//将客户端发送的信息发送给服务端\n\t\tjTextArea.append(\"客户端 \"+getTime()+\"\\r\\n\"+info+\"\\r\\n\");\n\t\tprintWriter.println(info);\n\t\tjTextField.setText(\"\");\n\t\t}\n\t}\n}\n```\n","slug":"JAVA/Socket简易聊天工具","published":1,"updated":"2016-06-27T13:36:19.934Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qih001ukgaeoa5yij7y","content":"<h3 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h3><ul>\n<li>代码运行如图，看起来还不错，哈哈哈</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/socket%E8%81%8A%E5%A4%A9%E5%B7%A5%E5%85%B7%E5%95%8A.png\" alt=\"\"></center>\n\n\n<a id=\"more\"></a>\n<h3 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> qiu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.BorderLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.print.Printable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Calendar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JPanel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JScrollPane;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextArea;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextField;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> *  简单聊天软件的服务器</span><br><span class=\"line\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyServer</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\tJTextArea jTextArea =<span class=\"keyword\">null</span>;<span class=\"comment\">//用来显示纯文本的单行区域</span></span><br><span class=\"line\">\tJTextField jTextField=<span class=\"keyword\">null</span>;<span class=\"comment\">//可以允许用来编辑单行文本</span></span><br><span class=\"line\">\tJButton sendButton=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJPanel jPanel=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJScrollPane jScrollPane =<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//把信息发给客户端对象</span></span><br><span class=\"line\">\tPrintWriter printWriter =<span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  *  服务端的主函数</span><br><span class=\"line\">  * */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">       <span class=\"keyword\">new</span> MyServer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> *  服务端的构造函数,用来进行初始化</span><br><span class=\"line\"> * */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyServer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//这里是对GUI的初始化</span></span><br><span class=\"line\">\tjTextArea = <span class=\"keyword\">new</span> JTextArea();</span><br><span class=\"line\">\tjTextField= <span class=\"keyword\">new</span> JTextField(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tsendButton= <span class=\"keyword\">new</span> JButton(<span class=\"string\">\"发送\"</span>);</span><br><span class=\"line\">\tsendButton.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\tsendButton.setActionCommand(<span class=\"string\">\"send\"</span>);</span><br><span class=\"line\">\tjScrollPane= <span class=\"keyword\">new</span> JScrollPane(jTextArea);</span><br><span class=\"line\">\tjPanel = <span class=\"keyword\">new</span> JPanel();</span><br><span class=\"line\">\tjPanel.add(jTextField);<span class=\"comment\">//添加编辑框</span></span><br><span class=\"line\">\tjPanel.add(sendButton);<span class=\"comment\">//添加按钮</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"comment\">//将两个面板添加布局</span></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.add(jScrollPane,BorderLayout.CENTER);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.add(jPanel,BorderLayout.SOUTH);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setSize(<span class=\"number\">400</span>,<span class=\"number\">300</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setTitle(<span class=\"string\">\"聊天服务器\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<span class=\"comment\">//设置退出按钮</span></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setResizable(<span class=\"keyword\">true</span>);\t</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">//下面是socket服务器的搭建</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//服务器监听</span></span><br><span class=\"line\">       \tServerSocket ss = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9988</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//等待客户端连接</span></span><br><span class=\"line\">       \tSocket socket = ss.accept();</span><br><span class=\"line\">       \t<span class=\"comment\">//获得客户端发送过来的数据的流</span></span><br><span class=\"line\">       \tBufferedReader br = <span class=\"keyword\">new</span> BufferedReader</span><br><span class=\"line\">      \t\t\t(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class=\"line\">       \tprintWriter = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream(),<span class=\"keyword\">true</span>);</span><br><span class=\"line\">       \t<span class=\"comment\">//读取从客户端发送过来的信息</span></span><br><span class=\"line\">       \t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">      \t\tString info = br.readLine();</span><br><span class=\"line\">       \t\tjTextArea.append(<span class=\"string\">\"客户端 \"</span>+getTime()+<span class=\"string\">\"\\r\\n\"</span>+info+<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">       \t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\te.printStackTrace();</span><br><span class=\"line\">\t&#125;   &#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * 用来获取当前的时间</span><br><span class=\"line\"> * <span class=\"doctag\">@return</span> 当前的时间</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getTime</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//可以对每个单独时间域进行修改</span></span><br><span class=\"line\">\tCalendar c = Calendar.getInstance();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> hour = c.get(Calendar.HOUR_OF_DAY);<span class=\"comment\">//获取小时</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> minute = c.get(Calendar.MINUTE);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> second = c.get(Calendar.SECOND);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> hour+<span class=\"string\">\":\"</span>+minute+<span class=\"string\">\":\"</span>+second;\t</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * 当button被点击的时候调用</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t<span class=\"comment\">//当按钮按下的时候调用</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(e.getActionCommand().equals(<span class=\"string\">\"send\"</span>))&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//把服务器在jTextField写的内容发送给客户端</span></span><br><span class=\"line\">\t\tString info= jTextField.getText();</span><br><span class=\"line\">\t\tjTextArea.append(<span class=\"string\">\"服务器 \"</span>+getTime()+<span class=\"string\">\"\\r\\n\"</span>+info+<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">\t\tprintWriter.println(info);</span><br><span class=\"line\">\t\t<span class=\"comment\">//清楚发送框内容</span></span><br><span class=\"line\">\t\tjTextField.setText(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> qiu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.BorderLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Calendar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JPanel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JScrollPane;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextArea;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextField;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * 简单聊天软件的客户端</span><br><span class=\"line\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\tJTextArea jTextArea=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJTextField jTextField=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJPanel jPanel=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJScrollPane jScrollPane=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJButton sendButton=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tPrintWriter printWriter=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  *  客户端的主函数</span><br><span class=\"line\">  * */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> MyClient();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * 客户端构造函数用来初始化</span><br><span class=\"line\"> * */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyClient</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//GUI初始化</span></span><br><span class=\"line\">\tjTextArea= <span class=\"keyword\">new</span> JTextArea();</span><br><span class=\"line\">\tjTextField=<span class=\"keyword\">new</span> JTextField(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tsendButton= <span class=\"keyword\">new</span> JButton(<span class=\"string\">\"发送\"</span>);</span><br><span class=\"line\">\tsendButton.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\tsendButton.setActionCommand(<span class=\"string\">\"send\"</span>);</span><br><span class=\"line\">\tjScrollPane=<span class=\"keyword\">new</span> JScrollPane(jTextArea);</span><br><span class=\"line\">\tjPanel=<span class=\"keyword\">new</span> JPanel();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tjPanel.add(jTextField);</span><br><span class=\"line\">\tjPanel.add(sendButton);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.add(jScrollPane,BorderLayout.CENTER);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.add(jPanel,BorderLayout.SOUTH);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setSize(<span class=\"number\">400</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setTitle(<span class=\"string\">\"聊天客户端\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setResizable(<span class=\"keyword\">true</span>);\t</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">//socket通信代码</span></span><br><span class=\"line\">     <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    \tSocket s= <span class=\"keyword\">new</span> Socket(<span class=\"string\">\"127.0.0.1\"</span>,<span class=\"number\">9988</span>);</span><br><span class=\"line\">\t\tBufferedReader br = <span class=\"keyword\">new</span> BufferedReader</span><br><span class=\"line\">\t\t\t\t(<span class=\"keyword\">new</span> InputStreamReader(s.getInputStream()));</span><br><span class=\"line\">\t\tprintWriter= <span class=\"keyword\">new</span> PrintWriter(s.getOutputStream(),<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">          \t<span class=\"comment\">//不停的读取服务器发过来的信息</span></span><br><span class=\"line\">            String string=br.readLine();</span><br><span class=\"line\">            jTextArea.append(<span class=\"string\">\"服务器 \"</span>+getTime()+<span class=\"string\">\"\\r\\n\"</span>+string+<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\te.printStackTrace();</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\te.printStackTrace();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  * 用来获取当前的时间</span><br><span class=\"line\">  * <span class=\"doctag\">@return</span> 当前的时间</span><br><span class=\"line\">  */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getTime</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//可以对每个单独时间域进行修改</span></span><br><span class=\"line\">\tCalendar c = Calendar.getInstance();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> hour = c.get(Calendar.HOUR_OF_DAY);<span class=\"comment\">//获取小时</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> minute = c.get(Calendar.MINUTE);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> second = c.get(Calendar.SECOND);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> hour+<span class=\"string\">\":\"</span>+minute+<span class=\"string\">\":\"</span>+second;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  * 当button被点击的时候调用</span><br><span class=\"line\">  */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(sendButton.getActionCommand().equals(<span class=\"string\">\"send\"</span>))&#123;</span><br><span class=\"line\">\t\tString info= jTextField.getText();</span><br><span class=\"line\">\t\t<span class=\"comment\">//将客户端发送的信息发送给服务端</span></span><br><span class=\"line\">\t\tjTextArea.append(<span class=\"string\">\"客户端 \"</span>+getTime()+<span class=\"string\">\"\\r\\n\"</span>+info+<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">\t\tprintWriter.println(info);</span><br><span class=\"line\">\t\tjTextField.setText(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","excerpt":"<h3 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h3><ul>\n<li>代码运行如图，看起来还不错，哈哈哈</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/socket%E8%81%8A%E5%A4%A9%E5%B7%A5%E5%85%B7%E5%95%8A.png\" alt=\"\"></center>","more":"<h3 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> qiu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.BorderLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.print.Printable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Calendar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JPanel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JScrollPane;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextArea;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextField;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> *  简单聊天软件的服务器</span><br><span class=\"line\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyServer</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\tJTextArea jTextArea =<span class=\"keyword\">null</span>;<span class=\"comment\">//用来显示纯文本的单行区域</span></span><br><span class=\"line\">\tJTextField jTextField=<span class=\"keyword\">null</span>;<span class=\"comment\">//可以允许用来编辑单行文本</span></span><br><span class=\"line\">\tJButton sendButton=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJPanel jPanel=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJScrollPane jScrollPane =<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//把信息发给客户端对象</span></span><br><span class=\"line\">\tPrintWriter printWriter =<span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  *  服务端的主函数</span><br><span class=\"line\">  * */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">       <span class=\"keyword\">new</span> MyServer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> *  服务端的构造函数,用来进行初始化</span><br><span class=\"line\"> * */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyServer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//这里是对GUI的初始化</span></span><br><span class=\"line\">\tjTextArea = <span class=\"keyword\">new</span> JTextArea();</span><br><span class=\"line\">\tjTextField= <span class=\"keyword\">new</span> JTextField(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tsendButton= <span class=\"keyword\">new</span> JButton(<span class=\"string\">\"发送\"</span>);</span><br><span class=\"line\">\tsendButton.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\tsendButton.setActionCommand(<span class=\"string\">\"send\"</span>);</span><br><span class=\"line\">\tjScrollPane= <span class=\"keyword\">new</span> JScrollPane(jTextArea);</span><br><span class=\"line\">\tjPanel = <span class=\"keyword\">new</span> JPanel();</span><br><span class=\"line\">\tjPanel.add(jTextField);<span class=\"comment\">//添加编辑框</span></span><br><span class=\"line\">\tjPanel.add(sendButton);<span class=\"comment\">//添加按钮</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"comment\">//将两个面板添加布局</span></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.add(jScrollPane,BorderLayout.CENTER);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.add(jPanel,BorderLayout.SOUTH);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setSize(<span class=\"number\">400</span>,<span class=\"number\">300</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setTitle(<span class=\"string\">\"聊天服务器\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<span class=\"comment\">//设置退出按钮</span></span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setResizable(<span class=\"keyword\">true</span>);\t</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">//下面是socket服务器的搭建</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//服务器监听</span></span><br><span class=\"line\">       \tServerSocket ss = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9988</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//等待客户端连接</span></span><br><span class=\"line\">       \tSocket socket = ss.accept();</span><br><span class=\"line\">       \t<span class=\"comment\">//获得客户端发送过来的数据的流</span></span><br><span class=\"line\">       \tBufferedReader br = <span class=\"keyword\">new</span> BufferedReader</span><br><span class=\"line\">      \t\t\t(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class=\"line\">       \tprintWriter = <span class=\"keyword\">new</span> PrintWriter(socket.getOutputStream(),<span class=\"keyword\">true</span>);</span><br><span class=\"line\">       \t<span class=\"comment\">//读取从客户端发送过来的信息</span></span><br><span class=\"line\">       \t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">      \t\tString info = br.readLine();</span><br><span class=\"line\">       \t\tjTextArea.append(<span class=\"string\">\"客户端 \"</span>+getTime()+<span class=\"string\">\"\\r\\n\"</span>+info+<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">       \t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\te.printStackTrace();</span><br><span class=\"line\">\t&#125;   &#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * 用来获取当前的时间</span><br><span class=\"line\"> * <span class=\"doctag\">@return</span> 当前的时间</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getTime</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//可以对每个单独时间域进行修改</span></span><br><span class=\"line\">\tCalendar c = Calendar.getInstance();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> hour = c.get(Calendar.HOUR_OF_DAY);<span class=\"comment\">//获取小时</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> minute = c.get(Calendar.MINUTE);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> second = c.get(Calendar.SECOND);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> hour+<span class=\"string\">\":\"</span>+minute+<span class=\"string\">\":\"</span>+second;\t</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * 当button被点击的时候调用</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t<span class=\"comment\">//当按钮按下的时候调用</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(e.getActionCommand().equals(<span class=\"string\">\"send\"</span>))&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//把服务器在jTextField写的内容发送给客户端</span></span><br><span class=\"line\">\t\tString info= jTextField.getText();</span><br><span class=\"line\">\t\tjTextArea.append(<span class=\"string\">\"服务器 \"</span>+getTime()+<span class=\"string\">\"\\r\\n\"</span>+info+<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">\t\tprintWriter.println(info);</span><br><span class=\"line\">\t\t<span class=\"comment\">//清楚发送框内容</span></span><br><span class=\"line\">\t\tjTextField.setText(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> qiu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.BorderLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Calendar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JPanel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JScrollPane;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextArea;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextField;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * 简单聊天软件的客户端</span><br><span class=\"line\"> * */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\tJTextArea jTextArea=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJTextField jTextField=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJPanel jPanel=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJScrollPane jScrollPane=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tJButton sendButton=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\tPrintWriter printWriter=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  *  客户端的主函数</span><br><span class=\"line\">  * */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> MyClient();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * 客户端构造函数用来初始化</span><br><span class=\"line\"> * */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyClient</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//GUI初始化</span></span><br><span class=\"line\">\tjTextArea= <span class=\"keyword\">new</span> JTextArea();</span><br><span class=\"line\">\tjTextField=<span class=\"keyword\">new</span> JTextField(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tsendButton= <span class=\"keyword\">new</span> JButton(<span class=\"string\">\"发送\"</span>);</span><br><span class=\"line\">\tsendButton.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\tsendButton.setActionCommand(<span class=\"string\">\"send\"</span>);</span><br><span class=\"line\">\tjScrollPane=<span class=\"keyword\">new</span> JScrollPane(jTextArea);</span><br><span class=\"line\">\tjPanel=<span class=\"keyword\">new</span> JPanel();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tjPanel.add(jTextField);</span><br><span class=\"line\">\tjPanel.add(sendButton);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.add(jScrollPane,BorderLayout.CENTER);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.add(jPanel,BorderLayout.SOUTH);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setSize(<span class=\"number\">400</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setTitle(<span class=\"string\">\"聊天客户端\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setResizable(<span class=\"keyword\">true</span>);\t</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">//socket通信代码</span></span><br><span class=\"line\">     <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    \tSocket s= <span class=\"keyword\">new</span> Socket(<span class=\"string\">\"127.0.0.1\"</span>,<span class=\"number\">9988</span>);</span><br><span class=\"line\">\t\tBufferedReader br = <span class=\"keyword\">new</span> BufferedReader</span><br><span class=\"line\">\t\t\t\t(<span class=\"keyword\">new</span> InputStreamReader(s.getInputStream()));</span><br><span class=\"line\">\t\tprintWriter= <span class=\"keyword\">new</span> PrintWriter(s.getOutputStream(),<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">          \t<span class=\"comment\">//不停的读取服务器发过来的信息</span></span><br><span class=\"line\">            String string=br.readLine();</span><br><span class=\"line\">            jTextArea.append(<span class=\"string\">\"服务器 \"</span>+getTime()+<span class=\"string\">\"\\r\\n\"</span>+string+<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\te.printStackTrace();</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">\t\te.printStackTrace();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  * 用来获取当前的时间</span><br><span class=\"line\">  * <span class=\"doctag\">@return</span> 当前的时间</span><br><span class=\"line\">  */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getTime</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//可以对每个单独时间域进行修改</span></span><br><span class=\"line\">\tCalendar c = Calendar.getInstance();</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> hour = c.get(Calendar.HOUR_OF_DAY);<span class=\"comment\">//获取小时</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> minute = c.get(Calendar.MINUTE);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> second = c.get(Calendar.SECOND);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> hour+<span class=\"string\">\":\"</span>+minute+<span class=\"string\">\":\"</span>+second;\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  * 当button被点击的时候调用</span><br><span class=\"line\">  */</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(sendButton.getActionCommand().equals(<span class=\"string\">\"send\"</span>))&#123;</span><br><span class=\"line\">\t\tString info= jTextField.getText();</span><br><span class=\"line\">\t\t<span class=\"comment\">//将客户端发送的信息发送给服务端</span></span><br><span class=\"line\">\t\tjTextArea.append(<span class=\"string\">\"客户端 \"</span>+getTime()+<span class=\"string\">\"\\r\\n\"</span>+info+<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">\t\tprintWriter.println(info);</span><br><span class=\"line\">\t\tjTextField.setText(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"STL容器总结之stack和queue","date":"2016-06-01T17:42:28.000Z","_content":"\n- stack是一个比较简单的容器，它的使用也很简单，stack是LIFO容器，就是后进先出，最后添加进去的元素，第一个取出来\n\n\n- ### stack初始化###\n\n```cpp\nstd::stack<int> first;  \n  \nstd::stack<int> second(first);  \n  \nstd::stack<int, std;:vector<int>> third; //使用vector初始化stack  \n```\n\n\n- ### stack常用方法###\n\n```cpp\nempty();//判断是否为空  \n  \npush(Elem e);//栈顶压入一元素  \n  \npop();//弹出栈顶元素  \n  \ntop();//返回栈顶元素  \n  \nsize();//返回栈中元素个数  \n```\n\n<!-- more -->\n\n- queue是一个比较简单的容器，它的使用也很简单，stack是先进先出容器，最先加进去的元素最先出来\n\n- ### queue常用方法###\n\n```cpp\npush(x) //将x压入队列的末端  \n  \npop() //弹出队列的第一个元素(队顶元素)，注意此函数并不返回任何值  \n  \nfront() //返回第一个元素(队顶元素)  \n  \nback() //返回最后被压入的元素(队尾元素)  \n  \nempty() //当队列为空时，返回true  \n  \nsize() //返回队列的长度  \n```","source":"_posts/C++/STL容器总结之stack和queue.md","raw":"---\ntitle: STL容器总结之stack和queue\ndate: 2016-06-01 17:42:28\ntags: [C++,STL,stack,queue]\ncategories: C++\n---\n\n- stack是一个比较简单的容器，它的使用也很简单，stack是LIFO容器，就是后进先出，最后添加进去的元素，第一个取出来\n\n\n- ### stack初始化###\n\n```cpp\nstd::stack<int> first;  \n  \nstd::stack<int> second(first);  \n  \nstd::stack<int, std;:vector<int>> third; //使用vector初始化stack  \n```\n\n\n- ### stack常用方法###\n\n```cpp\nempty();//判断是否为空  \n  \npush(Elem e);//栈顶压入一元素  \n  \npop();//弹出栈顶元素  \n  \ntop();//返回栈顶元素  \n  \nsize();//返回栈中元素个数  \n```\n\n<!-- more -->\n\n- queue是一个比较简单的容器，它的使用也很简单，stack是先进先出容器，最先加进去的元素最先出来\n\n- ### queue常用方法###\n\n```cpp\npush(x) //将x压入队列的末端  \n  \npop() //弹出队列的第一个元素(队顶元素)，注意此函数并不返回任何值  \n  \nfront() //返回第一个元素(队顶元素)  \n  \nback() //返回最后被压入的元素(队尾元素)  \n  \nempty() //当队列为空时，返回true  \n  \nsize() //返回队列的长度  \n```","slug":"C++/STL容器总结之stack和queue","published":1,"updated":"2016-06-17T13:47:37.893Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qim001ykgae9vbgq2hy","content":"<ul>\n<li>stack是一个比较简单的容器，它的使用也很简单，stack是LIFO容器，就是后进先出，最后添加进去的元素，第一个取出来</li>\n</ul>\n<ul>\n<li><h3 id=\"stack初始化\"><a href=\"#stack初始化\" class=\"headerlink\" title=\"stack初始化\"></a>stack初始化</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt; first;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt; second(first);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>, <span class=\"built_in\">std</span>;:<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; third; <span class=\"comment\">//使用vector初始化stack</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"stack常用方法\"><a href=\"#stack常用方法\" class=\"headerlink\" title=\"stack常用方法\"></a>stack常用方法</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">empty();<span class=\"comment\">//判断是否为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">push(Elem e);<span class=\"comment\">//栈顶压入一元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">pop();<span class=\"comment\">//弹出栈顶元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">top();<span class=\"comment\">//返回栈顶元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">size();<span class=\"comment\">//返回栈中元素个数</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li><p>queue是一个比较简单的容器，它的使用也很简单，stack是先进先出容器，最先加进去的元素最先出来</p>\n</li>\n<li><h3 id=\"queue常用方法\"><a href=\"#queue常用方法\" class=\"headerlink\" title=\"queue常用方法\"></a>queue常用方法</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">push(x) <span class=\"comment\">//将x压入队列的末端  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">pop() <span class=\"comment\">//弹出队列的第一个元素(队顶元素)，注意此函数并不返回任何值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">front() <span class=\"comment\">//返回第一个元素(队顶元素)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">back() <span class=\"comment\">//返回最后被压入的元素(队尾元素)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">empty() <span class=\"comment\">//当队列为空时，返回true  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">size() <span class=\"comment\">//返回队列的长度</span></span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li>stack是一个比较简单的容器，它的使用也很简单，stack是LIFO容器，就是后进先出，最后添加进去的元素，第一个取出来</li>\n</ul>\n<ul>\n<li><h3 id=\"stack初始化\"><a href=\"#stack初始化\" class=\"headerlink\" title=\"stack初始化\"></a>stack初始化</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt; first;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt; second(first);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>, <span class=\"built_in\">std</span>;:<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;&gt; third; <span class=\"comment\">//使用vector初始化stack</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"stack常用方法\"><a href=\"#stack常用方法\" class=\"headerlink\" title=\"stack常用方法\"></a>stack常用方法</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">empty();<span class=\"comment\">//判断是否为空  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">push(Elem e);<span class=\"comment\">//栈顶压入一元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">pop();<span class=\"comment\">//弹出栈顶元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">top();<span class=\"comment\">//返回栈顶元素  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">size();<span class=\"comment\">//返回栈中元素个数</span></span><br></pre></td></tr></table></figure>","more":"<ul>\n<li><p>queue是一个比较简单的容器，它的使用也很简单，stack是先进先出容器，最先加进去的元素最先出来</p>\n</li>\n<li><h3 id=\"queue常用方法\"><a href=\"#queue常用方法\" class=\"headerlink\" title=\"queue常用方法\"></a>queue常用方法</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">push(x) <span class=\"comment\">//将x压入队列的末端  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">pop() <span class=\"comment\">//弹出队列的第一个元素(队顶元素)，注意此函数并不返回任何值  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">front() <span class=\"comment\">//返回第一个元素(队顶元素)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">back() <span class=\"comment\">//返回最后被压入的元素(队尾元素)  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">empty() <span class=\"comment\">//当队列为空时，返回true  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">size() <span class=\"comment\">//返回队列的长度</span></span><br></pre></td></tr></table></figure>"},{"title":"Java内存区域与内存溢出简介","date":"2016-07-15T21:22:45.000Z","_content":"\n### Java知识体系图###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%AE%80%E4%BB%8B.png)</center>\n\n### 运行时数据区域###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%AE%80%E4%BB%8B1.jpg)</center>\n<!-- more -->\n\n### 程序计数器###\n\n- 当前线程所执行的字节码的行号指示器\n\n- 当前线程私有\n\n- 不会出现OutOfMemoryError情况\n\n\n### java虚拟机栈###\n\n- 线程私有，生命周期与线程相同\n\n- java方法执行的内存模型，每个方法执行的同时都会创建一个栈帧，存储局部变量表(基本类型、对象引用)、操作数栈、动态链接、方法出口等信息\n\n- StackOverflowError异常：当线程请求的栈深度大于虚拟机所允许的深度\n\n- OutOfMemoryError异常：如果栈的扩展时无法申请到足够的内存\n\n\n### 本地方法栈###\n\n- 与虚拟机栈相似，主要为虚拟机使用到的Native方法服务，在HotSpot虚拟机中直接把本地方法栈与虚拟机栈二合一\n\n### Java堆(Java Heap)###\n\njava堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此区域的唯一目的就是存储对象实例。java堆是垃圾收集器管理的主要区域。java堆还可以细分为：新生代与老年代。在细一点有Eden空间、Form Survivor空间、To Survivor空间等。\n\n- 可以通过-Xmx和-Xms控制堆的大小\n\n- OutOfMemoryError异常：当在堆中没有内存完成实例分配，且堆也无法再扩展时\n\n\n### 方法区###\n\n- 线程间共享\n\n- 用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据\n\n- OutOfMemoryError异常：当方法区无法满足内存的分配需求时\n\n\n### 运行时常量池###\n\n- 方法区的一部分\n\n- 用于存放编译期生成的各种字面量与符号引用\n\n- OutOfMemoryError异常：当常量池无法再申请到内存时\n\n\n### 直接内存###\n\n- NIO可以使用Native函数库直接分配堆外内存，堆中的DirectByteBuffer对象作为这块内存的引用进行操作\n\n- 大小不受Java堆大小的限制，受本机(服务器)内存限制\n\n- OutOfMemoryError异常：系统内存不足时\n\n### HotSpot虚拟机###\n\n### 对象的创建###\n\n虚拟机遇到一条new指令时，首先将去检查这个对象的参数是否在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有，必须先执行类的加载过程。\n在类加载检查通过后，虚拟机将为新生对象分配内存。对象所需内存大小再类加载完成后便可确定。内存分配可以采用“指针碰撞”与“空闲列表”的方式\n\n\n### 对象的访问定位###\n\njava程序需要通过栈上的reference数据来操作堆上的具体对象。访问方式有使用句柄和直接指针两种。\n\n- 句柄访问 java堆中将会划分出一块内存来作为句柄池，reference中存储的就是对象的句柄地址，而句柄中包含了对象实例数据与类型数据各自的具体地址信息\n\n- 直接指针访问 java堆对象的布局中必须考虑如何放置访问类型数据的相关信息，reference中存储的就是对象地址\n\n\n### OOM异常的解决思路###\n\n- - -\n\n生成Dump快照文件：\n\n- 通过jvm参数—XX:-HeapDumpOnOutOfMemoryError可以让JVM在出现内存溢出是Dump出当前的内存转储快照\n\n- 用jmap生产dump文件，win通过任务管理器查看tomcat的进程pid，linux用ps命令查看进程pid,然后用jmap命令\n\n- - -\n先通过内存映像分析工具(如Eclipse的Memory Analyzer)进行分析，常见的情况有：\n\n- 内存泄露，对象已经死了，无法通过垃圾收集器进行自动回收，通过找出泄露的代码位置和原因，才好确定解决方案\n\n- 内存溢出，内存中的对象都还必须存活着，这说明Java堆分配空间不足，检查堆设置大小（-Xmx与-Xms），检查代码是否存在对象生命周期太长、持有状态时间过长的情况\n\n\n#### OOM异常示例：####\n\n```java\npackage oom;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * VM Args: -Xms20m -Xmx20m -XX:+HeapDumpOnOutOfMemoryError\n* @ClassName: HeapOOM \n*\n */\npublic class HeapOOM {\n    static class OOMObject{\n        \n    }\n    \n    public static void main(String[] args) {\n        List<OOMObject> list = new ArrayList<OOMObject>();\n        while(true){\n            list.add(new OOMObject());\n        }\n    }\n}\n```\n\n### 参考博客###\n\n[传送门](http://wustrive2008.github.io/2015/12/24/java/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3jvm%E4%B9%8B%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/#捐赠)","source":"_posts/JVM/Java内存区域与内存溢出简介.md","raw":"---\ntitle: Java内存区域与内存溢出简介\ndate: 2016-07-15 21:22:45\ntags: JVM\ncategories: JVM\n---\n\n### Java知识体系图###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%AE%80%E4%BB%8B.png)</center>\n\n### 运行时数据区域###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%AE%80%E4%BB%8B1.jpg)</center>\n<!-- more -->\n\n### 程序计数器###\n\n- 当前线程所执行的字节码的行号指示器\n\n- 当前线程私有\n\n- 不会出现OutOfMemoryError情况\n\n\n### java虚拟机栈###\n\n- 线程私有，生命周期与线程相同\n\n- java方法执行的内存模型，每个方法执行的同时都会创建一个栈帧，存储局部变量表(基本类型、对象引用)、操作数栈、动态链接、方法出口等信息\n\n- StackOverflowError异常：当线程请求的栈深度大于虚拟机所允许的深度\n\n- OutOfMemoryError异常：如果栈的扩展时无法申请到足够的内存\n\n\n### 本地方法栈###\n\n- 与虚拟机栈相似，主要为虚拟机使用到的Native方法服务，在HotSpot虚拟机中直接把本地方法栈与虚拟机栈二合一\n\n### Java堆(Java Heap)###\n\njava堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此区域的唯一目的就是存储对象实例。java堆是垃圾收集器管理的主要区域。java堆还可以细分为：新生代与老年代。在细一点有Eden空间、Form Survivor空间、To Survivor空间等。\n\n- 可以通过-Xmx和-Xms控制堆的大小\n\n- OutOfMemoryError异常：当在堆中没有内存完成实例分配，且堆也无法再扩展时\n\n\n### 方法区###\n\n- 线程间共享\n\n- 用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据\n\n- OutOfMemoryError异常：当方法区无法满足内存的分配需求时\n\n\n### 运行时常量池###\n\n- 方法区的一部分\n\n- 用于存放编译期生成的各种字面量与符号引用\n\n- OutOfMemoryError异常：当常量池无法再申请到内存时\n\n\n### 直接内存###\n\n- NIO可以使用Native函数库直接分配堆外内存，堆中的DirectByteBuffer对象作为这块内存的引用进行操作\n\n- 大小不受Java堆大小的限制，受本机(服务器)内存限制\n\n- OutOfMemoryError异常：系统内存不足时\n\n### HotSpot虚拟机###\n\n### 对象的创建###\n\n虚拟机遇到一条new指令时，首先将去检查这个对象的参数是否在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有，必须先执行类的加载过程。\n在类加载检查通过后，虚拟机将为新生对象分配内存。对象所需内存大小再类加载完成后便可确定。内存分配可以采用“指针碰撞”与“空闲列表”的方式\n\n\n### 对象的访问定位###\n\njava程序需要通过栈上的reference数据来操作堆上的具体对象。访问方式有使用句柄和直接指针两种。\n\n- 句柄访问 java堆中将会划分出一块内存来作为句柄池，reference中存储的就是对象的句柄地址，而句柄中包含了对象实例数据与类型数据各自的具体地址信息\n\n- 直接指针访问 java堆对象的布局中必须考虑如何放置访问类型数据的相关信息，reference中存储的就是对象地址\n\n\n### OOM异常的解决思路###\n\n- - -\n\n生成Dump快照文件：\n\n- 通过jvm参数—XX:-HeapDumpOnOutOfMemoryError可以让JVM在出现内存溢出是Dump出当前的内存转储快照\n\n- 用jmap生产dump文件，win通过任务管理器查看tomcat的进程pid，linux用ps命令查看进程pid,然后用jmap命令\n\n- - -\n先通过内存映像分析工具(如Eclipse的Memory Analyzer)进行分析，常见的情况有：\n\n- 内存泄露，对象已经死了，无法通过垃圾收集器进行自动回收，通过找出泄露的代码位置和原因，才好确定解决方案\n\n- 内存溢出，内存中的对象都还必须存活着，这说明Java堆分配空间不足，检查堆设置大小（-Xmx与-Xms），检查代码是否存在对象生命周期太长、持有状态时间过长的情况\n\n\n#### OOM异常示例：####\n\n```java\npackage oom;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * VM Args: -Xms20m -Xmx20m -XX:+HeapDumpOnOutOfMemoryError\n* @ClassName: HeapOOM \n*\n */\npublic class HeapOOM {\n    static class OOMObject{\n        \n    }\n    \n    public static void main(String[] args) {\n        List<OOMObject> list = new ArrayList<OOMObject>();\n        while(true){\n            list.add(new OOMObject());\n        }\n    }\n}\n```\n\n### 参考博客###\n\n[传送门](http://wustrive2008.github.io/2015/12/24/java/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3jvm%E4%B9%8B%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/#捐赠)","slug":"JVM/Java内存区域与内存溢出简介","published":1,"updated":"2016-07-15T13:36:14.507Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qir0020kgaeo61b6db2","content":"<h3 id=\"Java知识体系图\"><a href=\"#Java知识体系图\" class=\"headerlink\" title=\"Java知识体系图\"></a>Java知识体系图</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%AE%80%E4%BB%8B.png\" alt=\"\"></center>\n\n<h3 id=\"运行时数据区域\"><a href=\"#运行时数据区域\" class=\"headerlink\" title=\"运行时数据区域\"></a>运行时数据区域</h3><p><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%AE%80%E4%BB%8B1.jpg\" alt=\"\"></center><br><a id=\"more\"></a></p>\n<h3 id=\"程序计数器\"><a href=\"#程序计数器\" class=\"headerlink\" title=\"程序计数器\"></a>程序计数器</h3><ul>\n<li><p>当前线程所执行的字节码的行号指示器</p>\n</li>\n<li><p>当前线程私有</p>\n</li>\n<li><p>不会出现OutOfMemoryError情况</p>\n</li>\n</ul>\n<h3 id=\"java虚拟机栈\"><a href=\"#java虚拟机栈\" class=\"headerlink\" title=\"java虚拟机栈\"></a>java虚拟机栈</h3><ul>\n<li><p>线程私有，生命周期与线程相同</p>\n</li>\n<li><p>java方法执行的内存模型，每个方法执行的同时都会创建一个栈帧，存储局部变量表(基本类型、对象引用)、操作数栈、动态链接、方法出口等信息</p>\n</li>\n<li><p>StackOverflowError异常：当线程请求的栈深度大于虚拟机所允许的深度</p>\n</li>\n<li><p>OutOfMemoryError异常：如果栈的扩展时无法申请到足够的内存</p>\n</li>\n</ul>\n<h3 id=\"本地方法栈\"><a href=\"#本地方法栈\" class=\"headerlink\" title=\"本地方法栈\"></a>本地方法栈</h3><ul>\n<li>与虚拟机栈相似，主要为虚拟机使用到的Native方法服务，在HotSpot虚拟机中直接把本地方法栈与虚拟机栈二合一</li>\n</ul>\n<h3 id=\"Java堆-Java-Heap\"><a href=\"#Java堆-Java-Heap\" class=\"headerlink\" title=\"Java堆(Java Heap)\"></a>Java堆(Java Heap)</h3><p>java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此区域的唯一目的就是存储对象实例。java堆是垃圾收集器管理的主要区域。java堆还可以细分为：新生代与老年代。在细一点有Eden空间、Form Survivor空间、To Survivor空间等。</p>\n<ul>\n<li><p>可以通过-Xmx和-Xms控制堆的大小</p>\n</li>\n<li><p>OutOfMemoryError异常：当在堆中没有内存完成实例分配，且堆也无法再扩展时</p>\n</li>\n</ul>\n<h3 id=\"方法区\"><a href=\"#方法区\" class=\"headerlink\" title=\"方法区\"></a>方法区</h3><ul>\n<li><p>线程间共享</p>\n</li>\n<li><p>用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据</p>\n</li>\n<li><p>OutOfMemoryError异常：当方法区无法满足内存的分配需求时</p>\n</li>\n</ul>\n<h3 id=\"运行时常量池\"><a href=\"#运行时常量池\" class=\"headerlink\" title=\"运行时常量池\"></a>运行时常量池</h3><ul>\n<li><p>方法区的一部分</p>\n</li>\n<li><p>用于存放编译期生成的各种字面量与符号引用</p>\n</li>\n<li><p>OutOfMemoryError异常：当常量池无法再申请到内存时</p>\n</li>\n</ul>\n<h3 id=\"直接内存\"><a href=\"#直接内存\" class=\"headerlink\" title=\"直接内存\"></a>直接内存</h3><ul>\n<li><p>NIO可以使用Native函数库直接分配堆外内存，堆中的DirectByteBuffer对象作为这块内存的引用进行操作</p>\n</li>\n<li><p>大小不受Java堆大小的限制，受本机(服务器)内存限制</p>\n</li>\n<li><p>OutOfMemoryError异常：系统内存不足时</p>\n</li>\n</ul>\n<h3 id=\"HotSpot虚拟机\"><a href=\"#HotSpot虚拟机\" class=\"headerlink\" title=\"HotSpot虚拟机\"></a>HotSpot虚拟机</h3><h3 id=\"对象的创建\"><a href=\"#对象的创建\" class=\"headerlink\" title=\"对象的创建\"></a>对象的创建</h3><p>虚拟机遇到一条new指令时，首先将去检查这个对象的参数是否在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有，必须先执行类的加载过程。<br>在类加载检查通过后，虚拟机将为新生对象分配内存。对象所需内存大小再类加载完成后便可确定。内存分配可以采用“指针碰撞”与“空闲列表”的方式</p>\n<h3 id=\"对象的访问定位\"><a href=\"#对象的访问定位\" class=\"headerlink\" title=\"对象的访问定位\"></a>对象的访问定位</h3><p>java程序需要通过栈上的reference数据来操作堆上的具体对象。访问方式有使用句柄和直接指针两种。</p>\n<ul>\n<li><p>句柄访问 java堆中将会划分出一块内存来作为句柄池，reference中存储的就是对象的句柄地址，而句柄中包含了对象实例数据与类型数据各自的具体地址信息</p>\n</li>\n<li><p>直接指针访问 java堆对象的布局中必须考虑如何放置访问类型数据的相关信息，reference中存储的就是对象地址</p>\n</li>\n</ul>\n<h3 id=\"OOM异常的解决思路\"><a href=\"#OOM异常的解决思路\" class=\"headerlink\" title=\"OOM异常的解决思路\"></a>OOM异常的解决思路</h3><hr>\n<p>生成Dump快照文件：</p>\n<ul>\n<li><p>通过jvm参数—XX:-HeapDumpOnOutOfMemoryError可以让JVM在出现内存溢出是Dump出当前的内存转储快照</p>\n</li>\n<li><p>用jmap生产dump文件，win通过任务管理器查看tomcat的进程pid，linux用ps命令查看进程pid,然后用jmap命令</p>\n</li>\n</ul>\n<hr>\n<p>先通过内存映像分析工具(如Eclipse的Memory Analyzer)进行分析，常见的情况有：</p>\n<ul>\n<li><p>内存泄露，对象已经死了，无法通过垃圾收集器进行自动回收，通过找出泄露的代码位置和原因，才好确定解决方案</p>\n</li>\n<li><p>内存溢出，内存中的对象都还必须存活着，这说明Java堆分配空间不足，检查堆设置大小（-Xmx与-Xms），检查代码是否存在对象生命周期太长、持有状态时间过长的情况</p>\n</li>\n</ul>\n<h4 id=\"OOM异常示例：\"><a href=\"#OOM异常示例：\" class=\"headerlink\" title=\"OOM异常示例：\"></a>OOM异常示例：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> oom;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * VM Args: -Xms20m -Xmx20m -XX:+HeapDumpOnOutOfMemoryError</span><br><span class=\"line\">* <span class=\"doctag\">@ClassName</span>: HeapOOM </span><br><span class=\"line\">*</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeapOOM</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OOMObject</span></span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;OOMObject&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;OOMObject&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            list.add(<span class=\"keyword\">new</span> OOMObject());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h3><p><a href=\"http://wustrive2008.github.io/2015/12/24/java/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3jvm%E4%B9%8B%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/#捐赠\" target=\"_blank\" rel=\"external\">传送门</a></p>\n","excerpt":"<h3 id=\"Java知识体系图\"><a href=\"#Java知识体系图\" class=\"headerlink\" title=\"Java知识体系图\"></a>Java知识体系图</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%AE%80%E4%BB%8B.png\" alt=\"\"></center>\n\n<h3 id=\"运行时数据区域\"><a href=\"#运行时数据区域\" class=\"headerlink\" title=\"运行时数据区域\"></a>运行时数据区域</h3><p><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/Java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%AE%80%E4%BB%8B1.jpg\" alt=\"\"></center><br>","more":"</p>\n<h3 id=\"程序计数器\"><a href=\"#程序计数器\" class=\"headerlink\" title=\"程序计数器\"></a>程序计数器</h3><ul>\n<li><p>当前线程所执行的字节码的行号指示器</p>\n</li>\n<li><p>当前线程私有</p>\n</li>\n<li><p>不会出现OutOfMemoryError情况</p>\n</li>\n</ul>\n<h3 id=\"java虚拟机栈\"><a href=\"#java虚拟机栈\" class=\"headerlink\" title=\"java虚拟机栈\"></a>java虚拟机栈</h3><ul>\n<li><p>线程私有，生命周期与线程相同</p>\n</li>\n<li><p>java方法执行的内存模型，每个方法执行的同时都会创建一个栈帧，存储局部变量表(基本类型、对象引用)、操作数栈、动态链接、方法出口等信息</p>\n</li>\n<li><p>StackOverflowError异常：当线程请求的栈深度大于虚拟机所允许的深度</p>\n</li>\n<li><p>OutOfMemoryError异常：如果栈的扩展时无法申请到足够的内存</p>\n</li>\n</ul>\n<h3 id=\"本地方法栈\"><a href=\"#本地方法栈\" class=\"headerlink\" title=\"本地方法栈\"></a>本地方法栈</h3><ul>\n<li>与虚拟机栈相似，主要为虚拟机使用到的Native方法服务，在HotSpot虚拟机中直接把本地方法栈与虚拟机栈二合一</li>\n</ul>\n<h3 id=\"Java堆-Java-Heap\"><a href=\"#Java堆-Java-Heap\" class=\"headerlink\" title=\"Java堆(Java Heap)\"></a>Java堆(Java Heap)</h3><p>java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此区域的唯一目的就是存储对象实例。java堆是垃圾收集器管理的主要区域。java堆还可以细分为：新生代与老年代。在细一点有Eden空间、Form Survivor空间、To Survivor空间等。</p>\n<ul>\n<li><p>可以通过-Xmx和-Xms控制堆的大小</p>\n</li>\n<li><p>OutOfMemoryError异常：当在堆中没有内存完成实例分配，且堆也无法再扩展时</p>\n</li>\n</ul>\n<h3 id=\"方法区\"><a href=\"#方法区\" class=\"headerlink\" title=\"方法区\"></a>方法区</h3><ul>\n<li><p>线程间共享</p>\n</li>\n<li><p>用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据</p>\n</li>\n<li><p>OutOfMemoryError异常：当方法区无法满足内存的分配需求时</p>\n</li>\n</ul>\n<h3 id=\"运行时常量池\"><a href=\"#运行时常量池\" class=\"headerlink\" title=\"运行时常量池\"></a>运行时常量池</h3><ul>\n<li><p>方法区的一部分</p>\n</li>\n<li><p>用于存放编译期生成的各种字面量与符号引用</p>\n</li>\n<li><p>OutOfMemoryError异常：当常量池无法再申请到内存时</p>\n</li>\n</ul>\n<h3 id=\"直接内存\"><a href=\"#直接内存\" class=\"headerlink\" title=\"直接内存\"></a>直接内存</h3><ul>\n<li><p>NIO可以使用Native函数库直接分配堆外内存，堆中的DirectByteBuffer对象作为这块内存的引用进行操作</p>\n</li>\n<li><p>大小不受Java堆大小的限制，受本机(服务器)内存限制</p>\n</li>\n<li><p>OutOfMemoryError异常：系统内存不足时</p>\n</li>\n</ul>\n<h3 id=\"HotSpot虚拟机\"><a href=\"#HotSpot虚拟机\" class=\"headerlink\" title=\"HotSpot虚拟机\"></a>HotSpot虚拟机</h3><h3 id=\"对象的创建\"><a href=\"#对象的创建\" class=\"headerlink\" title=\"对象的创建\"></a>对象的创建</h3><p>虚拟机遇到一条new指令时，首先将去检查这个对象的参数是否在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有，必须先执行类的加载过程。<br>在类加载检查通过后，虚拟机将为新生对象分配内存。对象所需内存大小再类加载完成后便可确定。内存分配可以采用“指针碰撞”与“空闲列表”的方式</p>\n<h3 id=\"对象的访问定位\"><a href=\"#对象的访问定位\" class=\"headerlink\" title=\"对象的访问定位\"></a>对象的访问定位</h3><p>java程序需要通过栈上的reference数据来操作堆上的具体对象。访问方式有使用句柄和直接指针两种。</p>\n<ul>\n<li><p>句柄访问 java堆中将会划分出一块内存来作为句柄池，reference中存储的就是对象的句柄地址，而句柄中包含了对象实例数据与类型数据各自的具体地址信息</p>\n</li>\n<li><p>直接指针访问 java堆对象的布局中必须考虑如何放置访问类型数据的相关信息，reference中存储的就是对象地址</p>\n</li>\n</ul>\n<h3 id=\"OOM异常的解决思路\"><a href=\"#OOM异常的解决思路\" class=\"headerlink\" title=\"OOM异常的解决思路\"></a>OOM异常的解决思路</h3><hr>\n<p>生成Dump快照文件：</p>\n<ul>\n<li><p>通过jvm参数—XX:-HeapDumpOnOutOfMemoryError可以让JVM在出现内存溢出是Dump出当前的内存转储快照</p>\n</li>\n<li><p>用jmap生产dump文件，win通过任务管理器查看tomcat的进程pid，linux用ps命令查看进程pid,然后用jmap命令</p>\n</li>\n</ul>\n<hr>\n<p>先通过内存映像分析工具(如Eclipse的Memory Analyzer)进行分析，常见的情况有：</p>\n<ul>\n<li><p>内存泄露，对象已经死了，无法通过垃圾收集器进行自动回收，通过找出泄露的代码位置和原因，才好确定解决方案</p>\n</li>\n<li><p>内存溢出，内存中的对象都还必须存活着，这说明Java堆分配空间不足，检查堆设置大小（-Xmx与-Xms），检查代码是否存在对象生命周期太长、持有状态时间过长的情况</p>\n</li>\n</ul>\n<h4 id=\"OOM异常示例：\"><a href=\"#OOM异常示例：\" class=\"headerlink\" title=\"OOM异常示例：\"></a>OOM异常示例：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> oom;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * VM Args: -Xms20m -Xmx20m -XX:+HeapDumpOnOutOfMemoryError</span><br><span class=\"line\">* <span class=\"doctag\">@ClassName</span>: HeapOOM </span><br><span class=\"line\">*</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeapOOM</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OOMObject</span></span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;OOMObject&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;OOMObject&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            list.add(<span class=\"keyword\">new</span> OOMObject());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h3><p><a href=\"http://wustrive2008.github.io/2015/12/24/java/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3jvm%E4%B9%8B%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/#捐赠\">传送门</a></p>"},{"title":"Excel数据大量导入MySQL--MySQL数据换行符回车符替换处理","date":"2016-06-01T15:17:41.000Z","photos":["http://img.blog.csdn.net/20160415165437777?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"],"_content":"\n### 在Excel中可以大量数据导入MySQL中###\n\n- 首先打开需要导入的表格，然后另存为，选择文本文件(制表符分隔)\n\n<center>![](http://img.blog.csdn.net/20160415165437777?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<!-- more -->\n\n- 得到一个文本文件\n\n<center>![](http://img.blog.csdn.net/20160415165625530?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n- 然后打开phpmyadmin，执行下面语句（需要自己根据实际情况修改表名）:\n\n```sql\nload data local infile 'D:\\data.txt' into table exceltomysql fields terminated by '\\t';  \n```\n\n\n- 导入的文件有可能会有换行和回车，对我们操作数据库带来了不便，所以我们执行下面语句来替换换行和回车符\n\n```sql\nUPDATE table_name set field_name=REPLACE(REPLACE(field_name,char(10),'<br>'),char(13),'<br>'); \n```\n \n  制表符  char(9)\n  换行符  char(10)\n  回车符  char(13)","source":"_posts/MySQL/Excel数据大量导入MySQL-MySQL数据换行符回车符替换处理.md","raw":"---\ntitle: Excel数据大量导入MySQL--MySQL数据换行符回车符替换处理\ndate: 2016-06-01 15:17:41\ntags: [Excel,MySQL]\ncategories: MySQL\nphotos:\n- http://img.blog.csdn.net/20160415165437777?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\n---\n\n### 在Excel中可以大量数据导入MySQL中###\n\n- 首先打开需要导入的表格，然后另存为，选择文本文件(制表符分隔)\n\n<center>![](http://img.blog.csdn.net/20160415165437777?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<!-- more -->\n\n- 得到一个文本文件\n\n<center>![](http://img.blog.csdn.net/20160415165625530?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n- 然后打开phpmyadmin，执行下面语句（需要自己根据实际情况修改表名）:\n\n```sql\nload data local infile 'D:\\data.txt' into table exceltomysql fields terminated by '\\t';  \n```\n\n\n- 导入的文件有可能会有换行和回车，对我们操作数据库带来了不便，所以我们执行下面语句来替换换行和回车符\n\n```sql\nUPDATE table_name set field_name=REPLACE(REPLACE(field_name,char(10),'<br>'),char(13),'<br>'); \n```\n \n  制表符  char(9)\n  换行符  char(10)\n  回车符  char(13)","slug":"MySQL/Excel数据大量导入MySQL-MySQL数据换行符回车符替换处理","published":1,"updated":"2016-06-17T14:01:54.184Z","comments":1,"layout":"post","link":"","_id":"ciqop7qiv0024kgae8qjcdq75","content":"<h3 id=\"在Excel中可以大量数据导入MySQL中\"><a href=\"#在Excel中可以大量数据导入MySQL中\" class=\"headerlink\" title=\"在Excel中可以大量数据导入MySQL中\"></a>在Excel中可以大量数据导入MySQL中</h3><ul>\n<li>首先打开需要导入的表格，然后另存为，选择文本文件(制表符分隔)</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160415165437777?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<a id=\"more\"></a>\n<ul>\n<li>得到一个文本文件</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160415165625530?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<ul>\n<li>然后打开phpmyadmin，执行下面语句（需要自己根据实际情况修改表名）:</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">load</span> <span class=\"keyword\">data</span> <span class=\"keyword\">local</span> <span class=\"keyword\">infile</span> <span class=\"string\">'D:\\data.txt'</span> <span class=\"keyword\">into</span> <span class=\"keyword\">table</span> exceltomysql <span class=\"keyword\">fields</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">'\\t'</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>导入的文件有可能会有换行和回车，对我们操作数据库带来了不便，所以我们执行下面语句来替换换行和回车符</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> table_name <span class=\"keyword\">set</span> field_name=<span class=\"keyword\">REPLACE</span>(<span class=\"keyword\">REPLACE</span>(field_name,<span class=\"built_in\">char</span>(<span class=\"number\">10</span>),<span class=\"string\">'&lt;br&gt;'</span>),<span class=\"built_in\">char</span>(<span class=\"number\">13</span>),<span class=\"string\">'&lt;br&gt;'</span>);</span><br></pre></td></tr></table></figure>\n<p>  制表符  char(9)<br>  换行符  char(10)<br>  回车符  char(13)</p>\n","excerpt":"<h3 id=\"在Excel中可以大量数据导入MySQL中\"><a href=\"#在Excel中可以大量数据导入MySQL中\" class=\"headerlink\" title=\"在Excel中可以大量数据导入MySQL中\"></a>在Excel中可以大量数据导入MySQL中</h3><ul>\n<li>首先打开需要导入的表格，然后另存为，选择文本文件(制表符分隔)</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160415165437777?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","more":"<ul>\n<li>得到一个文本文件</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20160415165625530?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<ul>\n<li>然后打开phpmyadmin，执行下面语句（需要自己根据实际情况修改表名）:</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">load</span> <span class=\"keyword\">data</span> <span class=\"keyword\">local</span> <span class=\"keyword\">infile</span> <span class=\"string\">'D:\\data.txt'</span> <span class=\"keyword\">into</span> <span class=\"keyword\">table</span> exceltomysql <span class=\"keyword\">fields</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">'\\t'</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>导入的文件有可能会有换行和回车，对我们操作数据库带来了不便，所以我们执行下面语句来替换换行和回车符</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> table_name <span class=\"keyword\">set</span> field_name=<span class=\"keyword\">REPLACE</span>(<span class=\"keyword\">REPLACE</span>(field_name,<span class=\"built_in\">char</span>(<span class=\"number\">10</span>),<span class=\"string\">'&lt;br&gt;'</span>),<span class=\"built_in\">char</span>(<span class=\"number\">13</span>),<span class=\"string\">'&lt;br&gt;'</span>);</span><br></pre></td></tr></table></figure>\n<p>  制表符  char(9)<br>  换行符  char(10)<br>  回车符  char(13)</p>"},{"title":"hexo做SEO（添加sitemap和baidusitemap）","date":"2016-06-06T12:07:57.000Z","_content":"\n- 添加站点地图\n\n站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。Googlebot等搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站\n\n- 安装插件\n\n打开hexo目录下的dos命令行，分别安装百度和google插件\n\n```cpp\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n```\n\n- 在博客目录的_config.yml中添加如下代码\n\n```cpp\n# 自动生成sitemap\nsitemap:\npath: sitemap.xml\nbaidusitemap:\npath: baidusitemap.xml\n```\n\n<!-- more -->\n\n- 编译你的博客\n\n```cpp\nhexo g\n```\n\n- 如果你在你的博客根目录的public下面发现生成了sitemap.xml以及baidusitemap.xml就表示成功了\n\n- 修改 node_modules\\hexo-generator-baidu-sitemap\\baidusitemap.ejs\n文件，将红色框内的地址换成自己的地址\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%81%9Aseo%E5%9B%BE%E7%89%872.png)</center>\n\n- 修改 node_modules\\hexo-generator-sitemap\\sitemap.xml文件，将红色\n框内的地址换成自己的地址\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%81%9Aseo%E5%9B%BE%E7%89%871.png)</center>","source":"_posts/SEO/hexo做SEO（添加sitemap和baidusitemap）.md","raw":"---\ntitle: hexo做SEO（添加sitemap和baidusitemap）\ndate: 2016-06-06 12:07:57\ntags: [SEO,搜索引擎,hexo]\ncategories: SEO\n---\n\n- 添加站点地图\n\n站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。Googlebot等搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站\n\n- 安装插件\n\n打开hexo目录下的dos命令行，分别安装百度和google插件\n\n```cpp\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n```\n\n- 在博客目录的_config.yml中添加如下代码\n\n```cpp\n# 自动生成sitemap\nsitemap:\npath: sitemap.xml\nbaidusitemap:\npath: baidusitemap.xml\n```\n\n<!-- more -->\n\n- 编译你的博客\n\n```cpp\nhexo g\n```\n\n- 如果你在你的博客根目录的public下面发现生成了sitemap.xml以及baidusitemap.xml就表示成功了\n\n- 修改 node_modules\\hexo-generator-baidu-sitemap\\baidusitemap.ejs\n文件，将红色框内的地址换成自己的地址\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%81%9Aseo%E5%9B%BE%E7%89%872.png)</center>\n\n- 修改 node_modules\\hexo-generator-sitemap\\sitemap.xml文件，将红色\n框内的地址换成自己的地址\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%81%9Aseo%E5%9B%BE%E7%89%871.png)</center>","slug":"SEO/hexo做SEO（添加sitemap和baidusitemap）","published":1,"updated":"2016-06-17T14:01:33.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qiz0027kgae773945ms","content":"<ul>\n<li>添加站点地图</li>\n</ul>\n<p>站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。Googlebot等搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站</p>\n<ul>\n<li>安装插件</li>\n</ul>\n<p>打开hexo目录下的dos命令行，分别安装百度和google插件</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在博客目录的_config.yml中添加如下代码</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 自动生成sitemap</span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">path: sitemap.xml</span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">path: baidusitemap.xml</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li>编译你的博客</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>如果你在你的博客根目录的public下面发现生成了sitemap.xml以及baidusitemap.xml就表示成功了</p>\n</li>\n<li><p>修改 node_modules\\hexo-generator-baidu-sitemap\\baidusitemap.ejs<br>文件，将红色框内的地址换成自己的地址</p>\n</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%81%9Aseo%E5%9B%BE%E7%89%872.png\" alt=\"\"></center>\n\n<ul>\n<li>修改 node_modules\\hexo-generator-sitemap\\sitemap.xml文件，将红色<br>框内的地址换成自己的地址</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%81%9Aseo%E5%9B%BE%E7%89%871.png\" alt=\"\"></center>","excerpt":"<ul>\n<li>添加站点地图</li>\n</ul>\n<p>站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。Googlebot等搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站</p>\n<ul>\n<li>安装插件</li>\n</ul>\n<p>打开hexo目录下的dos命令行，分别安装百度和google插件</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在博客目录的_config.yml中添加如下代码</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 自动生成sitemap</span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">path: sitemap.xml</span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">path: baidusitemap.xml</span><br></pre></td></tr></table></figure>","more":"<ul>\n<li>编译你的博客</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>如果你在你的博客根目录的public下面发现生成了sitemap.xml以及baidusitemap.xml就表示成功了</p>\n</li>\n<li><p>修改 node_modules\\hexo-generator-baidu-sitemap\\baidusitemap.ejs<br>文件，将红色框内的地址换成自己的地址</p>\n</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%81%9Aseo%E5%9B%BE%E7%89%872.png\" alt=\"\"></center>\n\n<ul>\n<li>修改 node_modules\\hexo-generator-sitemap\\sitemap.xml文件，将红色<br>框内的地址换成自己的地址</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%81%9Aseo%E5%9B%BE%E7%89%871.png\" alt=\"\"></center>"},{"title":"hexo博客添加域名实现双线部署（github和coding）","date":"2016-06-07T11:47:00.000Z","_content":"\n- 首先申请一个域名\n\n- 在hexo目录下的source目录下新建一个文件CNAME，不要带后缀，也就是没有文件类型，可以使用命令来创建\n\n```cpp\ncd source\ntouch CNAME\n```\n\n- 然后添加自己申请的域名,不带 http 和 www \n```cpp\nqiuchengjia.cn\n```\n- 我建议到 [dnspod](https://www.dnspod.cn/) 进行解析管理，我们可以在这里实现国内用户走coding，国外用户\n走github\n\n\n- 首先进入coding pages页面，添加自己的域名\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%9F%9F%E5%90%8D3.png)</center>\n\n<!-- more -->\n\n- 然后进入 dnspod 进行配置，如图\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%9F%9F%E5%90%8D2.png)</center>\n\n- NS记录的记录值\n\n\n```cpp\nf1g1ns1.dnspod.net.\nf1g1ns2.dnspod.net.\n```\n\n","source":"_posts/SEO/hexo博客添加域名实现双线部署（github和coding）.md","raw":"---\ntitle: hexo博客添加域名实现双线部署（github和coding）\ndate: 2016-06-07 11:47:00\ntags: [SEO,hexo,搜索引擎]\ncategories:  SEO\n---\n\n- 首先申请一个域名\n\n- 在hexo目录下的source目录下新建一个文件CNAME，不要带后缀，也就是没有文件类型，可以使用命令来创建\n\n```cpp\ncd source\ntouch CNAME\n```\n\n- 然后添加自己申请的域名,不带 http 和 www \n```cpp\nqiuchengjia.cn\n```\n- 我建议到 [dnspod](https://www.dnspod.cn/) 进行解析管理，我们可以在这里实现国内用户走coding，国外用户\n走github\n\n\n- 首先进入coding pages页面，添加自己的域名\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%9F%9F%E5%90%8D3.png)</center>\n\n<!-- more -->\n\n- 然后进入 dnspod 进行配置，如图\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%9F%9F%E5%90%8D2.png)</center>\n\n- NS记录的记录值\n\n\n```cpp\nf1g1ns1.dnspod.net.\nf1g1ns2.dnspod.net.\n```\n\n","slug":"SEO/hexo博客添加域名实现双线部署（github和coding）","published":1,"updated":"2016-06-17T14:01:12.239Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qj5002akgaea82wy2il","content":"<ul>\n<li><p>首先申请一个域名</p>\n</li>\n<li><p>在hexo目录下的source目录下新建一个文件CNAME，不要带后缀，也就是没有文件类型，可以使用命令来创建</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd source</span><br><span class=\"line\">touch CNAME</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>然后添加自己申请的域名,不带 http 和 www </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiuchengjia.cn</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>我建议到 <a href=\"https://www.dnspod.cn/\" target=\"_blank\" rel=\"external\">dnspod</a> 进行解析管理，我们可以在这里实现国内用户走coding，国外用户<br>走github</p>\n</li>\n</ul>\n<ul>\n<li>首先进入coding pages页面，添加自己的域名</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%9F%9F%E5%90%8D3.png\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<ul>\n<li>然后进入 dnspod 进行配置，如图</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%9F%9F%E5%90%8D2.png\" alt=\"\"></center>\n\n<ul>\n<li>NS记录的记录值</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f1g1ns1.dnspod.net.</span><br><span class=\"line\">f1g1ns2.dnspod.net.</span><br></pre></td></tr></table></figure>\n","excerpt":"<ul>\n<li><p>首先申请一个域名</p>\n</li>\n<li><p>在hexo目录下的source目录下新建一个文件CNAME，不要带后缀，也就是没有文件类型，可以使用命令来创建</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd source</span><br><span class=\"line\">touch CNAME</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>然后添加自己申请的域名,不带 http 和 www </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiuchengjia.cn</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>我建议到 <a href=\"https://www.dnspod.cn/\">dnspod</a> 进行解析管理，我们可以在这里实现国内用户走coding，国外用户<br>走github</p>\n</li>\n</ul>\n<ul>\n<li>首先进入coding pages页面，添加自己的域名</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%9F%9F%E5%90%8D3.png\" alt=\"\"></center>","more":"<ul>\n<li>然后进入 dnspod 进行配置，如图</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%9F%9F%E5%90%8D2.png\" alt=\"\"></center>\n\n<ul>\n<li>NS记录的记录值</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f1g1ns1.dnspod.net.</span><br><span class=\"line\">f1g1ns2.dnspod.net.</span><br></pre></td></tr></table></figure>"},{"title":"CentOS从php5.3升级到php5.5","date":"2016-06-01T15:31:35.000Z","_content":"\n- 首先检查php版本\n\n```cpp\n php  --version  \n```\n\n- 增加 yum repository 以便下载php\n\n```cpp\nrpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm  \n```\n\n- 安装php5.5\n\n```cpp\n yum install php55w php55w-opcache  \n```\n\n- 为了升级取代原来5.3档案\n\n```cpp\nyum install yum-plugin-replace  \n  \nyum replace php-common --replace-with=php55w-common  \n```\n\n<!-- more -->","source":"_posts/linux/CentOS从php5-3升级到php5-5.md","raw":"---\ntitle: CentOS从php5.3升级到php5.5\ndate: 2016-06-01 15:31:35\ntags: [CentOS,linux]\ncategories: linux\n---\n\n- 首先检查php版本\n\n```cpp\n php  --version  \n```\n\n- 增加 yum repository 以便下载php\n\n```cpp\nrpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm  \n```\n\n- 安装php5.5\n\n```cpp\n yum install php55w php55w-opcache  \n```\n\n- 为了升级取代原来5.3档案\n\n```cpp\nyum install yum-plugin-replace  \n  \nyum replace php-common --replace-with=php55w-common  \n```\n\n<!-- more -->","slug":"linux/CentOS从php5-3升级到php5-5","published":1,"updated":"2016-06-17T14:02:17.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qj8002ckgaecetu3wzv","content":"<ul>\n<li>首先检查php版本</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php  --version</span><br></pre></td></tr></table></figure>\n<ul>\n<li>增加 yum repository 以便下载php</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -Uvh http:<span class=\"comment\">//mirror.webtatic.com/yum/el6/latest.rpm</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装php5.5</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install php55w php55w-opcache</span><br></pre></td></tr></table></figure>\n<ul>\n<li>为了升级取代原来5.3档案</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install yum-plugin-replace  </span><br><span class=\"line\">  </span><br><span class=\"line\">yum replace php-common --replace-with=php55w-common</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>","excerpt":"<ul>\n<li>首先检查php版本</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php  --version</span><br></pre></td></tr></table></figure>\n<ul>\n<li>增加 yum repository 以便下载php</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -Uvh http:<span class=\"comment\">//mirror.webtatic.com/yum/el6/latest.rpm</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装php5.5</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install php55w php55w-opcache</span><br></pre></td></tr></table></figure>\n<ul>\n<li>为了升级取代原来5.3档案</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install yum-plugin-replace  </span><br><span class=\"line\">  </span><br><span class=\"line\">yum replace php-common --replace-with=php55w-common</span><br></pre></td></tr></table></figure>","more":""},{"title":" Linux下安装Sublime Text3及其破解","date":"2015-06-01T13:20:59.000Z","_content":"\nsublime可以说使ubuntu下最性感的编辑器，暗黑的风格更是让我们这些程序猿们心动。不过这是一款收费软件，至于怎么和谐就看大家了。它同样支持各类插件、代码高亮等功能。具体功能可以查看官网\n\n\n       安装：\n       \n       \n```cpp\nsudo add-apt-repository ppa:webupd8team/sublime-text-3    \nsudo apt-get update   \nsudo apt-get install sublime-text-installer   \n```\n\n<!-- more -->\n\n安装好之后就将注册码：\n\n```cpp\n—– BEGIN LICENSE —–  \nAndrew Weber  \nSingle User License  \nEA7E-855605  \n813A03DD 5E4AD9E6 6C0EEB94 BC99798F  \n942194A6 02396E98 E62C9979 4BB979FE  \n91424C9D A45400BF F6747D88 2FB88078  \n90F5CC94 1CDC92DC 8457107A F151657B  \n1D22E383 A997F016 42397640 33F41CFC  \nE1D0AE85 A0BBD039 0E9C8D55 E1B89D5D  \n5CDB7036 E56DE1C0 EFCC0840 650CD3A6  \nB98FC99C 8FAC73EE D2B95564 DF450523  \n—— END LICENSE ——  \n```\n\n然后注册完成\n","source":"_posts/linux/Linux下安装Sublime-Text3及其破解.md","raw":"---\ntitle: ' Linux下安装Sublime Text3及其破解'\ndate: 2015-06-01 13:20:59\ntags: [linux,SublimeText]\ncategories: linux\n---\n\nsublime可以说使ubuntu下最性感的编辑器，暗黑的风格更是让我们这些程序猿们心动。不过这是一款收费软件，至于怎么和谐就看大家了。它同样支持各类插件、代码高亮等功能。具体功能可以查看官网\n\n\n       安装：\n       \n       \n```cpp\nsudo add-apt-repository ppa:webupd8team/sublime-text-3    \nsudo apt-get update   \nsudo apt-get install sublime-text-installer   \n```\n\n<!-- more -->\n\n安装好之后就将注册码：\n\n```cpp\n—– BEGIN LICENSE —–  \nAndrew Weber  \nSingle User License  \nEA7E-855605  \n813A03DD 5E4AD9E6 6C0EEB94 BC99798F  \n942194A6 02396E98 E62C9979 4BB979FE  \n91424C9D A45400BF F6747D88 2FB88078  \n90F5CC94 1CDC92DC 8457107A F151657B  \n1D22E383 A997F016 42397640 33F41CFC  \nE1D0AE85 A0BBD039 0E9C8D55 E1B89D5D  \n5CDB7036 E56DE1C0 EFCC0840 650CD3A6  \nB98FC99C 8FAC73EE D2B95564 DF450523  \n—— END LICENSE ——  \n```\n\n然后注册完成\n","slug":"linux/Linux下安装Sublime-Text3及其破解","published":1,"updated":"2016-06-17T14:03:42.829Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qjg002fkgaeroosz8ob","content":"<p>sublime可以说使ubuntu下最性感的编辑器，暗黑的风格更是让我们这些程序猿们心动。不过这是一款收费软件，至于怎么和谐就看大家了。它同样支持各类插件、代码高亮等功能。具体功能可以查看官网</p>\n<pre><code>安装：\n</code></pre><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository ppa:webupd8team/sublime-text<span class=\"number\">-3</span>    </span><br><span class=\"line\">sudo apt-get update   </span><br><span class=\"line\">sudo apt-get install sublime-text-installer</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>安装好之后就将注册码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">—– BEGIN LICENSE —–  </span><br><span class=\"line\">Andrew Weber  </span><br><span class=\"line\">Single User License  </span><br><span class=\"line\">EA7E<span class=\"number\">-855605</span>  </span><br><span class=\"line\"><span class=\"number\">813</span>A03DD <span class=\"number\">5E4</span>AD9E6 <span class=\"number\">6</span>C0EEB94 BC99798F  </span><br><span class=\"line\"><span class=\"number\">942194</span>A6 <span class=\"number\">02396E98</span> E62C9979 <span class=\"number\">4</span>BB979FE  </span><br><span class=\"line\"><span class=\"number\">91424</span>C9D A45400BF F6747D88 <span class=\"number\">2F</span>B88078  </span><br><span class=\"line\"><span class=\"number\">90F</span>5CC94 <span class=\"number\">1</span>CDC92DC <span class=\"number\">8457107</span>A F151657B  </span><br><span class=\"line\"><span class=\"number\">1</span>D22E383 A997F016 <span class=\"number\">42397640</span> <span class=\"number\">33F</span>41CFC  </span><br><span class=\"line\">E1D0AE85 A0BBD039 <span class=\"number\">0E9</span>C8D55 E1B89D5D  </span><br><span class=\"line\"><span class=\"number\">5</span>CDB7036 E56DE1C0 EFCC0840 <span class=\"number\">650</span>CD3A6  </span><br><span class=\"line\">B98FC99C <span class=\"number\">8F</span>AC73EE D2B95564 DF450523  </span><br><span class=\"line\">—— END LICENSE ——</span><br></pre></td></tr></table></figure>\n<p>然后注册完成</p>\n","excerpt":"<p>sublime可以说使ubuntu下最性感的编辑器，暗黑的风格更是让我们这些程序猿们心动。不过这是一款收费软件，至于怎么和谐就看大家了。它同样支持各类插件、代码高亮等功能。具体功能可以查看官网</p>\n<pre><code>安装：\n</code></pre><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository ppa:webupd8team/sublime-text<span class=\"number\">-3</span>    </span><br><span class=\"line\">sudo apt-get update   </span><br><span class=\"line\">sudo apt-get install sublime-text-installer</span><br></pre></td></tr></table></figure>","more":"<p>安装好之后就将注册码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">—– BEGIN LICENSE —–  </span><br><span class=\"line\">Andrew Weber  </span><br><span class=\"line\">Single User License  </span><br><span class=\"line\">EA7E<span class=\"number\">-855605</span>  </span><br><span class=\"line\"><span class=\"number\">813</span>A03DD <span class=\"number\">5E4</span>AD9E6 <span class=\"number\">6</span>C0EEB94 BC99798F  </span><br><span class=\"line\"><span class=\"number\">942194</span>A6 <span class=\"number\">02396E98</span> E62C9979 <span class=\"number\">4</span>BB979FE  </span><br><span class=\"line\"><span class=\"number\">91424</span>C9D A45400BF F6747D88 <span class=\"number\">2F</span>B88078  </span><br><span class=\"line\"><span class=\"number\">90F</span>5CC94 <span class=\"number\">1</span>CDC92DC <span class=\"number\">8457107</span>A F151657B  </span><br><span class=\"line\"><span class=\"number\">1</span>D22E383 A997F016 <span class=\"number\">42397640</span> <span class=\"number\">33F</span>41CFC  </span><br><span class=\"line\">E1D0AE85 A0BBD039 <span class=\"number\">0E9</span>C8D55 E1B89D5D  </span><br><span class=\"line\"><span class=\"number\">5</span>CDB7036 E56DE1C0 EFCC0840 <span class=\"number\">650</span>CD3A6  </span><br><span class=\"line\">B98FC99C <span class=\"number\">8F</span>AC73EE D2B95564 DF450523  </span><br><span class=\"line\">—— END LICENSE ——</span><br></pre></td></tr></table></figure>\n<p>然后注册完成</p>"},{"title":"Linux下安装sublime汉化版及完美输入中文","date":"2015-06-01T14:18:09.000Z","_content":"\n- 网上其实有一种方法可以使sublime，但是都没有我这种方法来的直接，直接到我的网盘中下载这个压缩文件，然后解压缩就可以使用了，地址：[传送门](http://pan.baidu.com/s/1jHf0GEq)\n\n-     然后进入sublime的解压目录，执行\n\n```cpp\nsudo ./firstrun.sh\n```\n\n选择下图应用打开，然后完美输入中文\n\n<center>![](http://img.blog.csdn.net/20151219220227122?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<center>![](http://img.blog.csdn.net/20151219220323670?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->","source":"_posts/linux/Linux下安装sublime汉化版及完美输入中文.md","raw":"---\ntitle: Linux下安装sublime汉化版及完美输入中文\ndate: 2015-06-01 14:18:09\ntags: [linux,SublimeText]\ncategories: linux \n---\n\n- 网上其实有一种方法可以使sublime，但是都没有我这种方法来的直接，直接到我的网盘中下载这个压缩文件，然后解压缩就可以使用了，地址：[传送门](http://pan.baidu.com/s/1jHf0GEq)\n\n-     然后进入sublime的解压目录，执行\n\n```cpp\nsudo ./firstrun.sh\n```\n\n选择下图应用打开，然后完美输入中文\n\n<center>![](http://img.blog.csdn.net/20151219220227122?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<center>![](http://img.blog.csdn.net/20151219220323670?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->","slug":"linux/Linux下安装sublime汉化版及完美输入中文","published":1,"updated":"2016-06-17T14:04:03.201Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qjl002hkgaebbnj28n3","content":"<ul>\n<li><p>网上其实有一种方法可以使sublime，但是都没有我这种方法来的直接，直接到我的网盘中下载这个压缩文件，然后解压缩就可以使用了，地址：<a href=\"http://pan.baidu.com/s/1jHf0GEq\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>然后进入sublime的解压目录，执行</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ./firstrun.sh</span><br></pre></td></tr></table></figure>\n<p>选择下图应用打开，然后完美输入中文</p>\n<center><img src=\"http://img.blog.csdn.net/20151219220227122?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<center><img src=\"http://img.blog.csdn.net/20151219220323670?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<a id=\"more\"></a>","excerpt":"<ul>\n<li><p>网上其实有一种方法可以使sublime，但是都没有我这种方法来的直接，直接到我的网盘中下载这个压缩文件，然后解压缩就可以使用了，地址：<a href=\"http://pan.baidu.com/s/1jHf0GEq\">传送门</a></p>\n</li>\n<li><p>然后进入sublime的解压目录，执行</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ./firstrun.sh</span><br></pre></td></tr></table></figure>\n<p>选择下图应用打开，然后完美输入中文</p>\n<center><img src=\"http://img.blog.csdn.net/20151219220227122?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<center><img src=\"http://img.blog.csdn.net/20151219220323670?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","more":""},{"title":"Linux如何使用腾讯QQ","date":"2015-06-01T13:45:50.000Z","_content":"\n- 首先我们需要下载一个国际qq的安装包，地址：[传送门](http://www.ubuntukylin.com/applications/showimg.php?lang=cn&id=23)\n\n\n- 下载好了之后就解压，然后安装\n\n<center>![](http://img.blog.csdn.net/20151217150610620?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n如图，安装红色框中的那个，然后我们就可以使用qq了\n\n\n\n\n<center>![](http://img.blog.csdn.net/20151217150943755?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<!-- more -->","source":"_posts/linux/Linux如何使用腾讯QQ.md","raw":"---\ntitle: Linux如何使用腾讯QQ\ndate: 2015-06-01 13:45:50\ntags: [linux,qq]\ncategories: linux\n---\n\n- 首先我们需要下载一个国际qq的安装包，地址：[传送门](http://www.ubuntukylin.com/applications/showimg.php?lang=cn&id=23)\n\n\n- 下载好了之后就解压，然后安装\n\n<center>![](http://img.blog.csdn.net/20151217150610620?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n如图，安装红色框中的那个，然后我们就可以使用qq了\n\n\n\n\n<center>![](http://img.blog.csdn.net/20151217150943755?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<!-- more -->","slug":"linux/Linux如何使用腾讯QQ","published":1,"updated":"2016-06-17T14:03:18.708Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qjr002lkgaeh9et3vaw","content":"<ul>\n<li>首先我们需要下载一个国际qq的安装包，地址：<a href=\"http://www.ubuntukylin.com/applications/showimg.php?lang=cn&amp;id=23\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<ul>\n<li>下载好了之后就解压，然后安装</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217150610620?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<p>如图，安装红色框中的那个，然后我们就可以使用qq了</p>\n<center><img src=\"http://img.blog.csdn.net/20151217150943755?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<a id=\"more\"></a>","excerpt":"<ul>\n<li>首先我们需要下载一个国际qq的安装包，地址：<a href=\"http://www.ubuntukylin.com/applications/showimg.php?lang=cn&amp;id=23\">传送门</a></li>\n</ul>\n<ul>\n<li>下载好了之后就解压，然后安装</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217150610620?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<p>如图，安装红色框中的那个，然后我们就可以使用qq了</p>\n<center><img src=\"http://img.blog.csdn.net/20151217150943755?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","more":""},{"title":" Linux如何安装爱壁纸HD","date":"2015-06-01T13:17:15.000Z","_content":"\n爱壁纸HD是一款专业的桌面高清壁纸软件，提供了大量的优质高清壁纸，具有试试手气、按颜色筛选壁纸以及定时切换壁纸等功能，可满足我们平常对壁纸的需求。爱壁纸HD提供包括 Linux 平台在内的多版本支持\n\n<center>![](http://img.blog.csdn.net/20151217143859263?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->\n\nLinux Deepin 用户可以去官网下载DEB格式进行下载安装，下载地址：[传送门](http://lovebizhi.com/linux.html)\n下载完成之后点击安装就可以使用了。最后在附上一张使用后的图片\n\n<center>![](http://img.blog.csdn.net/20151217143944700?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>","source":"_posts/linux/Linux如何安装爱壁纸HD.md","raw":"---\ntitle: ' Linux如何安装爱壁纸HD'\ndate: 2015-06-01 13:17:15\ntags: linux\ncategories: linux\n---\n\n爱壁纸HD是一款专业的桌面高清壁纸软件，提供了大量的优质高清壁纸，具有试试手气、按颜色筛选壁纸以及定时切换壁纸等功能，可满足我们平常对壁纸的需求。爱壁纸HD提供包括 Linux 平台在内的多版本支持\n\n<center>![](http://img.blog.csdn.net/20151217143859263?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->\n\nLinux Deepin 用户可以去官网下载DEB格式进行下载安装，下载地址：[传送门](http://lovebizhi.com/linux.html)\n下载完成之后点击安装就可以使用了。最后在附上一张使用后的图片\n\n<center>![](http://img.blog.csdn.net/20151217143944700?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>","slug":"linux/Linux如何安装爱壁纸HD","published":1,"updated":"2016-06-17T14:02:36.093Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qjw002nkgaebti5s0kj","content":"<p>爱壁纸HD是一款专业的桌面高清壁纸软件，提供了大量的优质高清壁纸，具有试试手气、按颜色筛选壁纸以及定时切换壁纸等功能，可满足我们平常对壁纸的需求。爱壁纸HD提供包括 Linux 平台在内的多版本支持</p>\n<center><img src=\"http://img.blog.csdn.net/20151217143859263?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<p>Linux Deepin 用户可以去官网下载DEB格式进行下载安装，下载地址：<a href=\"http://lovebizhi.com/linux.html\" target=\"_blank\" rel=\"external\">传送门</a><br>下载完成之后点击安装就可以使用了。最后在附上一张使用后的图片</p>\n<center><img src=\"http://img.blog.csdn.net/20151217143944700?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","excerpt":"<p>爱壁纸HD是一款专业的桌面高清壁纸软件，提供了大量的优质高清壁纸，具有试试手气、按颜色筛选壁纸以及定时切换壁纸等功能，可满足我们平常对壁纸的需求。爱壁纸HD提供包括 Linux 平台在内的多版本支持</p>\n<center><img src=\"http://img.blog.csdn.net/20151217143859263?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","more":"<p>Linux Deepin 用户可以去官网下载DEB格式进行下载安装，下载地址：<a href=\"http://lovebizhi.com/linux.html\">传送门</a><br>下载完成之后点击安装就可以使用了。最后在附上一张使用后的图片</p>\n<center><img src=\"http://img.blog.csdn.net/20151217143944700?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>"},{"title":"Wing IDE for Linux 的安装和破解","date":"2015-06-01T13:23:46.000Z","_content":"\n\nWing IDE是linux下python的集成开发环境，虽然python提供了命令行下的交互操作，但是对于实际的python程序开发的话，众多的python包导入、功能提示、调试就有很大的负担，Wing IDE 可以帮助解决。美中不足的是它也是一款收费软件\n\n\n- 安装\n\n\n 我们首先去 Wing IDE   \n    官网上下载软件，网址：[传送门](http://wingware.com/downloads) ，然后我们通过ubuntu软件中心安装\n\n- 破解\n\n     破解之前需要下载一个脚本，下载地址：[传送门](http://download.csdn.net/detail/sunmc1204953974/8689733)\n\n   脚本源码：\n   \n   <!-- more -->\n   \n   \n```python\nimport sha  \nimport string  \nBASE2 = '01'  \nBASE10 = '0123456789'  \nBASE16 = '0123456789ABCDEF'  \nBASE30 = '123456789ABCDEFGHJKLMNPQRTVWXY'  \nBASE36 = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'  \nBASE62 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz'  \nBASEMAX = string.printable  \ndef BaseConvert(number, fromdigits, todigits, ignore_negative = True):  \n    \"\"\" converts a \"number\" between two bases of arbitrary digits \n     \n    The input number is assumed to be a string of digits from the \n    fromdigits string (which is in order of smallest to largest \n    digit). The return value is a string of elements from todigits \n    (ordered in the same way). The input and output bases are \n    determined from the lengths of the digit strings. Negative  \n    signs are passed through. \n     \n    decimal to binary \n    >>> baseconvert(555,BASE10,BASE2) \n    '1000101011' \n     \n    binary to decimal \n    >>> baseconvert('1000101011',BASE2,BASE10) \n    '555' \n     \n    integer interpreted as binary and converted to decimal (!) \n    >>> baseconvert(1000101011,BASE2,BASE10) \n    '555' \n     \n    base10 to base4 \n    >>> baseconvert(99,BASE10,\"0123\") \n    '1203' \n     \n    base4 to base5 (with alphabetic digits) \n    >>> baseconvert(1203,\"0123\",\"abcde\") \n    'dee' \n     \n    base5, alpha digits back to base 10 \n    >>> baseconvert('dee',\"abcde\",BASE10) \n    '99' \n     \n    decimal to a base that uses A-Z0-9a-z for its digits \n    >>> baseconvert(257938572394L,BASE10,BASE62) \n    'E78Lxik' \n     \n    ..convert back \n    >>> baseconvert('E78Lxik',BASE62,BASE10) \n    '257938572394' \n     \n    binary to a base with words for digits (the function cannot convert this back) \n    >>> baseconvert('1101',BASE2,('Zero','One')) \n    'OneOneZeroOne' \n     \n    \"\"\"  \n    if not ignore_negative and str(number)[0] == '-':  \n        number = str(number)[1:]  \n        neg = 1  \n    else:  \n        neg = 0  \n    x = long(0)  \n    for digit in str(number):  \n        x = x * len(fromdigits) + fromdigits.index(digit)  \n  \n    res = ''  \n    while x > 0:  \n        digit = x % len(todigits)  \n        res = todigits[digit] + res  \n        x /= len(todigits)  \n  \n    if neg:  \n        res = '-' + res  \n    return res  \n  \ndef SHAToBase30(digest):  \n    \"\"\"Convert from a hexdigest form SHA hash into a more compact and \n    ergonomic BASE30 representation.  This results in a 17 'digit'  \n    number.\"\"\"  \n    tdigest = ''.join([ c for i, c in enumerate(digest) if i / 2 * 2 == i ])  \n    result = BaseConvert(tdigest, BASE16, BASE30)  \n    while len(result) < 17:  \n        result = '1' + result  \n  \n    return result  \ndef AddHyphens(code):  \n    \"\"\"Insert hyphens into given license id or activation request to \n    make it easier to read\"\"\"  \n    return code[:5] + '-' + code[5:10] + '-' + code[10:15] + '-' + code[15:]  \n  \nLicenseID='CN123-12345-12345-12345'  \n#Copy the Request Code from the dialog  \nRequestCode='RL539-Y89TE-A7531-PQCKA'  \nhasher = sha.new()  \nhasher.update(RequestCode)  \nhasher.update(LicenseID)  \ndigest = hasher.hexdigest().upper()  \nlichash = RequestCode[:3] + SHAToBase30(digest)  \nlichash=AddHyphens(lichash)  \n  \n#Calculate the Activation Code  \ndata=[7,123,23,87]  \ntmp=0  \nrealcode=''  \nfor i in data:  \n    for j in lichash:  \n        tmp=(tmp*i+ord(j))&0xFFFFF  \n    realcode+=format(tmp,'=05X')  \n    tmp=0  \n  \nact30=BaseConvert(realcode,BASE16,BASE30)  \nwhile len(act30) < 17:  \n    act30 = '1' + act30  \nact30='AXX'+act30  \nact30=AddHyphens(act30)  \nprint \"The Activation Code is: \"+act30  \n```\n\n\n- 安装WingIDE成功后启动，激活时输入  license id CN123-12345-12345-12345\n\n\n\n<center>![](http://img.blog.csdn.net/20151217144935119?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n- 点击Continue后弹框，拷贝框中的request code\n\n<center>![](http://img.blog.csdn.net/20151217145011219?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n- 修改Python脚本中的Request Code为刚才得到的RequestCode值，运行脚本后得到激活码，填入即可成功注册\n\n<center>![](http://img.blog.csdn.net/20151217145050003?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n\n<center>![](http://img.blog.csdn.net/20151217145055927?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>","source":"_posts/linux/Wing-IDE-for-Linux-的安装和破解.md","raw":"---\ntitle: Wing IDE for Linux 的安装和破解\ndate: 2015-06-01 13:23:46\ntags: [linux,Wing]\ncategories: linux\n---\n\n\nWing IDE是linux下python的集成开发环境，虽然python提供了命令行下的交互操作，但是对于实际的python程序开发的话，众多的python包导入、功能提示、调试就有很大的负担，Wing IDE 可以帮助解决。美中不足的是它也是一款收费软件\n\n\n- 安装\n\n\n 我们首先去 Wing IDE   \n    官网上下载软件，网址：[传送门](http://wingware.com/downloads) ，然后我们通过ubuntu软件中心安装\n\n- 破解\n\n     破解之前需要下载一个脚本，下载地址：[传送门](http://download.csdn.net/detail/sunmc1204953974/8689733)\n\n   脚本源码：\n   \n   <!-- more -->\n   \n   \n```python\nimport sha  \nimport string  \nBASE2 = '01'  \nBASE10 = '0123456789'  \nBASE16 = '0123456789ABCDEF'  \nBASE30 = '123456789ABCDEFGHJKLMNPQRTVWXY'  \nBASE36 = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'  \nBASE62 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz'  \nBASEMAX = string.printable  \ndef BaseConvert(number, fromdigits, todigits, ignore_negative = True):  \n    \"\"\" converts a \"number\" between two bases of arbitrary digits \n     \n    The input number is assumed to be a string of digits from the \n    fromdigits string (which is in order of smallest to largest \n    digit). The return value is a string of elements from todigits \n    (ordered in the same way). The input and output bases are \n    determined from the lengths of the digit strings. Negative  \n    signs are passed through. \n     \n    decimal to binary \n    >>> baseconvert(555,BASE10,BASE2) \n    '1000101011' \n     \n    binary to decimal \n    >>> baseconvert('1000101011',BASE2,BASE10) \n    '555' \n     \n    integer interpreted as binary and converted to decimal (!) \n    >>> baseconvert(1000101011,BASE2,BASE10) \n    '555' \n     \n    base10 to base4 \n    >>> baseconvert(99,BASE10,\"0123\") \n    '1203' \n     \n    base4 to base5 (with alphabetic digits) \n    >>> baseconvert(1203,\"0123\",\"abcde\") \n    'dee' \n     \n    base5, alpha digits back to base 10 \n    >>> baseconvert('dee',\"abcde\",BASE10) \n    '99' \n     \n    decimal to a base that uses A-Z0-9a-z for its digits \n    >>> baseconvert(257938572394L,BASE10,BASE62) \n    'E78Lxik' \n     \n    ..convert back \n    >>> baseconvert('E78Lxik',BASE62,BASE10) \n    '257938572394' \n     \n    binary to a base with words for digits (the function cannot convert this back) \n    >>> baseconvert('1101',BASE2,('Zero','One')) \n    'OneOneZeroOne' \n     \n    \"\"\"  \n    if not ignore_negative and str(number)[0] == '-':  \n        number = str(number)[1:]  \n        neg = 1  \n    else:  \n        neg = 0  \n    x = long(0)  \n    for digit in str(number):  \n        x = x * len(fromdigits) + fromdigits.index(digit)  \n  \n    res = ''  \n    while x > 0:  \n        digit = x % len(todigits)  \n        res = todigits[digit] + res  \n        x /= len(todigits)  \n  \n    if neg:  \n        res = '-' + res  \n    return res  \n  \ndef SHAToBase30(digest):  \n    \"\"\"Convert from a hexdigest form SHA hash into a more compact and \n    ergonomic BASE30 representation.  This results in a 17 'digit'  \n    number.\"\"\"  \n    tdigest = ''.join([ c for i, c in enumerate(digest) if i / 2 * 2 == i ])  \n    result = BaseConvert(tdigest, BASE16, BASE30)  \n    while len(result) < 17:  \n        result = '1' + result  \n  \n    return result  \ndef AddHyphens(code):  \n    \"\"\"Insert hyphens into given license id or activation request to \n    make it easier to read\"\"\"  \n    return code[:5] + '-' + code[5:10] + '-' + code[10:15] + '-' + code[15:]  \n  \nLicenseID='CN123-12345-12345-12345'  \n#Copy the Request Code from the dialog  \nRequestCode='RL539-Y89TE-A7531-PQCKA'  \nhasher = sha.new()  \nhasher.update(RequestCode)  \nhasher.update(LicenseID)  \ndigest = hasher.hexdigest().upper()  \nlichash = RequestCode[:3] + SHAToBase30(digest)  \nlichash=AddHyphens(lichash)  \n  \n#Calculate the Activation Code  \ndata=[7,123,23,87]  \ntmp=0  \nrealcode=''  \nfor i in data:  \n    for j in lichash:  \n        tmp=(tmp*i+ord(j))&0xFFFFF  \n    realcode+=format(tmp,'=05X')  \n    tmp=0  \n  \nact30=BaseConvert(realcode,BASE16,BASE30)  \nwhile len(act30) < 17:  \n    act30 = '1' + act30  \nact30='AXX'+act30  \nact30=AddHyphens(act30)  \nprint \"The Activation Code is: \"+act30  \n```\n\n\n- 安装WingIDE成功后启动，激活时输入  license id CN123-12345-12345-12345\n\n\n\n<center>![](http://img.blog.csdn.net/20151217144935119?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n- 点击Continue后弹框，拷贝框中的request code\n\n<center>![](http://img.blog.csdn.net/20151217145011219?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n- 修改Python脚本中的Request Code为刚才得到的RequestCode值，运行脚本后得到激活码，填入即可成功注册\n\n<center>![](http://img.blog.csdn.net/20151217145050003?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n\n<center>![](http://img.blog.csdn.net/20151217145055927?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>","slug":"linux/Wing-IDE-for-Linux-的安装和破解","published":1,"updated":"2016-06-17T14:04:52.283Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qk0002skgaevos4cq9z","content":"<p>Wing IDE是linux下python的集成开发环境，虽然python提供了命令行下的交互操作，但是对于实际的python程序开发的话，众多的python包导入、功能提示、调试就有很大的负担，Wing IDE 可以帮助解决。美中不足的是它也是一款收费软件</p>\n<ul>\n<li>安装</li>\n</ul>\n<p> 我们首先去 Wing IDE<br>    官网上下载软件，网址：<a href=\"http://wingware.com/downloads\" target=\"_blank\" rel=\"external\">传送门</a> ，然后我们通过ubuntu软件中心安装</p>\n<ul>\n<li><p>破解</p>\n<p>   破解之前需要下载一个脚本，下载地址：<a href=\"http://download.csdn.net/detail/sunmc1204953974/8689733\" target=\"_blank\" rel=\"external\">传送门</a></p>\n<p> 脚本源码：</p>\n <a id=\"more\"></a>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sha  </span><br><span class=\"line\"><span class=\"keyword\">import</span> string  </span><br><span class=\"line\">BASE2 = <span class=\"string\">'01'</span>  </span><br><span class=\"line\">BASE10 = <span class=\"string\">'0123456789'</span>  </span><br><span class=\"line\">BASE16 = <span class=\"string\">'0123456789ABCDEF'</span>  </span><br><span class=\"line\">BASE30 = <span class=\"string\">'123456789ABCDEFGHJKLMNPQRTVWXY'</span>  </span><br><span class=\"line\">BASE36 = <span class=\"string\">'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>  </span><br><span class=\"line\">BASE62 = <span class=\"string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz'</span>  </span><br><span class=\"line\">BASEMAX = string.printable  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">BaseConvert</span><span class=\"params\">(number, fromdigits, todigits, ignore_negative = True)</span>:</span>  </span><br><span class=\"line\">    <span class=\"string\">\"\"\" converts a \"number\" between two bases of arbitrary digits </span><br><span class=\"line\">     </span><br><span class=\"line\">    The input number is assumed to be a string of digits from the </span><br><span class=\"line\">    fromdigits string (which is in order of smallest to largest </span><br><span class=\"line\">    digit). The return value is a string of elements from todigits </span><br><span class=\"line\">    (ordered in the same way). The input and output bases are </span><br><span class=\"line\">    determined from the lengths of the digit strings. Negative  </span><br><span class=\"line\">    signs are passed through. </span><br><span class=\"line\">     </span><br><span class=\"line\">    decimal to binary </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(555,BASE10,BASE2) </span><br><span class=\"line\">    '1000101011' </span><br><span class=\"line\">     </span><br><span class=\"line\">    binary to decimal </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert('1000101011',BASE2,BASE10) </span><br><span class=\"line\">    '555' </span><br><span class=\"line\">     </span><br><span class=\"line\">    integer interpreted as binary and converted to decimal (!) </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(1000101011,BASE2,BASE10) </span><br><span class=\"line\">    '555' </span><br><span class=\"line\">     </span><br><span class=\"line\">    base10 to base4 </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(99,BASE10,\"0123\") </span><br><span class=\"line\">    '1203' </span><br><span class=\"line\">     </span><br><span class=\"line\">    base4 to base5 (with alphabetic digits) </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(1203,\"0123\",\"abcde\") </span><br><span class=\"line\">    'dee' </span><br><span class=\"line\">     </span><br><span class=\"line\">    base5, alpha digits back to base 10 </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert('dee',\"abcde\",BASE10) </span><br><span class=\"line\">    '99' </span><br><span class=\"line\">     </span><br><span class=\"line\">    decimal to a base that uses A-Z0-9a-z for its digits </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(257938572394L,BASE10,BASE62) </span><br><span class=\"line\">    'E78Lxik' </span><br><span class=\"line\">     </span><br><span class=\"line\">    ..convert back </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert('E78Lxik',BASE62,BASE10) </span><br><span class=\"line\">    '257938572394' </span><br><span class=\"line\">     </span><br><span class=\"line\">    binary to a base with words for digits (the function cannot convert this back) </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert('1101',BASE2,('Zero','One')) </span><br><span class=\"line\">    'OneOneZeroOne' </span><br><span class=\"line\">     </span><br><span class=\"line\">    \"\"\"</span>  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ignore_negative <span class=\"keyword\">and</span> str(number)[<span class=\"number\">0</span>] == <span class=\"string\">'-'</span>:  </span><br><span class=\"line\">        number = str(number)[<span class=\"number\">1</span>:]  </span><br><span class=\"line\">        neg = <span class=\"number\">1</span>  </span><br><span class=\"line\">    <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">        neg = <span class=\"number\">0</span>  </span><br><span class=\"line\">    x = long(<span class=\"number\">0</span>)  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> digit <span class=\"keyword\">in</span> str(number):  </span><br><span class=\"line\">        x = x * len(fromdigits) + fromdigits.index(digit)  </span><br><span class=\"line\">  </span><br><span class=\"line\">    res = <span class=\"string\">''</span>  </span><br><span class=\"line\">    <span class=\"keyword\">while</span> x &gt; <span class=\"number\">0</span>:  </span><br><span class=\"line\">        digit = x % len(todigits)  </span><br><span class=\"line\">        res = todigits[digit] + res  </span><br><span class=\"line\">        x /= len(todigits)  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> neg:  </span><br><span class=\"line\">        res = <span class=\"string\">'-'</span> + res  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> res  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">SHAToBase30</span><span class=\"params\">(digest)</span>:</span>  </span><br><span class=\"line\">    <span class=\"string\">\"\"\"Convert from a hexdigest form SHA hash into a more compact and </span><br><span class=\"line\">    ergonomic BASE30 representation.  This results in a 17 'digit'  </span><br><span class=\"line\">    number.\"\"\"</span>  </span><br><span class=\"line\">    tdigest = <span class=\"string\">''</span>.join([ c <span class=\"keyword\">for</span> i, c <span class=\"keyword\">in</span> enumerate(digest) <span class=\"keyword\">if</span> i / <span class=\"number\">2</span> * <span class=\"number\">2</span> == i ])  </span><br><span class=\"line\">    result = BaseConvert(tdigest, BASE16, BASE30)  </span><br><span class=\"line\">    <span class=\"keyword\">while</span> len(result) &lt; <span class=\"number\">17</span>:  </span><br><span class=\"line\">        result = <span class=\"string\">'1'</span> + result  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> result  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">AddHyphens</span><span class=\"params\">(code)</span>:</span>  </span><br><span class=\"line\">    <span class=\"string\">\"\"\"Insert hyphens into given license id or activation request to </span><br><span class=\"line\">    make it easier to read\"\"\"</span>  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> code[:<span class=\"number\">5</span>] + <span class=\"string\">'-'</span> + code[<span class=\"number\">5</span>:<span class=\"number\">10</span>] + <span class=\"string\">'-'</span> + code[<span class=\"number\">10</span>:<span class=\"number\">15</span>] + <span class=\"string\">'-'</span> + code[<span class=\"number\">15</span>:]  </span><br><span class=\"line\">  </span><br><span class=\"line\">LicenseID=<span class=\"string\">'CN123-12345-12345-12345'</span>  </span><br><span class=\"line\"><span class=\"comment\">#Copy the Request Code from the dialog  </span></span><br><span class=\"line\">RequestCode=<span class=\"string\">'RL539-Y89TE-A7531-PQCKA'</span>  </span><br><span class=\"line\">hasher = sha.new()  </span><br><span class=\"line\">hasher.update(RequestCode)  </span><br><span class=\"line\">hasher.update(LicenseID)  </span><br><span class=\"line\">digest = hasher.hexdigest().upper()  </span><br><span class=\"line\">lichash = RequestCode[:<span class=\"number\">3</span>] + SHAToBase30(digest)  </span><br><span class=\"line\">lichash=AddHyphens(lichash)  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">#Calculate the Activation Code  </span></span><br><span class=\"line\">data=[<span class=\"number\">7</span>,<span class=\"number\">123</span>,<span class=\"number\">23</span>,<span class=\"number\">87</span>]  </span><br><span class=\"line\">tmp=<span class=\"number\">0</span>  </span><br><span class=\"line\">realcode=<span class=\"string\">''</span>  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> lichash:  </span><br><span class=\"line\">        tmp=(tmp*i+ord(j))&amp;<span class=\"number\">0xFFFFF</span>  </span><br><span class=\"line\">    realcode+=format(tmp,<span class=\"string\">'=05X'</span>)  </span><br><span class=\"line\">    tmp=<span class=\"number\">0</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\">act30=BaseConvert(realcode,BASE16,BASE30)  </span><br><span class=\"line\"><span class=\"keyword\">while</span> len(act30) &lt; <span class=\"number\">17</span>:  </span><br><span class=\"line\">    act30 = <span class=\"string\">'1'</span> + act30  </span><br><span class=\"line\">act30=<span class=\"string\">'AXX'</span>+act30  </span><br><span class=\"line\">act30=AddHyphens(act30)  </span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"The Activation Code is: \"</span>+act30</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装WingIDE成功后启动，激活时输入  license id CN123-12345-12345-12345</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217144935119?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<ul>\n<li>点击Continue后弹框，拷贝框中的request code</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217145011219?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<ul>\n<li>修改Python脚本中的Request Code为刚才得到的RequestCode值，运行脚本后得到激活码，填入即可成功注册</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217145050003?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n\n<center><img src=\"http://img.blog.csdn.net/20151217145055927?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","excerpt":"<p>Wing IDE是linux下python的集成开发环境，虽然python提供了命令行下的交互操作，但是对于实际的python程序开发的话，众多的python包导入、功能提示、调试就有很大的负担，Wing IDE 可以帮助解决。美中不足的是它也是一款收费软件</p>\n<ul>\n<li>安装</li>\n</ul>\n<p> 我们首先去 Wing IDE<br>    官网上下载软件，网址：<a href=\"http://wingware.com/downloads\">传送门</a> ，然后我们通过ubuntu软件中心安装</p>\n<ul>\n<li><p>破解</p>\n<p>   破解之前需要下载一个脚本，下载地址：<a href=\"http://download.csdn.net/detail/sunmc1204953974/8689733\">传送门</a></p>\n<p> 脚本源码：</p>","more":"</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sha  </span><br><span class=\"line\"><span class=\"keyword\">import</span> string  </span><br><span class=\"line\">BASE2 = <span class=\"string\">'01'</span>  </span><br><span class=\"line\">BASE10 = <span class=\"string\">'0123456789'</span>  </span><br><span class=\"line\">BASE16 = <span class=\"string\">'0123456789ABCDEF'</span>  </span><br><span class=\"line\">BASE30 = <span class=\"string\">'123456789ABCDEFGHJKLMNPQRTVWXY'</span>  </span><br><span class=\"line\">BASE36 = <span class=\"string\">'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>  </span><br><span class=\"line\">BASE62 = <span class=\"string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz'</span>  </span><br><span class=\"line\">BASEMAX = string.printable  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">BaseConvert</span><span class=\"params\">(number, fromdigits, todigits, ignore_negative = True)</span>:</span>  </span><br><span class=\"line\">    <span class=\"string\">\"\"\" converts a \"number\" between two bases of arbitrary digits </span><br><span class=\"line\">     </span><br><span class=\"line\">    The input number is assumed to be a string of digits from the </span><br><span class=\"line\">    fromdigits string (which is in order of smallest to largest </span><br><span class=\"line\">    digit). The return value is a string of elements from todigits </span><br><span class=\"line\">    (ordered in the same way). The input and output bases are </span><br><span class=\"line\">    determined from the lengths of the digit strings. Negative  </span><br><span class=\"line\">    signs are passed through. </span><br><span class=\"line\">     </span><br><span class=\"line\">    decimal to binary </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(555,BASE10,BASE2) </span><br><span class=\"line\">    '1000101011' </span><br><span class=\"line\">     </span><br><span class=\"line\">    binary to decimal </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert('1000101011',BASE2,BASE10) </span><br><span class=\"line\">    '555' </span><br><span class=\"line\">     </span><br><span class=\"line\">    integer interpreted as binary and converted to decimal (!) </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(1000101011,BASE2,BASE10) </span><br><span class=\"line\">    '555' </span><br><span class=\"line\">     </span><br><span class=\"line\">    base10 to base4 </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(99,BASE10,\"0123\") </span><br><span class=\"line\">    '1203' </span><br><span class=\"line\">     </span><br><span class=\"line\">    base4 to base5 (with alphabetic digits) </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(1203,\"0123\",\"abcde\") </span><br><span class=\"line\">    'dee' </span><br><span class=\"line\">     </span><br><span class=\"line\">    base5, alpha digits back to base 10 </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert('dee',\"abcde\",BASE10) </span><br><span class=\"line\">    '99' </span><br><span class=\"line\">     </span><br><span class=\"line\">    decimal to a base that uses A-Z0-9a-z for its digits </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert(257938572394L,BASE10,BASE62) </span><br><span class=\"line\">    'E78Lxik' </span><br><span class=\"line\">     </span><br><span class=\"line\">    ..convert back </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert('E78Lxik',BASE62,BASE10) </span><br><span class=\"line\">    '257938572394' </span><br><span class=\"line\">     </span><br><span class=\"line\">    binary to a base with words for digits (the function cannot convert this back) </span><br><span class=\"line\">    &gt;&gt;&gt; baseconvert('1101',BASE2,('Zero','One')) </span><br><span class=\"line\">    'OneOneZeroOne' </span><br><span class=\"line\">     </span><br><span class=\"line\">    \"\"\"</span>  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ignore_negative <span class=\"keyword\">and</span> str(number)[<span class=\"number\">0</span>] == <span class=\"string\">'-'</span>:  </span><br><span class=\"line\">        number = str(number)[<span class=\"number\">1</span>:]  </span><br><span class=\"line\">        neg = <span class=\"number\">1</span>  </span><br><span class=\"line\">    <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">        neg = <span class=\"number\">0</span>  </span><br><span class=\"line\">    x = long(<span class=\"number\">0</span>)  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> digit <span class=\"keyword\">in</span> str(number):  </span><br><span class=\"line\">        x = x * len(fromdigits) + fromdigits.index(digit)  </span><br><span class=\"line\">  </span><br><span class=\"line\">    res = <span class=\"string\">''</span>  </span><br><span class=\"line\">    <span class=\"keyword\">while</span> x &gt; <span class=\"number\">0</span>:  </span><br><span class=\"line\">        digit = x % len(todigits)  </span><br><span class=\"line\">        res = todigits[digit] + res  </span><br><span class=\"line\">        x /= len(todigits)  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> neg:  </span><br><span class=\"line\">        res = <span class=\"string\">'-'</span> + res  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> res  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">SHAToBase30</span><span class=\"params\">(digest)</span>:</span>  </span><br><span class=\"line\">    <span class=\"string\">\"\"\"Convert from a hexdigest form SHA hash into a more compact and </span><br><span class=\"line\">    ergonomic BASE30 representation.  This results in a 17 'digit'  </span><br><span class=\"line\">    number.\"\"\"</span>  </span><br><span class=\"line\">    tdigest = <span class=\"string\">''</span>.join([ c <span class=\"keyword\">for</span> i, c <span class=\"keyword\">in</span> enumerate(digest) <span class=\"keyword\">if</span> i / <span class=\"number\">2</span> * <span class=\"number\">2</span> == i ])  </span><br><span class=\"line\">    result = BaseConvert(tdigest, BASE16, BASE30)  </span><br><span class=\"line\">    <span class=\"keyword\">while</span> len(result) &lt; <span class=\"number\">17</span>:  </span><br><span class=\"line\">        result = <span class=\"string\">'1'</span> + result  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> result  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">AddHyphens</span><span class=\"params\">(code)</span>:</span>  </span><br><span class=\"line\">    <span class=\"string\">\"\"\"Insert hyphens into given license id or activation request to </span><br><span class=\"line\">    make it easier to read\"\"\"</span>  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> code[:<span class=\"number\">5</span>] + <span class=\"string\">'-'</span> + code[<span class=\"number\">5</span>:<span class=\"number\">10</span>] + <span class=\"string\">'-'</span> + code[<span class=\"number\">10</span>:<span class=\"number\">15</span>] + <span class=\"string\">'-'</span> + code[<span class=\"number\">15</span>:]  </span><br><span class=\"line\">  </span><br><span class=\"line\">LicenseID=<span class=\"string\">'CN123-12345-12345-12345'</span>  </span><br><span class=\"line\"><span class=\"comment\">#Copy the Request Code from the dialog  </span></span><br><span class=\"line\">RequestCode=<span class=\"string\">'RL539-Y89TE-A7531-PQCKA'</span>  </span><br><span class=\"line\">hasher = sha.new()  </span><br><span class=\"line\">hasher.update(RequestCode)  </span><br><span class=\"line\">hasher.update(LicenseID)  </span><br><span class=\"line\">digest = hasher.hexdigest().upper()  </span><br><span class=\"line\">lichash = RequestCode[:<span class=\"number\">3</span>] + SHAToBase30(digest)  </span><br><span class=\"line\">lichash=AddHyphens(lichash)  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">#Calculate the Activation Code  </span></span><br><span class=\"line\">data=[<span class=\"number\">7</span>,<span class=\"number\">123</span>,<span class=\"number\">23</span>,<span class=\"number\">87</span>]  </span><br><span class=\"line\">tmp=<span class=\"number\">0</span>  </span><br><span class=\"line\">realcode=<span class=\"string\">''</span>  </span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> lichash:  </span><br><span class=\"line\">        tmp=(tmp*i+ord(j))&amp;<span class=\"number\">0xFFFFF</span>  </span><br><span class=\"line\">    realcode+=format(tmp,<span class=\"string\">'=05X'</span>)  </span><br><span class=\"line\">    tmp=<span class=\"number\">0</span>  </span><br><span class=\"line\">  </span><br><span class=\"line\">act30=BaseConvert(realcode,BASE16,BASE30)  </span><br><span class=\"line\"><span class=\"keyword\">while</span> len(act30) &lt; <span class=\"number\">17</span>:  </span><br><span class=\"line\">    act30 = <span class=\"string\">'1'</span> + act30  </span><br><span class=\"line\">act30=<span class=\"string\">'AXX'</span>+act30  </span><br><span class=\"line\">act30=AddHyphens(act30)  </span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"The Activation Code is: \"</span>+act30</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装WingIDE成功后启动，激活时输入  license id CN123-12345-12345-12345</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217144935119?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<ul>\n<li>点击Continue后弹框，拷贝框中的request code</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217145011219?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<ul>\n<li>修改Python脚本中的Request Code为刚才得到的RequestCode值，运行脚本后得到激活码，填入即可成功注册</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217145050003?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n\n<center><img src=\"http://img.blog.csdn.net/20151217145055927?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>"},{"title":" linux下使用百度云以及酷我音乐","date":"2016-06-01T15:49:11.000Z","photos":["http://img.blog.csdn.net/20160507214539611","http://img.blog.csdn.net/20160507214545142"],"_content":"- 软件包不是官方的,是第三方作者基于linux写的，[传送门](https://github.com/LiuLang)\n\n\n- 下面来两张效果图,很简洁,这种feel很不错.\n\n![](http://img.blog.csdn.net/20160507214539611)\n\n![](http://img.blog.csdn.net/20160507214545142)\n\n<!-- more -->","source":"_posts/linux/linux下使用百度云以及酷我音乐.md","raw":"---\ntitle: ' linux下使用百度云以及酷我音乐'\ndate: 2016-06-01 15:49:11\ntags: [linux,百度云,酷我音乐]\ncategories: linux\nphotos:\n- http://img.blog.csdn.net/20160507214539611\n- http://img.blog.csdn.net/20160507214545142\n---\n- 软件包不是官方的,是第三方作者基于linux写的，[传送门](https://github.com/LiuLang)\n\n\n- 下面来两张效果图,很简洁,这种feel很不错.\n\n![](http://img.blog.csdn.net/20160507214539611)\n\n![](http://img.blog.csdn.net/20160507214545142)\n\n<!-- more -->","slug":"linux/linux下使用百度云以及酷我音乐","published":1,"updated":"2016-06-17T14:04:27.958Z","comments":1,"layout":"post","link":"","_id":"ciqop7qk2002ukgaec7yhuron","content":"<ul>\n<li>软件包不是官方的,是第三方作者基于linux写的，<a href=\"https://github.com/LiuLang\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<ul>\n<li>下面来两张效果图,很简洁,这种feel很不错.</li>\n</ul>\n<p><img src=\"http://img.blog.csdn.net/20160507214539611\" alt=\"\"></p>\n<p><img src=\"http://img.blog.csdn.net/20160507214545142\" alt=\"\"></p>\n<a id=\"more\"></a>","excerpt":"<ul>\n<li>软件包不是官方的,是第三方作者基于linux写的，<a href=\"https://github.com/LiuLang\">传送门</a></li>\n</ul>\n<ul>\n<li>下面来两张效果图,很简洁,这种feel很不错.</li>\n</ul>\n<p><img src=\"http://img.blog.csdn.net/20160507214539611\" alt=\"\"></p>\n<p><img src=\"http://img.blog.csdn.net/20160507214545142\" alt=\"\"></p>","more":""},{"title":" linux如何安装搜狗输入法","date":"2015-05-31T21:54:44.000Z","photos":["http://img.blog.csdn.net/20151217121616209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"],"_content":"\n- 首先卸载ibus输入法，卸载ibus输入法很容易，只要在终端输入sudo apt-get remove ibus命令即可卸载ibus，然后我们要安装新的搜狗输入法（其他的输入法一样这样安装）\n\n- 我们去搜狗官网去下载最新的搜狗输入法点击[传送门](http://pinyin.sogou.com/linux/?r=pinyin)，也可以\n直接在终端中使用命令安装\n- 下载32位\n\n```cpp\nwget \"http://pinyin.sogou.com/linux/download.php?f=linux&bit=32\" -O \"sougou_32.deb\"\n```\n\n- 下载64位\n\n```cpp\nwget \"http://pinyin.sogou.com/linux/download.php?f=linux&bit=64\" -O \"sougou_64.deb\"  \n```\n\n下载好之后我们就要进行解压缩了，在终端中执行命令sudo dpkg-isougou_64.deb，这里的sougou_64.deb是上一步下载的文件的名字，可以根据自己的名字进行改动。\n接下来设置系统的输入法，通过\n\n\n\n<font color='red'>系统设置>语言支持>键盘输入方式系统</font>\n\n\n然后选择 fcitx 项，然后注销重新登陆，我们就可以看到屏幕右上角有搜狗输入法的标志了。\n\n如图：\n\n![](http://img.blog.csdn.net/20151217121616209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n<!-- more -->","source":"_posts/linux/linux如何安装搜狗输入法.md","raw":"---\ntitle: ' linux如何安装搜狗输入法'\ndate: 2015-05-31 21:54:44\ntags: linux\ncategories: linux \nphotos:\n- http://img.blog.csdn.net/20151217121616209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\n---\n\n- 首先卸载ibus输入法，卸载ibus输入法很容易，只要在终端输入sudo apt-get remove ibus命令即可卸载ibus，然后我们要安装新的搜狗输入法（其他的输入法一样这样安装）\n\n- 我们去搜狗官网去下载最新的搜狗输入法点击[传送门](http://pinyin.sogou.com/linux/?r=pinyin)，也可以\n直接在终端中使用命令安装\n- 下载32位\n\n```cpp\nwget \"http://pinyin.sogou.com/linux/download.php?f=linux&bit=32\" -O \"sougou_32.deb\"\n```\n\n- 下载64位\n\n```cpp\nwget \"http://pinyin.sogou.com/linux/download.php?f=linux&bit=64\" -O \"sougou_64.deb\"  \n```\n\n下载好之后我们就要进行解压缩了，在终端中执行命令sudo dpkg-isougou_64.deb，这里的sougou_64.deb是上一步下载的文件的名字，可以根据自己的名字进行改动。\n接下来设置系统的输入法，通过\n\n\n\n<font color='red'>系统设置>语言支持>键盘输入方式系统</font>\n\n\n然后选择 fcitx 项，然后注销重新登陆，我们就可以看到屏幕右上角有搜狗输入法的标志了。\n\n如图：\n\n![](http://img.blog.csdn.net/20151217121616209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n<!-- more -->","slug":"linux/linux如何安装搜狗输入法","published":1,"updated":"2016-06-17T14:02:59.617Z","comments":1,"layout":"post","link":"","_id":"ciqop7qk5002zkgae5rlhhmvg","content":"<ul>\n<li><p>首先卸载ibus输入法，卸载ibus输入法很容易，只要在终端输入sudo apt-get remove ibus命令即可卸载ibus，然后我们要安装新的搜狗输入法（其他的输入法一样这样安装）</p>\n</li>\n<li><p>我们去搜狗官网去下载最新的搜狗输入法点击<a href=\"http://pinyin.sogou.com/linux/?r=pinyin\" target=\"_blank\" rel=\"external\">传送门</a>，也可以<br>直接在终端中使用命令安装</p>\n</li>\n<li>下载32位</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget <span class=\"string\">\"http://pinyin.sogou.com/linux/download.php?f=linux&amp;bit=32\"</span> -O <span class=\"string\">\"sougou_32.deb\"</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>下载64位</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget <span class=\"string\">\"http://pinyin.sogou.com/linux/download.php?f=linux&amp;bit=64\"</span> -O <span class=\"string\">\"sougou_64.deb\"</span></span><br></pre></td></tr></table></figure>\n<p>下载好之后我们就要进行解压缩了，在终端中执行命令sudo dpkg-isougou_64.deb，这里的sougou_64.deb是上一步下载的文件的名字，可以根据自己的名字进行改动。<br>接下来设置系统的输入法，通过</p>\n<font color=\"red\">系统设置&gt;语言支持&gt;键盘输入方式系统</font>\n\n\n<p>然后选择 fcitx 项，然后注销重新登陆，我们就可以看到屏幕右上角有搜狗输入法的标志了。</p>\n<p>如图：</p>\n<p><img src=\"http://img.blog.csdn.net/20151217121616209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<a id=\"more\"></a>","excerpt":"<ul>\n<li><p>首先卸载ibus输入法，卸载ibus输入法很容易，只要在终端输入sudo apt-get remove ibus命令即可卸载ibus，然后我们要安装新的搜狗输入法（其他的输入法一样这样安装）</p>\n</li>\n<li><p>我们去搜狗官网去下载最新的搜狗输入法点击<a href=\"http://pinyin.sogou.com/linux/?r=pinyin\">传送门</a>，也可以<br>直接在终端中使用命令安装</p>\n</li>\n<li>下载32位</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget <span class=\"string\">\"http://pinyin.sogou.com/linux/download.php?f=linux&amp;bit=32\"</span> -O <span class=\"string\">\"sougou_32.deb\"</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>下载64位</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget <span class=\"string\">\"http://pinyin.sogou.com/linux/download.php?f=linux&amp;bit=64\"</span> -O <span class=\"string\">\"sougou_64.deb\"</span></span><br></pre></td></tr></table></figure>\n<p>下载好之后我们就要进行解压缩了，在终端中执行命令sudo dpkg-isougou_64.deb，这里的sougou_64.deb是上一步下载的文件的名字，可以根据自己的名字进行改动。<br>接下来设置系统的输入法，通过</p>\n<font color='red'>系统设置&gt;语言支持&gt;键盘输入方式系统</font>\n\n\n<p>然后选择 fcitx 项，然后注销重新登陆，我们就可以看到屏幕右上角有搜狗输入法的标志了。</p>\n<p>如图：</p>\n<p><img src=\"http://img.blog.csdn.net/20151217121616209?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>","more":""},{"title":"ubuntu下如何安装android studio","date":"2015-06-01T14:01:52.000Z","_content":" 在ubuntu下安装android studio有好几种方法，现在我就来介绍最简单的一种方法\n \n- 如果没有安装jdk的先安装jdk\n \n- 到 [传送门](http://www.androiddevtools.cn/) 下载最新的android studio版本，然后选择一个文件夹解压androidstudio，然后就可以在终端中进入bin 目录，输入 sudo ./studio.sh 就可以打开androidstudio了\n\n- 创建快捷方式，先新建一个空白文件，然后将下列代码依照自己的安装路径复制进去\n\n```cpp\n[Desktop Entry]  \nName=AndroidStudio  \nComment=AndroidStudio  \nExec=/home/qiu/Work/Developer/AndroidStudio/androidstudio/bin/studio.sh  \nIcon=/home/qiu/Work/Developer/AndroidStudio/androidstudio/bin/studio.png  \nTerminal=false  \nType=Application  \nCategories=Application；Development；  \n```\n\n\n然后将文件的名字改成android.desktop，然后右键 --- > 属性--->勾选允许作为程序可执行文件，然后就可以了，此种创建快捷方式的方法对于其他程序均适用\n\n<center>![](http://img.blog.csdn.net/20151217151413240?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<!-- more -->","source":"_posts/ubuntu/ubuntu下如何安装android-studio.md","raw":"---\ntitle: ubuntu下如何安装android studio\ndate: 2015-06-01 14:01:52\ntags: [AndroidStudio,ubuntu]\ncategories: ubuntu\n---\n 在ubuntu下安装android studio有好几种方法，现在我就来介绍最简单的一种方法\n \n- 如果没有安装jdk的先安装jdk\n \n- 到 [传送门](http://www.androiddevtools.cn/) 下载最新的android studio版本，然后选择一个文件夹解压androidstudio，然后就可以在终端中进入bin 目录，输入 sudo ./studio.sh 就可以打开androidstudio了\n\n- 创建快捷方式，先新建一个空白文件，然后将下列代码依照自己的安装路径复制进去\n\n```cpp\n[Desktop Entry]  \nName=AndroidStudio  \nComment=AndroidStudio  \nExec=/home/qiu/Work/Developer/AndroidStudio/androidstudio/bin/studio.sh  \nIcon=/home/qiu/Work/Developer/AndroidStudio/androidstudio/bin/studio.png  \nTerminal=false  \nType=Application  \nCategories=Application；Development；  \n```\n\n\n然后将文件的名字改成android.desktop，然后右键 --- > 属性--->勾选允许作为程序可执行文件，然后就可以了，此种创建快捷方式的方法对于其他程序均适用\n\n<center>![](http://img.blog.csdn.net/20151217151413240?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<!-- more -->","slug":"ubuntu/ubuntu下如何安装android-studio","published":1,"updated":"2016-06-17T13:59:18.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qk70031kgaeqdyq6kiw","content":"<p> 在ubuntu下安装android studio有好几种方法，现在我就来介绍最简单的一种方法</p>\n<ul>\n<li><p>如果没有安装jdk的先安装jdk</p>\n</li>\n<li><p>到 <a href=\"http://www.androiddevtools.cn/\" target=\"_blank\" rel=\"external\">传送门</a> 下载最新的android studio版本，然后选择一个文件夹解压androidstudio，然后就可以在终端中进入bin 目录，输入 sudo ./studio.sh 就可以打开androidstudio了</p>\n</li>\n<li><p>创建快捷方式，先新建一个空白文件，然后将下列代码依照自己的安装路径复制进去</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Desktop Entry]  </span><br><span class=\"line\">Name=AndroidStudio  </span><br><span class=\"line\">Comment=AndroidStudio  </span><br><span class=\"line\">Exec=/home/qiu/Work/Developer/AndroidStudio/androidstudio/bin/studio.sh  </span><br><span class=\"line\">Icon=/home/qiu/Work/Developer/AndroidStudio/androidstudio/bin/studio.png  </span><br><span class=\"line\">Terminal=<span class=\"literal\">false</span>  </span><br><span class=\"line\">Type=Application  </span><br><span class=\"line\">Categories=Application；Development；</span><br></pre></td></tr></table></figure>\n<p>然后将文件的名字改成android.desktop，然后右键 — &gt; 属性—&gt;勾选允许作为程序可执行文件，然后就可以了，此种创建快捷方式的方法对于其他程序均适用</p>\n<center><img src=\"http://img.blog.csdn.net/20151217151413240?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<a id=\"more\"></a>","excerpt":"<p> 在ubuntu下安装android studio有好几种方法，现在我就来介绍最简单的一种方法</p>\n<ul>\n<li><p>如果没有安装jdk的先安装jdk</p>\n</li>\n<li><p>到 <a href=\"http://www.androiddevtools.cn/\">传送门</a> 下载最新的android studio版本，然后选择一个文件夹解压androidstudio，然后就可以在终端中进入bin 目录，输入 sudo ./studio.sh 就可以打开androidstudio了</p>\n</li>\n<li><p>创建快捷方式，先新建一个空白文件，然后将下列代码依照自己的安装路径复制进去</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Desktop Entry]  </span><br><span class=\"line\">Name=AndroidStudio  </span><br><span class=\"line\">Comment=AndroidStudio  </span><br><span class=\"line\">Exec=/home/qiu/Work/Developer/AndroidStudio/androidstudio/bin/studio.sh  </span><br><span class=\"line\">Icon=/home/qiu/Work/Developer/AndroidStudio/androidstudio/bin/studio.png  </span><br><span class=\"line\">Terminal=<span class=\"literal\">false</span>  </span><br><span class=\"line\">Type=Application  </span><br><span class=\"line\">Categories=Application；Development；</span><br></pre></td></tr></table></figure>\n<p>然后将文件的名字改成android.desktop，然后右键 — &gt; 属性—&gt;勾选允许作为程序可执行文件，然后就可以了，此种创建快捷方式的方法对于其他程序均适用</p>\n<center><img src=\"http://img.blog.csdn.net/20151217151413240?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","more":""},{"title":" ubuntu如何安装Mac OS X主题","date":"2015-06-01T10:43:57.000Z","_content":"\n首先我们开看一下完成之后的预览图，是不是很漂亮啊，不过我自定义的不是和苹果完全相同，进行一些自己的改造\n\n<center>![](http://img.blog.csdn.net/20151217140901194?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->\n\n- 首先我们先下载一下Mac OS X的壁纸，下载地址：[传送门](http://drive.noobslab.com/data/Mac-13.10/MBuntu-Wallpapers.zip) ，解压之后选择图片，然后就可以设置为壁纸\n\n- 安装主题修改工具，为了修改GTK主题，图标，系统主题，光标，字体我们需要安装unity tweak。要安装unitytweak在ubuntu14.04上通过使用如下命令：\n\n\n\n```cpp\nsudo apt-getinstall unity-tweak-tool\n```\n\n\n\n效果如下：\n\n\n<center>![](http://img.blog.csdn.net/20151217140959435?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n\n也可以通过安装ubuntu-tweak来实现主题更换\n\n\n```cpp\nsudoadd-apt-repository ppa:tualatrix/ppa  \nsudoapt-get update  \napt-getinstall ubuntu-tweak  \n```\n\n\n效果如下：\n\n<center>![](http://img.blog.csdn.net/20151217141051786?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n- 在ubuntu14.04中安装Mac OSX主题，为了修改上文说的内容，我们需要在终端中运行如下命令：\n\n\n```cpp\nsudo add-apt-repositoryppa:noobslab/themes  \nsudo apt-get update  \nsudo apt-get install mac-ithemes-v3  \nsudo apt-get install mac-icons-v3  \n```\n\n\n然后打开刚刚的选择主题工具，分别选择如下选项：\n\n\n<center>![](http://img.blog.csdn.net/20151217141156681?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<center>![](http://img.blog.csdn.net/20151217141201555?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<center>![](http://img.blog.csdn.net/20151217141205669?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n现在unity桌面看起来就像Mac了。你已经有了mac的图标，mac的窗口样式，mac的鼠标指针样式\n\n\n- 现在我们在来添加dock：\n\n\n效果如下：\n\n<center>![](http://img.blog.csdn.net/20151217141332503?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n    1. 首先我们打开ubuntu软件中心，如图输入dock，下载当前的这个软件\n    \n<center>![](http://img.blog.csdn.net/20151217141453083?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n    \n    2.然后打开这个软件，选择设置为开机启动，然后右击进行配置\n\n<center>![](http://img.blog.csdn.net/20151217141629362?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n    3.然后进入选择主题\n   \n   \n<center>![](http://img.blog.csdn.net/20151217141641308?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n\n- 这样我们的dock就设置好了，当然，还可以使用另一个dock软件Docky（这里可以不用配置，只是一个扩展，也可以使用这个软件配置第四点的dock，看你自己的喜好，Docky使用比较简单，个人比较喜欢上面那种，这种也喜欢，所以两种都配置了）\n\n\n如图：\n\n<center>![](http://img.blog.csdn.net/20151217141717095?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n然后配置出来的效果就是如图所示：\n\n\n<center>![](http://img.blog.csdn.net/20151217141750892?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>","source":"_posts/ubuntu/ubuntu如何安装Mac-OS-X主题.md","raw":"---\ntitle: ' ubuntu如何安装Mac OS X主题'\ndate: 2015-06-01 10:43:57\ntags: [linux,ubuntu,MacOSX]\ncategories: ubuntu\n---\n\n首先我们开看一下完成之后的预览图，是不是很漂亮啊，不过我自定义的不是和苹果完全相同，进行一些自己的改造\n\n<center>![](http://img.blog.csdn.net/20151217140901194?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->\n\n- 首先我们先下载一下Mac OS X的壁纸，下载地址：[传送门](http://drive.noobslab.com/data/Mac-13.10/MBuntu-Wallpapers.zip) ，解压之后选择图片，然后就可以设置为壁纸\n\n- 安装主题修改工具，为了修改GTK主题，图标，系统主题，光标，字体我们需要安装unity tweak。要安装unitytweak在ubuntu14.04上通过使用如下命令：\n\n\n\n```cpp\nsudo apt-getinstall unity-tweak-tool\n```\n\n\n\n效果如下：\n\n\n<center>![](http://img.blog.csdn.net/20151217140959435?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n\n也可以通过安装ubuntu-tweak来实现主题更换\n\n\n```cpp\nsudoadd-apt-repository ppa:tualatrix/ppa  \nsudoapt-get update  \napt-getinstall ubuntu-tweak  \n```\n\n\n效果如下：\n\n<center>![](http://img.blog.csdn.net/20151217141051786?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n- 在ubuntu14.04中安装Mac OSX主题，为了修改上文说的内容，我们需要在终端中运行如下命令：\n\n\n```cpp\nsudo add-apt-repositoryppa:noobslab/themes  \nsudo apt-get update  \nsudo apt-get install mac-ithemes-v3  \nsudo apt-get install mac-icons-v3  \n```\n\n\n然后打开刚刚的选择主题工具，分别选择如下选项：\n\n\n<center>![](http://img.blog.csdn.net/20151217141156681?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<center>![](http://img.blog.csdn.net/20151217141201555?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n<center>![](http://img.blog.csdn.net/20151217141205669?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n现在unity桌面看起来就像Mac了。你已经有了mac的图标，mac的窗口样式，mac的鼠标指针样式\n\n\n- 现在我们在来添加dock：\n\n\n效果如下：\n\n<center>![](http://img.blog.csdn.net/20151217141332503?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n    1. 首先我们打开ubuntu软件中心，如图输入dock，下载当前的这个软件\n    \n<center>![](http://img.blog.csdn.net/20151217141453083?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n    \n    2.然后打开这个软件，选择设置为开机启动，然后右击进行配置\n\n<center>![](http://img.blog.csdn.net/20151217141629362?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n    3.然后进入选择主题\n   \n   \n<center>![](http://img.blog.csdn.net/20151217141641308?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n\n- 这样我们的dock就设置好了，当然，还可以使用另一个dock软件Docky（这里可以不用配置，只是一个扩展，也可以使用这个软件配置第四点的dock，看你自己的喜好，Docky使用比较简单，个人比较喜欢上面那种，这种也喜欢，所以两种都配置了）\n\n\n如图：\n\n<center>![](http://img.blog.csdn.net/20151217141717095?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n然后配置出来的效果就是如图所示：\n\n\n<center>![](http://img.blog.csdn.net/20151217141750892?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>","slug":"ubuntu/ubuntu如何安装Mac-OS-X主题","published":1,"updated":"2016-06-17T13:57:40.634Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qkf0035kgaewm2myugn","content":"<p>首先我们开看一下完成之后的预览图，是不是很漂亮啊，不过我自定义的不是和苹果完全相同，进行一些自己的改造</p>\n<center><img src=\"http://img.blog.csdn.net/20151217140901194?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<ul>\n<li><p>首先我们先下载一下Mac OS X的壁纸，下载地址：<a href=\"http://drive.noobslab.com/data/Mac-13.10/MBuntu-Wallpapers.zip\" target=\"_blank\" rel=\"external\">传送门</a> ，解压之后选择图片，然后就可以设置为壁纸</p>\n</li>\n<li><p>安装主题修改工具，为了修改GTK主题，图标，系统主题，光标，字体我们需要安装unity tweak。要安装unitytweak在ubuntu14.04上通过使用如下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-getinstall unity-tweak-tool</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217140959435?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n\n<p>也可以通过安装ubuntu-tweak来实现主题更换</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudoadd-apt-repository ppa:tualatrix/ppa  </span><br><span class=\"line\">sudoapt-get update  </span><br><span class=\"line\">apt-getinstall ubuntu-tweak</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141051786?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<ul>\n<li>在ubuntu14.04中安装Mac OSX主题，为了修改上文说的内容，我们需要在终端中运行如下命令：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repositoryppa:noobslab/themes  </span><br><span class=\"line\">sudo apt-get update  </span><br><span class=\"line\">sudo apt-get install mac-ithemes-v3  </span><br><span class=\"line\">sudo apt-get install mac-icons-v3</span><br></pre></td></tr></table></figure>\n<p>然后打开刚刚的选择主题工具，分别选择如下选项：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141156681?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<center><img src=\"http://img.blog.csdn.net/20151217141201555?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<center><img src=\"http://img.blog.csdn.net/20151217141205669?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<p>现在unity桌面看起来就像Mac了。你已经有了mac的图标，mac的窗口样式，mac的鼠标指针样式</p>\n<ul>\n<li>现在我们在来添加dock：</li>\n</ul>\n<p>效果如下：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141332503?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<pre><code>1. 首先我们打开ubuntu软件中心，如图输入dock，下载当前的这个软件\n</code></pre><center><img src=\"http://img.blog.csdn.net/20151217141453083?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<pre><code>2.然后打开这个软件，选择设置为开机启动，然后右击进行配置\n</code></pre><center><img src=\"http://img.blog.csdn.net/20151217141629362?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<pre><code>3.然后进入选择主题\n</code></pre><center><img src=\"http://img.blog.csdn.net/20151217141641308?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n\n<ul>\n<li>这样我们的dock就设置好了，当然，还可以使用另一个dock软件Docky（这里可以不用配置，只是一个扩展，也可以使用这个软件配置第四点的dock，看你自己的喜好，Docky使用比较简单，个人比较喜欢上面那种，这种也喜欢，所以两种都配置了）</li>\n</ul>\n<p>如图：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141717095?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<p>然后配置出来的效果就是如图所示：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141750892?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","excerpt":"<p>首先我们开看一下完成之后的预览图，是不是很漂亮啊，不过我自定义的不是和苹果完全相同，进行一些自己的改造</p>\n<center><img src=\"http://img.blog.csdn.net/20151217140901194?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","more":"<ul>\n<li><p>首先我们先下载一下Mac OS X的壁纸，下载地址：<a href=\"http://drive.noobslab.com/data/Mac-13.10/MBuntu-Wallpapers.zip\">传送门</a> ，解压之后选择图片，然后就可以设置为壁纸</p>\n</li>\n<li><p>安装主题修改工具，为了修改GTK主题，图标，系统主题，光标，字体我们需要安装unity tweak。要安装unitytweak在ubuntu14.04上通过使用如下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-getinstall unity-tweak-tool</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217140959435?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n\n<p>也可以通过安装ubuntu-tweak来实现主题更换</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudoadd-apt-repository ppa:tualatrix/ppa  </span><br><span class=\"line\">sudoapt-get update  </span><br><span class=\"line\">apt-getinstall ubuntu-tweak</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141051786?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<ul>\n<li>在ubuntu14.04中安装Mac OSX主题，为了修改上文说的内容，我们需要在终端中运行如下命令：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repositoryppa:noobslab/themes  </span><br><span class=\"line\">sudo apt-get update  </span><br><span class=\"line\">sudo apt-get install mac-ithemes-v3  </span><br><span class=\"line\">sudo apt-get install mac-icons-v3</span><br></pre></td></tr></table></figure>\n<p>然后打开刚刚的选择主题工具，分别选择如下选项：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141156681?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<center><img src=\"http://img.blog.csdn.net/20151217141201555?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<center><img src=\"http://img.blog.csdn.net/20151217141205669?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<p>现在unity桌面看起来就像Mac了。你已经有了mac的图标，mac的窗口样式，mac的鼠标指针样式</p>\n<ul>\n<li>现在我们在来添加dock：</li>\n</ul>\n<p>效果如下：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141332503?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<pre><code>1. 首先我们打开ubuntu软件中心，如图输入dock，下载当前的这个软件\n</code></pre><center><img src=\"http://img.blog.csdn.net/20151217141453083?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<pre><code>2.然后打开这个软件，选择设置为开机启动，然后右击进行配置\n</code></pre><center><img src=\"http://img.blog.csdn.net/20151217141629362?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<pre><code>3.然后进入选择主题\n</code></pre><center><img src=\"http://img.blog.csdn.net/20151217141641308?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n\n<ul>\n<li>这样我们的dock就设置好了，当然，还可以使用另一个dock软件Docky（这里可以不用配置，只是一个扩展，也可以使用这个软件配置第四点的dock，看你自己的喜好，Docky使用比较简单，个人比较喜欢上面那种，这种也喜欢，所以两种都配置了）</li>\n</ul>\n<p>如图：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141717095?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<p>然后配置出来的效果就是如图所示：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217141750892?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>"},{"title":"ubuntu安装Genymotion","date":"2015-06-01T13:49:43.000Z","photos":["http://img.blog.csdn.net/20151217151146964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"],"_content":"\n\n- 先去Genymotion官网下载安装包  [传送门](https://www.genymotion.com/#!/download )\n\n- 然后现在终端中安装虚拟机virtualbox，如果没有安装虚拟机virtualbox，那么就不能安装 Genymotion\n\n   命令：\n   \n ```CPP\n sudo apt-get installvirtualbox  \n ```\n \n \n- 安装Genymotion，打开终端，输入命令：\n\n```cpp\nchmod+x genymotion-2.6.0-linux_x64.bin  \n  ./genymotion-2.6.0-linux_x64.bin -d /home/qiu/Work/genymotion  \n```\n\n</br>\n><font color='RED'>注意：-d后面的路径是你的genymotion的安装路径，现在，我们的genymotion就安装好了</font>\n</br>\n\n<center>![](http://img.blog.csdn.net/20151217151146964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->","source":"_posts/ubuntu/ubuntu安装Genymotion.md","raw":"---\ntitle: ubuntu安装Genymotion\ndate: 2015-06-01 13:49:43\ntags: [ubuntu,genymotion]\ncategories: ubuntu\nphotos:\n- http://img.blog.csdn.net/20151217151146964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\n---\n\n\n- 先去Genymotion官网下载安装包  [传送门](https://www.genymotion.com/#!/download )\n\n- 然后现在终端中安装虚拟机virtualbox，如果没有安装虚拟机virtualbox，那么就不能安装 Genymotion\n\n   命令：\n   \n ```CPP\n sudo apt-get installvirtualbox  \n ```\n \n \n- 安装Genymotion，打开终端，输入命令：\n\n```cpp\nchmod+x genymotion-2.6.0-linux_x64.bin  \n  ./genymotion-2.6.0-linux_x64.bin -d /home/qiu/Work/genymotion  \n```\n\n</br>\n><font color='RED'>注意：-d后面的路径是你的genymotion的安装路径，现在，我们的genymotion就安装好了</font>\n</br>\n\n<center>![](http://img.blog.csdn.net/20151217151146964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->","slug":"ubuntu/ubuntu安装Genymotion","published":1,"updated":"2016-06-17T13:57:22.155Z","comments":1,"layout":"post","link":"","_id":"ciqop7qkg0036kgaeahp9k0xh","content":"<ul>\n<li><p>先去Genymotion官网下载安装包  <a href=\"https://www.genymotion.com/#!/download\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>然后现在终端中安装虚拟机virtualbox，如果没有安装虚拟机virtualbox，那么就不能安装 Genymotion</p>\n<p> 命令：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get installvirtualbox</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>安装Genymotion，打开终端，输入命令：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod+x genymotion<span class=\"number\">-2.6</span><span class=\"number\">.0</span>-linux_x64.bin  </span><br><span class=\"line\">  ./genymotion<span class=\"number\">-2.6</span><span class=\"number\">.0</span>-linux_x64.bin -d /home/qiu/Work/genymotion</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<blockquote>\n<p><font color=\"RED\">注意：-d后面的路径是你的genymotion的安装路径，现在，我们的genymotion就安装好了</font><br><br></p>\n</blockquote>\n<center><img src=\"http://img.blog.csdn.net/20151217151146964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<a id=\"more\"></a>","excerpt":"<ul>\n<li><p>先去Genymotion官网下载安装包  <a href=\"https://www.genymotion.com/#!/download\">传送门</a></p>\n</li>\n<li><p>然后现在终端中安装虚拟机virtualbox，如果没有安装虚拟机virtualbox，那么就不能安装 Genymotion</p>\n<p> 命令：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get installvirtualbox</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>安装Genymotion，打开终端，输入命令：</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod+x genymotion<span class=\"number\">-2.6</span><span class=\"number\">.0</span>-linux_x64.bin  </span><br><span class=\"line\">  ./genymotion<span class=\"number\">-2.6</span><span class=\"number\">.0</span>-linux_x64.bin -d /home/qiu/Work/genymotion</span><br></pre></td></tr></table></figure>\n<p></br></p>\n<blockquote>\n<p><font color='RED'>注意：-d后面的路径是你的genymotion的安装路径，现在，我们的genymotion就安装好了</font><br></br></p>\n</blockquote>\n<center><img src=\"http://img.blog.csdn.net/20151217151146964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","more":""},{"title":"ubuntu系统如何将firefox升级到最新版本","date":"2015-05-31T22:30:22.000Z","_content":"\n- 先去firefox官网上下载最新版本的firefox浏览器          [传送门](http://firefox.com.cn/download/)\n\n- 然后在终端中将旧版本的firefox浏览器删除 sudo apt-get removefirefox  ，然后系统会提示你，你就输入Y\n\n- 解压安装最新版本，首先切换到安装目录：\n\n\n\n  ```cpp\n     cd/opt(推荐使用目录）\n  ```\n   \n   \n  **解压：**\n  \n  \n ```cpp\n sudo tar -xvf/tmp/firefox-36.0.4.tar.bz2\n ```\n \n <!-- more -->\n \n  (下载安装路径，对于安装包的名字，输入到firefox+Tab键就会自动补全)回车\n  \n  \n ** 安装：**\n  \n  \n  ```cpp\n  sudo ln -s /opt/firefox  /usr/bin/firefox\n  ```\n  \n  \n  \n- 安装最新的Flash插件，打开ubuntu软件中心，然后搜索adobe flash，然后点击安装，在重启一下firefox,就可以愉快的看视频了\n\n-  -  -\n\n![](http://img.blog.csdn.net/20151217140533710?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)","source":"_posts/ubuntu/ubuntu系统如何将firefox升级到最新版本.md","raw":"---\ntitle: ubuntu系统如何将firefox升级到最新版本\ndate: 2015-05-31 22:30:22\ntags: ubuntu\ncategories: ubuntu\n---\n\n- 先去firefox官网上下载最新版本的firefox浏览器          [传送门](http://firefox.com.cn/download/)\n\n- 然后在终端中将旧版本的firefox浏览器删除 sudo apt-get removefirefox  ，然后系统会提示你，你就输入Y\n\n- 解压安装最新版本，首先切换到安装目录：\n\n\n\n  ```cpp\n     cd/opt(推荐使用目录）\n  ```\n   \n   \n  **解压：**\n  \n  \n ```cpp\n sudo tar -xvf/tmp/firefox-36.0.4.tar.bz2\n ```\n \n <!-- more -->\n \n  (下载安装路径，对于安装包的名字，输入到firefox+Tab键就会自动补全)回车\n  \n  \n ** 安装：**\n  \n  \n  ```cpp\n  sudo ln -s /opt/firefox  /usr/bin/firefox\n  ```\n  \n  \n  \n- 安装最新的Flash插件，打开ubuntu软件中心，然后搜索adobe flash，然后点击安装，在重启一下firefox,就可以愉快的看视频了\n\n-  -  -\n\n![](http://img.blog.csdn.net/20151217140533710?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)","slug":"ubuntu/ubuntu系统如何将firefox升级到最新版本","published":1,"updated":"2016-06-17T13:58:44.823Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qkj003akgaef58ffyl2","content":"<ul>\n<li><p>先去firefox官网上下载最新版本的firefox浏览器          <a href=\"http://firefox.com.cn/download/\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>然后在终端中将旧版本的firefox浏览器删除 sudo apt-get removefirefox  ，然后系统会提示你，你就输入Y</p>\n</li>\n<li><p>解压安装最新版本，首先切换到安装目录：</p>\n</li>\n</ul>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd/opt(推荐使用目录）</span><br></pre></td></tr></table></figure>\n<p>  <strong>解压：</strong></p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -xvf/tmp/firefox<span class=\"number\">-36.0</span><span class=\"number\">.4</span>.tar.bz2</span><br></pre></td></tr></table></figure>\n <a id=\"more\"></a>\n<p>  (下载安装路径，对于安装包的名字，输入到firefox+Tab键就会自动补全)回车</p>\n<p> <strong> 安装：</strong></p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s /opt/firefox  /usr/bin/firefox</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装最新的Flash插件，打开ubuntu软件中心，然后搜索adobe flash，然后点击安装，在重启一下firefox,就可以愉快的看视频了</li>\n</ul>\n<hr>\n<p><img src=\"http://img.blog.csdn.net/20151217140533710?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n","excerpt":"<ul>\n<li><p>先去firefox官网上下载最新版本的firefox浏览器          <a href=\"http://firefox.com.cn/download/\">传送门</a></p>\n</li>\n<li><p>然后在终端中将旧版本的firefox浏览器删除 sudo apt-get removefirefox  ，然后系统会提示你，你就输入Y</p>\n</li>\n<li><p>解压安装最新版本，首先切换到安装目录：</p>\n</li>\n</ul>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd/opt(推荐使用目录）</span><br></pre></td></tr></table></figure>\n<p>  <strong>解压：</strong></p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -xvf/tmp/firefox<span class=\"number\">-36.0</span><span class=\"number\">.4</span>.tar.bz2</span><br></pre></td></tr></table></figure>","more":"<p>  (下载安装路径，对于安装包的名字，输入到firefox+Tab键就会自动补全)回车</p>\n<p> <strong> 安装：</strong></p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s /opt/firefox  /usr/bin/firefox</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装最新的Flash插件，打开ubuntu软件中心，然后搜索adobe flash，然后点击安装，在重启一下firefox,就可以愉快的看视频了</li>\n</ul>\n<hr>\n<p><img src=\"http://img.blog.csdn.net/20151217140533710?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>"},{"title":" ubuntu输入密码登陆后又跳到登陆界面解决方案","date":"2015-06-01T14:11:07.000Z","_content":"\n- 启动系统，输入正确的账号和密码，点击登录，屏幕一闪，然后又跳回登录界面。问题原因：主目录下的　.Xauthority　文件拥有者变成了root，从而以用户登陆的时候无法都取.Xauthority文件\n\n- 说明：Xauthority，是startx脚本记录文件。Xserver启动时，读文件~/.Xauthority,读入对应其display 的记录。当一个需要显示的客户程序启动调用XOpenDisplay()也读这个文 件，并把找到的magic code 发送给 Xserver。当Xserver验证这个magic code正确以后，就同意连接啦。观察startx脚本也可以看到，每次startx 运行，都在调用xinit以前使用了xauth的add命令添加了一个新的记录到~/.Xauthority，用来这次运行X使用认证\n\n- 解决方案：开机后在登陆界面按下shift + ctrl + F1进入tty命令行终端登陆，然后输入root，然后输入密码， 重装gdm \n```cpp\nsudo  apt-get remove gdm  \nsudo apt-get install gdm  \ndpkg  -reconfigure gdm  //修改启动顺序\n```\n\n<!-- more -->\n\n<center>![](http://img.blog.csdn.net/20151218174842394?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n然后输入：\n\n```cpp\nreboot  \n```\n\n 问题解决，我们还可以在进入系统之后再修改 .Xauthority文件的权限","source":"_posts/ubuntu/ubuntu输入密码登陆后又跳到登陆界面解决方案.md","raw":"---\ntitle: ' ubuntu输入密码登陆后又跳到登陆界面解决方案'\ndate: 2015-06-01 14:11:07\ntags: ubuntu\ncategories: ubuntu\n---\n\n- 启动系统，输入正确的账号和密码，点击登录，屏幕一闪，然后又跳回登录界面。问题原因：主目录下的　.Xauthority　文件拥有者变成了root，从而以用户登陆的时候无法都取.Xauthority文件\n\n- 说明：Xauthority，是startx脚本记录文件。Xserver启动时，读文件~/.Xauthority,读入对应其display 的记录。当一个需要显示的客户程序启动调用XOpenDisplay()也读这个文 件，并把找到的magic code 发送给 Xserver。当Xserver验证这个magic code正确以后，就同意连接啦。观察startx脚本也可以看到，每次startx 运行，都在调用xinit以前使用了xauth的add命令添加了一个新的记录到~/.Xauthority，用来这次运行X使用认证\n\n- 解决方案：开机后在登陆界面按下shift + ctrl + F1进入tty命令行终端登陆，然后输入root，然后输入密码， 重装gdm \n```cpp\nsudo  apt-get remove gdm  \nsudo apt-get install gdm  \ndpkg  -reconfigure gdm  //修改启动顺序\n```\n\n<!-- more -->\n\n<center>![](http://img.blog.csdn.net/20151218174842394?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n然后输入：\n\n```cpp\nreboot  \n```\n\n 问题解决，我们还可以在进入系统之后再修改 .Xauthority文件的权限","slug":"ubuntu/ubuntu输入密码登陆后又跳到登陆界面解决方案","published":1,"updated":"2016-06-17T13:58:14.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qkk003ckgaei10so2pu","content":"<ul>\n<li><p>启动系统，输入正确的账号和密码，点击登录，屏幕一闪，然后又跳回登录界面。问题原因：主目录下的　.Xauthority　文件拥有者变成了root，从而以用户登陆的时候无法都取.Xauthority文件</p>\n</li>\n<li><p>说明：Xauthority，是startx脚本记录文件。Xserver启动时，读文件~/.Xauthority,读入对应其display 的记录。当一个需要显示的客户程序启动调用XOpenDisplay()也读这个文 件，并把找到的magic code 发送给 Xserver。当Xserver验证这个magic code正确以后，就同意连接啦。观察startx脚本也可以看到，每次startx 运行，都在调用xinit以前使用了xauth的add命令添加了一个新的记录到~/.Xauthority，用来这次运行X使用认证</p>\n</li>\n<li><p>解决方案：开机后在登陆界面按下shift + ctrl + F1进入tty命令行终端登陆，然后输入root，然后输入密码， 重装gdm </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo  apt-get remove gdm  </span><br><span class=\"line\">sudo apt-get install gdm  </span><br><span class=\"line\">dpkg  -reconfigure gdm  <span class=\"comment\">//修改启动顺序</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<a id=\"more\"></a>\n<center><img src=\"http://img.blog.csdn.net/20151218174842394?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<p>然后输入：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n<p> 问题解决，我们还可以在进入系统之后再修改 .Xauthority文件的权限</p>\n","excerpt":"<ul>\n<li><p>启动系统，输入正确的账号和密码，点击登录，屏幕一闪，然后又跳回登录界面。问题原因：主目录下的　.Xauthority　文件拥有者变成了root，从而以用户登陆的时候无法都取.Xauthority文件</p>\n</li>\n<li><p>说明：Xauthority，是startx脚本记录文件。Xserver启动时，读文件~/.Xauthority,读入对应其display 的记录。当一个需要显示的客户程序启动调用XOpenDisplay()也读这个文 件，并把找到的magic code 发送给 Xserver。当Xserver验证这个magic code正确以后，就同意连接啦。观察startx脚本也可以看到，每次startx 运行，都在调用xinit以前使用了xauth的add命令添加了一个新的记录到~/.Xauthority，用来这次运行X使用认证</p>\n</li>\n<li><p>解决方案：开机后在登陆界面按下shift + ctrl + F1进入tty命令行终端登陆，然后输入root，然后输入密码， 重装gdm </p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo  apt-get remove gdm  </span><br><span class=\"line\">sudo apt-get install gdm  </span><br><span class=\"line\">dpkg  -reconfigure gdm  <span class=\"comment\">//修改启动顺序</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>","more":"<center><img src=\"http://img.blog.csdn.net/20151218174842394?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<p>然后输入：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n<p> 问题解决，我们还可以在进入系统之后再修改 .Xauthority文件的权限</p>"},{"title":" 如何安装windows和ubuntu双系统","date":"2015-05-31T21:21:25.000Z","_content":"\n1. 我们首先去ubuntu官网上下载镜像，http://www.ubuntu.com/download\n\n2. 然后我们使用大白菜装机版制作安装ubuntu的启动盘，方式是使用ISO模式，然后选择自己下载好的镜像，然后根据提示完成启动盘的制作\n\n3. 然后我们右键点击我的电脑，点击管理，然后选择存储，磁盘管理，选择释放一个空盘作为ubuntu的系统盘\n\n4. 然后重启电脑进入BIOS，将U盘调成第一启动项，然后我们就会进入ubuntu的安装目录，我们选择语言为简体中文，然后选择安装\n\n5. 然后我们在安装类型这里选择其他安装\n>**注意这里一定不要选择其他的安装项，否则你磁盘中的windows系统就会被全部格式化**\n\n<!-- more -->\n\n 然后我们双击空闲（这个空闲就是我们刚刚在windows中释放的那个磁盘），我们在这里选择为ubuntu分出四个区域\n \n- 新建新建第一个分区，挂载点选择/boot ，用于选择Ext4日志文件系统，分区类型选择逻辑分区，这里我们可以给boot分配200M，不要分配过多，200M就够了（第二种方法在这里使用主分区）\n\n- 新建第二个分区，选择逻辑分区，用于选择交换空间，分配2048M就够了（第二种方法不需要分配交换空间）\n\n- 新建第三个分区，挂载点选择/ ，用于选择Ext4日志文件系统，选择主分区，然后我们在这里分配20480M（第二种这里不变）\n\n- 新建第四个分区，挂载点选择/home，用于选择Ext4日志文件系统，选择逻辑分区，然后剩下的空间全部选择，到这里我们的分区选择好了（第二种这里不变）\n \n>**然后我们的安装启动引导器的设备选择/boot挂载点，注意这里一定要选择/boot对应的设备，然后选择现在安装，只需要等待，ubuntu就安装好了**\n\n![](http://img.blog.csdn.net/20151115184241560?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n>**按照上面的图片做完之后重启电脑，就可以看到一个系统列表可以供我们选择，然后双系统就装好了**","source":"_posts/ubuntu/如何安装windows和ubuntu双系统.md","raw":"---\ntitle: ' 如何安装windows和ubuntu双系统'\ndate: 2015-05-31 21:21:25\ntags: [windows,ubuntu,linux]\ncategories: ubuntu\n---\n\n1. 我们首先去ubuntu官网上下载镜像，http://www.ubuntu.com/download\n\n2. 然后我们使用大白菜装机版制作安装ubuntu的启动盘，方式是使用ISO模式，然后选择自己下载好的镜像，然后根据提示完成启动盘的制作\n\n3. 然后我们右键点击我的电脑，点击管理，然后选择存储，磁盘管理，选择释放一个空盘作为ubuntu的系统盘\n\n4. 然后重启电脑进入BIOS，将U盘调成第一启动项，然后我们就会进入ubuntu的安装目录，我们选择语言为简体中文，然后选择安装\n\n5. 然后我们在安装类型这里选择其他安装\n>**注意这里一定不要选择其他的安装项，否则你磁盘中的windows系统就会被全部格式化**\n\n<!-- more -->\n\n 然后我们双击空闲（这个空闲就是我们刚刚在windows中释放的那个磁盘），我们在这里选择为ubuntu分出四个区域\n \n- 新建新建第一个分区，挂载点选择/boot ，用于选择Ext4日志文件系统，分区类型选择逻辑分区，这里我们可以给boot分配200M，不要分配过多，200M就够了（第二种方法在这里使用主分区）\n\n- 新建第二个分区，选择逻辑分区，用于选择交换空间，分配2048M就够了（第二种方法不需要分配交换空间）\n\n- 新建第三个分区，挂载点选择/ ，用于选择Ext4日志文件系统，选择主分区，然后我们在这里分配20480M（第二种这里不变）\n\n- 新建第四个分区，挂载点选择/home，用于选择Ext4日志文件系统，选择逻辑分区，然后剩下的空间全部选择，到这里我们的分区选择好了（第二种这里不变）\n \n>**然后我们的安装启动引导器的设备选择/boot挂载点，注意这里一定要选择/boot对应的设备，然后选择现在安装，只需要等待，ubuntu就安装好了**\n\n![](http://img.blog.csdn.net/20151115184241560?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n>**按照上面的图片做完之后重启电脑，就可以看到一个系统列表可以供我们选择，然后双系统就装好了**","slug":"ubuntu/如何安装windows和ubuntu双系统","published":1,"updated":"2016-06-17T13:59:44.393Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qko003gkgaeafmomfnm","content":"<ol>\n<li><p>我们首先去ubuntu官网上下载镜像，<a href=\"http://www.ubuntu.com/download\" target=\"_blank\" rel=\"external\">http://www.ubuntu.com/download</a></p>\n</li>\n<li><p>然后我们使用大白菜装机版制作安装ubuntu的启动盘，方式是使用ISO模式，然后选择自己下载好的镜像，然后根据提示完成启动盘的制作</p>\n</li>\n<li><p>然后我们右键点击我的电脑，点击管理，然后选择存储，磁盘管理，选择释放一个空盘作为ubuntu的系统盘</p>\n</li>\n<li><p>然后重启电脑进入BIOS，将U盘调成第一启动项，然后我们就会进入ubuntu的安装目录，我们选择语言为简体中文，然后选择安装</p>\n</li>\n<li><p>然后我们在安装类型这里选择其他安装</p>\n<blockquote>\n<p><strong>注意这里一定不要选择其他的安装项，否则你磁盘中的windows系统就会被全部格式化</strong></p>\n</blockquote>\n</li>\n</ol>\n<a id=\"more\"></a>\n<p> 然后我们双击空闲（这个空闲就是我们刚刚在windows中释放的那个磁盘），我们在这里选择为ubuntu分出四个区域</p>\n<ul>\n<li><p>新建新建第一个分区，挂载点选择/boot ，用于选择Ext4日志文件系统，分区类型选择逻辑分区，这里我们可以给boot分配200M，不要分配过多，200M就够了（第二种方法在这里使用主分区）</p>\n</li>\n<li><p>新建第二个分区，选择逻辑分区，用于选择交换空间，分配2048M就够了（第二种方法不需要分配交换空间）</p>\n</li>\n<li><p>新建第三个分区，挂载点选择/ ，用于选择Ext4日志文件系统，选择主分区，然后我们在这里分配20480M（第二种这里不变）</p>\n</li>\n<li><p>新建第四个分区，挂载点选择/home，用于选择Ext4日志文件系统，选择逻辑分区，然后剩下的空间全部选择，到这里我们的分区选择好了（第二种这里不变）</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>然后我们的安装启动引导器的设备选择/boot挂载点，注意这里一定要选择/boot对应的设备，然后选择现在安装，只需要等待，ubuntu就安装好了</strong></p>\n</blockquote>\n<p><img src=\"http://img.blog.csdn.net/20151115184241560?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<blockquote>\n<p><strong>按照上面的图片做完之后重启电脑，就可以看到一个系统列表可以供我们选择，然后双系统就装好了</strong></p>\n</blockquote>\n","excerpt":"<ol>\n<li><p>我们首先去ubuntu官网上下载镜像，<a href=\"http://www.ubuntu.com/download\">http://www.ubuntu.com/download</a></p>\n</li>\n<li><p>然后我们使用大白菜装机版制作安装ubuntu的启动盘，方式是使用ISO模式，然后选择自己下载好的镜像，然后根据提示完成启动盘的制作</p>\n</li>\n<li><p>然后我们右键点击我的电脑，点击管理，然后选择存储，磁盘管理，选择释放一个空盘作为ubuntu的系统盘</p>\n</li>\n<li><p>然后重启电脑进入BIOS，将U盘调成第一启动项，然后我们就会进入ubuntu的安装目录，我们选择语言为简体中文，然后选择安装</p>\n</li>\n<li><p>然后我们在安装类型这里选择其他安装</p>\n<blockquote>\n<p><strong>注意这里一定不要选择其他的安装项，否则你磁盘中的windows系统就会被全部格式化</strong></p>\n</blockquote>\n</li>\n</ol>","more":"<p> 然后我们双击空闲（这个空闲就是我们刚刚在windows中释放的那个磁盘），我们在这里选择为ubuntu分出四个区域</p>\n<ul>\n<li><p>新建新建第一个分区，挂载点选择/boot ，用于选择Ext4日志文件系统，分区类型选择逻辑分区，这里我们可以给boot分配200M，不要分配过多，200M就够了（第二种方法在这里使用主分区）</p>\n</li>\n<li><p>新建第二个分区，选择逻辑分区，用于选择交换空间，分配2048M就够了（第二种方法不需要分配交换空间）</p>\n</li>\n<li><p>新建第三个分区，挂载点选择/ ，用于选择Ext4日志文件系统，选择主分区，然后我们在这里分配20480M（第二种这里不变）</p>\n</li>\n<li><p>新建第四个分区，挂载点选择/home，用于选择Ext4日志文件系统，选择逻辑分区，然后剩下的空间全部选择，到这里我们的分区选择好了（第二种这里不变）</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>然后我们的安装启动引导器的设备选择/boot挂载点，注意这里一定要选择/boot对应的设备，然后选择现在安装，只需要等待，ubuntu就安装好了</strong></p>\n</blockquote>\n<p><img src=\"http://img.blog.csdn.net/20151115184241560?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></p>\n<blockquote>\n<p><strong>按照上面的图片做完之后重启电脑，就可以看到一个系统列表可以供我们选择，然后双系统就装好了</strong></p>\n</blockquote>"},{"title":" 如何将ubuntu中的顶部任务栏变成半透明","date":"2015-06-01T13:12:24.000Z","_content":"\n\n   我们在安装gnome桌面之后会非常困扰，因为顶部的任务栏是黑色的，感觉非常的压抑，如图：这就是顶部任务栏，只不过我的做过修改，所以不是黑色的，下面我就来教大家如何将任务栏变成半透明\n   \n<center>![](http://img.blog.csdn.net/20151217142104335?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->\n\n- 先找到文件 /usr/share/gnome-shell/theme/gnome-shell.css ，然后我们将这个文件复制出来，我们需要修改这个文件，由于我们没有修改这个文件的权限，所以我们把这个文件复制出来，修改好了之后我们再在终端中将这个文件移动到原来的路径，这样就修改文件中的内容了。自认为这种方法比在终端中直接修改要好一点\n\n\n- 然后我们打开这个文件，找到 #panel  这个节点，如图：\n\n\n<center>![](http://img.blog.csdn.net/20151217142124475?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n\n然后将 background - color 改成  transparent ，如图：\n\n\n<center>![](http://img.blog.csdn.net/20151217142147022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n- 然后我们再在终端中用 root 用户将这个修改之后的文件复制到/usr/share/gnome-shell/theme/gnome-shell.css路径下，然后我们的顶部任务栏就变成了半透明了\n\n<center>![](http://img.blog.csdn.net/20151217142210617?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n","source":"_posts/ubuntu/如何将ubuntu中的顶部任务栏变成半透明.md","raw":"---\ntitle: ' 如何将ubuntu中的顶部任务栏变成半透明'\ndate: 2015-06-01 13:12:24\ntags: ubuntu\ncategories: ubuntu\n---\n\n\n   我们在安装gnome桌面之后会非常困扰，因为顶部的任务栏是黑色的，感觉非常的压抑，如图：这就是顶部任务栏，只不过我的做过修改，所以不是黑色的，下面我就来教大家如何将任务栏变成半透明\n   \n<center>![](http://img.blog.csdn.net/20151217142104335?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n<!-- more -->\n\n- 先找到文件 /usr/share/gnome-shell/theme/gnome-shell.css ，然后我们将这个文件复制出来，我们需要修改这个文件，由于我们没有修改这个文件的权限，所以我们把这个文件复制出来，修改好了之后我们再在终端中将这个文件移动到原来的路径，这样就修改文件中的内容了。自认为这种方法比在终端中直接修改要好一点\n\n\n- 然后我们打开这个文件，找到 #panel  这个节点，如图：\n\n\n<center>![](http://img.blog.csdn.net/20151217142124475?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n\n然后将 background - color 改成  transparent ，如图：\n\n\n<center>![](http://img.blog.csdn.net/20151217142147022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n- 然后我们再在终端中用 root 用户将这个修改之后的文件复制到/usr/share/gnome-shell/theme/gnome-shell.css路径下，然后我们的顶部任务栏就变成了半透明了\n\n<center>![](http://img.blog.csdn.net/20151217142210617?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n\n","slug":"ubuntu/如何将ubuntu中的顶部任务栏变成半透明","published":1,"updated":"2016-06-17T14:00:31.914Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qkt003jkgaezas534mo","content":"<p>   我们在安装gnome桌面之后会非常困扰，因为顶部的任务栏是黑色的，感觉非常的压抑，如图：这就是顶部任务栏，只不过我的做过修改，所以不是黑色的，下面我就来教大家如何将任务栏变成半透明</p>\n<center><img src=\"http://img.blog.csdn.net/20151217142104335?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<ul>\n<li>先找到文件 /usr/share/gnome-shell/theme/gnome-shell.css ，然后我们将这个文件复制出来，我们需要修改这个文件，由于我们没有修改这个文件的权限，所以我们把这个文件复制出来，修改好了之后我们再在终端中将这个文件移动到原来的路径，这样就修改文件中的内容了。自认为这种方法比在终端中直接修改要好一点</li>\n</ul>\n<ul>\n<li>然后我们打开这个文件，找到 #panel  这个节点，如图：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217142124475?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n\n<p>然后将 background - color 改成  transparent ，如图：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217142147022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<ul>\n<li>然后我们再在终端中用 root 用户将这个修改之后的文件复制到/usr/share/gnome-shell/theme/gnome-shell.css路径下，然后我们的顶部任务栏就变成了半透明了</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217142210617?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n","excerpt":"<p>   我们在安装gnome桌面之后会非常困扰，因为顶部的任务栏是黑色的，感觉非常的压抑，如图：这就是顶部任务栏，只不过我的做过修改，所以不是黑色的，下面我就来教大家如何将任务栏变成半透明</p>\n<center><img src=\"http://img.blog.csdn.net/20151217142104335?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>","more":"<ul>\n<li>先找到文件 /usr/share/gnome-shell/theme/gnome-shell.css ，然后我们将这个文件复制出来，我们需要修改这个文件，由于我们没有修改这个文件的权限，所以我们把这个文件复制出来，修改好了之后我们再在终端中将这个文件移动到原来的路径，这样就修改文件中的内容了。自认为这种方法比在终端中直接修改要好一点</li>\n</ul>\n<ul>\n<li>然后我们打开这个文件，找到 #panel  这个节点，如图：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217142124475?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n\n<p>然后将 background - color 改成  transparent ，如图：</p>\n<center><img src=\"http://img.blog.csdn.net/20151217142147022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n\n<ul>\n<li>然后我们再在终端中用 root 用户将这个修改之后的文件复制到/usr/share/gnome-shell/theme/gnome-shell.css路径下，然后我们的顶部任务栏就变成了半透明了</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20151217142210617?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>"},{"title":" 如何彻底删除ubuntu上的软件","date":"2015-06-01T14:07:24.000Z","_content":"\n- 找到此软件名称,然后\n\n```cpp\nsudo apt-get purge ......\n(点点为为程序名称),purge参数为彻底删除文件\n```\n\n\n- 然后使用下面两条命令来清除残余的配置文件\n\n```cpp\nsudo apt-get autoremove,sudo apt-get clean\ndpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P\n```\n\n<!-- more -->\n","source":"_posts/ubuntu/如何彻底删除ubuntu上的软件.md","raw":"---\ntitle: ' 如何彻底删除ubuntu上的软件'\ndate: 2015-06-01 14:07:24\ntags: ubuntu\ncategories: ubuntu\n---\n\n- 找到此软件名称,然后\n\n```cpp\nsudo apt-get purge ......\n(点点为为程序名称),purge参数为彻底删除文件\n```\n\n\n- 然后使用下面两条命令来清除残余的配置文件\n\n```cpp\nsudo apt-get autoremove,sudo apt-get clean\ndpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P\n```\n\n<!-- more -->\n","slug":"ubuntu/如何彻底删除ubuntu上的软件","published":1,"updated":"2016-06-17T14:00:05.308Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qkw003mkgae7yqololc","content":"<ul>\n<li>找到此软件名称,然后</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get purge ......</span><br><span class=\"line\">(点点为为程序名称),purge参数为彻底删除文件</span><br></pre></td></tr></table></figure>\n<ul>\n<li>然后使用下面两条命令来清除残余的配置文件</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get autoremove,sudo apt-get clean</span><br><span class=\"line\">dpkg -l |grep ^rc|awk '&#123;print $2&#125;' |sudo xargs dpkg -P</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n","excerpt":"<ul>\n<li>找到此软件名称,然后</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get purge ......</span><br><span class=\"line\">(点点为为程序名称),purge参数为彻底删除文件</span><br></pre></td></tr></table></figure>\n<ul>\n<li>然后使用下面两条命令来清除残余的配置文件</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get autoremove,sudo apt-get clean</span><br><span class=\"line\">dpkg -l |grep ^rc|awk '&#123;print $2&#125;' |sudo xargs dpkg -P</span><br></pre></td></tr></table></figure>","more":""},{"title":"课程设计之二叉树遍历","date":"2016-06-13T17:25:26.000Z","_content":"- ### 效果###\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1.gif)</center>\n\n- ### 二叉树遍历演示要求###\n\n演示遍历二叉树的过程，所以首先建立二叉树，并用图形显示出树的形状。建立的过程是采用前序便利的方法来创建，设计两种生成树的方式：一种是系统随机生成，另一种是人工输入。考虑到屏幕界面的有限性，限定二叉树不超过5层，最多26个字符，输入字符小数点“.”代表NULL。初始树为某种颜色的结点，三种情况的遍历采用填充另外一种醒目的颜色，来表示当前遍历的结点，同时显示该结点的访问序号。同时在遍历的过程中在遍历图形的下方显示出遍历序列\n\n<!-- more -->\n\n- ### 环境需求###\n\n [传送门](http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E7%B1%BB%E5%BA%93%E8%B5%84%E6%96%99.zip)\n\n- ### 图片资料###\n\n在D盘下新建一个datas目录，将资料 [传送门](http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%9B%BE%E7%89%87%E8%B5%84%E6%96%99.zip) 解压缩到datas文件夹中\n\n<!-- more -->\n\n- ### 代码###\n\n```cpp\n#include <graphics.h>\n#include <conio.h>\n#include<iostream>\n#include<stdio.h>\n#include<time.h>\n#include <windows.h> \nusing namespace std;\nint flag;\nvoid generationMode();\n//二叉树结点  \ntypedef struct BiTNode{  \n    int data,xx,yy,size;  \n    struct BiTNode *lchild,*rchild;  \n}BiTNode,*BiTree;//用来记录二叉树节点，最多五层\nBiTNode tree[31];\nchar userchar[32];\nint width=960,height=720;\nint result=1;\n/**\n  设置遍历之前的二叉树的节点图标，输入的是坐标\n*/\nvoid setTreeBegin(int x,int y,int width,int height){\n\t IMAGE img1;\t// 定义 IMAGE 对象\n\tloadimage(&img1, \"D:\\\\datas\\\\tree11.jpg\",width,height);\t// 读取图片到 img 对象中\n\tputimage(x, y, &img1);\t// 在坐标 (0, 0) 位置显示 IMAGE 对象\n}\n/**\n  设置记录遍历顺序的小红点图标\n*/\nvoid setTreeRed(int x,int y,int width,int height){\n\t IMAGE img1;\t// 定义 IMAGE 对象\n\tloadimage(&img1, \"D:\\\\datas\\\\red.jpg\",width,height);\t// 读取图片到 img 对象中\n\tputimage(x, y, &img1);\t// 在坐标 (0, 0) 位置显示 IMAGE 对象\n}\n/**\n  设置遍历之后的二叉树的节点图标，输入的是坐标\n*/\nvoid setTreeEnd(int x,int y,int width,int height){\n\t IMAGE img1;\t// 定义 IMAGE 对象\n\tloadimage(&img1, \"D:\\\\datas\\\\tree22.jpg\",width,height);\t// 读取图片到 img 对象中\n\tputimage(x,y,  &img1);\t// 在坐标 (0, 0) 位置显示 IMAGE 对象\n}\n/**\n  用来初始化背景\n*/\nvoid setBackground(){\n   \t//创建一个窗口\n\tinitgraph(width,height);\n\tIMAGE img;\t// 定义 IMAGE 对象\n\tloadimage(&img, \"D:\\\\datas\\\\background.jpg\");\t// 读取图片到 img 对象中\n\tputimage(0, 0, &img);\t// 在坐标 (0, 0) 位置显示 IMAGE 对象\n\tsetcolor(RED);\n\tLOGFONT f;\n    getfont(&f);                          // 获取当前字体设置\n    f.lfHeight = 27;                      // 设置字体高度为 40\n    strcpy(f.lfFaceName, \"黑体\");         // 设置字体为“宋体”\n    f.lfQuality = ANTIALIASED_QUALITY;    // 设置输出效果为抗锯齿  \n    setfont(&f);// 设置字体样式\n    setbkmode( TRANSPARENT);//透明背景\n}\n/**\n 得到一个小于n的随机整数\n*/\nint getRandom(int n){\n\tsrand( (unsigned)time( NULL ) );//srand()函数产生一个以当前时间开始的随机种子.应该放在for等循环语句前面 不然要很长时间等待\n\treturn rand()%n;//MAX为最大值，其随机域为0~MAX-1\n}\n/**\n 二叉树生成之后的退出函数\n*/\nvoid exit(){\n   //按任意键退出\n    getch();\n\tclosegraph();\n\tgenerationMode();\n}\n/**\n   用来在遍历之后连接子节点和父节点的线段\n*/\nvoid link(int n){\n  \tsetcolor(BLUE);\n\tsetlinestyle(PS_SOLID, NULL, 3);\t// 设置线宽为 2\n\tif(n!=0){\n\t   //用来连接每个节点之间的线段\n\t    line(tree[(n-1)/2].xx+30,tree[(n-1)/2].yy+60,tree[n].xx+30,tree[n].yy);\n\t}    \n}\n/**\n  用来访问节点\n*/\nvoid visited(int n){\n\tif(tree[n].data!=-1){\n       \t//改变图标\n   setTreeEnd(tree[n].xx,tree[n].yy,tree[n].size,tree[n].size); \n   setTreeRed(tree[n].xx-20,tree[n].yy-20,30,30); //设置记录顺序的角标\n   \n   //将数字转换成char类型\n   char s[10];\n   sprintf(s,\"%d\",result);\n   outtextxy(tree[n].xx-13,tree[n].yy-13,s);\n   result++;\n  \n   \tsetcolor(BLACK);\n    //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",tree[n].data);\n        outtextxy(tree[n].xx+18,tree[n].yy+18,str);\n\n\t\t link(n);\n       //用来设置线段的颜色和宽度\n\t\tSleep(1000);\n\t}\n}\n\n/**\n  先序遍历\n*/\nvoid fristOrder(int n){\n\tif(flag==1){//先序\n\t  if(n<31){\n    \t//访问根节点\n\t   visited(n);\n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t}\n\t}else if(flag==2){//中序\n\t    if(n<31){\n    \n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   \t//访问根节点\n\t   visited(n);\n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t}\n\t}else{//后序\n\t   if(n<31){\n    \n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t  \n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t    \t//访问根节点\n\t   visited(n);\n\t}\n\t\n\t}\n\t\n   return;\n}\n/**\n  系统随机生成二叉树时用来对满二叉树进行初始化\n*/\nvoid initFullBinaryTree(){\n  int index=1,tree_index=0;\n   int x,y=40,temp;\n   for(int i=1;i<=5;i++){\n\t   int j;\n\t   if(i!=5){\n\t      x=width/(index+1);\n\t     for(j=1;j<=index;j++){\n\t       setTreeBegin(x,y,60,60);\n\t\t   tree[tree_index].xx=x;\n\t\t   tree[tree_index].yy=y;\n\t\t   tree[tree_index].size=60;\n\t\t   //存入一个随机整数\n\t\t   temp=getRandom(100);\n\t\t   //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",(temp*j+i)%100);\n\t\t    outtextxy(x+18,y+18,str);\n\t\t   tree[tree_index].data=(temp*j+i)%100;\n\t    \ttree_index++;\n\t\t   x+=100;\n\t\t } \n\t   }else{\n\t     x=15;\n\t     for(j=1;j<=index;j++){\n\t       setTreeBegin(x,y,50,50);\n\t\t   tree[tree_index].size=50;\n\t\t   tree[tree_index].xx=x;\n\t\t   tree[tree_index].yy=y;\n\t\t    //存入一个随机整数\n\t\t    temp=getRandom(100);\n\t\t\t //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",(temp*j+i)%100);\n\t\t    outtextxy(x+15,y+15,str);\n\t\t   tree[tree_index].data=(temp*j+i)%100;\n\t       tree_index++;\n\t\t   x+=60;\n\t\t } \n\t   \n\t   }\n\t   y+=130;\n\t   index*=2;\n   }\n   //用来设置线段的颜色和宽度\n   \tsetcolor(RED);\n\tsetlinestyle(PS_SOLID, NULL, 2);\t// 设置线宽为 2\n    //用来连接每个节点之间的线段\n\tfor(int f=0;f<15;f++){\n\t    line(tree[f].xx+30,tree[f].yy+60,tree[f*2+1].xx+30,tree[f*2+1].yy);\n\t\tline(tree[f].xx+30,tree[f].yy+60,tree[f*2+2].xx+30,tree[f*2+2].yy);\n\t}\n\t//用来进行先序遍历\n   fristOrder(0);\n}\n/**\n  系统随机生成二叉树\n*/\nvoid randomTree(){\n   setBackground();\n   //用来进行初始化\n   initFullBinaryTree();\n   exit();\n}\n/**\n  用户输入模式用来访问节点\n*/\nvoid userVisited(int n){\n\tif(tree[n].data!=-1){\n       \t//改变图标\n   setTreeEnd(tree[n].xx,tree[n].yy,tree[n].size,tree[n].size); \n\n   setTreeRed(tree[n].xx-20,tree[n].yy-20,30,30); //设置记录顺序的角标\n   \n   //将数字转换成char类型\n   char s[10];\n   sprintf(s,\"%d\",result);\n   outtextxy(tree[n].xx-13,tree[n].yy-13,s);\n   result++;\n\n   \tsetcolor(BLACK);\n    //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",tree[n].data);\n        outtextxy(tree[n].xx+18,tree[n].yy+18,str);\n\n\t\t link(n);\n       //用来设置线段的颜色和宽度\n\t\tSleep(1000);\n\t}\n}\n\n/**\n  用户输入模式先序遍历\n*/\nvoid userFristOrder(int n){\n\tif(flag==1){//先序\n\t  \tif(n<31){\n    \t//访问根节点\n\t   userVisited(n);\n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t\t}\n\t}else if(flag==2){//中序\n\t  \tif(n<31){\n    \n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   \t//访问根节点\n\t   userVisited(n);\n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t\t}\n\t}else{//后序\n\t   \tif(n<31){\n    \n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   \n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t   \t//访问根节点\n\t   userVisited(n);\n\t\t}\n\t}\n   return;\n}\n/**\n  用户输入初始化树\n*/\nvoid initUserFullBinaryTree(){\n    int index=1,tree_index=0;\n   int x,y=40,temp;\n   for(int i=1;i<=5;i++){\n\t   int j;\n\t   if(i!=5){\n\t      x=width/(index+1);\n\t     for(j=1;j<=index;j++){\n\t\t\t if(tree[tree_index].data!=-1){\n\t\t   setTreeBegin(x,y,60,60);\n\t\t   tree[tree_index].xx=x;\n\t\t   tree[tree_index].yy=y;\n\t\t   tree[tree_index].size=60;\n\t\t   //整数\n\t\t   temp=tree[tree_index].data-48;\n\t\t   //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",(temp*j+i)%100);\n\t\t    outtextxy(x+18,y+18,str);\n\t\t   tree[tree_index].data=(temp*j+i)%100;\n\t\t\t }\n\t    \ttree_index++;\n\t\t   x+=100;\n\t\t } \n\t   }else{\n\t     x=30;\n\t     for(j=1;j<=index;j++){\n\t\t\t if(tree[tree_index].data!=-1){\n\t\t\tsetTreeBegin(x,y,50,50);\n\t\t   tree[tree_index].size=50;\n\t\t   tree[tree_index].xx=x;\n\t\t   tree[tree_index].yy=y;\n\t\t    //整数\n\t\t   temp=tree[tree_index].data-48;\n\t\t\t //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",(temp*j+i)%100);\n\t\t    outtextxy(x+15,y+15,str);\n\t\t   tree[tree_index].data=(temp*j+i)%100;\n\t\t\t }\n\t       tree_index++;\n\t\t   x+=60;\n\t\t } \n\t   \n\t   }\n\t   y+=130;\n\t   index*=2;\n   }\n   //用来设置线段的颜色和宽度\n   \tsetcolor(RED);\n\tsetlinestyle(PS_SOLID, NULL, 2);\t// 设置线宽为 2\n    //用来连接每个节点之间的线段\n\tfor(int f=0;f<15;f++){\n\t\tif(tree[f*2+1].data!=-1){\n\t\t    line(tree[f].xx+30,tree[f].yy+60,tree[f*2+1].xx+30,tree[f*2+1].yy);\n\t\t}\n\t\tif(tree[f*2+2].data!=-1){\n\t\tline(tree[f].xx+30,tree[f].yy+60,tree[f*2+2].xx+30,tree[f*2+2].yy);\n\t\t}\n\t}\n\t//用来进行先序遍历\n   userFristOrder(0);\n\t\n}\n/**\n  用户输入生成二叉树\n1\n34\n2354\n12..32..\n1243....3254....\n*/\nvoid userTree(){  \n\tint i;\n\tprintf(\"输入数据，最多五层，只能是数字！\\n\");\n\t//录入用户数据\n\tfor(i=0;i<31;i++){\n\t  cin>>userchar[i];\n\t}\n\t//将数据录入结构体数组\n\tfor(i=0;i<31;i++){\n\t\tif(userchar[i]!='.'){\n\t\t   tree[i].data=(userchar[i]+'0'-48);\n\t\t}else{\n\t\t  tree[i].data=-1;\n\t\t}\n\t}\n\t\n   setBackground();\n   initUserFullBinaryTree();\n   exit();\n}\n/**\n   用来监听用户输入，确定用户选择生成二叉树\n   的方式\n*/\nvoid generationMode(){\n   \tint select;\n\t//给用户两种选择，一种是系统随机生成，一种是用户输入\n    while(1){\t\n\t\tresult=1;\n\tprintf(\"*****************选择生成方式*****************\\n\\n\");\n\n\tprintf(\"1--->系统随机生成二叉树\\n\");\n\tprintf(\"2--->用户输入节点生成二叉树\\n\");\n\tprintf(\"3--->结束程序\\n\");\n\tscanf(\"%d\",&select);\n    \tsystem(\"cls\");\n\tif(select==1){\n\t  printf(\"*************系统随机生成二叉树*************\\n\");\n\t  printf(\"1--->先序遍历\\n\");\n\t  printf(\"2--->中序遍历\\n\");\n\t  printf(\"3--->后序遍历\\n\");\n\t  printf(\"4--->结束程序\\n\");\n\t  \tscanf(\"%d\",&flag);\n\t  if(flag==4){\n\t     printf(\"*************退出程序，感谢你的使用*************\\n\");\n\t\texit(0);\n\t  }else if(flag==1){//先序遍历\n\t\t  printf(\"\\n*************先序遍历*************\\n\");\n\t     \n\t  }else if(flag==2){//中序遍历\n\t\t  printf(\"\\n*************中序遍历*************\\n\");\n\t  \n\t  }else if(flag==3){//后序遍历\n\t\t  printf(\"\\n*************后序遍历*************\\n\");\n\t  \n\t  }else{\n\t     printf(\"\\n*************输入错误，请重新输入*************\\n\");\n\t  }\n\t  randomTree();\n\t  system(\"cls\");\n\t}else if(select==2){\n\t  printf(\"*************用户输入生成二叉树*************\\n\");\n\t  printf(\"1--->先序遍历\\n\");\n\t  printf(\"2--->中序遍历\\n\");\n\t  printf(\"3--->后序遍历\\n\");\n\t  printf(\"4--->结束程序\\n\");\n\t  \tscanf(\"%d\",&flag);\n\t  if(flag==4){\n\t     printf(\"*************退出程序，感谢你的使用*************\\n\");\n\t\texit(0);\n\t  }else if(flag==1){//先序遍历\n\t\t  printf(\"\\n*************先序遍历*************\\n\");\n\t\t  printf(\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\");\n\t     \n\t  }else if(flag==2){//中序遍历\n\t\t  printf(\"\\n*************中序遍历*************\\n\");\n\t\t   printf(\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\");\n\t  \n\t  }else if(flag==3){//后序遍历\n\t\t  printf(\"\\n*************后序遍历*************\\n\");\n\t\t   printf(\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\");\n\t  \n\t  }else{\n\t     printf(\"\\n*************输入错误，请重新输入*************\\n\");\n\t  }\n\t   userTree();\n\t   system(\"cls\");\n\t  \n\t}else if(select==3){\n\t  printf(\"*************退出程序，感谢你的使用*************\\n\");\n\t\texit(0);\n\t}else{\n\t  printf(\"\\n*************输入错误，请重新输入*************\\n\");\n\t}\n\t}\n}\n/**\n  主函数\n*/\nint main(){\n  generationMode();\n}\n```","source":"_posts/数据结构和算法和组成原理/课程设计之二叉树遍历.md","raw":"---\ntitle: 课程设计之二叉树遍历\ndate: 2016-06-13 17:25:26\ntags: [数据结构,课程设计,二叉树]\ncategories: 数据结构和算法和组成原理\n---\n- ### 效果###\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1.gif)</center>\n\n- ### 二叉树遍历演示要求###\n\n演示遍历二叉树的过程，所以首先建立二叉树，并用图形显示出树的形状。建立的过程是采用前序便利的方法来创建，设计两种生成树的方式：一种是系统随机生成，另一种是人工输入。考虑到屏幕界面的有限性，限定二叉树不超过5层，最多26个字符，输入字符小数点“.”代表NULL。初始树为某种颜色的结点，三种情况的遍历采用填充另外一种醒目的颜色，来表示当前遍历的结点，同时显示该结点的访问序号。同时在遍历的过程中在遍历图形的下方显示出遍历序列\n\n<!-- more -->\n\n- ### 环境需求###\n\n [传送门](http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E7%B1%BB%E5%BA%93%E8%B5%84%E6%96%99.zip)\n\n- ### 图片资料###\n\n在D盘下新建一个datas目录，将资料 [传送门](http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%9B%BE%E7%89%87%E8%B5%84%E6%96%99.zip) 解压缩到datas文件夹中\n\n<!-- more -->\n\n- ### 代码###\n\n```cpp\n#include <graphics.h>\n#include <conio.h>\n#include<iostream>\n#include<stdio.h>\n#include<time.h>\n#include <windows.h> \nusing namespace std;\nint flag;\nvoid generationMode();\n//二叉树结点  \ntypedef struct BiTNode{  \n    int data,xx,yy,size;  \n    struct BiTNode *lchild,*rchild;  \n}BiTNode,*BiTree;//用来记录二叉树节点，最多五层\nBiTNode tree[31];\nchar userchar[32];\nint width=960,height=720;\nint result=1;\n/**\n  设置遍历之前的二叉树的节点图标，输入的是坐标\n*/\nvoid setTreeBegin(int x,int y,int width,int height){\n\t IMAGE img1;\t// 定义 IMAGE 对象\n\tloadimage(&img1, \"D:\\\\datas\\\\tree11.jpg\",width,height);\t// 读取图片到 img 对象中\n\tputimage(x, y, &img1);\t// 在坐标 (0, 0) 位置显示 IMAGE 对象\n}\n/**\n  设置记录遍历顺序的小红点图标\n*/\nvoid setTreeRed(int x,int y,int width,int height){\n\t IMAGE img1;\t// 定义 IMAGE 对象\n\tloadimage(&img1, \"D:\\\\datas\\\\red.jpg\",width,height);\t// 读取图片到 img 对象中\n\tputimage(x, y, &img1);\t// 在坐标 (0, 0) 位置显示 IMAGE 对象\n}\n/**\n  设置遍历之后的二叉树的节点图标，输入的是坐标\n*/\nvoid setTreeEnd(int x,int y,int width,int height){\n\t IMAGE img1;\t// 定义 IMAGE 对象\n\tloadimage(&img1, \"D:\\\\datas\\\\tree22.jpg\",width,height);\t// 读取图片到 img 对象中\n\tputimage(x,y,  &img1);\t// 在坐标 (0, 0) 位置显示 IMAGE 对象\n}\n/**\n  用来初始化背景\n*/\nvoid setBackground(){\n   \t//创建一个窗口\n\tinitgraph(width,height);\n\tIMAGE img;\t// 定义 IMAGE 对象\n\tloadimage(&img, \"D:\\\\datas\\\\background.jpg\");\t// 读取图片到 img 对象中\n\tputimage(0, 0, &img);\t// 在坐标 (0, 0) 位置显示 IMAGE 对象\n\tsetcolor(RED);\n\tLOGFONT f;\n    getfont(&f);                          // 获取当前字体设置\n    f.lfHeight = 27;                      // 设置字体高度为 40\n    strcpy(f.lfFaceName, \"黑体\");         // 设置字体为“宋体”\n    f.lfQuality = ANTIALIASED_QUALITY;    // 设置输出效果为抗锯齿  \n    setfont(&f);// 设置字体样式\n    setbkmode( TRANSPARENT);//透明背景\n}\n/**\n 得到一个小于n的随机整数\n*/\nint getRandom(int n){\n\tsrand( (unsigned)time( NULL ) );//srand()函数产生一个以当前时间开始的随机种子.应该放在for等循环语句前面 不然要很长时间等待\n\treturn rand()%n;//MAX为最大值，其随机域为0~MAX-1\n}\n/**\n 二叉树生成之后的退出函数\n*/\nvoid exit(){\n   //按任意键退出\n    getch();\n\tclosegraph();\n\tgenerationMode();\n}\n/**\n   用来在遍历之后连接子节点和父节点的线段\n*/\nvoid link(int n){\n  \tsetcolor(BLUE);\n\tsetlinestyle(PS_SOLID, NULL, 3);\t// 设置线宽为 2\n\tif(n!=0){\n\t   //用来连接每个节点之间的线段\n\t    line(tree[(n-1)/2].xx+30,tree[(n-1)/2].yy+60,tree[n].xx+30,tree[n].yy);\n\t}    \n}\n/**\n  用来访问节点\n*/\nvoid visited(int n){\n\tif(tree[n].data!=-1){\n       \t//改变图标\n   setTreeEnd(tree[n].xx,tree[n].yy,tree[n].size,tree[n].size); \n   setTreeRed(tree[n].xx-20,tree[n].yy-20,30,30); //设置记录顺序的角标\n   \n   //将数字转换成char类型\n   char s[10];\n   sprintf(s,\"%d\",result);\n   outtextxy(tree[n].xx-13,tree[n].yy-13,s);\n   result++;\n  \n   \tsetcolor(BLACK);\n    //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",tree[n].data);\n        outtextxy(tree[n].xx+18,tree[n].yy+18,str);\n\n\t\t link(n);\n       //用来设置线段的颜色和宽度\n\t\tSleep(1000);\n\t}\n}\n\n/**\n  先序遍历\n*/\nvoid fristOrder(int n){\n\tif(flag==1){//先序\n\t  if(n<31){\n    \t//访问根节点\n\t   visited(n);\n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t}\n\t}else if(flag==2){//中序\n\t    if(n<31){\n    \n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   \t//访问根节点\n\t   visited(n);\n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t}\n\t}else{//后序\n\t   if(n<31){\n    \n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t  \n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t    \t//访问根节点\n\t   visited(n);\n\t}\n\t\n\t}\n\t\n   return;\n}\n/**\n  系统随机生成二叉树时用来对满二叉树进行初始化\n*/\nvoid initFullBinaryTree(){\n  int index=1,tree_index=0;\n   int x,y=40,temp;\n   for(int i=1;i<=5;i++){\n\t   int j;\n\t   if(i!=5){\n\t      x=width/(index+1);\n\t     for(j=1;j<=index;j++){\n\t       setTreeBegin(x,y,60,60);\n\t\t   tree[tree_index].xx=x;\n\t\t   tree[tree_index].yy=y;\n\t\t   tree[tree_index].size=60;\n\t\t   //存入一个随机整数\n\t\t   temp=getRandom(100);\n\t\t   //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",(temp*j+i)%100);\n\t\t    outtextxy(x+18,y+18,str);\n\t\t   tree[tree_index].data=(temp*j+i)%100;\n\t    \ttree_index++;\n\t\t   x+=100;\n\t\t } \n\t   }else{\n\t     x=15;\n\t     for(j=1;j<=index;j++){\n\t       setTreeBegin(x,y,50,50);\n\t\t   tree[tree_index].size=50;\n\t\t   tree[tree_index].xx=x;\n\t\t   tree[tree_index].yy=y;\n\t\t    //存入一个随机整数\n\t\t    temp=getRandom(100);\n\t\t\t //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",(temp*j+i)%100);\n\t\t    outtextxy(x+15,y+15,str);\n\t\t   tree[tree_index].data=(temp*j+i)%100;\n\t       tree_index++;\n\t\t   x+=60;\n\t\t } \n\t   \n\t   }\n\t   y+=130;\n\t   index*=2;\n   }\n   //用来设置线段的颜色和宽度\n   \tsetcolor(RED);\n\tsetlinestyle(PS_SOLID, NULL, 2);\t// 设置线宽为 2\n    //用来连接每个节点之间的线段\n\tfor(int f=0;f<15;f++){\n\t    line(tree[f].xx+30,tree[f].yy+60,tree[f*2+1].xx+30,tree[f*2+1].yy);\n\t\tline(tree[f].xx+30,tree[f].yy+60,tree[f*2+2].xx+30,tree[f*2+2].yy);\n\t}\n\t//用来进行先序遍历\n   fristOrder(0);\n}\n/**\n  系统随机生成二叉树\n*/\nvoid randomTree(){\n   setBackground();\n   //用来进行初始化\n   initFullBinaryTree();\n   exit();\n}\n/**\n  用户输入模式用来访问节点\n*/\nvoid userVisited(int n){\n\tif(tree[n].data!=-1){\n       \t//改变图标\n   setTreeEnd(tree[n].xx,tree[n].yy,tree[n].size,tree[n].size); \n\n   setTreeRed(tree[n].xx-20,tree[n].yy-20,30,30); //设置记录顺序的角标\n   \n   //将数字转换成char类型\n   char s[10];\n   sprintf(s,\"%d\",result);\n   outtextxy(tree[n].xx-13,tree[n].yy-13,s);\n   result++;\n\n   \tsetcolor(BLACK);\n    //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",tree[n].data);\n        outtextxy(tree[n].xx+18,tree[n].yy+18,str);\n\n\t\t link(n);\n       //用来设置线段的颜色和宽度\n\t\tSleep(1000);\n\t}\n}\n\n/**\n  用户输入模式先序遍历\n*/\nvoid userFristOrder(int n){\n\tif(flag==1){//先序\n\t  \tif(n<31){\n    \t//访问根节点\n\t   userVisited(n);\n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t\t}\n\t}else if(flag==2){//中序\n\t  \tif(n<31){\n    \n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   \t//访问根节点\n\t   userVisited(n);\n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t\t}\n\t}else{//后序\n\t   \tif(n<31){\n    \n\t   //访问左子节点\n\t   fristOrder(n*2+1);\n\t   \n\t   //访问右子节点\n\t   fristOrder(n*2+2);\n\t   \t//访问根节点\n\t   userVisited(n);\n\t\t}\n\t}\n   return;\n}\n/**\n  用户输入初始化树\n*/\nvoid initUserFullBinaryTree(){\n    int index=1,tree_index=0;\n   int x,y=40,temp;\n   for(int i=1;i<=5;i++){\n\t   int j;\n\t   if(i!=5){\n\t      x=width/(index+1);\n\t     for(j=1;j<=index;j++){\n\t\t\t if(tree[tree_index].data!=-1){\n\t\t   setTreeBegin(x,y,60,60);\n\t\t   tree[tree_index].xx=x;\n\t\t   tree[tree_index].yy=y;\n\t\t   tree[tree_index].size=60;\n\t\t   //整数\n\t\t   temp=tree[tree_index].data-48;\n\t\t   //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",(temp*j+i)%100);\n\t\t    outtextxy(x+18,y+18,str);\n\t\t   tree[tree_index].data=(temp*j+i)%100;\n\t\t\t }\n\t    \ttree_index++;\n\t\t   x+=100;\n\t\t } \n\t   }else{\n\t     x=30;\n\t     for(j=1;j<=index;j++){\n\t\t\t if(tree[tree_index].data!=-1){\n\t\t\tsetTreeBegin(x,y,50,50);\n\t\t   tree[tree_index].size=50;\n\t\t   tree[tree_index].xx=x;\n\t\t   tree[tree_index].yy=y;\n\t\t    //整数\n\t\t   temp=tree[tree_index].data-48;\n\t\t\t //将数字转换成char类型\n\t\t   char str[10];\n\t\t   sprintf(str,\"%d\",(temp*j+i)%100);\n\t\t    outtextxy(x+15,y+15,str);\n\t\t   tree[tree_index].data=(temp*j+i)%100;\n\t\t\t }\n\t       tree_index++;\n\t\t   x+=60;\n\t\t } \n\t   \n\t   }\n\t   y+=130;\n\t   index*=2;\n   }\n   //用来设置线段的颜色和宽度\n   \tsetcolor(RED);\n\tsetlinestyle(PS_SOLID, NULL, 2);\t// 设置线宽为 2\n    //用来连接每个节点之间的线段\n\tfor(int f=0;f<15;f++){\n\t\tif(tree[f*2+1].data!=-1){\n\t\t    line(tree[f].xx+30,tree[f].yy+60,tree[f*2+1].xx+30,tree[f*2+1].yy);\n\t\t}\n\t\tif(tree[f*2+2].data!=-1){\n\t\tline(tree[f].xx+30,tree[f].yy+60,tree[f*2+2].xx+30,tree[f*2+2].yy);\n\t\t}\n\t}\n\t//用来进行先序遍历\n   userFristOrder(0);\n\t\n}\n/**\n  用户输入生成二叉树\n1\n34\n2354\n12..32..\n1243....3254....\n*/\nvoid userTree(){  \n\tint i;\n\tprintf(\"输入数据，最多五层，只能是数字！\\n\");\n\t//录入用户数据\n\tfor(i=0;i<31;i++){\n\t  cin>>userchar[i];\n\t}\n\t//将数据录入结构体数组\n\tfor(i=0;i<31;i++){\n\t\tif(userchar[i]!='.'){\n\t\t   tree[i].data=(userchar[i]+'0'-48);\n\t\t}else{\n\t\t  tree[i].data=-1;\n\t\t}\n\t}\n\t\n   setBackground();\n   initUserFullBinaryTree();\n   exit();\n}\n/**\n   用来监听用户输入，确定用户选择生成二叉树\n   的方式\n*/\nvoid generationMode(){\n   \tint select;\n\t//给用户两种选择，一种是系统随机生成，一种是用户输入\n    while(1){\t\n\t\tresult=1;\n\tprintf(\"*****************选择生成方式*****************\\n\\n\");\n\n\tprintf(\"1--->系统随机生成二叉树\\n\");\n\tprintf(\"2--->用户输入节点生成二叉树\\n\");\n\tprintf(\"3--->结束程序\\n\");\n\tscanf(\"%d\",&select);\n    \tsystem(\"cls\");\n\tif(select==1){\n\t  printf(\"*************系统随机生成二叉树*************\\n\");\n\t  printf(\"1--->先序遍历\\n\");\n\t  printf(\"2--->中序遍历\\n\");\n\t  printf(\"3--->后序遍历\\n\");\n\t  printf(\"4--->结束程序\\n\");\n\t  \tscanf(\"%d\",&flag);\n\t  if(flag==4){\n\t     printf(\"*************退出程序，感谢你的使用*************\\n\");\n\t\texit(0);\n\t  }else if(flag==1){//先序遍历\n\t\t  printf(\"\\n*************先序遍历*************\\n\");\n\t     \n\t  }else if(flag==2){//中序遍历\n\t\t  printf(\"\\n*************中序遍历*************\\n\");\n\t  \n\t  }else if(flag==3){//后序遍历\n\t\t  printf(\"\\n*************后序遍历*************\\n\");\n\t  \n\t  }else{\n\t     printf(\"\\n*************输入错误，请重新输入*************\\n\");\n\t  }\n\t  randomTree();\n\t  system(\"cls\");\n\t}else if(select==2){\n\t  printf(\"*************用户输入生成二叉树*************\\n\");\n\t  printf(\"1--->先序遍历\\n\");\n\t  printf(\"2--->中序遍历\\n\");\n\t  printf(\"3--->后序遍历\\n\");\n\t  printf(\"4--->结束程序\\n\");\n\t  \tscanf(\"%d\",&flag);\n\t  if(flag==4){\n\t     printf(\"*************退出程序，感谢你的使用*************\\n\");\n\t\texit(0);\n\t  }else if(flag==1){//先序遍历\n\t\t  printf(\"\\n*************先序遍历*************\\n\");\n\t\t  printf(\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\");\n\t     \n\t  }else if(flag==2){//中序遍历\n\t\t  printf(\"\\n*************中序遍历*************\\n\");\n\t\t   printf(\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\");\n\t  \n\t  }else if(flag==3){//后序遍历\n\t\t  printf(\"\\n*************后序遍历*************\\n\");\n\t\t   printf(\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\");\n\t  \n\t  }else{\n\t     printf(\"\\n*************输入错误，请重新输入*************\\n\");\n\t  }\n\t   userTree();\n\t   system(\"cls\");\n\t  \n\t}else if(select==3){\n\t  printf(\"*************退出程序，感谢你的使用*************\\n\");\n\t\texit(0);\n\t}else{\n\t  printf(\"\\n*************输入错误，请重新输入*************\\n\");\n\t}\n\t}\n}\n/**\n  主函数\n*/\nint main(){\n  generationMode();\n}\n```","slug":"数据结构和算法和组成原理/课程设计之二叉树遍历","published":1,"updated":"2016-06-19T04:57:34.493Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7ql0003pkgaebjxbjbr2","content":"<ul>\n<li><h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1.gif\" alt=\"\"></center>\n</li>\n<li><h3 id=\"二叉树遍历演示要求\"><a href=\"#二叉树遍历演示要求\" class=\"headerlink\" title=\"二叉树遍历演示要求\"></a>二叉树遍历演示要求</h3></li>\n</ul>\n<p>演示遍历二叉树的过程，所以首先建立二叉树，并用图形显示出树的形状。建立的过程是采用前序便利的方法来创建，设计两种生成树的方式：一种是系统随机生成，另一种是人工输入。考虑到屏幕界面的有限性，限定二叉树不超过5层，最多26个字符，输入字符小数点“.”代表NULL。初始树为某种颜色的结点，三种情况的遍历采用填充另外一种醒目的颜色，来表示当前遍历的结点，同时显示该结点的访问序号。同时在遍历的过程中在遍历图形的下方显示出遍历序列</p>\n<a id=\"more\"></a>\n<ul>\n<li><h3 id=\"环境需求\"><a href=\"#环境需求\" class=\"headerlink\" title=\"环境需求\"></a>环境需求</h3><p><a href=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E7%B1%BB%E5%BA%93%E8%B5%84%E6%96%99.zip\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><h3 id=\"图片资料\"><a href=\"#图片资料\" class=\"headerlink\" title=\"图片资料\"></a>图片资料</h3></li>\n</ul>\n<p>在D盘下新建一个datas目录，将资料 <a href=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%9B%BE%E7%89%87%E8%B5%84%E6%96%99.zip\" target=\"_blank\" rel=\"external\">传送门</a> 解压缩到datas文件夹中</p>\n<!-- more -->\n<ul>\n<li><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;graphics.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;conio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;windows.h&gt;</span> </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> flag;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">generationMode</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//二叉树结点  </span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> BiTNode&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> data,xx,yy,size;  </span><br><span class=\"line\">    <span class=\"keyword\">struct</span> BiTNode *lchild,*rchild;  </span><br><span class=\"line\">&#125;BiTNode,*BiTree;<span class=\"comment\">//用来记录二叉树节点，最多五层</span></span><br><span class=\"line\">BiTNode tree[<span class=\"number\">31</span>];</span><br><span class=\"line\"><span class=\"keyword\">char</span> userchar[<span class=\"number\">32</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> width=<span class=\"number\">960</span>,height=<span class=\"number\">720</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> result=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  设置遍历之前的二叉树的节点图标，输入的是坐标</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setTreeBegin</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> width,<span class=\"keyword\">int</span> height)</span></span>&#123;</span><br><span class=\"line\">\t IMAGE img1;\t<span class=\"comment\">// 定义 IMAGE 对象</span></span><br><span class=\"line\">\tloadimage(&amp;img1, <span class=\"string\">\"D:\\\\datas\\\\tree11.jpg\"</span>,width,height);\t<span class=\"comment\">// 读取图片到 img 对象中</span></span><br><span class=\"line\">\tputimage(x, y, &amp;img1);\t<span class=\"comment\">// 在坐标 (0, 0) 位置显示 IMAGE 对象</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  设置记录遍历顺序的小红点图标</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setTreeRed</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> width,<span class=\"keyword\">int</span> height)</span></span>&#123;</span><br><span class=\"line\">\t IMAGE img1;\t<span class=\"comment\">// 定义 IMAGE 对象</span></span><br><span class=\"line\">\tloadimage(&amp;img1, <span class=\"string\">\"D:\\\\datas\\\\red.jpg\"</span>,width,height);\t<span class=\"comment\">// 读取图片到 img 对象中</span></span><br><span class=\"line\">\tputimage(x, y, &amp;img1);\t<span class=\"comment\">// 在坐标 (0, 0) 位置显示 IMAGE 对象</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  设置遍历之后的二叉树的节点图标，输入的是坐标</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setTreeEnd</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> width,<span class=\"keyword\">int</span> height)</span></span>&#123;</span><br><span class=\"line\">\t IMAGE img1;\t<span class=\"comment\">// 定义 IMAGE 对象</span></span><br><span class=\"line\">\tloadimage(&amp;img1, <span class=\"string\">\"D:\\\\datas\\\\tree22.jpg\"</span>,width,height);\t<span class=\"comment\">// 读取图片到 img 对象中</span></span><br><span class=\"line\">\tputimage(x,y,  &amp;img1);\t<span class=\"comment\">// 在坐标 (0, 0) 位置显示 IMAGE 对象</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用来初始化背景</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setBackground</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   \t<span class=\"comment\">//创建一个窗口</span></span><br><span class=\"line\">\tinitgraph(width,height);</span><br><span class=\"line\">\tIMAGE img;\t<span class=\"comment\">// 定义 IMAGE 对象</span></span><br><span class=\"line\">\tloadimage(&amp;img, <span class=\"string\">\"D:\\\\datas\\\\background.jpg\"</span>);\t<span class=\"comment\">// 读取图片到 img 对象中</span></span><br><span class=\"line\">\tputimage(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &amp;img);\t<span class=\"comment\">// 在坐标 (0, 0) 位置显示 IMAGE 对象</span></span><br><span class=\"line\">\tsetcolor(RED);</span><br><span class=\"line\">\tLOGFONT f;</span><br><span class=\"line\">    getfont(&amp;f);                          <span class=\"comment\">// 获取当前字体设置</span></span><br><span class=\"line\">    f.lfHeight = <span class=\"number\">27</span>;                      <span class=\"comment\">// 设置字体高度为 40</span></span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(f.lfFaceName, <span class=\"string\">\"黑体\"</span>);         <span class=\"comment\">// 设置字体为“宋体”</span></span><br><span class=\"line\">    f.lfQuality = ANTIALIASED_QUALITY;    <span class=\"comment\">// 设置输出效果为抗锯齿  </span></span><br><span class=\"line\">    setfont(&amp;f);<span class=\"comment\">// 设置字体样式</span></span><br><span class=\"line\">    setbkmode( TRANSPARENT);<span class=\"comment\">//透明背景</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> 得到一个小于n的随机整数</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getRandom</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\tsrand( (<span class=\"keyword\">unsigned</span>)time( <span class=\"literal\">NULL</span> ) );<span class=\"comment\">//srand()函数产生一个以当前时间开始的随机种子.应该放在for等循环语句前面 不然要很长时间等待</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> rand()%n;<span class=\"comment\">//MAX为最大值，其随机域为0~MAX-1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> 二叉树生成之后的退出函数</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">exit</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//按任意键退出</span></span><br><span class=\"line\">    getch();</span><br><span class=\"line\">\tclosegraph();</span><br><span class=\"line\">\tgenerationMode();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">   用来在遍历之后连接子节点和父节点的线段</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">  \tsetcolor(BLUE);</span><br><span class=\"line\">\tsetlinestyle(PS_SOLID, <span class=\"literal\">NULL</span>, <span class=\"number\">3</span>);\t<span class=\"comment\">// 设置线宽为 2</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t   <span class=\"comment\">//用来连接每个节点之间的线段</span></span><br><span class=\"line\">\t    line(tree[(n<span class=\"number\">-1</span>)/<span class=\"number\">2</span>].xx+<span class=\"number\">30</span>,tree[(n<span class=\"number\">-1</span>)/<span class=\"number\">2</span>].yy+<span class=\"number\">60</span>,tree[n].xx+<span class=\"number\">30</span>,tree[n].yy);</span><br><span class=\"line\">\t&#125;    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用来访问节点</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">visited</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(tree[n].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">       \t<span class=\"comment\">//改变图标</span></span><br><span class=\"line\">   setTreeEnd(tree[n].xx,tree[n].yy,tree[n].size,tree[n].size); </span><br><span class=\"line\">   setTreeRed(tree[n].xx<span class=\"number\">-20</span>,tree[n].yy<span class=\"number\">-20</span>,<span class=\"number\">30</span>,<span class=\"number\">30</span>); <span class=\"comment\">//设置记录顺序的角标</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> s[<span class=\"number\">10</span>];</span><br><span class=\"line\">   <span class=\"built_in\">sprintf</span>(s,<span class=\"string\">\"%d\"</span>,result);</span><br><span class=\"line\">   outtextxy(tree[n].xx<span class=\"number\">-13</span>,tree[n].yy<span class=\"number\">-13</span>,s);</span><br><span class=\"line\">   result++;</span><br><span class=\"line\">  </span><br><span class=\"line\">   \tsetcolor(BLACK);</span><br><span class=\"line\">    <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,tree[n].data);</span><br><span class=\"line\">        outtextxy(tree[n].xx+<span class=\"number\">18</span>,tree[n].yy+<span class=\"number\">18</span>,str);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t link(n);</span><br><span class=\"line\">       <span class=\"comment\">//用来设置线段的颜色和宽度</span></span><br><span class=\"line\">\t\tSleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  先序遍历</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fristOrder</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;<span class=\"comment\">//先序</span></span><br><span class=\"line\">\t  <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   visited(n);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">2</span>)&#123;<span class=\"comment\">//中序</span></span><br><span class=\"line\">\t    <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   visited(n);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//后序</span></span><br><span class=\"line\">\t   <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t    \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   visited(n);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">   <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  系统随机生成二叉树时用来对满二叉树进行初始化</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initFullBinaryTree</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> index=<span class=\"number\">1</span>,tree_index=<span class=\"number\">0</span>;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> x,y=<span class=\"number\">40</span>,temp;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">\t   <span class=\"keyword\">if</span>(i!=<span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">\t      x=width/(index+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t     <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=index;j++)&#123;</span><br><span class=\"line\">\t       setTreeBegin(x,y,<span class=\"number\">60</span>,<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t   tree[tree_index].xx=x;</span><br><span class=\"line\">\t\t   tree[tree_index].yy=y;</span><br><span class=\"line\">\t\t   tree[tree_index].size=<span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//存入一个随机整数</span></span><br><span class=\"line\">\t\t   temp=getRandom(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t   <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,(temp*j+i)%<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t    outtextxy(x+<span class=\"number\">18</span>,y+<span class=\"number\">18</span>,str);</span><br><span class=\"line\">\t\t   tree[tree_index].data=(temp*j+i)%<span class=\"number\">100</span>;</span><br><span class=\"line\">\t    \ttree_index++;</span><br><span class=\"line\">\t\t   x+=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t &#125; </span><br><span class=\"line\">\t   &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t     x=<span class=\"number\">15</span>;</span><br><span class=\"line\">\t     <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=index;j++)&#123;</span><br><span class=\"line\">\t       setTreeBegin(x,y,<span class=\"number\">50</span>,<span class=\"number\">50</span>);</span><br><span class=\"line\">\t\t   tree[tree_index].size=<span class=\"number\">50</span>;</span><br><span class=\"line\">\t\t   tree[tree_index].xx=x;</span><br><span class=\"line\">\t\t   tree[tree_index].yy=y;</span><br><span class=\"line\">\t\t    <span class=\"comment\">//存入一个随机整数</span></span><br><span class=\"line\">\t\t    temp=getRandom(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t\t <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,(temp*j+i)%<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t    outtextxy(x+<span class=\"number\">15</span>,y+<span class=\"number\">15</span>,str);</span><br><span class=\"line\">\t\t   tree[tree_index].data=(temp*j+i)%<span class=\"number\">100</span>;</span><br><span class=\"line\">\t       tree_index++;</span><br><span class=\"line\">\t\t   x+=<span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t &#125; </span><br><span class=\"line\">\t   </span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">\t   y+=<span class=\"number\">130</span>;</span><br><span class=\"line\">\t   index*=<span class=\"number\">2</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">//用来设置线段的颜色和宽度</span></span><br><span class=\"line\">   \tsetcolor(RED);</span><br><span class=\"line\">\tsetlinestyle(PS_SOLID, <span class=\"literal\">NULL</span>, <span class=\"number\">2</span>);\t<span class=\"comment\">// 设置线宽为 2</span></span><br><span class=\"line\">    <span class=\"comment\">//用来连接每个节点之间的线段</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> f=<span class=\"number\">0</span>;f&lt;<span class=\"number\">15</span>;f++)&#123;</span><br><span class=\"line\">\t    line(tree[f].xx+<span class=\"number\">30</span>,tree[f].yy+<span class=\"number\">60</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].xx+<span class=\"number\">30</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].yy);</span><br><span class=\"line\">\t\tline(tree[f].xx+<span class=\"number\">30</span>,tree[f].yy+<span class=\"number\">60</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].xx+<span class=\"number\">30</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].yy);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//用来进行先序遍历</span></span><br><span class=\"line\">   fristOrder(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  系统随机生成二叉树</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">randomTree</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   setBackground();</span><br><span class=\"line\">   <span class=\"comment\">//用来进行初始化</span></span><br><span class=\"line\">   initFullBinaryTree();</span><br><span class=\"line\">   <span class=\"built_in\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用户输入模式用来访问节点</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">userVisited</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(tree[n].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">       \t<span class=\"comment\">//改变图标</span></span><br><span class=\"line\">   setTreeEnd(tree[n].xx,tree[n].yy,tree[n].size,tree[n].size); </span><br><span class=\"line\"></span><br><span class=\"line\">   setTreeRed(tree[n].xx<span class=\"number\">-20</span>,tree[n].yy<span class=\"number\">-20</span>,<span class=\"number\">30</span>,<span class=\"number\">30</span>); <span class=\"comment\">//设置记录顺序的角标</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> s[<span class=\"number\">10</span>];</span><br><span class=\"line\">   <span class=\"built_in\">sprintf</span>(s,<span class=\"string\">\"%d\"</span>,result);</span><br><span class=\"line\">   outtextxy(tree[n].xx<span class=\"number\">-13</span>,tree[n].yy<span class=\"number\">-13</span>,s);</span><br><span class=\"line\">   result++;</span><br><span class=\"line\"></span><br><span class=\"line\">   \tsetcolor(BLACK);</span><br><span class=\"line\">    <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,tree[n].data);</span><br><span class=\"line\">        outtextxy(tree[n].xx+<span class=\"number\">18</span>,tree[n].yy+<span class=\"number\">18</span>,str);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t link(n);</span><br><span class=\"line\">       <span class=\"comment\">//用来设置线段的颜色和宽度</span></span><br><span class=\"line\">\t\tSleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用户输入模式先序遍历</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">userFristOrder</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;<span class=\"comment\">//先序</span></span><br><span class=\"line\">\t  \t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   userVisited(n);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">2</span>)&#123;<span class=\"comment\">//中序</span></span><br><span class=\"line\">\t  \t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   userVisited(n);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//后序</span></span><br><span class=\"line\">\t   \t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   </span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t   \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   userVisited(n);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用户输入初始化树</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initUserFullBinaryTree</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index=<span class=\"number\">1</span>,tree_index=<span class=\"number\">0</span>;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> x,y=<span class=\"number\">40</span>,temp;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">\t   <span class=\"keyword\">if</span>(i!=<span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">\t      x=width/(index+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t     <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=index;j++)&#123;</span><br><span class=\"line\">\t\t\t <span class=\"keyword\">if</span>(tree[tree_index].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t   setTreeBegin(x,y,<span class=\"number\">60</span>,<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t   tree[tree_index].xx=x;</span><br><span class=\"line\">\t\t   tree[tree_index].yy=y;</span><br><span class=\"line\">\t\t   tree[tree_index].size=<span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//整数</span></span><br><span class=\"line\">\t\t   temp=tree[tree_index].data<span class=\"number\">-48</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,(temp*j+i)%<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t    outtextxy(x+<span class=\"number\">18</span>,y+<span class=\"number\">18</span>,str);</span><br><span class=\"line\">\t\t   tree[tree_index].data=(temp*j+i)%<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\t &#125;</span><br><span class=\"line\">\t    \ttree_index++;</span><br><span class=\"line\">\t\t   x+=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t &#125; </span><br><span class=\"line\">\t   &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t     x=<span class=\"number\">30</span>;</span><br><span class=\"line\">\t     <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=index;j++)&#123;</span><br><span class=\"line\">\t\t\t <span class=\"keyword\">if</span>(tree[tree_index].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\tsetTreeBegin(x,y,<span class=\"number\">50</span>,<span class=\"number\">50</span>);</span><br><span class=\"line\">\t\t   tree[tree_index].size=<span class=\"number\">50</span>;</span><br><span class=\"line\">\t\t   tree[tree_index].xx=x;</span><br><span class=\"line\">\t\t   tree[tree_index].yy=y;</span><br><span class=\"line\">\t\t    <span class=\"comment\">//整数</span></span><br><span class=\"line\">\t\t   temp=tree[tree_index].data<span class=\"number\">-48</span>;</span><br><span class=\"line\">\t\t\t <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,(temp*j+i)%<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t    outtextxy(x+<span class=\"number\">15</span>,y+<span class=\"number\">15</span>,str);</span><br><span class=\"line\">\t\t   tree[tree_index].data=(temp*j+i)%<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\t &#125;</span><br><span class=\"line\">\t       tree_index++;</span><br><span class=\"line\">\t\t   x+=<span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t &#125; </span><br><span class=\"line\">\t   </span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">\t   y+=<span class=\"number\">130</span>;</span><br><span class=\"line\">\t   index*=<span class=\"number\">2</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">//用来设置线段的颜色和宽度</span></span><br><span class=\"line\">   \tsetcolor(RED);</span><br><span class=\"line\">\tsetlinestyle(PS_SOLID, <span class=\"literal\">NULL</span>, <span class=\"number\">2</span>);\t<span class=\"comment\">// 设置线宽为 2</span></span><br><span class=\"line\">    <span class=\"comment\">//用来连接每个节点之间的线段</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> f=<span class=\"number\">0</span>;f&lt;<span class=\"number\">15</span>;f++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t    line(tree[f].xx+<span class=\"number\">30</span>,tree[f].yy+<span class=\"number\">60</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].xx+<span class=\"number\">30</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].yy);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\tline(tree[f].xx+<span class=\"number\">30</span>,tree[f].yy+<span class=\"number\">60</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].xx+<span class=\"number\">30</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].yy);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//用来进行先序遍历</span></span><br><span class=\"line\">   userFristOrder(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用户输入生成二叉树</span><br><span class=\"line\">1</span><br><span class=\"line\">34</span><br><span class=\"line\">2354</span><br><span class=\"line\">12..32..</span><br><span class=\"line\">1243....3254....</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">userTree</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入数据，最多五层，只能是数字！\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//录入用户数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">31</span>;i++)&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">cin</span>&gt;&gt;userchar[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//将数据录入结构体数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">31</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(userchar[i]!=<span class=\"string\">'.'</span>)&#123;</span><br><span class=\"line\">\t\t   tree[i].data=(userchar[i]+<span class=\"string\">'0'</span><span class=\"number\">-48</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t  tree[i].data=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">   setBackground();</span><br><span class=\"line\">   initUserFullBinaryTree();</span><br><span class=\"line\">   <span class=\"built_in\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">   用来监听用户输入，确定用户选择生成二叉树</span><br><span class=\"line\">   的方式</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">generationMode</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   \t<span class=\"keyword\">int</span> select;</span><br><span class=\"line\">\t<span class=\"comment\">//给用户两种选择，一种是系统随机生成，一种是用户输入</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;\t</span><br><span class=\"line\">\t\tresult=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"*****************选择生成方式*****************\\n\\n\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"1---&gt;系统随机生成二叉树\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"2---&gt;用户输入节点生成二叉树\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"3---&gt;结束程序\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;select);</span><br><span class=\"line\">    \tsystem(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(select==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************系统随机生成二叉树*************\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"1---&gt;先序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"2---&gt;中序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"3---&gt;后序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"4---&gt;结束程序\\n\"</span>);</span><br><span class=\"line\">\t  \t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;flag);</span><br><span class=\"line\">\t  <span class=\"keyword\">if</span>(flag==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">\t     <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************退出程序，感谢你的使用*************\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;<span class=\"comment\">//先序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************先序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t     </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">2</span>)&#123;<span class=\"comment\">//中序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************中序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">3</span>)&#123;<span class=\"comment\">//后序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************后序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t     <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************输入错误，请重新输入*************\\n\"</span>);</span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">\t  randomTree();</span><br><span class=\"line\">\t  system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(select==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************用户输入生成二叉树*************\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"1---&gt;先序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"2---&gt;中序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"3---&gt;后序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"4---&gt;结束程序\\n\"</span>);</span><br><span class=\"line\">\t  \t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;flag);</span><br><span class=\"line\">\t  <span class=\"keyword\">if</span>(flag==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">\t     <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************退出程序，感谢你的使用*************\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;<span class=\"comment\">//先序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************先序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\"</span>);</span><br><span class=\"line\">\t     </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">2</span>)&#123;<span class=\"comment\">//中序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************中序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t\t   <span class=\"built_in\">printf</span>(<span class=\"string\">\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">3</span>)&#123;<span class=\"comment\">//后序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************后序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t\t   <span class=\"built_in\">printf</span>(<span class=\"string\">\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t     <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************输入错误，请重新输入*************\\n\"</span>);</span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">\t   userTree();</span><br><span class=\"line\">\t   system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(select==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************退出程序，感谢你的使用*************\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************输入错误，请重新输入*************\\n\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  主函数</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  generationMode();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li><h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1.gif\" alt=\"\"></center>\n</li>\n<li><h3 id=\"二叉树遍历演示要求\"><a href=\"#二叉树遍历演示要求\" class=\"headerlink\" title=\"二叉树遍历演示要求\"></a>二叉树遍历演示要求</h3></li>\n</ul>\n<p>演示遍历二叉树的过程，所以首先建立二叉树，并用图形显示出树的形状。建立的过程是采用前序便利的方法来创建，设计两种生成树的方式：一种是系统随机生成，另一种是人工输入。考虑到屏幕界面的有限性，限定二叉树不超过5层，最多26个字符，输入字符小数点“.”代表NULL。初始树为某种颜色的结点，三种情况的遍历采用填充另外一种醒目的颜色，来表示当前遍历的结点，同时显示该结点的访问序号。同时在遍历的过程中在遍历图形的下方显示出遍历序列</p>","more":"<ul>\n<li><h3 id=\"环境需求\"><a href=\"#环境需求\" class=\"headerlink\" title=\"环境需求\"></a>环境需求</h3><p><a href=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E7%B1%BB%E5%BA%93%E8%B5%84%E6%96%99.zip\">传送门</a></p>\n</li>\n<li><h3 id=\"图片资料\"><a href=\"#图片资料\" class=\"headerlink\" title=\"图片资料\"></a>图片资料</h3></li>\n</ul>\n<p>在D盘下新建一个datas目录，将资料 <a href=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%9B%BE%E7%89%87%E8%B5%84%E6%96%99.zip\">传送门</a> 解压缩到datas文件夹中</p>\n<!-- more -->\n<ul>\n<li><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;graphics.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;conio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;windows.h&gt;</span> </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> flag;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">generationMode</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//二叉树结点  </span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> BiTNode&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> data,xx,yy,size;  </span><br><span class=\"line\">    <span class=\"keyword\">struct</span> BiTNode *lchild,*rchild;  </span><br><span class=\"line\">&#125;BiTNode,*BiTree;<span class=\"comment\">//用来记录二叉树节点，最多五层</span></span><br><span class=\"line\">BiTNode tree[<span class=\"number\">31</span>];</span><br><span class=\"line\"><span class=\"keyword\">char</span> userchar[<span class=\"number\">32</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> width=<span class=\"number\">960</span>,height=<span class=\"number\">720</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> result=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  设置遍历之前的二叉树的节点图标，输入的是坐标</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setTreeBegin</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> width,<span class=\"keyword\">int</span> height)</span></span>&#123;</span><br><span class=\"line\">\t IMAGE img1;\t<span class=\"comment\">// 定义 IMAGE 对象</span></span><br><span class=\"line\">\tloadimage(&amp;img1, <span class=\"string\">\"D:\\\\datas\\\\tree11.jpg\"</span>,width,height);\t<span class=\"comment\">// 读取图片到 img 对象中</span></span><br><span class=\"line\">\tputimage(x, y, &amp;img1);\t<span class=\"comment\">// 在坐标 (0, 0) 位置显示 IMAGE 对象</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  设置记录遍历顺序的小红点图标</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setTreeRed</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> width,<span class=\"keyword\">int</span> height)</span></span>&#123;</span><br><span class=\"line\">\t IMAGE img1;\t<span class=\"comment\">// 定义 IMAGE 对象</span></span><br><span class=\"line\">\tloadimage(&amp;img1, <span class=\"string\">\"D:\\\\datas\\\\red.jpg\"</span>,width,height);\t<span class=\"comment\">// 读取图片到 img 对象中</span></span><br><span class=\"line\">\tputimage(x, y, &amp;img1);\t<span class=\"comment\">// 在坐标 (0, 0) 位置显示 IMAGE 对象</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  设置遍历之后的二叉树的节点图标，输入的是坐标</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setTreeEnd</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> width,<span class=\"keyword\">int</span> height)</span></span>&#123;</span><br><span class=\"line\">\t IMAGE img1;\t<span class=\"comment\">// 定义 IMAGE 对象</span></span><br><span class=\"line\">\tloadimage(&amp;img1, <span class=\"string\">\"D:\\\\datas\\\\tree22.jpg\"</span>,width,height);\t<span class=\"comment\">// 读取图片到 img 对象中</span></span><br><span class=\"line\">\tputimage(x,y,  &amp;img1);\t<span class=\"comment\">// 在坐标 (0, 0) 位置显示 IMAGE 对象</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用来初始化背景</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setBackground</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   \t<span class=\"comment\">//创建一个窗口</span></span><br><span class=\"line\">\tinitgraph(width,height);</span><br><span class=\"line\">\tIMAGE img;\t<span class=\"comment\">// 定义 IMAGE 对象</span></span><br><span class=\"line\">\tloadimage(&amp;img, <span class=\"string\">\"D:\\\\datas\\\\background.jpg\"</span>);\t<span class=\"comment\">// 读取图片到 img 对象中</span></span><br><span class=\"line\">\tputimage(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &amp;img);\t<span class=\"comment\">// 在坐标 (0, 0) 位置显示 IMAGE 对象</span></span><br><span class=\"line\">\tsetcolor(RED);</span><br><span class=\"line\">\tLOGFONT f;</span><br><span class=\"line\">    getfont(&amp;f);                          <span class=\"comment\">// 获取当前字体设置</span></span><br><span class=\"line\">    f.lfHeight = <span class=\"number\">27</span>;                      <span class=\"comment\">// 设置字体高度为 40</span></span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(f.lfFaceName, <span class=\"string\">\"黑体\"</span>);         <span class=\"comment\">// 设置字体为“宋体”</span></span><br><span class=\"line\">    f.lfQuality = ANTIALIASED_QUALITY;    <span class=\"comment\">// 设置输出效果为抗锯齿  </span></span><br><span class=\"line\">    setfont(&amp;f);<span class=\"comment\">// 设置字体样式</span></span><br><span class=\"line\">    setbkmode( TRANSPARENT);<span class=\"comment\">//透明背景</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> 得到一个小于n的随机整数</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getRandom</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\tsrand( (<span class=\"keyword\">unsigned</span>)time( <span class=\"literal\">NULL</span> ) );<span class=\"comment\">//srand()函数产生一个以当前时间开始的随机种子.应该放在for等循环语句前面 不然要很长时间等待</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> rand()%n;<span class=\"comment\">//MAX为最大值，其随机域为0~MAX-1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> 二叉树生成之后的退出函数</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">exit</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">//按任意键退出</span></span><br><span class=\"line\">    getch();</span><br><span class=\"line\">\tclosegraph();</span><br><span class=\"line\">\tgenerationMode();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">   用来在遍历之后连接子节点和父节点的线段</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">  \tsetcolor(BLUE);</span><br><span class=\"line\">\tsetlinestyle(PS_SOLID, <span class=\"literal\">NULL</span>, <span class=\"number\">3</span>);\t<span class=\"comment\">// 设置线宽为 2</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t   <span class=\"comment\">//用来连接每个节点之间的线段</span></span><br><span class=\"line\">\t    line(tree[(n<span class=\"number\">-1</span>)/<span class=\"number\">2</span>].xx+<span class=\"number\">30</span>,tree[(n<span class=\"number\">-1</span>)/<span class=\"number\">2</span>].yy+<span class=\"number\">60</span>,tree[n].xx+<span class=\"number\">30</span>,tree[n].yy);</span><br><span class=\"line\">\t&#125;    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用来访问节点</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">visited</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(tree[n].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">       \t<span class=\"comment\">//改变图标</span></span><br><span class=\"line\">   setTreeEnd(tree[n].xx,tree[n].yy,tree[n].size,tree[n].size); </span><br><span class=\"line\">   setTreeRed(tree[n].xx<span class=\"number\">-20</span>,tree[n].yy<span class=\"number\">-20</span>,<span class=\"number\">30</span>,<span class=\"number\">30</span>); <span class=\"comment\">//设置记录顺序的角标</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> s[<span class=\"number\">10</span>];</span><br><span class=\"line\">   <span class=\"built_in\">sprintf</span>(s,<span class=\"string\">\"%d\"</span>,result);</span><br><span class=\"line\">   outtextxy(tree[n].xx<span class=\"number\">-13</span>,tree[n].yy<span class=\"number\">-13</span>,s);</span><br><span class=\"line\">   result++;</span><br><span class=\"line\">  </span><br><span class=\"line\">   \tsetcolor(BLACK);</span><br><span class=\"line\">    <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,tree[n].data);</span><br><span class=\"line\">        outtextxy(tree[n].xx+<span class=\"number\">18</span>,tree[n].yy+<span class=\"number\">18</span>,str);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t link(n);</span><br><span class=\"line\">       <span class=\"comment\">//用来设置线段的颜色和宽度</span></span><br><span class=\"line\">\t\tSleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  先序遍历</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fristOrder</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;<span class=\"comment\">//先序</span></span><br><span class=\"line\">\t  <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   visited(n);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">2</span>)&#123;<span class=\"comment\">//中序</span></span><br><span class=\"line\">\t    <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   visited(n);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//后序</span></span><br><span class=\"line\">\t   <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t    \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   visited(n);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">   <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  系统随机生成二叉树时用来对满二叉树进行初始化</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initFullBinaryTree</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> index=<span class=\"number\">1</span>,tree_index=<span class=\"number\">0</span>;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> x,y=<span class=\"number\">40</span>,temp;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">\t   <span class=\"keyword\">if</span>(i!=<span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">\t      x=width/(index+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t     <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=index;j++)&#123;</span><br><span class=\"line\">\t       setTreeBegin(x,y,<span class=\"number\">60</span>,<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t   tree[tree_index].xx=x;</span><br><span class=\"line\">\t\t   tree[tree_index].yy=y;</span><br><span class=\"line\">\t\t   tree[tree_index].size=<span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//存入一个随机整数</span></span><br><span class=\"line\">\t\t   temp=getRandom(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t   <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,(temp*j+i)%<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t    outtextxy(x+<span class=\"number\">18</span>,y+<span class=\"number\">18</span>,str);</span><br><span class=\"line\">\t\t   tree[tree_index].data=(temp*j+i)%<span class=\"number\">100</span>;</span><br><span class=\"line\">\t    \ttree_index++;</span><br><span class=\"line\">\t\t   x+=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t &#125; </span><br><span class=\"line\">\t   &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t     x=<span class=\"number\">15</span>;</span><br><span class=\"line\">\t     <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=index;j++)&#123;</span><br><span class=\"line\">\t       setTreeBegin(x,y,<span class=\"number\">50</span>,<span class=\"number\">50</span>);</span><br><span class=\"line\">\t\t   tree[tree_index].size=<span class=\"number\">50</span>;</span><br><span class=\"line\">\t\t   tree[tree_index].xx=x;</span><br><span class=\"line\">\t\t   tree[tree_index].yy=y;</span><br><span class=\"line\">\t\t    <span class=\"comment\">//存入一个随机整数</span></span><br><span class=\"line\">\t\t    temp=getRandom(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t\t <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,(temp*j+i)%<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t    outtextxy(x+<span class=\"number\">15</span>,y+<span class=\"number\">15</span>,str);</span><br><span class=\"line\">\t\t   tree[tree_index].data=(temp*j+i)%<span class=\"number\">100</span>;</span><br><span class=\"line\">\t       tree_index++;</span><br><span class=\"line\">\t\t   x+=<span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t &#125; </span><br><span class=\"line\">\t   </span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">\t   y+=<span class=\"number\">130</span>;</span><br><span class=\"line\">\t   index*=<span class=\"number\">2</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">//用来设置线段的颜色和宽度</span></span><br><span class=\"line\">   \tsetcolor(RED);</span><br><span class=\"line\">\tsetlinestyle(PS_SOLID, <span class=\"literal\">NULL</span>, <span class=\"number\">2</span>);\t<span class=\"comment\">// 设置线宽为 2</span></span><br><span class=\"line\">    <span class=\"comment\">//用来连接每个节点之间的线段</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> f=<span class=\"number\">0</span>;f&lt;<span class=\"number\">15</span>;f++)&#123;</span><br><span class=\"line\">\t    line(tree[f].xx+<span class=\"number\">30</span>,tree[f].yy+<span class=\"number\">60</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].xx+<span class=\"number\">30</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].yy);</span><br><span class=\"line\">\t\tline(tree[f].xx+<span class=\"number\">30</span>,tree[f].yy+<span class=\"number\">60</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].xx+<span class=\"number\">30</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].yy);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//用来进行先序遍历</span></span><br><span class=\"line\">   fristOrder(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  系统随机生成二叉树</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">randomTree</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   setBackground();</span><br><span class=\"line\">   <span class=\"comment\">//用来进行初始化</span></span><br><span class=\"line\">   initFullBinaryTree();</span><br><span class=\"line\">   <span class=\"built_in\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用户输入模式用来访问节点</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">userVisited</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(tree[n].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">       \t<span class=\"comment\">//改变图标</span></span><br><span class=\"line\">   setTreeEnd(tree[n].xx,tree[n].yy,tree[n].size,tree[n].size); </span><br><span class=\"line\"></span><br><span class=\"line\">   setTreeRed(tree[n].xx<span class=\"number\">-20</span>,tree[n].yy<span class=\"number\">-20</span>,<span class=\"number\">30</span>,<span class=\"number\">30</span>); <span class=\"comment\">//设置记录顺序的角标</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> s[<span class=\"number\">10</span>];</span><br><span class=\"line\">   <span class=\"built_in\">sprintf</span>(s,<span class=\"string\">\"%d\"</span>,result);</span><br><span class=\"line\">   outtextxy(tree[n].xx<span class=\"number\">-13</span>,tree[n].yy<span class=\"number\">-13</span>,s);</span><br><span class=\"line\">   result++;</span><br><span class=\"line\"></span><br><span class=\"line\">   \tsetcolor(BLACK);</span><br><span class=\"line\">    <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,tree[n].data);</span><br><span class=\"line\">        outtextxy(tree[n].xx+<span class=\"number\">18</span>,tree[n].yy+<span class=\"number\">18</span>,str);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t link(n);</span><br><span class=\"line\">       <span class=\"comment\">//用来设置线段的颜色和宽度</span></span><br><span class=\"line\">\t\tSleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用户输入模式先序遍历</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">userFristOrder</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;<span class=\"comment\">//先序</span></span><br><span class=\"line\">\t  \t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   userVisited(n);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">2</span>)&#123;<span class=\"comment\">//中序</span></span><br><span class=\"line\">\t  \t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   userVisited(n);</span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//后序</span></span><br><span class=\"line\">\t   \t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t   <span class=\"comment\">//访问左子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t   </span><br><span class=\"line\">\t   <span class=\"comment\">//访问右子节点</span></span><br><span class=\"line\">\t   fristOrder(n*<span class=\"number\">2</span>+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t   \t<span class=\"comment\">//访问根节点</span></span><br><span class=\"line\">\t   userVisited(n);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用户输入初始化树</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initUserFullBinaryTree</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index=<span class=\"number\">1</span>,tree_index=<span class=\"number\">0</span>;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> x,y=<span class=\"number\">40</span>,temp;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">\t   <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">\t   <span class=\"keyword\">if</span>(i!=<span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">\t      x=width/(index+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t     <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=index;j++)&#123;</span><br><span class=\"line\">\t\t\t <span class=\"keyword\">if</span>(tree[tree_index].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t   setTreeBegin(x,y,<span class=\"number\">60</span>,<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t   tree[tree_index].xx=x;</span><br><span class=\"line\">\t\t   tree[tree_index].yy=y;</span><br><span class=\"line\">\t\t   tree[tree_index].size=<span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//整数</span></span><br><span class=\"line\">\t\t   temp=tree[tree_index].data<span class=\"number\">-48</span>;</span><br><span class=\"line\">\t\t   <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,(temp*j+i)%<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t    outtextxy(x+<span class=\"number\">18</span>,y+<span class=\"number\">18</span>,str);</span><br><span class=\"line\">\t\t   tree[tree_index].data=(temp*j+i)%<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\t &#125;</span><br><span class=\"line\">\t    \ttree_index++;</span><br><span class=\"line\">\t\t   x+=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t &#125; </span><br><span class=\"line\">\t   &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t     x=<span class=\"number\">30</span>;</span><br><span class=\"line\">\t     <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;=index;j++)&#123;</span><br><span class=\"line\">\t\t\t <span class=\"keyword\">if</span>(tree[tree_index].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\tsetTreeBegin(x,y,<span class=\"number\">50</span>,<span class=\"number\">50</span>);</span><br><span class=\"line\">\t\t   tree[tree_index].size=<span class=\"number\">50</span>;</span><br><span class=\"line\">\t\t   tree[tree_index].xx=x;</span><br><span class=\"line\">\t\t   tree[tree_index].yy=y;</span><br><span class=\"line\">\t\t    <span class=\"comment\">//整数</span></span><br><span class=\"line\">\t\t   temp=tree[tree_index].data<span class=\"number\">-48</span>;</span><br><span class=\"line\">\t\t\t <span class=\"comment\">//将数字转换成char类型</span></span><br><span class=\"line\">\t\t   <span class=\"keyword\">char</span> str[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t\t   <span class=\"built_in\">sprintf</span>(str,<span class=\"string\">\"%d\"</span>,(temp*j+i)%<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t    outtextxy(x+<span class=\"number\">15</span>,y+<span class=\"number\">15</span>,str);</span><br><span class=\"line\">\t\t   tree[tree_index].data=(temp*j+i)%<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\t &#125;</span><br><span class=\"line\">\t       tree_index++;</span><br><span class=\"line\">\t\t   x+=<span class=\"number\">60</span>;</span><br><span class=\"line\">\t\t &#125; </span><br><span class=\"line\">\t   </span><br><span class=\"line\">\t   &#125;</span><br><span class=\"line\">\t   y+=<span class=\"number\">130</span>;</span><br><span class=\"line\">\t   index*=<span class=\"number\">2</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">//用来设置线段的颜色和宽度</span></span><br><span class=\"line\">   \tsetcolor(RED);</span><br><span class=\"line\">\tsetlinestyle(PS_SOLID, <span class=\"literal\">NULL</span>, <span class=\"number\">2</span>);\t<span class=\"comment\">// 设置线宽为 2</span></span><br><span class=\"line\">    <span class=\"comment\">//用来连接每个节点之间的线段</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> f=<span class=\"number\">0</span>;f&lt;<span class=\"number\">15</span>;f++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t    line(tree[f].xx+<span class=\"number\">30</span>,tree[f].yy+<span class=\"number\">60</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].xx+<span class=\"number\">30</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">1</span>].yy);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].data!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\tline(tree[f].xx+<span class=\"number\">30</span>,tree[f].yy+<span class=\"number\">60</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].xx+<span class=\"number\">30</span>,tree[f*<span class=\"number\">2</span>+<span class=\"number\">2</span>].yy);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//用来进行先序遍历</span></span><br><span class=\"line\">   userFristOrder(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  用户输入生成二叉树</span><br><span class=\"line\">1</span><br><span class=\"line\">34</span><br><span class=\"line\">2354</span><br><span class=\"line\">12..32..</span><br><span class=\"line\">1243....3254....</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">userTree</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入数据，最多五层，只能是数字！\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//录入用户数据</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">31</span>;i++)&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">cin</span>&gt;&gt;userchar[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//将数据录入结构体数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">31</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(userchar[i]!=<span class=\"string\">'.'</span>)&#123;</span><br><span class=\"line\">\t\t   tree[i].data=(userchar[i]+<span class=\"string\">'0'</span><span class=\"number\">-48</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t  tree[i].data=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">   setBackground();</span><br><span class=\"line\">   initUserFullBinaryTree();</span><br><span class=\"line\">   <span class=\"built_in\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">   用来监听用户输入，确定用户选择生成二叉树</span><br><span class=\"line\">   的方式</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">generationMode</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">   \t<span class=\"keyword\">int</span> select;</span><br><span class=\"line\">\t<span class=\"comment\">//给用户两种选择，一种是系统随机生成，一种是用户输入</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;\t</span><br><span class=\"line\">\t\tresult=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"*****************选择生成方式*****************\\n\\n\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"1---&gt;系统随机生成二叉树\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"2---&gt;用户输入节点生成二叉树\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"3---&gt;结束程序\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;select);</span><br><span class=\"line\">    \tsystem(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(select==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************系统随机生成二叉树*************\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"1---&gt;先序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"2---&gt;中序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"3---&gt;后序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"4---&gt;结束程序\\n\"</span>);</span><br><span class=\"line\">\t  \t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;flag);</span><br><span class=\"line\">\t  <span class=\"keyword\">if</span>(flag==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">\t     <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************退出程序，感谢你的使用*************\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;<span class=\"comment\">//先序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************先序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t     </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">2</span>)&#123;<span class=\"comment\">//中序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************中序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">3</span>)&#123;<span class=\"comment\">//后序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************后序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t     <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************输入错误，请重新输入*************\\n\"</span>);</span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">\t  randomTree();</span><br><span class=\"line\">\t  system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(select==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************用户输入生成二叉树*************\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"1---&gt;先序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"2---&gt;中序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"3---&gt;后序遍历\\n\"</span>);</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"4---&gt;结束程序\\n\"</span>);</span><br><span class=\"line\">\t  \t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;flag);</span><br><span class=\"line\">\t  <span class=\"keyword\">if</span>(flag==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">\t     <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************退出程序，感谢你的使用*************\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;<span class=\"comment\">//先序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************先序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\"</span>);</span><br><span class=\"line\">\t     </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">2</span>)&#123;<span class=\"comment\">//中序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************中序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t\t   <span class=\"built_in\">printf</span>(<span class=\"string\">\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag==<span class=\"number\">3</span>)&#123;<span class=\"comment\">//后序遍历</span></span><br><span class=\"line\">\t\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************后序遍历*************\\n\"</span>);</span><br><span class=\"line\">\t\t   <span class=\"built_in\">printf</span>(<span class=\"string\">\"例如\\n1\\n34\\n2354\\n12..32..\\n1243....3254....\\n\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t     <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************输入错误，请重新输入*************\\n\"</span>);</span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">\t   userTree();</span><br><span class=\"line\">\t   system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">\t  </span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(select==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"*************退出程序，感谢你的使用*************\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n*************输入错误，请重新输入*************\\n\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">  主函数</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  generationMode();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"算法复杂度速查表","date":"2016-06-24T15:05:45.000Z","_content":"\n### 图例###\n\n<table><tr><td bgcolor=#53d000>绝佳</td><td bgcolor=#c8ea00>不错</td><td bgcolor=#ff0>一般</td><td bgcolor=#ffc543>不佳</td><td bgcolor=#ff8989>糟糕</td></tr></table>\n\n\n### 数组排序算法###\n\n<table > <thead> <tr> <th bgcolor=#F9F9F9>算法</th> <th bgcolor=#F9F9F9 colspan=\"3\">时间复杂度</th> <th bgcolor=#F9F9F9>空间复杂度</th> </tr> <tr> <th bgcolor=#F9F9F9></th> <th bgcolor=#F9F9F9>最佳</th> <th bgcolor=#F9F9F9>平均</th> <th bgcolor=#F9F9F9>最差</th> <th bgcolor=#F9F9F9>最差</th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Quicksort\" target=\"_blank\">Quicksort</a></td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#c8ea00>O(log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\">Mergesort</a></td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Timsort\" target=\"_blank\">Timsort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Heapsort\" target=\"_blank\">Heapsort</a></td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Bubble_sort\" target=\"_blank\">Bubble Sort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\">Insertion Sort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Selection_sort\" target=\"_blank\">Selection Sort</a></td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Shellsort\" target=\"_blank\">Shell Sort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ff8989>O((nlog(n))^2)</td> <td bgcolor=#ff8989>O((nlog(n))^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a title=\"Only for integers. k is a number of buckets\" href=\"http://en.wikipedia.org/wiki/Bucket_sort\" rel=\"tooltip\">Bucket Sort</a></td> <td bgcolor=#53d000>O(n+k)</td> <td bgcolor=#53d000>O(n+k)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a title=\"Constant number of digits 'k'\" href=\"http://en.wikipedia.org/wiki/Radix_sort\" rel=\"tooltip\">Radix Sort</a></td> <td bgcolor=#53d000>O(nk)</td> <td bgcolor=#53d000>O(nk)</td> <td bgcolor=#53d000>O(nk)</td> <td bgcolor=#ff0>O(n+k)</td> </tr> </tbody> </table>\n\n<!-- more -->\n\n### 数据结构操作###\n\n<table > <thead> <tr> <th bgcolor=#F9F9F9>数据结构</th> <th bgcolor=#F9F9F9 colspan=\"8\">时间复杂度</th> <th bgcolor=#F9F9F9>空间复杂度</th> </tr> <tr> <th bgcolor=#F9F9F9></th> <th bgcolor=#F9F9F9 colspan=\"4\">平均</th> <th bgcolor=#F9F9F9 colspan=\"4\">最差</th> <th bgcolor=#F9F9F9>最差</th> </tr> <tr> <th></th> <th bgcolor=#F9F9F9>访问</th> <th bgcolor=#F9F9F9>搜索</th> <th bgcolor=#F9F9F9>插入</th> <th bgcolor=#F9F9F9>删除</th> <th bgcolor=#F9F9F9>访问</th> <th bgcolor=#F9F9F9>搜索</th> <th bgcolor=#F9F9F9>插入</th> <th bgcolor=#F9F9F9>删除</th> <th bgcolor=#F9F9F9></th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Array_data_structure\" target=\"_blank\">Array</a></td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" target=\"_blank\">Stack</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Singly_linked_list#Singly_linked_lists\" target=\"_blank\">Singly-Linked List</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Doubly_linked_list\" target=\"_blank\">Doubly-Linked List</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Skip_list\" target=\"_blank\">Skip List</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ffc543>O(n log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Hash_table\" target=\"_blank\">Hash Table</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binary_search_tree\" target=\"_blank\">Binary Search Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"https://en.wikipedia.org/wiki/Cartesian_tree\" target=\"_blank\">Cartesian Tree</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/B_tree\" target=\"_blank\">B-Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Red-black_tree\" target=\"_blank\">Red-Black Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"https://en.wikipedia.org/wiki/Splay_tree\" target=\"_blank\">Splay Tree</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/AVL_tree\" target=\"_blank\">AVL Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> </tbody> </table> \n\n\n\n### 图操作###\n\n<table > <tbody> <tr> <th bgcolor=#F9F9F9>节点 / 边界管理</th> <th bgcolor=#F9F9F9>存储</th> <th bgcolor=#F9F9F9>增加顶点</th> <th bgcolor=#F9F9F9>增加边界</th> <th bgcolor=#F9F9F9>移除顶点</th> <th bgcolor=#F9F9F9>移除边界</th> <th bgcolor=#F9F9F9>查询</th> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Adjacency_list\" target=\"_blank\">Adjacency list</a></td> <td bgcolor=#ff0>O(|V|+|E|)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(|V| + |E|)</td> <td bgcolor=#ff0>O(|E|)</td> <td bgcolor=#ff0>O(|V|)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Incidence_list\" target=\"_blank\">Incidence list</a></td> <td bgcolor=#ff0>O(|V|+|E|)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(|E|)</td> <td bgcolor=#ff0>O(|E|)</td> <td bgcolor=#ff0>O(|E|)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Adjacency_matrix\" target=\"_blank\">Adjacency matrix</a></td> <td bgcolor=#ff8989>O(|V|^2)</td> <td bgcolor=#ff8989>O(|V|^2)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff8989>O(|V|^2)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Incidence_matrix\" target=\"_blank\">Incidence matrix</a></td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff0>O(|E|)</td> </tr> </tbody> </table> \n\n### 堆操作###\n\n<table > <thead> <tr> <th bgcolor=#F9F9F9>类型</th> <th bgcolor=#F9F9F9 colspan=\"7\">时间复杂度</th> </tr> <tr> <th bgcolor=#F9F9F9></th> <th bgcolor=#F9F9F9>Heapify</th> <th bgcolor=#F9F9F9>查找最大值</th> <th bgcolor=#F9F9F9>分离最大值</th> <th bgcolor=#F9F9F9>提升键</th> <th bgcolor=#F9F9F9>插入</th> <th bgcolor=#F9F9F9>删除</th> <th bgcolor=#F9F9F9>合并</th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Linked_list\" target=\"_blank\">Linked List (sorted)</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff8989>O(m+n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Linked_list\" target=\"_blank\">Linked List (unsorted)</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binary_heap\" target=\"_blank\">Binary Heap</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff8989>O(m+n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binomial_heap\" target=\"_blank\">Binomial Heap</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000 title=\"With aux pointer\">O(1)</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#53d000 title=\"Amortized\">O(1)</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Fibonacci_heap\" target=\"_blank\">Fibonacci Heap</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#c8ea00 title=\"Amortized\">O(log(n))</td> <td bgcolor=#53d000 title=\"Amortized\">O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#c8ea00 title=\"Amortized\">O(log(n))</td> <td bgcolor=#53d000>O(1)</td> </tr> </tbody> </table> \n\n\n### 大 O 复杂度图表###\n\n![](http://o99dg8ap9.bkt.clouddn.com/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6%E9%80%9F%E6%9F%A5%E8%A1%A8.png)","source":"_posts/数据结构和算法和组成原理/算法复杂度速查表.md","raw":"---\ntitle: 算法复杂度速查表\ndate: 2016-06-24 15:05:45\ntags: 算法\ncategories: 算法\n---\n\n### 图例###\n\n<table><tr><td bgcolor=#53d000>绝佳</td><td bgcolor=#c8ea00>不错</td><td bgcolor=#ff0>一般</td><td bgcolor=#ffc543>不佳</td><td bgcolor=#ff8989>糟糕</td></tr></table>\n\n\n### 数组排序算法###\n\n<table > <thead> <tr> <th bgcolor=#F9F9F9>算法</th> <th bgcolor=#F9F9F9 colspan=\"3\">时间复杂度</th> <th bgcolor=#F9F9F9>空间复杂度</th> </tr> <tr> <th bgcolor=#F9F9F9></th> <th bgcolor=#F9F9F9>最佳</th> <th bgcolor=#F9F9F9>平均</th> <th bgcolor=#F9F9F9>最差</th> <th bgcolor=#F9F9F9>最差</th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Quicksort\" target=\"_blank\">Quicksort</a></td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#c8ea00>O(log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\">Mergesort</a></td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Timsort\" target=\"_blank\">Timsort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Heapsort\" target=\"_blank\">Heapsort</a></td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Bubble_sort\" target=\"_blank\">Bubble Sort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\">Insertion Sort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Selection_sort\" target=\"_blank\">Selection Sort</a></td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Shellsort\" target=\"_blank\">Shell Sort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ff8989>O((nlog(n))^2)</td> <td bgcolor=#ff8989>O((nlog(n))^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a title=\"Only for integers. k is a number of buckets\" href=\"http://en.wikipedia.org/wiki/Bucket_sort\" rel=\"tooltip\">Bucket Sort</a></td> <td bgcolor=#53d000>O(n+k)</td> <td bgcolor=#53d000>O(n+k)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a title=\"Constant number of digits 'k'\" href=\"http://en.wikipedia.org/wiki/Radix_sort\" rel=\"tooltip\">Radix Sort</a></td> <td bgcolor=#53d000>O(nk)</td> <td bgcolor=#53d000>O(nk)</td> <td bgcolor=#53d000>O(nk)</td> <td bgcolor=#ff0>O(n+k)</td> </tr> </tbody> </table>\n\n<!-- more -->\n\n### 数据结构操作###\n\n<table > <thead> <tr> <th bgcolor=#F9F9F9>数据结构</th> <th bgcolor=#F9F9F9 colspan=\"8\">时间复杂度</th> <th bgcolor=#F9F9F9>空间复杂度</th> </tr> <tr> <th bgcolor=#F9F9F9></th> <th bgcolor=#F9F9F9 colspan=\"4\">平均</th> <th bgcolor=#F9F9F9 colspan=\"4\">最差</th> <th bgcolor=#F9F9F9>最差</th> </tr> <tr> <th></th> <th bgcolor=#F9F9F9>访问</th> <th bgcolor=#F9F9F9>搜索</th> <th bgcolor=#F9F9F9>插入</th> <th bgcolor=#F9F9F9>删除</th> <th bgcolor=#F9F9F9>访问</th> <th bgcolor=#F9F9F9>搜索</th> <th bgcolor=#F9F9F9>插入</th> <th bgcolor=#F9F9F9>删除</th> <th bgcolor=#F9F9F9></th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Array_data_structure\" target=\"_blank\">Array</a></td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" target=\"_blank\">Stack</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Singly_linked_list#Singly_linked_lists\" target=\"_blank\">Singly-Linked List</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Doubly_linked_list\" target=\"_blank\">Doubly-Linked List</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Skip_list\" target=\"_blank\">Skip List</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ffc543>O(n log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Hash_table\" target=\"_blank\">Hash Table</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binary_search_tree\" target=\"_blank\">Binary Search Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"https://en.wikipedia.org/wiki/Cartesian_tree\" target=\"_blank\">Cartesian Tree</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/B_tree\" target=\"_blank\">B-Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Red-black_tree\" target=\"_blank\">Red-Black Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"https://en.wikipedia.org/wiki/Splay_tree\" target=\"_blank\">Splay Tree</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/AVL_tree\" target=\"_blank\">AVL Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> </tbody> </table> \n\n\n\n### 图操作###\n\n<table > <tbody> <tr> <th bgcolor=#F9F9F9>节点 / 边界管理</th> <th bgcolor=#F9F9F9>存储</th> <th bgcolor=#F9F9F9>增加顶点</th> <th bgcolor=#F9F9F9>增加边界</th> <th bgcolor=#F9F9F9>移除顶点</th> <th bgcolor=#F9F9F9>移除边界</th> <th bgcolor=#F9F9F9>查询</th> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Adjacency_list\" target=\"_blank\">Adjacency list</a></td> <td bgcolor=#ff0>O(|V|+|E|)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(|V| + |E|)</td> <td bgcolor=#ff0>O(|E|)</td> <td bgcolor=#ff0>O(|V|)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Incidence_list\" target=\"_blank\">Incidence list</a></td> <td bgcolor=#ff0>O(|V|+|E|)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(|E|)</td> <td bgcolor=#ff0>O(|E|)</td> <td bgcolor=#ff0>O(|E|)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Adjacency_matrix\" target=\"_blank\">Adjacency matrix</a></td> <td bgcolor=#ff8989>O(|V|^2)</td> <td bgcolor=#ff8989>O(|V|^2)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff8989>O(|V|^2)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Incidence_matrix\" target=\"_blank\">Incidence matrix</a></td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff0>O(|E|)</td> </tr> </tbody> </table> \n\n### 堆操作###\n\n<table > <thead> <tr> <th bgcolor=#F9F9F9>类型</th> <th bgcolor=#F9F9F9 colspan=\"7\">时间复杂度</th> </tr> <tr> <th bgcolor=#F9F9F9></th> <th bgcolor=#F9F9F9>Heapify</th> <th bgcolor=#F9F9F9>查找最大值</th> <th bgcolor=#F9F9F9>分离最大值</th> <th bgcolor=#F9F9F9>提升键</th> <th bgcolor=#F9F9F9>插入</th> <th bgcolor=#F9F9F9>删除</th> <th bgcolor=#F9F9F9>合并</th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Linked_list\" target=\"_blank\">Linked List (sorted)</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff8989>O(m+n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Linked_list\" target=\"_blank\">Linked List (unsorted)</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binary_heap\" target=\"_blank\">Binary Heap</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff8989>O(m+n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binomial_heap\" target=\"_blank\">Binomial Heap</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000 title=\"With aux pointer\">O(1)</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#53d000 title=\"Amortized\">O(1)</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Fibonacci_heap\" target=\"_blank\">Fibonacci Heap</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#c8ea00 title=\"Amortized\">O(log(n))</td> <td bgcolor=#53d000 title=\"Amortized\">O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#c8ea00 title=\"Amortized\">O(log(n))</td> <td bgcolor=#53d000>O(1)</td> </tr> </tbody> </table> \n\n\n### 大 O 复杂度图表###\n\n![](http://o99dg8ap9.bkt.clouddn.com/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6%E9%80%9F%E6%9F%A5%E8%A1%A8.png)","slug":"数据结构和算法和组成原理/算法复杂度速查表","published":1,"updated":"2016-06-24T09:27:04.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qlf003rkgaes15zac77","content":"<h3 id=\"图例\"><a href=\"#图例\" class=\"headerlink\" title=\"图例\"></a>图例</h3><table><tr><td bgcolor=\"#53d000\">绝佳</td><td bgcolor=\"#c8ea00\">不错</td><td bgcolor=\"#ff0\">一般</td><td bgcolor=\"#ffc543\">不佳</td><td bgcolor=\"#ff8989\">糟糕</td></tr></table>\n\n\n<h3 id=\"数组排序算法\"><a href=\"#数组排序算法\" class=\"headerlink\" title=\"数组排序算法\"></a>数组排序算法</h3><table> <thead> <tr> <th bgcolor=\"#F9F9F9\">算法</th> <th bgcolor=\"#F9F9F9\" colspan=\"3\">时间复杂度</th> <th bgcolor=\"#F9F9F9\">空间复杂度</th> </tr> <tr> <th bgcolor=\"#F9F9F9\"></th> <th bgcolor=\"#F9F9F9\">最佳</th> <th bgcolor=\"#F9F9F9\">平均</th> <th bgcolor=\"#F9F9F9\">最差</th> <th bgcolor=\"#F9F9F9\">最差</th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Quicksort\" target=\"_blank\">Quicksort</a></td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#ff8989\">O(n^2)</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\">Mergesort</a></td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Timsort\" target=\"_blank\">Timsort</a></td> <td bgcolor=\"#53d000\">O(n)</td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Heapsort\" target=\"_blank\">Heapsort</a></td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#ffc543\">O(n log(n))</td> <td bgcolor=\"#53d000\">O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Bubble_sort\" target=\"_blank\">Bubble Sort</a></td> <td bgcolor=\"#53d000\">O(n)</td> <td bgcolor=\"#ff8989\">O(n^2)</td> <td bgcolor=\"#ff8989\">O(n^2)</td> <td bgcolor=\"#53d000\">O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\">Insertion Sort</a></td> <td bgcolor=\"#53d000\">O(n)</td> <td bgcolor=\"#ff8989\">O(n^2)</td> <td bgcolor=\"#ff8989\">O(n^2)</td> <td bgcolor=\"#53d000\">O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Selection_sort\" target=\"_blank\">Selection Sort</a></td> <td bgcolor=\"#ff8989\">O(n^2)</td> <td bgcolor=\"#ff8989\">O(n^2)</td> <td bgcolor=\"#ff8989\">O(n^2)</td> <td bgcolor=\"#53d000\">O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Shellsort\" target=\"_blank\">Shell Sort</a></td> <td bgcolor=\"#53d000\">O(n)</td> <td bgcolor=\"#ff8989\">O((nlog(n))^2)</td> <td bgcolor=\"#ff8989\">O((nlog(n))^2)</td> <td bgcolor=\"#53d000\">O(1)</td> </tr> <tr> <td><a title=\"Only for integers. k is a number of buckets\" href=\"http://en.wikipedia.org/wiki/Bucket_sort\" rel=\"external\" target=\"_blank\">Bucket Sort</a></td> <td bgcolor=\"#53d000\">O(n+k)</td> <td bgcolor=\"#53d000\">O(n+k)</td> <td bgcolor=\"#ff8989\">O(n^2)</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a title=\"Constant number of digits 'k'\" href=\"http://en.wikipedia.org/wiki/Radix_sort\" rel=\"external\" target=\"_blank\">Radix Sort</a></td> <td bgcolor=\"#53d000\">O(nk)</td> <td bgcolor=\"#53d000\">O(nk)</td> <td bgcolor=\"#53d000\">O(nk)</td> <td bgcolor=\"#ff0\">O(n+k)</td> </tr> </tbody> </table>\n\n<a id=\"more\"></a>\n<h3 id=\"数据结构操作\"><a href=\"#数据结构操作\" class=\"headerlink\" title=\"数据结构操作\"></a>数据结构操作</h3><table> <thead> <tr> <th bgcolor=\"#F9F9F9\">数据结构</th> <th bgcolor=\"#F9F9F9\" colspan=\"8\">时间复杂度</th> <th bgcolor=\"#F9F9F9\">空间复杂度</th> </tr> <tr> <th bgcolor=\"#F9F9F9\"></th> <th bgcolor=\"#F9F9F9\" colspan=\"4\">平均</th> <th bgcolor=\"#F9F9F9\" colspan=\"4\">最差</th> <th bgcolor=\"#F9F9F9\">最差</th> </tr> <tr> <th></th> <th bgcolor=\"#F9F9F9\">访问</th> <th bgcolor=\"#F9F9F9\">搜索</th> <th bgcolor=\"#F9F9F9\">插入</th> <th bgcolor=\"#F9F9F9\">删除</th> <th bgcolor=\"#F9F9F9\">访问</th> <th bgcolor=\"#F9F9F9\">搜索</th> <th bgcolor=\"#F9F9F9\">插入</th> <th bgcolor=\"#F9F9F9\">删除</th> <th bgcolor=\"#F9F9F9\"></th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Array_data_structure\" target=\"_blank\">Array</a></td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" target=\"_blank\">Stack</a></td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Singly_linked_list#Singly_linked_lists\" target=\"_blank\">Singly-Linked List</a></td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Doubly_linked_list\" target=\"_blank\">Doubly-Linked List</a></td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Skip_list\" target=\"_blank\">Skip List</a></td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ffc543\">O(n log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Hash_table\" target=\"_blank\">Hash Table</a></td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binary_search_tree\" target=\"_blank\">Binary Search Tree</a></td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"https://en.wikipedia.org/wiki/Cartesian_tree\" target=\"_blank\">Cartesian Tree</a></td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/B_tree\" target=\"_blank\">B-Tree</a></td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Red-black_tree\" target=\"_blank\">Red-Black Tree</a></td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"https://en.wikipedia.org/wiki/Splay_tree\" target=\"_blank\">Splay Tree</a></td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/AVL_tree\" target=\"_blank\">AVL Tree</a></td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#ff0\">O(n)</td> </tr> </tbody> </table> \n\n\n\n<h3 id=\"图操作\"><a href=\"#图操作\" class=\"headerlink\" title=\"图操作\"></a>图操作</h3><table> <tbody> <tr> <th bgcolor=\"#F9F9F9\">节点 / 边界管理</th> <th bgcolor=\"#F9F9F9\">存储</th> <th bgcolor=\"#F9F9F9\">增加顶点</th> <th bgcolor=\"#F9F9F9\">增加边界</th> <th bgcolor=\"#F9F9F9\">移除顶点</th> <th bgcolor=\"#F9F9F9\">移除边界</th> <th bgcolor=\"#F9F9F9\">查询</th> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Adjacency_list\" target=\"_blank\">Adjacency list</a></td> <td bgcolor=\"#ff0\">O(|V|+|E|)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(|V| + |E|)</td> <td bgcolor=\"#ff0\">O(|E|)</td> <td bgcolor=\"#ff0\">O(|V|)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Incidence_list\" target=\"_blank\">Incidence list</a></td> <td bgcolor=\"#ff0\">O(|V|+|E|)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff0\">O(|E|)</td> <td bgcolor=\"#ff0\">O(|E|)</td> <td bgcolor=\"#ff0\">O(|E|)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Adjacency_matrix\" target=\"_blank\">Adjacency matrix</a></td> <td bgcolor=\"#ff8989\">O(|V|^2)</td> <td bgcolor=\"#ff8989\">O(|V|^2)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff8989\">O(|V|^2)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Incidence_matrix\" target=\"_blank\">Incidence matrix</a></td> <td bgcolor=\"#ff8989\">O(|V| ⋅ |E|)</td> <td bgcolor=\"#ff8989\">O(|V| ⋅ |E|)</td> <td bgcolor=\"#ff8989\">O(|V| ⋅ |E|)</td> <td bgcolor=\"#ff8989\">O(|V| ⋅ |E|)</td> <td bgcolor=\"#ff8989\">O(|V| ⋅ |E|)</td> <td bgcolor=\"#ff0\">O(|E|)</td> </tr> </tbody> </table> \n\n<h3 id=\"堆操作\"><a href=\"#堆操作\" class=\"headerlink\" title=\"堆操作\"></a>堆操作</h3><table> <thead> <tr> <th bgcolor=\"#F9F9F9\">类型</th> <th bgcolor=\"#F9F9F9\" colspan=\"7\">时间复杂度</th> </tr> <tr> <th bgcolor=\"#F9F9F9\"></th> <th bgcolor=\"#F9F9F9\">Heapify</th> <th bgcolor=\"#F9F9F9\">查找最大值</th> <th bgcolor=\"#F9F9F9\">分离最大值</th> <th bgcolor=\"#F9F9F9\">提升键</th> <th bgcolor=\"#F9F9F9\">插入</th> <th bgcolor=\"#F9F9F9\">删除</th> <th bgcolor=\"#F9F9F9\">合并</th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Linked_list\" target=\"_blank\">Linked List (sorted)</a></td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff8989\">O(n)</td> <td bgcolor=\"#ff8989\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#ff8989\">O(m+n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Linked_list\" target=\"_blank\">Linked List (unsorted)</a></td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#ff8989\">O(n)</td> <td bgcolor=\"#ff8989\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binary_heap\" target=\"_blank\">Binary Heap</a></td> <td bgcolor=\"#ff0\">O(n)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#ff8989\">O(m+n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binomial_heap\" target=\"_blank\">Binomial Heap</a></td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#53d000\" title=\"With aux pointer\">O(1)</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#53d000\" title=\"Amortized\">O(1)</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> <td bgcolor=\"#c8ea00\">O(log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Fibonacci_heap\" target=\"_blank\">Fibonacci Heap</a></td> <td bgcolor=\"#F9F9F9\">-</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#c8ea00\" title=\"Amortized\">O(log(n))</td> <td bgcolor=\"#53d000\" title=\"Amortized\">O(1)</td> <td bgcolor=\"#53d000\">O(1)</td> <td bgcolor=\"#c8ea00\" title=\"Amortized\">O(log(n))</td> <td bgcolor=\"#53d000\">O(1)</td> </tr> </tbody> </table> \n\n\n<h3 id=\"大-O-复杂度图表\"><a href=\"#大-O-复杂度图表\" class=\"headerlink\" title=\"大 O 复杂度图表\"></a>大 O 复杂度图表</h3><p><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6%E9%80%9F%E6%9F%A5%E8%A1%A8.png\" alt=\"\"></p>\n","excerpt":"<h3 id=\"图例\"><a href=\"#图例\" class=\"headerlink\" title=\"图例\"></a>图例</h3><table><tr><td bgcolor=#53d000>绝佳</td><td bgcolor=#c8ea00>不错</td><td bgcolor=#ff0>一般</td><td bgcolor=#ffc543>不佳</td><td bgcolor=#ff8989>糟糕</td></tr></table>\n\n\n<h3 id=\"数组排序算法\"><a href=\"#数组排序算法\" class=\"headerlink\" title=\"数组排序算法\"></a>数组排序算法</h3><table > <thead> <tr> <th bgcolor=#F9F9F9>算法</th> <th bgcolor=#F9F9F9 colspan=\"3\">时间复杂度</th> <th bgcolor=#F9F9F9>空间复杂度</th> </tr> <tr> <th bgcolor=#F9F9F9></th> <th bgcolor=#F9F9F9>最佳</th> <th bgcolor=#F9F9F9>平均</th> <th bgcolor=#F9F9F9>最差</th> <th bgcolor=#F9F9F9>最差</th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Quicksort\" target=\"_blank\">Quicksort</a></td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#c8ea00>O(log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\">Mergesort</a></td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Timsort\" target=\"_blank\">Timsort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Heapsort\" target=\"_blank\">Heapsort</a></td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#ffc543>O(n log(n))</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Bubble_sort\" target=\"_blank\">Bubble Sort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\">Insertion Sort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Selection_sort\" target=\"_blank\">Selection Sort</a></td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Shellsort\" target=\"_blank\">Shell Sort</a></td> <td bgcolor=#53d000>O(n)</td> <td bgcolor=#ff8989>O((nlog(n))^2)</td> <td bgcolor=#ff8989>O((nlog(n))^2)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a title=\"Only for integers. k is a number of buckets\" href=\"http://en.wikipedia.org/wiki/Bucket_sort\" rel=\"tooltip\">Bucket Sort</a></td> <td bgcolor=#53d000>O(n+k)</td> <td bgcolor=#53d000>O(n+k)</td> <td bgcolor=#ff8989>O(n^2)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a title=\"Constant number of digits 'k'\" href=\"http://en.wikipedia.org/wiki/Radix_sort\" rel=\"tooltip\">Radix Sort</a></td> <td bgcolor=#53d000>O(nk)</td> <td bgcolor=#53d000>O(nk)</td> <td bgcolor=#53d000>O(nk)</td> <td bgcolor=#ff0>O(n+k)</td> </tr> </tbody> </table>","more":"<h3 id=\"数据结构操作\"><a href=\"#数据结构操作\" class=\"headerlink\" title=\"数据结构操作\"></a>数据结构操作</h3><table > <thead> <tr> <th bgcolor=#F9F9F9>数据结构</th> <th bgcolor=#F9F9F9 colspan=\"8\">时间复杂度</th> <th bgcolor=#F9F9F9>空间复杂度</th> </tr> <tr> <th bgcolor=#F9F9F9></th> <th bgcolor=#F9F9F9 colspan=\"4\">平均</th> <th bgcolor=#F9F9F9 colspan=\"4\">最差</th> <th bgcolor=#F9F9F9>最差</th> </tr> <tr> <th></th> <th bgcolor=#F9F9F9>访问</th> <th bgcolor=#F9F9F9>搜索</th> <th bgcolor=#F9F9F9>插入</th> <th bgcolor=#F9F9F9>删除</th> <th bgcolor=#F9F9F9>访问</th> <th bgcolor=#F9F9F9>搜索</th> <th bgcolor=#F9F9F9>插入</th> <th bgcolor=#F9F9F9>删除</th> <th bgcolor=#F9F9F9></th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Array_data_structure\" target=\"_blank\">Array</a></td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Stack_(abstract_data_type)\" target=\"_blank\">Stack</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Singly_linked_list#Singly_linked_lists\" target=\"_blank\">Singly-Linked List</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Doubly_linked_list\" target=\"_blank\">Doubly-Linked List</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Skip_list\" target=\"_blank\">Skip List</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ffc543>O(n log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Hash_table\" target=\"_blank\">Hash Table</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binary_search_tree\" target=\"_blank\">Binary Search Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"https://en.wikipedia.org/wiki/Cartesian_tree\" target=\"_blank\">Cartesian Tree</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/B_tree\" target=\"_blank\">B-Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Red-black_tree\" target=\"_blank\">Red-Black Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"https://en.wikipedia.org/wiki/Splay_tree\" target=\"_blank\">Splay Tree</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/AVL_tree\" target=\"_blank\">AVL Tree</a></td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff0>O(n)</td> </tr> </tbody> </table> \n\n\n\n<h3 id=\"图操作\"><a href=\"#图操作\" class=\"headerlink\" title=\"图操作\"></a>图操作</h3><table > <tbody> <tr> <th bgcolor=#F9F9F9>节点 / 边界管理</th> <th bgcolor=#F9F9F9>存储</th> <th bgcolor=#F9F9F9>增加顶点</th> <th bgcolor=#F9F9F9>增加边界</th> <th bgcolor=#F9F9F9>移除顶点</th> <th bgcolor=#F9F9F9>移除边界</th> <th bgcolor=#F9F9F9>查询</th> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Adjacency_list\" target=\"_blank\">Adjacency list</a></td> <td bgcolor=#ff0>O(|V|+|E|)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(|V| + |E|)</td> <td bgcolor=#ff0>O(|E|)</td> <td bgcolor=#ff0>O(|V|)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Incidence_list\" target=\"_blank\">Incidence list</a></td> <td bgcolor=#ff0>O(|V|+|E|)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff0>O(|E|)</td> <td bgcolor=#ff0>O(|E|)</td> <td bgcolor=#ff0>O(|E|)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Adjacency_matrix\" target=\"_blank\">Adjacency matrix</a></td> <td bgcolor=#ff8989>O(|V|^2)</td> <td bgcolor=#ff8989>O(|V|^2)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff8989>O(|V|^2)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Incidence_matrix\" target=\"_blank\">Incidence matrix</a></td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff8989>O(|V| ⋅ |E|)</td> <td bgcolor=#ff0>O(|E|)</td> </tr> </tbody> </table> \n\n<h3 id=\"堆操作\"><a href=\"#堆操作\" class=\"headerlink\" title=\"堆操作\"></a>堆操作</h3><table > <thead> <tr> <th bgcolor=#F9F9F9>类型</th> <th bgcolor=#F9F9F9 colspan=\"7\">时间复杂度</th> </tr> <tr> <th bgcolor=#F9F9F9></th> <th bgcolor=#F9F9F9>Heapify</th> <th bgcolor=#F9F9F9>查找最大值</th> <th bgcolor=#F9F9F9>分离最大值</th> <th bgcolor=#F9F9F9>提升键</th> <th bgcolor=#F9F9F9>插入</th> <th bgcolor=#F9F9F9>删除</th> <th bgcolor=#F9F9F9>合并</th> </tr> </thead> <tbody> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Linked_list\" target=\"_blank\">Linked List (sorted)</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#ff8989>O(m+n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Linked_list\" target=\"_blank\">Linked List (unsorted)</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#ff8989>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#53d000>O(1)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binary_heap\" target=\"_blank\">Binary Heap</a></td> <td bgcolor=#ff0>O(n)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#ff8989>O(m+n)</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Binomial_heap\" target=\"_blank\">Binomial Heap</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000 title=\"With aux pointer\">O(1)</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#53d000 title=\"Amortized\">O(1)</td> <td bgcolor=#c8ea00>O(log(n))</td> <td bgcolor=#c8ea00>O(log(n))</td> </tr> <tr> <td><a href=\"http://en.wikipedia.org/wiki/Fibonacci_heap\" target=\"_blank\">Fibonacci Heap</a></td> <td bgcolor=#F9F9F9>-</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#c8ea00 title=\"Amortized\">O(log(n))</td> <td bgcolor=#53d000 title=\"Amortized\">O(1)</td> <td bgcolor=#53d000>O(1)</td> <td bgcolor=#c8ea00 title=\"Amortized\">O(log(n))</td> <td bgcolor=#53d000>O(1)</td> </tr> </tbody> </table> \n\n\n<h3 id=\"大-O-复杂度图表\"><a href=\"#大-O-复杂度图表\" class=\"headerlink\" title=\"大 O 复杂度图表\"></a>大 O 复杂度图表</h3><p><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6%E9%80%9F%E6%9F%A5%E8%A1%A8.png\" alt=\"\"></p>"},{"title":"海明校验码","date":"2016-06-16T21:04:03.000Z","_content":"\n- 定义\n\n海明码（Hamming Code）是利用奇偶性来检错和纠错的校验方法。海明码的构成方法是在数据位之间的确定位置插入k个校验位，通过扩大码距来实现检错和纠错。对于数据位m的数据，加入k位的校验码,它应满足：\n\n### m+k+1<2^k###\n\n- 例子\n\n设数据为01101001，试采用校验位求其偶校验方式的海明码。\n     （1）确定数据位D和校验位Ｐ在海明码中的位置：\n　　　　由海明码编码规则可知：\n             pi在海明码的第2i-1\n             比如P4=2^(4-1)=8，所以位于第8位\n             \n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E7%A0%81%E5%9B%BE1.png)</center>\n\n<!-- more -->\n\n（2）确定校验关系\n         这个难点在于如何确定校验位组。\n         举一个例子来说：H3=D0,海明码下标为3，我们必须用已知的校验位（P1,P2,P3,P4）来表示3，这里3就可以等于1+2。\n\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E5%9B%BE2.png)</center>\n\n比如P1 的校验位为表格中红色标记出来所对应的海明码的位数\n       故：P1校验：P1,D0,D1,D3,D4,D6\n               P1=D0⊕D1⊕D3⊕D4⊕D6=1⊕0⊕1⊕0⊕1=1\n               ⊕符号：代表异或，相同则为0，不同则为1。只要仔细一定可以计算正确。\n               P2、P3、P4的海明码计算也是如此，关键是要找出正确的校验位组，所以海明校验码：011001001101","source":"_posts/数据结构和算法和组成原理/海明校验码.md","raw":"---\ntitle: 海明校验码\ndate: 2016-06-16 21:04:03\ntags: [组成原理,海明校验码]\ncategories: 数据结构和算法和组成原理\n---\n\n- 定义\n\n海明码（Hamming Code）是利用奇偶性来检错和纠错的校验方法。海明码的构成方法是在数据位之间的确定位置插入k个校验位，通过扩大码距来实现检错和纠错。对于数据位m的数据，加入k位的校验码,它应满足：\n\n### m+k+1<2^k###\n\n- 例子\n\n设数据为01101001，试采用校验位求其偶校验方式的海明码。\n     （1）确定数据位D和校验位Ｐ在海明码中的位置：\n　　　　由海明码编码规则可知：\n             pi在海明码的第2i-1\n             比如P4=2^(4-1)=8，所以位于第8位\n             \n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E7%A0%81%E5%9B%BE1.png)</center>\n\n<!-- more -->\n\n（2）确定校验关系\n         这个难点在于如何确定校验位组。\n         举一个例子来说：H3=D0,海明码下标为3，我们必须用已知的校验位（P1,P2,P3,P4）来表示3，这里3就可以等于1+2。\n\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E5%9B%BE2.png)</center>\n\n比如P1 的校验位为表格中红色标记出来所对应的海明码的位数\n       故：P1校验：P1,D0,D1,D3,D4,D6\n               P1=D0⊕D1⊕D3⊕D4⊕D6=1⊕0⊕1⊕0⊕1=1\n               ⊕符号：代表异或，相同则为0，不同则为1。只要仔细一定可以计算正确。\n               P2、P3、P4的海明码计算也是如此，关键是要找出正确的校验位组，所以海明校验码：011001001101","slug":"数据结构和算法和组成原理/海明校验码","published":1,"updated":"2016-06-17T13:53:02.891Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qlo003vkgaefof33neq","content":"<ul>\n<li>定义</li>\n</ul>\n<p>海明码（Hamming Code）是利用奇偶性来检错和纠错的校验方法。海明码的构成方法是在数据位之间的确定位置插入k个校验位，通过扩大码距来实现检错和纠错。对于数据位m的数据，加入k位的校验码,它应满足：</p>\n<h3 id=\"m-k-1-lt-2-k\"><a href=\"#m-k-1-lt-2-k\" class=\"headerlink\" title=\"m+k+1&lt;2^k\"></a>m+k+1&lt;2^k</h3><ul>\n<li>例子</li>\n</ul>\n<p>设数据为01101001，试采用校验位求其偶校验方式的海明码。<br>     （1）确定数据位D和校验位Ｐ在海明码中的位置：<br>　　　　由海明码编码规则可知：<br>             pi在海明码的第2i-1<br>             比如P4=2^(4-1)=8，所以位于第8位</p>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E7%A0%81%E5%9B%BE1.png\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<p>（2）确定校验关系<br>         这个难点在于如何确定校验位组。<br>         举一个例子来说：H3=D0,海明码下标为3，我们必须用已知的校验位（P1,P2,P3,P4）来表示3，这里3就可以等于1+2。</p>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E5%9B%BE2.png\" alt=\"\"></center>\n\n<p>比如P1 的校验位为表格中红色标记出来所对应的海明码的位数<br>       故：P1校验：P1,D0,D1,D3,D4,D6<br>               P1=D0⊕D1⊕D3⊕D4⊕D6=1⊕0⊕1⊕0⊕1=1<br>               ⊕符号：代表异或，相同则为0，不同则为1。只要仔细一定可以计算正确。<br>               P2、P3、P4的海明码计算也是如此，关键是要找出正确的校验位组，所以海明校验码：011001001101</p>\n","excerpt":"<ul>\n<li>定义</li>\n</ul>\n<p>海明码（Hamming Code）是利用奇偶性来检错和纠错的校验方法。海明码的构成方法是在数据位之间的确定位置插入k个校验位，通过扩大码距来实现检错和纠错。对于数据位m的数据，加入k位的校验码,它应满足：</p>\n<h3 id=\"m-k-1-lt-2-k\"><a href=\"#m-k-1-lt-2-k\" class=\"headerlink\" title=\"m+k+1&lt;2^k\"></a>m+k+1&lt;2^k</h3><ul>\n<li>例子</li>\n</ul>\n<p>设数据为01101001，试采用校验位求其偶校验方式的海明码。<br>     （1）确定数据位D和校验位Ｐ在海明码中的位置：<br>　　　　由海明码编码规则可知：<br>             pi在海明码的第2i-1<br>             比如P4=2^(4-1)=8，所以位于第8位</p>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E7%A0%81%E5%9B%BE1.png\" alt=\"\"></center>","more":"<p>（2）确定校验关系<br>         这个难点在于如何确定校验位组。<br>         举一个例子来说：H3=D0,海明码下标为3，我们必须用已知的校验位（P1,P2,P3,P4）来表示3，这里3就可以等于1+2。</p>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E6%B5%B7%E6%98%8E%E6%A0%A1%E9%AA%8C%E5%9B%BE2.png\" alt=\"\"></center>\n\n<p>比如P1 的校验位为表格中红色标记出来所对应的海明码的位数<br>       故：P1校验：P1,D0,D1,D3,D4,D6<br>               P1=D0⊕D1⊕D3⊕D4⊕D6=1⊕0⊕1⊕0⊕1=1<br>               ⊕符号：代表异或，相同则为0，不同则为1。只要仔细一定可以计算正确。<br>               P2、P3、P4的海明码计算也是如此，关键是要找出正确的校验位组，所以海明校验码：011001001101</p>"},{"title":"一千零一夜bgm","date":"2016-07-09T14:07:10.000Z","_content":"\n### 前言###\n\n- 很喜欢梁文道老师的《一千零一夜》，里面的背景音乐听起来非常舒服，但是不知到叫什么名字，去网上找了也没找到，这个是我从视频里面截下来的\n\n\n- 有知道的同学可以联系我哦！ [联系方式](http://www.qiuchengjia.cn/about/)\n\n### 一千零一夜###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E4%B8%80%E5%8D%83%E9%9B%B6%E4%B8%80%E5%A4%9C.jpeg)</center>\n\n<!-- more -->\n\n### 背景音乐###\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://o99dg8ap9.bkt.clouddn.com/%E4%B8%80%E5%8D%83%E9%9B%B6%E4%B8%80%E5%A4%9Cbgm.mp3\">\n</iframe>\t\n\n\t\n\t\n### 下载地址###\n\n- [传送门](http://pan.baidu.com/s/1cmhGHg)\n\n### 一千零一夜节目###\n\n#### 江南逢李龟年####\n\n<iframe height=498 width=510 src=\"http://player.youku.com/embed/XMTUxNTA3ODg2MA==\" \nframeborder=0 allowfullscreen>\n</iframe>\n\n","source":"_posts/文学电影音乐诗歌和画/一千零一夜bgm.md","raw":"---\ntitle: 一千零一夜bgm\ndate: 2016-07-09 14:07:10\ntags: [一千零一夜,音乐]\ncategories: 文学电影音乐诗歌和画\n---\n\n### 前言###\n\n- 很喜欢梁文道老师的《一千零一夜》，里面的背景音乐听起来非常舒服，但是不知到叫什么名字，去网上找了也没找到，这个是我从视频里面截下来的\n\n\n- 有知道的同学可以联系我哦！ [联系方式](http://www.qiuchengjia.cn/about/)\n\n### 一千零一夜###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E4%B8%80%E5%8D%83%E9%9B%B6%E4%B8%80%E5%A4%9C.jpeg)</center>\n\n<!-- more -->\n\n### 背景音乐###\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://o99dg8ap9.bkt.clouddn.com/%E4%B8%80%E5%8D%83%E9%9B%B6%E4%B8%80%E5%A4%9Cbgm.mp3\">\n</iframe>\t\n\n\t\n\t\n### 下载地址###\n\n- [传送门](http://pan.baidu.com/s/1cmhGHg)\n\n### 一千零一夜节目###\n\n#### 江南逢李龟年####\n\n<iframe height=498 width=510 src=\"http://player.youku.com/embed/XMTUxNTA3ODg2MA==\" \nframeborder=0 allowfullscreen>\n</iframe>\n\n","slug":"文学电影音乐诗歌和画/一千零一夜bgm","published":1,"updated":"2016-07-09T06:46:24.386Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qlq003wkgaea6hbkx0z","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><ul>\n<li>很喜欢梁文道老师的《一千零一夜》，里面的背景音乐听起来非常舒服，但是不知到叫什么名字，去网上找了也没找到，这个是我从视频里面截下来的</li>\n</ul>\n<ul>\n<li>有知道的同学可以联系我哦！ <a href=\"http://www.qiuchengjia.cn/about/\">联系方式</a></li>\n</ul>\n<h3 id=\"一千零一夜\"><a href=\"#一千零一夜\" class=\"headerlink\" title=\"一千零一夜\"></a>一千零一夜</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E4%B8%80%E5%8D%83%E9%9B%B6%E4%B8%80%E5%A4%9C.jpeg\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<h3 id=\"背景音乐\"><a href=\"#背景音乐\" class=\"headerlink\" title=\"背景音乐\"></a>背景音乐</h3><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"http://o99dg8ap9.bkt.clouddn.com/%E4%B8%80%E5%8D%83%E9%9B%B6%E4%B8%80%E5%A4%9Cbgm.mp3\"><br></iframe>    \n\n\n\n<h3 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"下载地址\"></a>下载地址</h3><ul>\n<li><a href=\"http://pan.baidu.com/s/1cmhGHg\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<h3 id=\"一千零一夜节目\"><a href=\"#一千零一夜节目\" class=\"headerlink\" title=\"一千零一夜节目\"></a>一千零一夜节目</h3><h4 id=\"江南逢李龟年\"><a href=\"#江南逢李龟年\" class=\"headerlink\" title=\"江南逢李龟年\"></a>江南逢李龟年</h4><iframe height=\"498\" width=\"510\" src=\"http://player.youku.com/embed/XMTUxNTA3ODg2MA==\" frameborder=\"0\" allowfullscreen><br></iframe>\n\n","excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><ul>\n<li>很喜欢梁文道老师的《一千零一夜》，里面的背景音乐听起来非常舒服，但是不知到叫什么名字，去网上找了也没找到，这个是我从视频里面截下来的</li>\n</ul>\n<ul>\n<li>有知道的同学可以联系我哦！ <a href=\"http://www.qiuchengjia.cn/about/\">联系方式</a></li>\n</ul>\n<h3 id=\"一千零一夜\"><a href=\"#一千零一夜\" class=\"headerlink\" title=\"一千零一夜\"></a>一千零一夜</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E4%B8%80%E5%8D%83%E9%9B%B6%E4%B8%80%E5%A4%9C.jpeg\" alt=\"\"></center>","more":"<h3 id=\"背景音乐\"><a href=\"#背景音乐\" class=\"headerlink\" title=\"背景音乐\"></a>背景音乐</h3><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n    src=\"http://o99dg8ap9.bkt.clouddn.com/%E4%B8%80%E5%8D%83%E9%9B%B6%E4%B8%80%E5%A4%9Cbgm.mp3\"><br></iframe>    \n\n\n\n<h3 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"下载地址\"></a>下载地址</h3><ul>\n<li><a href=\"http://pan.baidu.com/s/1cmhGHg\">传送门</a></li>\n</ul>\n<h3 id=\"一千零一夜节目\"><a href=\"#一千零一夜节目\" class=\"headerlink\" title=\"一千零一夜节目\"></a>一千零一夜节目</h3><h4 id=\"江南逢李龟年\"><a href=\"#江南逢李龟年\" class=\"headerlink\" title=\"江南逢李龟年\"></a>江南逢李龟年</h4><iframe height=498 width=510 src=\"http://player.youku.com/embed/XMTUxNTA3ODg2MA==\" \nframeborder=0 allowfullscreen><br></iframe>"},{"title":"他妈的-尧十三","date":"2016-06-27T21:44:41.000Z","_content":"\n<blockquote class=\"blockquote-center\">我多么希望，有一个门口，早晨，阳光照在草上。我们站着，扶着自己的门窗，门很低，但太阳是明亮的。草在结它的种子，风在摇它的叶子，我们站着，不说话，就十分美好  --顾城</blockquote>\n\n### 歌曲###\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=29771089&auto=0&height=66\">\n</iframe>\n\n### 歌词###\n\n作曲 : 尧十三　作词 : 尧十三　演唱：尧十三\n\n妈妈，我爱上一个姑娘　　　　　　　　　　妈妈，我做了一个梦\n可是她在别人的床上呻吟　　　　　　　　　我梦见我在红色的天空飞翔\n我想知道，她是不是真的快乐　　　　　　　可是妈妈，我知道我没有翅膀\n我去问她，她没有回答　　　　　　　　　　所以我死了，就像我出生一样\n\n- - -\n我深爱的那个姑娘　　　　　　　　　　　　妈妈，我做了一个梦\n她一点一点吃掉我的眼睛　　　　　　　　　梦见彩虹，终于出现在我的天空\n我的世界，只剩下红色　　　　　　　　　　可是我，已经忘记了彩虹的颜色\n\n妈妈，我爱上一个姑娘　　　　　　　　　　彩虹的尽头，会是什么样子\n我把青春，都留在她的身体里　　　　　　　我深爱的那个姑娘\n可是我，已经忘记了她的名字　　　　　　　她一点一点吃掉我的眼睛\n忘记了她的模样　　　　　　　　　　　　　我的世界，只剩下红色\n\n　　　　　　　　　　　　　　　　　　　　如果时间可以倒流\n　　　　　　　　　　　　　　　　　　　　我会在第一天就闭上眼\n　　　　　　　　　　　　　　　　　　　　然后什么都看不见\n- - -\n\n### 图片###\n\n- 一个人要帮助弱者，应当自己成为强者，而不是和他们一样变成弱者\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%845.jpg)</center>\n\n- 只要有一双真诚的眼睛陪我哭泣，就值得我为生命受苦\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8415.jpg)</center>\n\n\n<!-- more -->\n\n- 一个人的性格决定他的际遇。如果你喜欢保持你的性格，那么，你就无权拒绝你的际遇\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%841.jpg)</center>\n\n- 一个人的性格决定他的际遇。如果你喜欢保持你的性格，那么，你就无权拒绝你的际遇\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%842.jpg)</center>\n\n- 宿命论是那些缺乏意志力的弱者的借口\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%843.jpg)</center>\n\n- 天才免不了有障碍，因为障碍会创造天才\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%844.jpg)</center>\n\n- 当你知道世界上受苦的不是只有你，你会减少痛苦，也会在绝望中燃起希望\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%847.jpg)</center>\n\n- 有些事情是不能告诉别人的，有些事情是不必告诉别人的，有些事情是根本没有办法告诉别人的，而且有些事情是，即使告诉了别人，你也会马上后悔的\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%848.jpg)</center>\n\n- 世上只有一种英雄主义，就是在认清生活真相之后依然热爱生活\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%849.jpg)</center>\n\n- 没有一个人是完全幸福的。所谓幸福，是在于认清一个人的限度而安于这个限度\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%846.jpg)</center>\n\n- 你一定有过这种感觉，当你心事重重，渴望找个人谈一谈的时候，他来了，可是你们的谈话成了两条歪七扭八的曲线，就那么凄凉地、乏力地延伸下去。你敷衍着、笑着，装做很投机的样子。但是，你心里渴望他离去，让你静下来，静下来啃噬那属于你自己的寂寞\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8410.jpg)</center>\n\n- 真实的、永恒的、最高级的快乐，只能从三样东西中取得：工作、自我克制和爱\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8411.jpg)</center>\n\n- 大部分人在二三十岁上就死去了，因为过了这个年龄，他们只是自己的影子，此后的余生则是在模仿自己中度过，日复一日，更机械，更装腔作势地重复他们在有生之年的所作所为，所思所想，所爱所恨\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8412.jpg)</center>\n\n- 从来没有人读书，只有人在书中读自己，发现自己或检查自己\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8413.jpg)</center>\n\n- 人生有如一股奔流，没有暗礁，激不起美丽的浪花\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8414.jpg)</center>\n\n\n- 人生的钟摆永远在两极中摇晃，幸福也是其中的一极：要使钟摆停止在它一极上，只能把钟摆折断\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8416.jpg)</center>\n\n- 一个人不怕自讨苦吃的时候，才是爱情最强的时候\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8417.jpg)</center>\n\n- [参考博客](http://www.mtyyw.com/14950/)\n\n\n","source":"_posts/文学电影音乐诗歌和画/他妈的-尧十三.md","raw":"---\ntitle: 他妈的-尧十三\ndate: 2016-06-27 21:44:41\ntags: 尧十三\ncategories: 文学电影音乐诗歌和画\n---\n\n<blockquote class=\"blockquote-center\">我多么希望，有一个门口，早晨，阳光照在草上。我们站着，扶着自己的门窗，门很低，但太阳是明亮的。草在结它的种子，风在摇它的叶子，我们站着，不说话，就十分美好  --顾城</blockquote>\n\n### 歌曲###\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=29771089&auto=0&height=66\">\n</iframe>\n\n### 歌词###\n\n作曲 : 尧十三　作词 : 尧十三　演唱：尧十三\n\n妈妈，我爱上一个姑娘　　　　　　　　　　妈妈，我做了一个梦\n可是她在别人的床上呻吟　　　　　　　　　我梦见我在红色的天空飞翔\n我想知道，她是不是真的快乐　　　　　　　可是妈妈，我知道我没有翅膀\n我去问她，她没有回答　　　　　　　　　　所以我死了，就像我出生一样\n\n- - -\n我深爱的那个姑娘　　　　　　　　　　　　妈妈，我做了一个梦\n她一点一点吃掉我的眼睛　　　　　　　　　梦见彩虹，终于出现在我的天空\n我的世界，只剩下红色　　　　　　　　　　可是我，已经忘记了彩虹的颜色\n\n妈妈，我爱上一个姑娘　　　　　　　　　　彩虹的尽头，会是什么样子\n我把青春，都留在她的身体里　　　　　　　我深爱的那个姑娘\n可是我，已经忘记了她的名字　　　　　　　她一点一点吃掉我的眼睛\n忘记了她的模样　　　　　　　　　　　　　我的世界，只剩下红色\n\n　　　　　　　　　　　　　　　　　　　　如果时间可以倒流\n　　　　　　　　　　　　　　　　　　　　我会在第一天就闭上眼\n　　　　　　　　　　　　　　　　　　　　然后什么都看不见\n- - -\n\n### 图片###\n\n- 一个人要帮助弱者，应当自己成为强者，而不是和他们一样变成弱者\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%845.jpg)</center>\n\n- 只要有一双真诚的眼睛陪我哭泣，就值得我为生命受苦\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8415.jpg)</center>\n\n\n<!-- more -->\n\n- 一个人的性格决定他的际遇。如果你喜欢保持你的性格，那么，你就无权拒绝你的际遇\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%841.jpg)</center>\n\n- 一个人的性格决定他的际遇。如果你喜欢保持你的性格，那么，你就无权拒绝你的际遇\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%842.jpg)</center>\n\n- 宿命论是那些缺乏意志力的弱者的借口\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%843.jpg)</center>\n\n- 天才免不了有障碍，因为障碍会创造天才\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%844.jpg)</center>\n\n- 当你知道世界上受苦的不是只有你，你会减少痛苦，也会在绝望中燃起希望\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%847.jpg)</center>\n\n- 有些事情是不能告诉别人的，有些事情是不必告诉别人的，有些事情是根本没有办法告诉别人的，而且有些事情是，即使告诉了别人，你也会马上后悔的\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%848.jpg)</center>\n\n- 世上只有一种英雄主义，就是在认清生活真相之后依然热爱生活\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%849.jpg)</center>\n\n- 没有一个人是完全幸福的。所谓幸福，是在于认清一个人的限度而安于这个限度\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%846.jpg)</center>\n\n- 你一定有过这种感觉，当你心事重重，渴望找个人谈一谈的时候，他来了，可是你们的谈话成了两条歪七扭八的曲线，就那么凄凉地、乏力地延伸下去。你敷衍着、笑着，装做很投机的样子。但是，你心里渴望他离去，让你静下来，静下来啃噬那属于你自己的寂寞\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8410.jpg)</center>\n\n- 真实的、永恒的、最高级的快乐，只能从三样东西中取得：工作、自我克制和爱\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8411.jpg)</center>\n\n- 大部分人在二三十岁上就死去了，因为过了这个年龄，他们只是自己的影子，此后的余生则是在模仿自己中度过，日复一日，更机械，更装腔作势地重复他们在有生之年的所作所为，所思所想，所爱所恨\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8412.jpg)</center>\n\n- 从来没有人读书，只有人在书中读自己，发现自己或检查自己\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8413.jpg)</center>\n\n- 人生有如一股奔流，没有暗礁，激不起美丽的浪花\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8414.jpg)</center>\n\n\n- 人生的钟摆永远在两极中摇晃，幸福也是其中的一极：要使钟摆停止在它一极上，只能把钟摆折断\n\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8416.jpg)</center>\n\n- 一个人不怕自讨苦吃的时候，才是爱情最强的时候\n\n<center>![](http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8417.jpg)</center>\n\n- [参考博客](http://www.mtyyw.com/14950/)\n\n\n","slug":"文学电影音乐诗歌和画/他妈的-尧十三","published":1,"updated":"2016-06-28T02:30:20.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qls0040kgae3ml0dsrv","content":"<blockquote class=\"blockquote-center\">我多么希望，有一个门口，早晨，阳光照在草上。我们站着，扶着自己的门窗，门很低，但太阳是明亮的。草在结它的种子，风在摇它的叶子，我们站着，不说话，就十分美好  –顾城</blockquote>\n\n<h3 id=\"歌曲\"><a href=\"#歌曲\" class=\"headerlink\" title=\"歌曲\"></a>歌曲</h3><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=29771089&auto=0&height=66\"><br></iframe>\n\n<h3 id=\"歌词\"><a href=\"#歌词\" class=\"headerlink\" title=\"歌词\"></a>歌词</h3><p>作曲 : 尧十三　作词 : 尧十三　演唱：尧十三</p>\n<p>妈妈，我爱上一个姑娘　　　　　　　　　　妈妈，我做了一个梦<br>可是她在别人的床上呻吟　　　　　　　　　我梦见我在红色的天空飞翔<br>我想知道，她是不是真的快乐　　　　　　　可是妈妈，我知道我没有翅膀<br>我去问她，她没有回答　　　　　　　　　　所以我死了，就像我出生一样</p>\n<hr>\n<p>我深爱的那个姑娘　　　　　　　　　　　　妈妈，我做了一个梦<br>她一点一点吃掉我的眼睛　　　　　　　　　梦见彩虹，终于出现在我的天空<br>我的世界，只剩下红色　　　　　　　　　　可是我，已经忘记了彩虹的颜色</p>\n<p>妈妈，我爱上一个姑娘　　　　　　　　　　彩虹的尽头，会是什么样子<br>我把青春，都留在她的身体里　　　　　　　我深爱的那个姑娘<br>可是我，已经忘记了她的名字　　　　　　　她一点一点吃掉我的眼睛<br>忘记了她的模样　　　　　　　　　　　　　我的世界，只剩下红色</p>\n<p>　　　　　　　　　　　　　　　　　　　　如果时间可以倒流<br>　　　　　　　　　　　　　　　　　　　　我会在第一天就闭上眼<br>　　　　　　　　　　　　　　　　　　　　然后什么都看不见</p>\n<hr>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><ul>\n<li>一个人要帮助弱者，应当自己成为强者，而不是和他们一样变成弱者</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%845.jpg\" alt=\"\"></center>\n\n<ul>\n<li>只要有一双真诚的眼睛陪我哭泣，就值得我为生命受苦</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8415.jpg\" alt=\"\"></center>\n\n\n<a id=\"more\"></a>\n<ul>\n<li>一个人的性格决定他的际遇。如果你喜欢保持你的性格，那么，你就无权拒绝你的际遇</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%841.jpg\" alt=\"\"></center>\n\n<ul>\n<li>一个人的性格决定他的际遇。如果你喜欢保持你的性格，那么，你就无权拒绝你的际遇</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%842.jpg\" alt=\"\"></center>\n\n<ul>\n<li>宿命论是那些缺乏意志力的弱者的借口</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%843.jpg\" alt=\"\"></center>\n\n<ul>\n<li>天才免不了有障碍，因为障碍会创造天才</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%844.jpg\" alt=\"\"></center>\n\n<ul>\n<li>当你知道世界上受苦的不是只有你，你会减少痛苦，也会在绝望中燃起希望</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%847.jpg\" alt=\"\"></center>\n\n<ul>\n<li>有些事情是不能告诉别人的，有些事情是不必告诉别人的，有些事情是根本没有办法告诉别人的，而且有些事情是，即使告诉了别人，你也会马上后悔的</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%848.jpg\" alt=\"\"></center>\n\n<ul>\n<li>世上只有一种英雄主义，就是在认清生活真相之后依然热爱生活</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%849.jpg\" alt=\"\"></center>\n\n<ul>\n<li>没有一个人是完全幸福的。所谓幸福，是在于认清一个人的限度而安于这个限度</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%846.jpg\" alt=\"\"></center>\n\n<ul>\n<li>你一定有过这种感觉，当你心事重重，渴望找个人谈一谈的时候，他来了，可是你们的谈话成了两条歪七扭八的曲线，就那么凄凉地、乏力地延伸下去。你敷衍着、笑着，装做很投机的样子。但是，你心里渴望他离去，让你静下来，静下来啃噬那属于你自己的寂寞</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8410.jpg\" alt=\"\"></center>\n\n<ul>\n<li>真实的、永恒的、最高级的快乐，只能从三样东西中取得：工作、自我克制和爱</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8411.jpg\" alt=\"\"></center>\n\n<ul>\n<li>大部分人在二三十岁上就死去了，因为过了这个年龄，他们只是自己的影子，此后的余生则是在模仿自己中度过，日复一日，更机械，更装腔作势地重复他们在有生之年的所作所为，所思所想，所爱所恨</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8412.jpg\" alt=\"\"></center>\n\n<ul>\n<li>从来没有人读书，只有人在书中读自己，发现自己或检查自己</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8413.jpg\" alt=\"\"></center>\n\n<ul>\n<li>人生有如一股奔流，没有暗礁，激不起美丽的浪花</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8414.jpg\" alt=\"\"></center>\n\n\n<ul>\n<li>人生的钟摆永远在两极中摇晃，幸福也是其中的一极：要使钟摆停止在它一极上，只能把钟摆折断</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8416.jpg\" alt=\"\"></center>\n\n<ul>\n<li>一个人不怕自讨苦吃的时候，才是爱情最强的时候</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8417.jpg\" alt=\"\"></center>\n\n<ul>\n<li><a href=\"http://www.mtyyw.com/14950/\" target=\"_blank\" rel=\"external\">参考博客</a></li>\n</ul>\n","excerpt":"<blockquote class=\"blockquote-center\">我多么希望，有一个门口，早晨，阳光照在草上。我们站着，扶着自己的门窗，门很低，但太阳是明亮的。草在结它的种子，风在摇它的叶子，我们站着，不说话，就十分美好  –顾城</blockquote>\n\n<h3 id=\"歌曲\"><a href=\"#歌曲\" class=\"headerlink\" title=\"歌曲\"></a>歌曲</h3><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n    src=\"http://music.163.com/outchain/player?type=2&id=29771089&auto=0&height=66\"><br></iframe>\n\n<h3 id=\"歌词\"><a href=\"#歌词\" class=\"headerlink\" title=\"歌词\"></a>歌词</h3><p>作曲 : 尧十三　作词 : 尧十三　演唱：尧十三</p>\n<p>妈妈，我爱上一个姑娘　　　　　　　　　　妈妈，我做了一个梦<br>可是她在别人的床上呻吟　　　　　　　　　我梦见我在红色的天空飞翔<br>我想知道，她是不是真的快乐　　　　　　　可是妈妈，我知道我没有翅膀<br>我去问她，她没有回答　　　　　　　　　　所以我死了，就像我出生一样</p>\n<hr>\n<p>我深爱的那个姑娘　　　　　　　　　　　　妈妈，我做了一个梦<br>她一点一点吃掉我的眼睛　　　　　　　　　梦见彩虹，终于出现在我的天空<br>我的世界，只剩下红色　　　　　　　　　　可是我，已经忘记了彩虹的颜色</p>\n<p>妈妈，我爱上一个姑娘　　　　　　　　　　彩虹的尽头，会是什么样子<br>我把青春，都留在她的身体里　　　　　　　我深爱的那个姑娘<br>可是我，已经忘记了她的名字　　　　　　　她一点一点吃掉我的眼睛<br>忘记了她的模样　　　　　　　　　　　　　我的世界，只剩下红色</p>\n<p>　　　　　　　　　　　　　　　　　　　　如果时间可以倒流<br>　　　　　　　　　　　　　　　　　　　　我会在第一天就闭上眼<br>　　　　　　　　　　　　　　　　　　　　然后什么都看不见</p>\n<hr>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><ul>\n<li>一个人要帮助弱者，应当自己成为强者，而不是和他们一样变成弱者</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%845.jpg\" alt=\"\"></center>\n\n<ul>\n<li>只要有一双真诚的眼睛陪我哭泣，就值得我为生命受苦</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8415.jpg\" alt=\"\"></center>","more":"<ul>\n<li>一个人的性格决定他的际遇。如果你喜欢保持你的性格，那么，你就无权拒绝你的际遇</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%841.jpg\" alt=\"\"></center>\n\n<ul>\n<li>一个人的性格决定他的际遇。如果你喜欢保持你的性格，那么，你就无权拒绝你的际遇</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%842.jpg\" alt=\"\"></center>\n\n<ul>\n<li>宿命论是那些缺乏意志力的弱者的借口</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%843.jpg\" alt=\"\"></center>\n\n<ul>\n<li>天才免不了有障碍，因为障碍会创造天才</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%844.jpg\" alt=\"\"></center>\n\n<ul>\n<li>当你知道世界上受苦的不是只有你，你会减少痛苦，也会在绝望中燃起希望</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%847.jpg\" alt=\"\"></center>\n\n<ul>\n<li>有些事情是不能告诉别人的，有些事情是不必告诉别人的，有些事情是根本没有办法告诉别人的，而且有些事情是，即使告诉了别人，你也会马上后悔的</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%848.jpg\" alt=\"\"></center>\n\n<ul>\n<li>世上只有一种英雄主义，就是在认清生活真相之后依然热爱生活</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%849.jpg\" alt=\"\"></center>\n\n<ul>\n<li>没有一个人是完全幸福的。所谓幸福，是在于认清一个人的限度而安于这个限度</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%846.jpg\" alt=\"\"></center>\n\n<ul>\n<li>你一定有过这种感觉，当你心事重重，渴望找个人谈一谈的时候，他来了，可是你们的谈话成了两条歪七扭八的曲线，就那么凄凉地、乏力地延伸下去。你敷衍着、笑着，装做很投机的样子。但是，你心里渴望他离去，让你静下来，静下来啃噬那属于你自己的寂寞</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8410.jpg\" alt=\"\"></center>\n\n<ul>\n<li>真实的、永恒的、最高级的快乐，只能从三样东西中取得：工作、自我克制和爱</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8411.jpg\" alt=\"\"></center>\n\n<ul>\n<li>大部分人在二三十岁上就死去了，因为过了这个年龄，他们只是自己的影子，此后的余生则是在模仿自己中度过，日复一日，更机械，更装腔作势地重复他们在有生之年的所作所为，所思所想，所爱所恨</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8412.jpg\" alt=\"\"></center>\n\n<ul>\n<li>从来没有人读书，只有人在书中读自己，发现自己或检查自己</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8413.jpg\" alt=\"\"></center>\n\n<ul>\n<li>人生有如一股奔流，没有暗礁，激不起美丽的浪花</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8414.jpg\" alt=\"\"></center>\n\n\n<ul>\n<li>人生的钟摆永远在两极中摇晃，幸福也是其中的一极：要使钟摆停止在它一极上，只能把钟摆折断</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8416.jpg\" alt=\"\"></center>\n\n<ul>\n<li>一个人不怕自讨苦吃的时候，才是爱情最强的时候</li>\n</ul>\n<center><img src=\"http://o9fnxzb1g.bkt.clouddn.com/%E5%B0%A7%E5%8D%81%E4%B8%89%E4%BB%96%E5%A6%88%E7%9A%8417.jpg\" alt=\"\"></center>\n\n<ul>\n<li><a href=\"http://www.mtyyw.com/14950/\">参考博客</a></li>\n</ul>"},{"title":"你渴望的离开，只是无处停摆《理想三旬》陈鸿宇","date":"2016-06-25T10:14:26.000Z","_content":"\n<blockquote class=\"blockquote-center\">为了自己想过的生活，勇于放弃一些东西。这个世界没有公正之处，你也永远得不到两全之法。若要自由，就得牺牲安全。若要闲散，就不能获得别人评价中的成就。若要愉悦，就无需计较身边人给予的态度。若要前行，就得离开你现在停留的地方。——弗朗西斯·梅斯《托斯卡纳艳阳下》</blockquote>\n\n### 歌曲###\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=31445772&auto=0&height=66\">\n</iframe>\n\n\n### 歌词###\n\n作曲 : 陈鸿宇　作词 : 唐映枫　编曲：陈鸿宇/马雨阳　混音：马雨阳<br />\n雨后有车驶来　　　　　　　　　　　　　　归途也还可爱<br /> 驶过暮色苍白　　　　　　　　　　　　　　琴弦少了姿态<br /> 旧铁皮往南开，恋人已不在　　　　　　　　再不见那夜里，听歌的小孩<br /> 收听浓烟下的　　　　　　　　　　　　　　时光匆匆独白<br /> 诗歌电台　　　　　　　　　　　　　　　　将颠沛磨成卡带<br /> 不动情的咳嗽，至少看起来　　　　　　　　已枯卷的情怀，踏碎成年代<br />\n- - -\n wu　　　　　　　　　　　　　　　　　　　wu<br /> 就老去吧，孤独别醒来　　　　　　　　　　青春又醉倒在<br /> 你渴望的离开　　　　　　　　　　　　　　籍籍无名的怀<br /> 只是无处停摆　　　　　　　　　　　　　　靠嬉笑来虚度，聚散得慷慨</p><p>就歌唱吧，眼睛眯起来　　　　　　　　　　辗转却去不到<br /> 而热泪的崩坏　　　　　　　　　　　　　　对的站台<br /> 只是没抵达的存在　　　　　　　　　　　　如果漂泊是成长，必经的路牌<br /> \n \n- - -\n \n \n</p><p>你迷醒岁月中　　　　　　　　　　　　　　就歌唱吧，眼睛眯起来<br /> 那贫瘠的未来　　　　　　　　　　　　　　而热泪的崩坏<br /> 像遗憾季节里，未结果的爱　　　　　　　　只是没抵达的存在<br /> 弄脏了每一页诗　　　　　　　　　　　　　就甜蜜地忍耐<br /> 吻最疼痛的告白　　　　　　　　　　　　　繁星润湿窗台<br /> 而风声吹到这，已不需要释怀　　　　　　　光影跳动着像在，困倦里说爱</p><p>就老去吧，孤独别醒来　　　　　　　　　　再无谓的感慨<br /> 你渴望的离开　　　　　　　　　　　　　　以为明白<br /> 只是无处停摆　　　　　　　　　　　　　　梦倒塌的地方，今已爬满青苔</p>\n\n### 油画###\n\n- 春水初生，春林初盛，春风十里，不如你\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC7.jpg)</center>\n\n- 你挺悲观的，但是不彻底，所以才拧巴\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC11.jpg)</center>\n\n<!-- more -->\n\n\n- 我想，一把茶壶，茶叶在茶壶里泡过一段时间，即使茶水被喝光了，即使茶叶被倒出来了，茶气还是在的。北京是个大茶壶。太多性情中人象茶叶似的在北京泡过，即使性情被耗没了，即使人可能也死掉了，但是人气还在，仿佛茶气\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC1.jpg)</center>\n\n- 男子如果遇上真正对的女子，不用打坐、静观、修心，一个恍惚就能体会到了悟，在同一时，一切都空，一切都有，生死无间\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC2.jpg)</center>\n\n- 有些人像报纸，他们的故事全写在脸上，有些人像收音机，关着的时候是个死物，可是如果找对了开关，选对了台，他们会喋喋不休，直到你把他们关上，或是电池耗光\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC3.jpg)</center>\n\n- 我要用尽我的万种风情，让你在将来任何不和我在一起的时候，内心无法安宁\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC4.jpg)</center>\n\n- 一个人应该用一生去明白欲望就是虚幻呢，还是用一生来追求一个又一个欲望的满足\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC5.jpg)</center>\n\n- 我说我许了一个愿，你想不想知道。她说不想。我说不想也得告诉你，否则将来你会怪我欺负你。我要用尽我的万种风情，让你在将来任何不和我在一起的时候，内心无法安宁。她一言不发，我借着酒劲儿，说了很多漫无边际的话，其中有一句烂俗无比，我说：“我不要天上的星星，我要尘世的幸福。”\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC6.jpg)</center>\n\n- 黑夜其实从来就不是黑的，黑夜里，合欢花还是红的。毛绒绒的紫藤花还是紫白色得，和黑夜还是白天没有关系。就像，我想你，和黑夜还是白天没有关系，和晴天和下雨没有关系，甚至和你知道不知道都没有关系，尽管我还是会尽量让你知道，想到这里，于是欢喜\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC8.jpg)</center>\n\n- 可遇不可求的事\n后海有树的院子\n夏代有工的玉\n此时此刻的云\n二十来岁的你\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC9.jpg)</center>\n\n- 抱你 不知道下次在哪里，所以 再抱你 再大一点力气 你就小到 我风衣口袋里\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC10.jpg)</center>\n\n- 妈妈们一面暗示女孩男人的凶险无聊以及要洁身自好，一方面教导女儿对颜色的品位以及衣服搭配作为将来勾引男人的理论指导\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC12.jpg)</center>\n\n- 心里很近的朋友，是会想念的，是隔上一个月两个月必定要见一次面的，不说什么，在一起就觉得很温暖\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC13.jpg)</center>\n\n- 愿有岁月可回首，且以情深共白头\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC14.jpg)</center>\n\n- 我是混蛋我是懦夫\n我替老天管好自己\n不去祸害人间不去祸害你\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC15.jpg)</center>\n\n- 我把月亮戳到天上，天就是我的。我把脚踩入地里，地就是我的。我把唇压进你的脸庞，你就是我的\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC16.jpg)</center>\n\n- 佛说，香飘的每一刹那都是确定的，但是每下一个刹那都是不确定的。一期一会，冥冥中自有定数\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC17.jpg)</center>\n\n- 不知道喜欢你什么，实在不知道，如果确定知道喜欢你什么，是不够喜欢你。因为不确定具体喜欢你什么，所以喜欢你所有一切及其他\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC18.jpg)</center>\n\n- 实在放不下的时候，去趟重症病房或者墓地，你容易明白，你已经得到太多，再要就是贪婪，时间太少，好玩儿的事儿太多，从尊重生命的角度，不必纠缠\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC19.jpg)</center>\n\n- 想生个女儿，头发顺长，肉薄心窄，眼神忧郁。用牛奶，豆浆，米汤和可口可乐浇灌，一二十年后长成祸水\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC20.jpg)</center>\n\n- 如果她是一种植物，我的眼光就是水，这样浇灌了三年，或许她从来没有想过她如此滋润的原因\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC22.jpg)</center>\n\n### 油画作者###\n\n> 以上油画来自俄罗斯油画家Vladimir Volegov，Vladimir 鲜明的色彩和大胆的笔触，创建了一个永恒的感性形象的图画\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/文学电影音乐诗歌和画/你渴望的离开，只是无处停摆《理想三旬》陈鸿宇.md","raw":"---\ntitle: 你渴望的离开，只是无处停摆《理想三旬》陈鸿宇\ndate: 2016-06-25 10:14:26\ntags: [民谣,油画]\ncategories: 文学电影音乐诗歌和画\n---\n\n<blockquote class=\"blockquote-center\">为了自己想过的生活，勇于放弃一些东西。这个世界没有公正之处，你也永远得不到两全之法。若要自由，就得牺牲安全。若要闲散，就不能获得别人评价中的成就。若要愉悦，就无需计较身边人给予的态度。若要前行，就得离开你现在停留的地方。——弗朗西斯·梅斯《托斯卡纳艳阳下》</blockquote>\n\n### 歌曲###\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=31445772&auto=0&height=66\">\n</iframe>\n\n\n### 歌词###\n\n作曲 : 陈鸿宇　作词 : 唐映枫　编曲：陈鸿宇/马雨阳　混音：马雨阳<br />\n雨后有车驶来　　　　　　　　　　　　　　归途也还可爱<br /> 驶过暮色苍白　　　　　　　　　　　　　　琴弦少了姿态<br /> 旧铁皮往南开，恋人已不在　　　　　　　　再不见那夜里，听歌的小孩<br /> 收听浓烟下的　　　　　　　　　　　　　　时光匆匆独白<br /> 诗歌电台　　　　　　　　　　　　　　　　将颠沛磨成卡带<br /> 不动情的咳嗽，至少看起来　　　　　　　　已枯卷的情怀，踏碎成年代<br />\n- - -\n wu　　　　　　　　　　　　　　　　　　　wu<br /> 就老去吧，孤独别醒来　　　　　　　　　　青春又醉倒在<br /> 你渴望的离开　　　　　　　　　　　　　　籍籍无名的怀<br /> 只是无处停摆　　　　　　　　　　　　　　靠嬉笑来虚度，聚散得慷慨</p><p>就歌唱吧，眼睛眯起来　　　　　　　　　　辗转却去不到<br /> 而热泪的崩坏　　　　　　　　　　　　　　对的站台<br /> 只是没抵达的存在　　　　　　　　　　　　如果漂泊是成长，必经的路牌<br /> \n \n- - -\n \n \n</p><p>你迷醒岁月中　　　　　　　　　　　　　　就歌唱吧，眼睛眯起来<br /> 那贫瘠的未来　　　　　　　　　　　　　　而热泪的崩坏<br /> 像遗憾季节里，未结果的爱　　　　　　　　只是没抵达的存在<br /> 弄脏了每一页诗　　　　　　　　　　　　　就甜蜜地忍耐<br /> 吻最疼痛的告白　　　　　　　　　　　　　繁星润湿窗台<br /> 而风声吹到这，已不需要释怀　　　　　　　光影跳动着像在，困倦里说爱</p><p>就老去吧，孤独别醒来　　　　　　　　　　再无谓的感慨<br /> 你渴望的离开　　　　　　　　　　　　　　以为明白<br /> 只是无处停摆　　　　　　　　　　　　　　梦倒塌的地方，今已爬满青苔</p>\n\n### 油画###\n\n- 春水初生，春林初盛，春风十里，不如你\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC7.jpg)</center>\n\n- 你挺悲观的，但是不彻底，所以才拧巴\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC11.jpg)</center>\n\n<!-- more -->\n\n\n- 我想，一把茶壶，茶叶在茶壶里泡过一段时间，即使茶水被喝光了，即使茶叶被倒出来了，茶气还是在的。北京是个大茶壶。太多性情中人象茶叶似的在北京泡过，即使性情被耗没了，即使人可能也死掉了，但是人气还在，仿佛茶气\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC1.jpg)</center>\n\n- 男子如果遇上真正对的女子，不用打坐、静观、修心，一个恍惚就能体会到了悟，在同一时，一切都空，一切都有，生死无间\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC2.jpg)</center>\n\n- 有些人像报纸，他们的故事全写在脸上，有些人像收音机，关着的时候是个死物，可是如果找对了开关，选对了台，他们会喋喋不休，直到你把他们关上，或是电池耗光\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC3.jpg)</center>\n\n- 我要用尽我的万种风情，让你在将来任何不和我在一起的时候，内心无法安宁\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC4.jpg)</center>\n\n- 一个人应该用一生去明白欲望就是虚幻呢，还是用一生来追求一个又一个欲望的满足\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC5.jpg)</center>\n\n- 我说我许了一个愿，你想不想知道。她说不想。我说不想也得告诉你，否则将来你会怪我欺负你。我要用尽我的万种风情，让你在将来任何不和我在一起的时候，内心无法安宁。她一言不发，我借着酒劲儿，说了很多漫无边际的话，其中有一句烂俗无比，我说：“我不要天上的星星，我要尘世的幸福。”\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC6.jpg)</center>\n\n- 黑夜其实从来就不是黑的，黑夜里，合欢花还是红的。毛绒绒的紫藤花还是紫白色得，和黑夜还是白天没有关系。就像，我想你，和黑夜还是白天没有关系，和晴天和下雨没有关系，甚至和你知道不知道都没有关系，尽管我还是会尽量让你知道，想到这里，于是欢喜\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC8.jpg)</center>\n\n- 可遇不可求的事\n后海有树的院子\n夏代有工的玉\n此时此刻的云\n二十来岁的你\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC9.jpg)</center>\n\n- 抱你 不知道下次在哪里，所以 再抱你 再大一点力气 你就小到 我风衣口袋里\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC10.jpg)</center>\n\n- 妈妈们一面暗示女孩男人的凶险无聊以及要洁身自好，一方面教导女儿对颜色的品位以及衣服搭配作为将来勾引男人的理论指导\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC12.jpg)</center>\n\n- 心里很近的朋友，是会想念的，是隔上一个月两个月必定要见一次面的，不说什么，在一起就觉得很温暖\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC13.jpg)</center>\n\n- 愿有岁月可回首，且以情深共白头\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC14.jpg)</center>\n\n- 我是混蛋我是懦夫\n我替老天管好自己\n不去祸害人间不去祸害你\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC15.jpg)</center>\n\n- 我把月亮戳到天上，天就是我的。我把脚踩入地里，地就是我的。我把唇压进你的脸庞，你就是我的\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC16.jpg)</center>\n\n- 佛说，香飘的每一刹那都是确定的，但是每下一个刹那都是不确定的。一期一会，冥冥中自有定数\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC17.jpg)</center>\n\n- 不知道喜欢你什么，实在不知道，如果确定知道喜欢你什么，是不够喜欢你。因为不确定具体喜欢你什么，所以喜欢你所有一切及其他\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC18.jpg)</center>\n\n- 实在放不下的时候，去趟重症病房或者墓地，你容易明白，你已经得到太多，再要就是贪婪，时间太少，好玩儿的事儿太多，从尊重生命的角度，不必纠缠\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC19.jpg)</center>\n\n- 想生个女儿，头发顺长，肉薄心窄，眼神忧郁。用牛奶，豆浆，米汤和可口可乐浇灌，一二十年后长成祸水\n\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC20.jpg)</center>\n\n- 如果她是一种植物，我的眼光就是水，这样浇灌了三年，或许她从来没有想过她如此滋润的原因\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC22.jpg)</center>\n\n### 油画作者###\n\n> 以上油画来自俄罗斯油画家Vladimir Volegov，Vladimir 鲜明的色彩和大胆的笔触，创建了一个永恒的感性形象的图画\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"文学电影音乐诗歌和画/你渴望的离开，只是无处停摆《理想三旬》陈鸿宇","published":1,"updated":"2016-06-25T10:22:05.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qlt0041kgaetkcd59gq","content":"<blockquote class=\"blockquote-center\">为了自己想过的生活，勇于放弃一些东西。这个世界没有公正之处，你也永远得不到两全之法。若要自由，就得牺牲安全。若要闲散，就不能获得别人评价中的成就。若要愉悦，就无需计较身边人给予的态度。若要前行，就得离开你现在停留的地方。——弗朗西斯·梅斯《托斯卡纳艳阳下》</blockquote>\n\n<h3 id=\"歌曲\"><a href=\"#歌曲\" class=\"headerlink\" title=\"歌曲\"></a>歌曲</h3><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=31445772&auto=0&height=66\"><br></iframe>\n\n\n<h3 id=\"歌词\"><a href=\"#歌词\" class=\"headerlink\" title=\"歌词\"></a>歌词</h3><p>作曲 : 陈鸿宇　作词 : 唐映枫　编曲：陈鸿宇/马雨阳　混音：马雨阳<br><br>雨后有车驶来　　　　　　　　　　　　　　归途也还可爱<br> 驶过暮色苍白　　　　　　　　　　　　　　琴弦少了姿态<br> 旧铁皮往南开，恋人已不在　　　　　　　　再不见那夜里，听歌的小孩<br> 收听浓烟下的　　　　　　　　　　　　　　时光匆匆独白<br> 诗歌电台　　　　　　　　　　　　　　　　将颠沛磨成卡带<br> 不动情的咳嗽，至少看起来　　　　　　　　已枯卷的情怀，踏碎成年代<br></p>\n<hr>\n<p> wu　　　　　　　　　　　　　　　　　　　wu<br> 就老去吧，孤独别醒来　　　　　　　　　　青春又醉倒在<br> 你渴望的离开　　　　　　　　　　　　　　籍籍无名的怀<br> 只是无处停摆　　　　　　　　　　　　　　靠嬉笑来虚度，聚散得慷慨</p><p>就歌唱吧，眼睛眯起来　　　　　　　　　　辗转却去不到<br> 而热泪的崩坏　　　　　　　　　　　　　　对的站台<br> 只是没抵达的存在　　　　　　　　　　　　如果漂泊是成长，必经的路牌<br> </p>\n<hr>\n<p></p><p>你迷醒岁月中　　　　　　　　　　　　　　就歌唱吧，眼睛眯起来<br> 那贫瘠的未来　　　　　　　　　　　　　　而热泪的崩坏<br> 像遗憾季节里，未结果的爱　　　　　　　　只是没抵达的存在<br> 弄脏了每一页诗　　　　　　　　　　　　　就甜蜜地忍耐<br> 吻最疼痛的告白　　　　　　　　　　　　　繁星润湿窗台<br> 而风声吹到这，已不需要释怀　　　　　　　光影跳动着像在，困倦里说爱</p><p>就老去吧，孤独别醒来　　　　　　　　　　再无谓的感慨<br> 你渴望的离开　　　　　　　　　　　　　　以为明白<br> 只是无处停摆　　　　　　　　　　　　　　梦倒塌的地方，今已爬满青苔</p><p></p>\n<h3 id=\"油画\"><a href=\"#油画\" class=\"headerlink\" title=\"油画\"></a>油画</h3><ul>\n<li>春水初生，春林初盛，春风十里，不如你</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC7.jpg\" alt=\"\"></center>\n\n<ul>\n<li>你挺悲观的，但是不彻底，所以才拧巴</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC11.jpg\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<ul>\n<li>我想，一把茶壶，茶叶在茶壶里泡过一段时间，即使茶水被喝光了，即使茶叶被倒出来了，茶气还是在的。北京是个大茶壶。太多性情中人象茶叶似的在北京泡过，即使性情被耗没了，即使人可能也死掉了，但是人气还在，仿佛茶气</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC1.jpg\" alt=\"\"></center>\n\n<ul>\n<li>男子如果遇上真正对的女子，不用打坐、静观、修心，一个恍惚就能体会到了悟，在同一时，一切都空，一切都有，生死无间</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC2.jpg\" alt=\"\"></center>\n\n<ul>\n<li>有些人像报纸，他们的故事全写在脸上，有些人像收音机，关着的时候是个死物，可是如果找对了开关，选对了台，他们会喋喋不休，直到你把他们关上，或是电池耗光</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC3.jpg\" alt=\"\"></center>\n\n<ul>\n<li>我要用尽我的万种风情，让你在将来任何不和我在一起的时候，内心无法安宁</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC4.jpg\" alt=\"\"></center>\n\n<ul>\n<li>一个人应该用一生去明白欲望就是虚幻呢，还是用一生来追求一个又一个欲望的满足</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC5.jpg\" alt=\"\"></center>\n\n<ul>\n<li>我说我许了一个愿，你想不想知道。她说不想。我说不想也得告诉你，否则将来你会怪我欺负你。我要用尽我的万种风情，让你在将来任何不和我在一起的时候，内心无法安宁。她一言不发，我借着酒劲儿，说了很多漫无边际的话，其中有一句烂俗无比，我说：“我不要天上的星星，我要尘世的幸福。”</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC6.jpg\" alt=\"\"></center>\n\n<ul>\n<li>黑夜其实从来就不是黑的，黑夜里，合欢花还是红的。毛绒绒的紫藤花还是紫白色得，和黑夜还是白天没有关系。就像，我想你，和黑夜还是白天没有关系，和晴天和下雨没有关系，甚至和你知道不知道都没有关系，尽管我还是会尽量让你知道，想到这里，于是欢喜</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC8.jpg\" alt=\"\"></center>\n\n<ul>\n<li>可遇不可求的事<br>后海有树的院子<br>夏代有工的玉<br>此时此刻的云<br>二十来岁的你</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC9.jpg\" alt=\"\"></center>\n\n<ul>\n<li>抱你 不知道下次在哪里，所以 再抱你 再大一点力气 你就小到 我风衣口袋里</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC10.jpg\" alt=\"\"></center>\n\n<ul>\n<li>妈妈们一面暗示女孩男人的凶险无聊以及要洁身自好，一方面教导女儿对颜色的品位以及衣服搭配作为将来勾引男人的理论指导</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC12.jpg\" alt=\"\"></center>\n\n<ul>\n<li>心里很近的朋友，是会想念的，是隔上一个月两个月必定要见一次面的，不说什么，在一起就觉得很温暖</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC13.jpg\" alt=\"\"></center>\n\n<ul>\n<li>愿有岁月可回首，且以情深共白头</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC14.jpg\" alt=\"\"></center>\n\n<ul>\n<li>我是混蛋我是懦夫<br>我替老天管好自己<br>不去祸害人间不去祸害你</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC15.jpg\" alt=\"\"></center>\n\n<ul>\n<li>我把月亮戳到天上，天就是我的。我把脚踩入地里，地就是我的。我把唇压进你的脸庞，你就是我的</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC16.jpg\" alt=\"\"></center>\n\n<ul>\n<li>佛说，香飘的每一刹那都是确定的，但是每下一个刹那都是不确定的。一期一会，冥冥中自有定数</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC17.jpg\" alt=\"\"></center>\n\n<ul>\n<li>不知道喜欢你什么，实在不知道，如果确定知道喜欢你什么，是不够喜欢你。因为不确定具体喜欢你什么，所以喜欢你所有一切及其他</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC18.jpg\" alt=\"\"></center>\n\n<ul>\n<li>实在放不下的时候，去趟重症病房或者墓地，你容易明白，你已经得到太多，再要就是贪婪，时间太少，好玩儿的事儿太多，从尊重生命的角度，不必纠缠</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC19.jpg\" alt=\"\"></center>\n\n<ul>\n<li>想生个女儿，头发顺长，肉薄心窄，眼神忧郁。用牛奶，豆浆，米汤和可口可乐浇灌，一二十年后长成祸水</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC20.jpg\" alt=\"\"></center>\n\n<ul>\n<li>如果她是一种植物，我的眼光就是水，这样浇灌了三年，或许她从来没有想过她如此滋润的原因</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC22.jpg\" alt=\"\"></center>\n\n<h3 id=\"油画作者\"><a href=\"#油画作者\" class=\"headerlink\" title=\"油画作者\"></a>油画作者</h3><blockquote>\n<p>以上油画来自俄罗斯油画家Vladimir Volegov，Vladimir 鲜明的色彩和大胆的笔触，创建了一个永恒的感性形象的图画</p>\n</blockquote>\n","excerpt":"<blockquote class=\"blockquote-center\">为了自己想过的生活，勇于放弃一些东西。这个世界没有公正之处，你也永远得不到两全之法。若要自由，就得牺牲安全。若要闲散，就不能获得别人评价中的成就。若要愉悦，就无需计较身边人给予的态度。若要前行，就得离开你现在停留的地方。——弗朗西斯·梅斯《托斯卡纳艳阳下》</blockquote>\n\n<h3 id=\"歌曲\"><a href=\"#歌曲\" class=\"headerlink\" title=\"歌曲\"></a>歌曲</h3><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n    src=\"http://music.163.com/outchain/player?type=2&id=31445772&auto=0&height=66\"><br></iframe>\n\n\n<h3 id=\"歌词\"><a href=\"#歌词\" class=\"headerlink\" title=\"歌词\"></a>歌词</h3><p>作曲 : 陈鸿宇　作词 : 唐映枫　编曲：陈鸿宇/马雨阳　混音：马雨阳<br /><br>雨后有车驶来　　　　　　　　　　　　　　归途也还可爱<br /> 驶过暮色苍白　　　　　　　　　　　　　　琴弦少了姿态<br /> 旧铁皮往南开，恋人已不在　　　　　　　　再不见那夜里，听歌的小孩<br /> 收听浓烟下的　　　　　　　　　　　　　　时光匆匆独白<br /> 诗歌电台　　　　　　　　　　　　　　　　将颠沛磨成卡带<br /> 不动情的咳嗽，至少看起来　　　　　　　　已枯卷的情怀，踏碎成年代<br /></p>\n<hr>\n<p> wu　　　　　　　　　　　　　　　　　　　wu<br /> 就老去吧，孤独别醒来　　　　　　　　　　青春又醉倒在<br /> 你渴望的离开　　　　　　　　　　　　　　籍籍无名的怀<br /> 只是无处停摆　　　　　　　　　　　　　　靠嬉笑来虚度，聚散得慷慨</p><p>就歌唱吧，眼睛眯起来　　　　　　　　　　辗转却去不到<br /> 而热泪的崩坏　　　　　　　　　　　　　　对的站台<br /> 只是没抵达的存在　　　　　　　　　　　　如果漂泊是成长，必经的路牌<br /> </p>\n<hr>\n<p></p><p>你迷醒岁月中　　　　　　　　　　　　　　就歌唱吧，眼睛眯起来<br /> 那贫瘠的未来　　　　　　　　　　　　　　而热泪的崩坏<br /> 像遗憾季节里，未结果的爱　　　　　　　　只是没抵达的存在<br /> 弄脏了每一页诗　　　　　　　　　　　　　就甜蜜地忍耐<br /> 吻最疼痛的告白　　　　　　　　　　　　　繁星润湿窗台<br /> 而风声吹到这，已不需要释怀　　　　　　　光影跳动着像在，困倦里说爱</p><p>就老去吧，孤独别醒来　　　　　　　　　　再无谓的感慨<br /> 你渴望的离开　　　　　　　　　　　　　　以为明白<br /> 只是无处停摆　　　　　　　　　　　　　　梦倒塌的地方，今已爬满青苔</p></p>\n<h3 id=\"油画\"><a href=\"#油画\" class=\"headerlink\" title=\"油画\"></a>油画</h3><ul>\n<li>春水初生，春林初盛，春风十里，不如你</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC7.jpg\" alt=\"\"></center>\n\n<ul>\n<li>你挺悲观的，但是不彻底，所以才拧巴</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC11.jpg\" alt=\"\"></center>","more":"<ul>\n<li>我想，一把茶壶，茶叶在茶壶里泡过一段时间，即使茶水被喝光了，即使茶叶被倒出来了，茶气还是在的。北京是个大茶壶。太多性情中人象茶叶似的在北京泡过，即使性情被耗没了，即使人可能也死掉了，但是人气还在，仿佛茶气</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC1.jpg\" alt=\"\"></center>\n\n<ul>\n<li>男子如果遇上真正对的女子，不用打坐、静观、修心，一个恍惚就能体会到了悟，在同一时，一切都空，一切都有，生死无间</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC2.jpg\" alt=\"\"></center>\n\n<ul>\n<li>有些人像报纸，他们的故事全写在脸上，有些人像收音机，关着的时候是个死物，可是如果找对了开关，选对了台，他们会喋喋不休，直到你把他们关上，或是电池耗光</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC3.jpg\" alt=\"\"></center>\n\n<ul>\n<li>我要用尽我的万种风情，让你在将来任何不和我在一起的时候，内心无法安宁</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC4.jpg\" alt=\"\"></center>\n\n<ul>\n<li>一个人应该用一生去明白欲望就是虚幻呢，还是用一生来追求一个又一个欲望的满足</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC5.jpg\" alt=\"\"></center>\n\n<ul>\n<li>我说我许了一个愿，你想不想知道。她说不想。我说不想也得告诉你，否则将来你会怪我欺负你。我要用尽我的万种风情，让你在将来任何不和我在一起的时候，内心无法安宁。她一言不发，我借着酒劲儿，说了很多漫无边际的话，其中有一句烂俗无比，我说：“我不要天上的星星，我要尘世的幸福。”</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC6.jpg\" alt=\"\"></center>\n\n<ul>\n<li>黑夜其实从来就不是黑的，黑夜里，合欢花还是红的。毛绒绒的紫藤花还是紫白色得，和黑夜还是白天没有关系。就像，我想你，和黑夜还是白天没有关系，和晴天和下雨没有关系，甚至和你知道不知道都没有关系，尽管我还是会尽量让你知道，想到这里，于是欢喜</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC8.jpg\" alt=\"\"></center>\n\n<ul>\n<li>可遇不可求的事<br>后海有树的院子<br>夏代有工的玉<br>此时此刻的云<br>二十来岁的你</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC9.jpg\" alt=\"\"></center>\n\n<ul>\n<li>抱你 不知道下次在哪里，所以 再抱你 再大一点力气 你就小到 我风衣口袋里</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC10.jpg\" alt=\"\"></center>\n\n<ul>\n<li>妈妈们一面暗示女孩男人的凶险无聊以及要洁身自好，一方面教导女儿对颜色的品位以及衣服搭配作为将来勾引男人的理论指导</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC12.jpg\" alt=\"\"></center>\n\n<ul>\n<li>心里很近的朋友，是会想念的，是隔上一个月两个月必定要见一次面的，不说什么，在一起就觉得很温暖</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC13.jpg\" alt=\"\"></center>\n\n<ul>\n<li>愿有岁月可回首，且以情深共白头</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC14.jpg\" alt=\"\"></center>\n\n<ul>\n<li>我是混蛋我是懦夫<br>我替老天管好自己<br>不去祸害人间不去祸害你</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC15.jpg\" alt=\"\"></center>\n\n<ul>\n<li>我把月亮戳到天上，天就是我的。我把脚踩入地里，地就是我的。我把唇压进你的脸庞，你就是我的</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC16.jpg\" alt=\"\"></center>\n\n<ul>\n<li>佛说，香飘的每一刹那都是确定的，但是每下一个刹那都是不确定的。一期一会，冥冥中自有定数</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC17.jpg\" alt=\"\"></center>\n\n<ul>\n<li>不知道喜欢你什么，实在不知道，如果确定知道喜欢你什么，是不够喜欢你。因为不确定具体喜欢你什么，所以喜欢你所有一切及其他</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC18.jpg\" alt=\"\"></center>\n\n<ul>\n<li>实在放不下的时候，去趟重症病房或者墓地，你容易明白，你已经得到太多，再要就是贪婪，时间太少，好玩儿的事儿太多，从尊重生命的角度，不必纠缠</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC19.jpg\" alt=\"\"></center>\n\n<ul>\n<li>想生个女儿，头发顺长，肉薄心窄，眼神忧郁。用牛奶，豆浆，米汤和可口可乐浇灌，一二十年后长成祸水</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC20.jpg\" alt=\"\"></center>\n\n<ul>\n<li>如果她是一种植物，我的眼光就是水，这样浇灌了三年，或许她从来没有想过她如此滋润的原因</li>\n</ul>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC22.jpg\" alt=\"\"></center>\n\n<h3 id=\"油画作者\"><a href=\"#油画作者\" class=\"headerlink\" title=\"油画作者\"></a>油画作者</h3><blockquote>\n<p>以上油画来自俄罗斯油画家Vladimir Volegov，Vladimir 鲜明的色彩和大胆的笔触，创建了一个永恒的感性形象的图画</p>\n</blockquote>"},{"title":"矩阵--原地转置--面试题","date":"2016-06-01T15:42:41.000Z","_content":"\n\n- 问题描述\n    微软面试题：将一个MxN的矩阵存储在一个一维数组中，编程实现矩阵的转置\n    要求：空间复杂度为O(1)\n\n- 思路分析\n    下面以一个4x2的矩阵A={1,2,3,4,5,6,7,8}进行分析，转置过程如下图：\n\n![](http://img.blog.csdn.net/20140606173801500?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n图中右下角的红色数字表示在一维数组中的下标。矩阵的转置其实就是数组中元素的移动，具体的移动过程如下图：\n\n<center>![](http://img.blog.csdn.net/20140606173842187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)</center>\n\n<!-- more -->\n\n我们发现，这些移动的元素的下标是一个个环，下标1的元素移动到4，下标4的元素移动到2，下标2的元素移动到1。在编写程序的时候，我们需要解决两个问题：第一个是如何判定环是否重复（已处理过）；第二个是如何计算当前元素下标的前驱与后继。\n第一个问题：如何判断环是重复已处理过的？因为我们遍历整个数组时下标是从小到大的，所以如果是第一次遍历该环，则第一个下标肯定是这个环中最小的。如果一个环被处理过，那么总能找到一个它的后继是小于它的。从上图可以明显看出来。\n第二个问题：如何计算当前元素下标的前驱与后继？假设转置前某个元素的数组下标为i，则它所在行列为（i/N, i%N），转置后所在行列则为（i%N, i/N），可计算转置后数组下标为(i%N)*M+i/N，此为i的后继。假设转置后某个元素的数组下标为i，则它所在行列为（i/M, i%M），则转置前所在行列为（i%M, i/M），可计算此时下标为(i%M)*N+i/M，此为i的前驱\n\n- 代码实现\n\n```cpp\n/*************************************************************************  \n    > File Name: matrix_transpose.cpp  \n    > Author: SongLee  \n    > E-mail: lisong.shine@qq.com  \n    > Created Time: 2014年06月06日 星期五 14时26分15秒  \n    > Personal Blog: http://songlee24.github.io  \n ************************************************************************/    \n#include<iostream>    \nusing namespace std;    \n    \n/* 后继 */    \nint getNext(int i, int m, int n){    \n    return (i%n)*m + i/n;    \n}    \n    \n/* 前驱 */    \nint getPre(int i, int m, int n){    \n    return (i%m)*n + i/m;    \n}    \n    \n/* 处理以下标i为起点的环 */    \nvoid movedata(int *mtx, int i, int m, int n){    \n    int temp = mtx[i];  // 暂存    \n    int cur = i;       // 当前下标    \n    int pre = getPre(cur, m, n);    \n    while(pre != i){    \n        mtx[cur] = mtx[pre];    \n        cur = pre;    \n        pre = getPre(cur, m, n);    \n    }    \n    mtx[cur] = temp;    \n}    \n    \n/* 转置，即循环处理所有环 */    \nvoid transpose(int *mtx, int m, int n){    \n    for(int i=0; i<m*n; ++i){    \n        int next = getNext(i, m, n);    \n        while(next > i) // 若存在后继小于i说明重复    \n            next = getNext(next, m, n);    \n        if(next == i)   // 处理当前环     \n            movedata(mtx, i, m, n);    \n    }    \n}    \n    \n/* 输出矩阵 */    \nvoid print(int *mtx, int m, int n){    \n    for(int i=0; i<m*n; ++i){    \n        if((i+1)%n == 0)    \n            cout << mtx[i] << \"\\n\";    \n        else    \n            cout << mtx[i] << \" \";    \n    }    \n}    \n    \n/* 测试 */    \nint main(){    \n    int matrix[4*2] = {1,2,3,4,5,6,7,8};    \n    cout << \"Before matrix transposition:\" << endl;    \n    print(matrix, 4, 2);    \n    transpose(matrix, 4, 2);    \n    cout << \"After matrix transposition:\" << endl;    \n    print(matrix, 2, 4);    \n    return 0;    \n}    \n```\n\n- 运行结果：\n\n<center>![](http://img.blog.csdn.net/20140606173940156?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)</center>","source":"_posts/矩阵/矩阵-原地转置-面试题.md","raw":"---\ntitle: 矩阵--原地转置--面试题\ndate: 2016-06-01 15:42:41\ntags: 矩阵\ncategories: 矩阵\n---\n\n\n- 问题描述\n    微软面试题：将一个MxN的矩阵存储在一个一维数组中，编程实现矩阵的转置\n    要求：空间复杂度为O(1)\n\n- 思路分析\n    下面以一个4x2的矩阵A={1,2,3,4,5,6,7,8}进行分析，转置过程如下图：\n\n![](http://img.blog.csdn.net/20140606173801500?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n图中右下角的红色数字表示在一维数组中的下标。矩阵的转置其实就是数组中元素的移动，具体的移动过程如下图：\n\n<center>![](http://img.blog.csdn.net/20140606173842187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)</center>\n\n<!-- more -->\n\n我们发现，这些移动的元素的下标是一个个环，下标1的元素移动到4，下标4的元素移动到2，下标2的元素移动到1。在编写程序的时候，我们需要解决两个问题：第一个是如何判定环是否重复（已处理过）；第二个是如何计算当前元素下标的前驱与后继。\n第一个问题：如何判断环是重复已处理过的？因为我们遍历整个数组时下标是从小到大的，所以如果是第一次遍历该环，则第一个下标肯定是这个环中最小的。如果一个环被处理过，那么总能找到一个它的后继是小于它的。从上图可以明显看出来。\n第二个问题：如何计算当前元素下标的前驱与后继？假设转置前某个元素的数组下标为i，则它所在行列为（i/N, i%N），转置后所在行列则为（i%N, i/N），可计算转置后数组下标为(i%N)*M+i/N，此为i的后继。假设转置后某个元素的数组下标为i，则它所在行列为（i/M, i%M），则转置前所在行列为（i%M, i/M），可计算此时下标为(i%M)*N+i/M，此为i的前驱\n\n- 代码实现\n\n```cpp\n/*************************************************************************  \n    > File Name: matrix_transpose.cpp  \n    > Author: SongLee  \n    > E-mail: lisong.shine@qq.com  \n    > Created Time: 2014年06月06日 星期五 14时26分15秒  \n    > Personal Blog: http://songlee24.github.io  \n ************************************************************************/    \n#include<iostream>    \nusing namespace std;    \n    \n/* 后继 */    \nint getNext(int i, int m, int n){    \n    return (i%n)*m + i/n;    \n}    \n    \n/* 前驱 */    \nint getPre(int i, int m, int n){    \n    return (i%m)*n + i/m;    \n}    \n    \n/* 处理以下标i为起点的环 */    \nvoid movedata(int *mtx, int i, int m, int n){    \n    int temp = mtx[i];  // 暂存    \n    int cur = i;       // 当前下标    \n    int pre = getPre(cur, m, n);    \n    while(pre != i){    \n        mtx[cur] = mtx[pre];    \n        cur = pre;    \n        pre = getPre(cur, m, n);    \n    }    \n    mtx[cur] = temp;    \n}    \n    \n/* 转置，即循环处理所有环 */    \nvoid transpose(int *mtx, int m, int n){    \n    for(int i=0; i<m*n; ++i){    \n        int next = getNext(i, m, n);    \n        while(next > i) // 若存在后继小于i说明重复    \n            next = getNext(next, m, n);    \n        if(next == i)   // 处理当前环     \n            movedata(mtx, i, m, n);    \n    }    \n}    \n    \n/* 输出矩阵 */    \nvoid print(int *mtx, int m, int n){    \n    for(int i=0; i<m*n; ++i){    \n        if((i+1)%n == 0)    \n            cout << mtx[i] << \"\\n\";    \n        else    \n            cout << mtx[i] << \" \";    \n    }    \n}    \n    \n/* 测试 */    \nint main(){    \n    int matrix[4*2] = {1,2,3,4,5,6,7,8};    \n    cout << \"Before matrix transposition:\" << endl;    \n    print(matrix, 4, 2);    \n    transpose(matrix, 4, 2);    \n    cout << \"After matrix transposition:\" << endl;    \n    print(matrix, 2, 4);    \n    return 0;    \n}    \n```\n\n- 运行结果：\n\n<center>![](http://img.blog.csdn.net/20140606173940156?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)</center>","slug":"矩阵/矩阵-原地转置-面试题","published":1,"updated":"2016-06-17T13:56:40.813Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qlw0045kgae5nnn61pp","content":"<ul>\n<li><p>问题描述<br>  微软面试题：将一个MxN的矩阵存储在一个一维数组中，编程实现矩阵的转置<br>  要求：空间复杂度为O(1)</p>\n</li>\n<li><p>思路分析<br>  下面以一个4x2的矩阵A={1,2,3,4,5,6,7,8}进行分析，转置过程如下图：</p>\n</li>\n</ul>\n<p><img src=\"http://img.blog.csdn.net/20140606173801500?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></p>\n<p>图中右下角的红色数字表示在一维数组中的下标。矩阵的转置其实就是数组中元素的移动，具体的移动过程如下图：</p>\n<center><img src=\"http://img.blog.csdn.net/20140606173842187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<p>我们发现，这些移动的元素的下标是一个个环，下标1的元素移动到4，下标4的元素移动到2，下标2的元素移动到1。在编写程序的时候，我们需要解决两个问题：第一个是如何判定环是否重复（已处理过）；第二个是如何计算当前元素下标的前驱与后继。<br>第一个问题：如何判断环是重复已处理过的？因为我们遍历整个数组时下标是从小到大的，所以如果是第一次遍历该环，则第一个下标肯定是这个环中最小的。如果一个环被处理过，那么总能找到一个它的后继是小于它的。从上图可以明显看出来。<br>第二个问题：如何计算当前元素下标的前驱与后继？假设转置前某个元素的数组下标为i，则它所在行列为（i/N, i%N），转置后所在行列则为（i%N, i/N），可计算转置后数组下标为(i%N)<em>M+i/N，此为i的后继。假设转置后某个元素的数组下标为i，则它所在行列为（i/M, i%M），则转置前所在行列为（i%M, i/M），可计算此时下标为(i%M)</em>N+i/M，此为i的前驱</p>\n<ul>\n<li>代码实现</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*************************************************************************  </span><br><span class=\"line\">    &gt; File Name: matrix_transpose.cpp  </span><br><span class=\"line\">    &gt; Author: SongLee  </span><br><span class=\"line\">    &gt; E-mail: lisong.shine@qq.com  </span><br><span class=\"line\">    &gt; Created Time: 2014年06月06日 星期五 14时26分15秒  </span><br><span class=\"line\">    &gt; Personal Blog: http://songlee24.github.io  </span><br><span class=\"line\"> ************************************************************************/</span>    </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>    </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 后继 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getNext</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> (i%n)*m + i/n;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 前驱 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getPre</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> (i%m)*n + i/m;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 处理以下标i为起点的环 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">movedata</span><span class=\"params\">(<span class=\"keyword\">int</span> *mtx, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp = mtx[i];  <span class=\"comment\">// 暂存    </span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> cur = i;       <span class=\"comment\">// 当前下标    </span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> pre = getPre(cur, m, n);    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pre != i)&#123;    </span><br><span class=\"line\">        mtx[cur] = mtx[pre];    </span><br><span class=\"line\">        cur = pre;    </span><br><span class=\"line\">        pre = getPre(cur, m, n);    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    mtx[cur] = temp;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 转置，即循环处理所有环 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">transpose</span><span class=\"params\">(<span class=\"keyword\">int</span> *mtx, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;m*n; ++i)&#123;    </span><br><span class=\"line\">        <span class=\"keyword\">int</span> next = getNext(i, m, n);    </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(next &gt; i) <span class=\"comment\">// 若存在后继小于i说明重复    </span></span><br><span class=\"line\">            next = getNext(next, m, n);    </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(next == i)   <span class=\"comment\">// 处理当前环     </span></span><br><span class=\"line\">            movedata(mtx, i, m, n);    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 输出矩阵 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span> *mtx, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;m*n; ++i)&#123;    </span><br><span class=\"line\">        <span class=\"keyword\">if</span>((i+<span class=\"number\">1</span>)%n == <span class=\"number\">0</span>)    </span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; mtx[i] &lt;&lt; <span class=\"string\">\"\\n\"</span>;    </span><br><span class=\"line\">        <span class=\"keyword\">else</span>    </span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; mtx[i] &lt;&lt; <span class=\"string\">\" \"</span>;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 测试 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> matrix[<span class=\"number\">4</span>*<span class=\"number\">2</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>&#125;;    </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Before matrix transposition:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;    </span><br><span class=\"line\">    print(matrix, <span class=\"number\">4</span>, <span class=\"number\">2</span>);    </span><br><span class=\"line\">    transpose(matrix, <span class=\"number\">4</span>, <span class=\"number\">2</span>);    </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"After matrix transposition:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;    </span><br><span class=\"line\">    print(matrix, <span class=\"number\">2</span>, <span class=\"number\">4</span>);    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>运行结果：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20140606173940156?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></center>","excerpt":"<ul>\n<li><p>问题描述<br>  微软面试题：将一个MxN的矩阵存储在一个一维数组中，编程实现矩阵的转置<br>  要求：空间复杂度为O(1)</p>\n</li>\n<li><p>思路分析<br>  下面以一个4x2的矩阵A={1,2,3,4,5,6,7,8}进行分析，转置过程如下图：</p>\n</li>\n</ul>\n<p><img src=\"http://img.blog.csdn.net/20140606173801500?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></p>\n<p>图中右下角的红色数字表示在一维数组中的下标。矩阵的转置其实就是数组中元素的移动，具体的移动过程如下图：</p>\n<center><img src=\"http://img.blog.csdn.net/20140606173842187?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></center>","more":"<p>我们发现，这些移动的元素的下标是一个个环，下标1的元素移动到4，下标4的元素移动到2，下标2的元素移动到1。在编写程序的时候，我们需要解决两个问题：第一个是如何判定环是否重复（已处理过）；第二个是如何计算当前元素下标的前驱与后继。<br>第一个问题：如何判断环是重复已处理过的？因为我们遍历整个数组时下标是从小到大的，所以如果是第一次遍历该环，则第一个下标肯定是这个环中最小的。如果一个环被处理过，那么总能找到一个它的后继是小于它的。从上图可以明显看出来。<br>第二个问题：如何计算当前元素下标的前驱与后继？假设转置前某个元素的数组下标为i，则它所在行列为（i/N, i%N），转置后所在行列则为（i%N, i/N），可计算转置后数组下标为(i%N)<em>M+i/N，此为i的后继。假设转置后某个元素的数组下标为i，则它所在行列为（i/M, i%M），则转置前所在行列为（i%M, i/M），可计算此时下标为(i%M)</em>N+i/M，此为i的前驱</p>\n<ul>\n<li>代码实现</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*************************************************************************  </span><br><span class=\"line\">    &gt; File Name: matrix_transpose.cpp  </span><br><span class=\"line\">    &gt; Author: SongLee  </span><br><span class=\"line\">    &gt; E-mail: lisong.shine@qq.com  </span><br><span class=\"line\">    &gt; Created Time: 2014年06月06日 星期五 14时26分15秒  </span><br><span class=\"line\">    &gt; Personal Blog: http://songlee24.github.io  </span><br><span class=\"line\"> ************************************************************************/</span>    </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>    </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 后继 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getNext</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> (i%n)*m + i/n;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 前驱 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getPre</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> (i%m)*n + i/m;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 处理以下标i为起点的环 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">movedata</span><span class=\"params\">(<span class=\"keyword\">int</span> *mtx, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp = mtx[i];  <span class=\"comment\">// 暂存    </span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> cur = i;       <span class=\"comment\">// 当前下标    </span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> pre = getPre(cur, m, n);    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pre != i)&#123;    </span><br><span class=\"line\">        mtx[cur] = mtx[pre];    </span><br><span class=\"line\">        cur = pre;    </span><br><span class=\"line\">        pre = getPre(cur, m, n);    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    mtx[cur] = temp;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 转置，即循环处理所有环 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">transpose</span><span class=\"params\">(<span class=\"keyword\">int</span> *mtx, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;m*n; ++i)&#123;    </span><br><span class=\"line\">        <span class=\"keyword\">int</span> next = getNext(i, m, n);    </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(next &gt; i) <span class=\"comment\">// 若存在后继小于i说明重复    </span></span><br><span class=\"line\">            next = getNext(next, m, n);    </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(next == i)   <span class=\"comment\">// 处理当前环     </span></span><br><span class=\"line\">            movedata(mtx, i, m, n);    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 输出矩阵 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span> *mtx, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n)</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;m*n; ++i)&#123;    </span><br><span class=\"line\">        <span class=\"keyword\">if</span>((i+<span class=\"number\">1</span>)%n == <span class=\"number\">0</span>)    </span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; mtx[i] &lt;&lt; <span class=\"string\">\"\\n\"</span>;    </span><br><span class=\"line\">        <span class=\"keyword\">else</span>    </span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; mtx[i] &lt;&lt; <span class=\"string\">\" \"</span>;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">/* 测试 */</span>    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> matrix[<span class=\"number\">4</span>*<span class=\"number\">2</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>&#125;;    </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Before matrix transposition:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;    </span><br><span class=\"line\">    print(matrix, <span class=\"number\">4</span>, <span class=\"number\">2</span>);    </span><br><span class=\"line\">    transpose(matrix, <span class=\"number\">4</span>, <span class=\"number\">2</span>);    </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"After matrix transposition:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;    </span><br><span class=\"line\">    print(matrix, <span class=\"number\">2</span>, <span class=\"number\">4</span>);    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>运行结果：</li>\n</ul>\n<center><img src=\"http://img.blog.csdn.net/20140606173940156?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlzb25nbGlzb25nbGlzb25n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"\"></center>"},{"title":"米店","date":"2016-06-25T11:17:35.000Z","_content":"\n<blockquote class=\"blockquote-center\">时间是个收破烂的，你本想将破烂扔给他，却不小心把自己也扔了。 ——王朔《时间说》</blockquote>\n\n\n### 歌曲###\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=26494698&auto=0&height=66\">\n</iframe>\n\n### 歌词###\n\n词曲 : 张玮玮　演唱 : 张玮玮 郭龙　编曲：赵永庆　吉他：赵永庆\n\n三月的烟雨飘摇的南方　　　　　　　　　　三月的烟雨飘摇的南方\n你坐在你空空的米店　　　　　　　　　　　你坐在你空空的米店\n你一手拿着苹果一手拿着命运　　　　　　　你一手拿着苹果一手拿着命运\n在寻找你自己的　　　　　　　　　　　　　香在寻找你自己的香\n窗外的人们匆匆忙忙　　　　　　　　　　　窗外的人们匆匆忙忙\n把眼光丢在潮湿的路上　　　　　　　　　　把眼光丢在潮湿的路上\n你的舞步划过空空的房间　　　　　　　　　你的舞步划过空空的房间\n时光就变成了烟　　　　　　　　　　　　　时光就变成了烟\n爱人 你可感到明天已经来临　　　　　　　　爱人 你可感到明天已经来临\n码头上停着我们的船　　　　　　　　　　　码头上停着我们的船\n我会洗干净头发爬上桅杆　　　　　　　　　我会洗干净头发爬上桅杆\n撑起我们葡萄枝嫩叶般的家　　　　　　　　撑起我们葡萄枝嫩叶般的家\n　　\n- - -\n\n### Vtlander的水彩插画###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8912.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8911.jpg)</center>\n\n<!-- more -->\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%891.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%892.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%893.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%894.jpg)</center>\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%895.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%896.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%897.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%898.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%899.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8910.jpg)</center>\n\n\n","source":"_posts/文学电影音乐诗歌和画/米店.md","raw":"---\ntitle: 米店\ndate: 2016-06-25 11:17:35\ntags: [民谣,水彩画]\ncategories: 文学电影音乐诗歌和画\n---\n\n<blockquote class=\"blockquote-center\">时间是个收破烂的，你本想将破烂扔给他，却不小心把自己也扔了。 ——王朔《时间说》</blockquote>\n\n\n### 歌曲###\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=26494698&auto=0&height=66\">\n</iframe>\n\n### 歌词###\n\n词曲 : 张玮玮　演唱 : 张玮玮 郭龙　编曲：赵永庆　吉他：赵永庆\n\n三月的烟雨飘摇的南方　　　　　　　　　　三月的烟雨飘摇的南方\n你坐在你空空的米店　　　　　　　　　　　你坐在你空空的米店\n你一手拿着苹果一手拿着命运　　　　　　　你一手拿着苹果一手拿着命运\n在寻找你自己的　　　　　　　　　　　　　香在寻找你自己的香\n窗外的人们匆匆忙忙　　　　　　　　　　　窗外的人们匆匆忙忙\n把眼光丢在潮湿的路上　　　　　　　　　　把眼光丢在潮湿的路上\n你的舞步划过空空的房间　　　　　　　　　你的舞步划过空空的房间\n时光就变成了烟　　　　　　　　　　　　　时光就变成了烟\n爱人 你可感到明天已经来临　　　　　　　　爱人 你可感到明天已经来临\n码头上停着我们的船　　　　　　　　　　　码头上停着我们的船\n我会洗干净头发爬上桅杆　　　　　　　　　我会洗干净头发爬上桅杆\n撑起我们葡萄枝嫩叶般的家　　　　　　　　撑起我们葡萄枝嫩叶般的家\n　　\n- - -\n\n### Vtlander的水彩插画###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8912.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8911.jpg)</center>\n\n<!-- more -->\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%891.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%892.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%893.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%894.jpg)</center>\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%895.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%896.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%897.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%898.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%899.jpg)</center>\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8910.jpg)</center>\n\n\n","slug":"文学电影音乐诗歌和画/米店","published":1,"updated":"2016-06-25T04:02:04.028Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qlz0046kgaespg7wv3f","content":"<blockquote class=\"blockquote-center\">时间是个收破烂的，你本想将破烂扔给他，却不小心把自己也扔了。 ——王朔《时间说》</blockquote>\n\n\n<h3 id=\"歌曲\"><a href=\"#歌曲\" class=\"headerlink\" title=\"歌曲\"></a>歌曲</h3><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=26494698&auto=0&height=66\"><br></iframe>\n\n<h3 id=\"歌词\"><a href=\"#歌词\" class=\"headerlink\" title=\"歌词\"></a>歌词</h3><p>词曲 : 张玮玮　演唱 : 张玮玮 郭龙　编曲：赵永庆　吉他：赵永庆</p>\n<p>三月的烟雨飘摇的南方　　　　　　　　　　三月的烟雨飘摇的南方<br>你坐在你空空的米店　　　　　　　　　　　你坐在你空空的米店<br>你一手拿着苹果一手拿着命运　　　　　　　你一手拿着苹果一手拿着命运<br>在寻找你自己的　　　　　　　　　　　　　香在寻找你自己的香<br>窗外的人们匆匆忙忙　　　　　　　　　　　窗外的人们匆匆忙忙<br>把眼光丢在潮湿的路上　　　　　　　　　　把眼光丢在潮湿的路上<br>你的舞步划过空空的房间　　　　　　　　　你的舞步划过空空的房间<br>时光就变成了烟　　　　　　　　　　　　　时光就变成了烟<br>爱人 你可感到明天已经来临　　　　　　　　爱人 你可感到明天已经来临<br>码头上停着我们的船　　　　　　　　　　　码头上停着我们的船<br>我会洗干净头发爬上桅杆　　　　　　　　　我会洗干净头发爬上桅杆<br>撑起我们葡萄枝嫩叶般的家　　　　　　　　撑起我们葡萄枝嫩叶般的家\n　　</p>\n<hr>\n<h3 id=\"Vtlander的水彩插画\"><a href=\"#Vtlander的水彩插画\" class=\"headerlink\" title=\"Vtlander的水彩插画\"></a>Vtlander的水彩插画</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8912.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8911.jpg\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%891.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%892.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%893.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%894.jpg\" alt=\"\"></center><br><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%895.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%896.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%897.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%898.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%899.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8910.jpg\" alt=\"\"></center>\n\n\n","excerpt":"<blockquote class=\"blockquote-center\">时间是个收破烂的，你本想将破烂扔给他，却不小心把自己也扔了。 ——王朔《时间说》</blockquote>\n\n\n<h3 id=\"歌曲\"><a href=\"#歌曲\" class=\"headerlink\" title=\"歌曲\"></a>歌曲</h3><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n    src=\"http://music.163.com/outchain/player?type=2&id=26494698&auto=0&height=66\"><br></iframe>\n\n<h3 id=\"歌词\"><a href=\"#歌词\" class=\"headerlink\" title=\"歌词\"></a>歌词</h3><p>词曲 : 张玮玮　演唱 : 张玮玮 郭龙　编曲：赵永庆　吉他：赵永庆</p>\n<p>三月的烟雨飘摇的南方　　　　　　　　　　三月的烟雨飘摇的南方<br>你坐在你空空的米店　　　　　　　　　　　你坐在你空空的米店<br>你一手拿着苹果一手拿着命运　　　　　　　你一手拿着苹果一手拿着命运<br>在寻找你自己的　　　　　　　　　　　　　香在寻找你自己的香<br>窗外的人们匆匆忙忙　　　　　　　　　　　窗外的人们匆匆忙忙<br>把眼光丢在潮湿的路上　　　　　　　　　　把眼光丢在潮湿的路上<br>你的舞步划过空空的房间　　　　　　　　　你的舞步划过空空的房间<br>时光就变成了烟　　　　　　　　　　　　　时光就变成了烟<br>爱人 你可感到明天已经来临　　　　　　　　爱人 你可感到明天已经来临<br>码头上停着我们的船　　　　　　　　　　　码头上停着我们的船<br>我会洗干净头发爬上桅杆　　　　　　　　　我会洗干净头发爬上桅杆<br>撑起我们葡萄枝嫩叶般的家　　　　　　　　撑起我们葡萄枝嫩叶般的家\n　　</p>\n<hr>\n<h3 id=\"Vtlander的水彩插画\"><a href=\"#Vtlander的水彩插画\" class=\"headerlink\" title=\"Vtlander的水彩插画\"></a>Vtlander的水彩插画</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8912.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8911.jpg\" alt=\"\"></center>","more":"<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%891.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%892.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%893.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%894.jpg\" alt=\"\"></center><br><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%895.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%896.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%897.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%898.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%899.jpg\" alt=\"\"></center>\n\n<center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E8%8E%89%E8%8E%89%E5%AE%8910.jpg\" alt=\"\"></center>"},{"title":"矩阵旋转","date":"2016-06-01T15:38:12.000Z","_content":"\n- 顺时针翻转九十度\n\n\n举例：4*3矩阵A1，旋转90度，变成3×4矩阵A2\n\n<center>![](http://img.blog.csdn.net/20140619150155343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpZmVuZ3N1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n```cpp\n算法：\nm=4，n=3，i，j\nfor：i=0, i<n, i++\n    for：j=0, j<m, j++\n```\n\n![](http://img.blog.csdn.net/20140619150208125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpZmVuZ3N1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)<font color='RED'> // 从下到上，从左到右读取A1的每一个元素</font>\n\n<!-- more -->\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n  \n  \nint main(){  \n    int a[4][3] = {1,2,3,  \n                   4,5,6,  \n                   7,8,9,  \n                   10,11,12};  \n    int b[3][4];  \n    int m=4,n=3;  \n    for(int i=0;i<n;i++){  \n        for(int j=0;j<m;j++){  \n           b[i][j]=a[m-j-1][i];  \n        }  \n    }  \n    for(int i=0;i<3;i++){  \n        for(int j=0;j<4;j++){  \n            printf(\"%d ,\",b[i][j]);  \n        }  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n```\n</br>\n```cpp\n#include <iostream>  \nusing namespace std;  \nconst int M = 5;  \nconst int N = 3;  \n/** \n  这里是将矩阵顺时针翻转九十度， \n  这是阿里巴巴的一道笔试题 \n*/  \nint main()  \n{  \n  int a[M][N] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};  \n  int *p = a[0];  \n  \n  for(int i = 0;i < M;i++) // M = 5  \n  {  \n    for(int j = N-1;j >= 0;j--) // N = 3  \n    {  \n        cout << *(p + i + j*M) << \",\"; // M = 5;  \n    }  \n    cout << endl;  \n  }  \n  return 0;  \n}  \n```\n\n\n- 逆时针旋转九十度（就是顺时针旋转270度）\n         从下到上，从左到右读取A1的每一个元素\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n  \n  \nint main(){  \n    int a[4][3] = {1,2,3,  \n                   4,5,6,  \n                   7,8,9,  \n                   10,11,12};  \n    int b[3][4];  \n    int m=4,n=3;  \n    for(int i=0;i<n;i++){  \n        for(int j=0;j<m;j++){  \n           b[i][j]=a[j][n-1-i];  \n        }  \n    }  \n    for(int i=0;i<3;i++){  \n        for(int j=0;j<4;j++){  \n            printf(\"%d ,\",b[i][j]);  \n        }  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n```\n\n\n- 旋转一百八十度\n      从下开始向左层次遍历\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n  \n//从下开始层次遍历，从做到右  \nint main(){  \n    int a[4][3] = {1,2,3,  \n                   4,5,6,  \n                   7,8,9,  \n                   10,11,12};  \n    int b[4][3];  \n    int m=3,n=4;  \n    for(int i=0;i<n;i++){  \n        for(int j=0;j<m;j++){  \n           b[i][j]=a[n-i-1][m-j-1];  \n        }  \n    }  \n    for(int i=0;i<n;i++){  \n        for(int j=0;j<m;j++){  \n            printf(\"%d ,\",b[i][j]);  \n        }  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n```","source":"_posts/矩阵/矩阵旋转.md","raw":"---\ntitle: 矩阵旋转\ndate: 2016-06-01 15:38:12\ntags: 矩阵\ncategories: 矩阵\n---\n\n- 顺时针翻转九十度\n\n\n举例：4*3矩阵A1，旋转90度，变成3×4矩阵A2\n\n<center>![](http://img.blog.csdn.net/20140619150155343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpZmVuZ3N1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n\n```cpp\n算法：\nm=4，n=3，i，j\nfor：i=0, i<n, i++\n    for：j=0, j<m, j++\n```\n\n![](http://img.blog.csdn.net/20140619150208125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpZmVuZ3N1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)<font color='RED'> // 从下到上，从左到右读取A1的每一个元素</font>\n\n<!-- more -->\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n  \n  \nint main(){  \n    int a[4][3] = {1,2,3,  \n                   4,5,6,  \n                   7,8,9,  \n                   10,11,12};  \n    int b[3][4];  \n    int m=4,n=3;  \n    for(int i=0;i<n;i++){  \n        for(int j=0;j<m;j++){  \n           b[i][j]=a[m-j-1][i];  \n        }  \n    }  \n    for(int i=0;i<3;i++){  \n        for(int j=0;j<4;j++){  \n            printf(\"%d ,\",b[i][j]);  \n        }  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n```\n</br>\n```cpp\n#include <iostream>  \nusing namespace std;  \nconst int M = 5;  \nconst int N = 3;  \n/** \n  这里是将矩阵顺时针翻转九十度， \n  这是阿里巴巴的一道笔试题 \n*/  \nint main()  \n{  \n  int a[M][N] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};  \n  int *p = a[0];  \n  \n  for(int i = 0;i < M;i++) // M = 5  \n  {  \n    for(int j = N-1;j >= 0;j--) // N = 3  \n    {  \n        cout << *(p + i + j*M) << \",\"; // M = 5;  \n    }  \n    cout << endl;  \n  }  \n  return 0;  \n}  \n```\n\n\n- 逆时针旋转九十度（就是顺时针旋转270度）\n         从下到上，从左到右读取A1的每一个元素\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n  \n  \nint main(){  \n    int a[4][3] = {1,2,3,  \n                   4,5,6,  \n                   7,8,9,  \n                   10,11,12};  \n    int b[3][4];  \n    int m=4,n=3;  \n    for(int i=0;i<n;i++){  \n        for(int j=0;j<m;j++){  \n           b[i][j]=a[j][n-1-i];  \n        }  \n    }  \n    for(int i=0;i<3;i++){  \n        for(int j=0;j<4;j++){  \n            printf(\"%d ,\",b[i][j]);  \n        }  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n```\n\n\n- 旋转一百八十度\n      从下开始向左层次遍历\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n  \n//从下开始层次遍历，从做到右  \nint main(){  \n    int a[4][3] = {1,2,3,  \n                   4,5,6,  \n                   7,8,9,  \n                   10,11,12};  \n    int b[4][3];  \n    int m=3,n=4;  \n    for(int i=0;i<n;i++){  \n        for(int j=0;j<m;j++){  \n           b[i][j]=a[n-i-1][m-j-1];  \n        }  \n    }  \n    for(int i=0;i<n;i++){  \n        for(int j=0;j<m;j++){  \n            printf(\"%d ,\",b[i][j]);  \n        }  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n```","slug":"矩阵/矩阵旋转","published":1,"updated":"2016-06-17T13:56:17.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qm10049kgaehhi7gzhx","content":"<ul>\n<li>顺时针翻转九十度</li>\n</ul>\n<p>举例：4*3矩阵A1，旋转90度，变成3×4矩阵A2</p>\n<center><img src=\"http://img.blog.csdn.net/20140619150155343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpZmVuZ3N1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">算法：</span><br><span class=\"line\">m=<span class=\"number\">4</span>，n=<span class=\"number\">3</span>，i，j</span><br><span class=\"line\"><span class=\"keyword\">for</span>：i=<span class=\"number\">0</span>, i&lt;n, i++</span><br><span class=\"line\">    <span class=\"keyword\">for</span>：j=<span class=\"number\">0</span>, j&lt;m, j++</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img.blog.csdn.net/20140619150208125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpZmVuZ3N1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><font color=\"RED\"> // 从下到上，从左到右读取A1的每一个元素</font></p>\n<a id=\"more\"></a>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                   <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                   <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                   <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> b[<span class=\"number\">3</span>][<span class=\"number\">4</span>];  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> m=<span class=\"number\">4</span>,n=<span class=\"number\">3</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;  </span><br><span class=\"line\">           b[i][j]=a[m-j<span class=\"number\">-1</span>][i];  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">4</span>;j++)&#123;  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d ,\"</span>,b[i][j]);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><br><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> M = <span class=\"number\">5</span>;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">3</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  这里是将矩阵顺时针翻转九十度， </span><br><span class=\"line\">  这是阿里巴巴的一道笔试题 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span><br><span class=\"line\"></span>&#123;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> a[M][N] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>&#125;;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> *p = a[<span class=\"number\">0</span>];  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; M;i++) <span class=\"comment\">// M = 5  </span></span><br><span class=\"line\">  &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = N<span class=\"number\">-1</span>;j &gt;= <span class=\"number\">0</span>;j--) <span class=\"comment\">// N = 3  </span></span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; *(p + i + j*M) &lt;&lt; <span class=\"string\">\",\"</span>; <span class=\"comment\">// M = 5;  </span></span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>逆时针旋转九十度（就是顺时针旋转270度）<pre><code>从下到上，从左到右读取A1的每一个元素\n</code></pre></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                   <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                   <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                   <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> b[<span class=\"number\">3</span>][<span class=\"number\">4</span>];  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> m=<span class=\"number\">4</span>,n=<span class=\"number\">3</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;  </span><br><span class=\"line\">           b[i][j]=a[j][n<span class=\"number\">-1</span>-i];  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">4</span>;j++)&#123;  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d ,\"</span>,b[i][j]);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>旋转一百八十度<pre><code>从下开始向左层次遍历\n</code></pre></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//从下开始层次遍历，从做到右  </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                   <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                   <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                   <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> b[<span class=\"number\">4</span>][<span class=\"number\">3</span>];  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> m=<span class=\"number\">3</span>,n=<span class=\"number\">4</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;  </span><br><span class=\"line\">           b[i][j]=a[n-i<span class=\"number\">-1</span>][m-j<span class=\"number\">-1</span>];  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d ,\"</span>,b[i][j]);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li>顺时针翻转九十度</li>\n</ul>\n<p>举例：4*3矩阵A1，旋转90度，变成3×4矩阵A2</p>\n<center><img src=\"http://img.blog.csdn.net/20140619150155343?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpZmVuZ3N1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">算法：</span><br><span class=\"line\">m=<span class=\"number\">4</span>，n=<span class=\"number\">3</span>，i，j</span><br><span class=\"line\"><span class=\"keyword\">for</span>：i=<span class=\"number\">0</span>, i&lt;n, i++</span><br><span class=\"line\">    <span class=\"keyword\">for</span>：j=<span class=\"number\">0</span>, j&lt;m, j++</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://img.blog.csdn.net/20140619150208125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpZmVuZ3N1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"><font color='RED'> // 从下到上，从左到右读取A1的每一个元素</font></p>","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                   <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                   <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                   <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> b[<span class=\"number\">3</span>][<span class=\"number\">4</span>];  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> m=<span class=\"number\">4</span>,n=<span class=\"number\">3</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;  </span><br><span class=\"line\">           b[i][j]=a[m-j<span class=\"number\">-1</span>][i];  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">4</span>;j++)&#123;  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d ,\"</span>,b[i][j]);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p></br><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> M = <span class=\"number\">5</span>;  </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">3</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  这里是将矩阵顺时针翻转九十度， </span><br><span class=\"line\">  这是阿里巴巴的一道笔试题 </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span><br><span class=\"line\"></span>&#123;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> a[M][N] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>,<span class=\"number\">13</span>,<span class=\"number\">14</span>,<span class=\"number\">15</span>&#125;;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> *p = a[<span class=\"number\">0</span>];  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; M;i++) <span class=\"comment\">// M = 5  </span></span><br><span class=\"line\">  &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = N<span class=\"number\">-1</span>;j &gt;= <span class=\"number\">0</span>;j--) <span class=\"comment\">// N = 3  </span></span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; *(p + i + j*M) &lt;&lt; <span class=\"string\">\",\"</span>; <span class=\"comment\">// M = 5;  </span></span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>逆时针旋转九十度（就是顺时针旋转270度）<pre><code>从下到上，从左到右读取A1的每一个元素\n</code></pre></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                   <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                   <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                   <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> b[<span class=\"number\">3</span>][<span class=\"number\">4</span>];  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> m=<span class=\"number\">4</span>,n=<span class=\"number\">3</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;  </span><br><span class=\"line\">           b[i][j]=a[j][n<span class=\"number\">-1</span>-i];  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">4</span>;j++)&#123;  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d ,\"</span>,b[i][j]);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>旋转一百八十度<pre><code>从下开始向左层次遍历\n</code></pre></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">//从下开始层次遍历，从做到右  </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> a[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                   <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                   <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                   <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> b[<span class=\"number\">4</span>][<span class=\"number\">3</span>];  </span><br><span class=\"line\">    <span class=\"keyword\">int</span> m=<span class=\"number\">3</span>,n=<span class=\"number\">4</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;  </span><br><span class=\"line\">           b[i][j]=a[n-i<span class=\"number\">-1</span>][m-j<span class=\"number\">-1</span>];  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d ,\"</span>,b[i][j]);  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"矩阵翻转","date":"2016-06-01T15:35:15.000Z","_content":"\n- 上下翻转\n\n 上下翻转的遍历顺序是从最下面一行开始从左到右遍历，如图：\n \n <center>![](http://img.blog.csdn.net/20160423202405697?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n \n<!-- more -->\n \n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n/** \n  上下翻转， \n*/  \nint main(){  \n  int M=4,N=3;  \n  int temp=0;  \n  int matrix[4][3] = {1,2,3,  \n                      4,5,6,  \n                      7,8,9,  \n                      10,11,12};  \n   printf(\"上下翻转之前\\n\");  \nfor(int p1=0;p1<M;p1++)  \n    {  \n        for(int j=0;j<N;j++)  \n            printf(\"%d \",matrix[p1][j]);  \n        printf(\"\\n\");  \n    }  \n  \n  \n for(int p=0;p<M/2;p++){  \n            for(int q=0;q<N;q++){  \n                temp=matrix[p][q];  \n                matrix[p][q]=matrix[M-p-1][q];  \n                matrix[M-p-1][q]=temp;  \n            }  \n        }  \n    printf(\"\\n\");  \n    printf(\"============华丽的分割线=============\\n\\n\");  \n    printf(\"上下翻转之后\\n\");  \nfor(int p1=0;p1<M;p1++)  \n    {  \n        for(int j=0;j<N;j++)  \n            printf(\"%d \",matrix[p1][j]);  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n```\n\n- 左右翻转\n   原理差不多\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n/** \n  左右翻转， \n*/  \nint main(){  \n  int M=4,N=3;  \n  int temp=0;  \n  int matrix[4][3] = {1,2,3,  \n                      4,5,6,  \n                      7,8,9,  \n                      10,11,12};  \n   printf(\"左右翻转之前\\n\");  \nfor(int p1=0;p1<M;p1++)  \n    {  \n        for(int j=0;j<N;j++)  \n            printf(\"%d \",matrix[p1][j]);  \n        printf(\"\\n\");  \n    }  \n  \n  \n for(int p=0;p<M;p++)  \n        {  \n            for(int q=0;q<N/2;q++)  \n            {  \n                temp=matrix[p][q];  \n                matrix[p][q]=matrix[p][N-q-1];  \n                matrix[p][N-q-1]=temp;  \n            }  \n        }  \n    printf(\"\\n\");  \n    printf(\"============华丽的分割线=============\\n\\n\");  \n    printf(\"左右翻转之后\\n\");  \nfor(int p1=0;p1<M;p1++)  \n    {  \n        for(int j=0;j<N;j++)  \n            printf(\"%d \",matrix[p1][j]);  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n\n```","source":"_posts/矩阵/矩阵翻转.md","raw":"---\ntitle: 矩阵翻转\ndate: 2016-06-01 15:35:15\ntags: 矩阵\ncategories: 矩阵\n---\n\n- 上下翻转\n\n 上下翻转的遍历顺序是从最下面一行开始从左到右遍历，如图：\n \n <center>![](http://img.blog.csdn.net/20160423202405697?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)</center>\n \n<!-- more -->\n \n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n/** \n  上下翻转， \n*/  \nint main(){  \n  int M=4,N=3;  \n  int temp=0;  \n  int matrix[4][3] = {1,2,3,  \n                      4,5,6,  \n                      7,8,9,  \n                      10,11,12};  \n   printf(\"上下翻转之前\\n\");  \nfor(int p1=0;p1<M;p1++)  \n    {  \n        for(int j=0;j<N;j++)  \n            printf(\"%d \",matrix[p1][j]);  \n        printf(\"\\n\");  \n    }  \n  \n  \n for(int p=0;p<M/2;p++){  \n            for(int q=0;q<N;q++){  \n                temp=matrix[p][q];  \n                matrix[p][q]=matrix[M-p-1][q];  \n                matrix[M-p-1][q]=temp;  \n            }  \n        }  \n    printf(\"\\n\");  \n    printf(\"============华丽的分割线=============\\n\\n\");  \n    printf(\"上下翻转之后\\n\");  \nfor(int p1=0;p1<M;p1++)  \n    {  \n        for(int j=0;j<N;j++)  \n            printf(\"%d \",matrix[p1][j]);  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n```\n\n- 左右翻转\n   原理差不多\n\n```cpp\n#include<iostream>  \n#include<stdio.h>  \nusing namespace std;  \n/** \n  左右翻转， \n*/  \nint main(){  \n  int M=4,N=3;  \n  int temp=0;  \n  int matrix[4][3] = {1,2,3,  \n                      4,5,6,  \n                      7,8,9,  \n                      10,11,12};  \n   printf(\"左右翻转之前\\n\");  \nfor(int p1=0;p1<M;p1++)  \n    {  \n        for(int j=0;j<N;j++)  \n            printf(\"%d \",matrix[p1][j]);  \n        printf(\"\\n\");  \n    }  \n  \n  \n for(int p=0;p<M;p++)  \n        {  \n            for(int q=0;q<N/2;q++)  \n            {  \n                temp=matrix[p][q];  \n                matrix[p][q]=matrix[p][N-q-1];  \n                matrix[p][N-q-1]=temp;  \n            }  \n        }  \n    printf(\"\\n\");  \n    printf(\"============华丽的分割线=============\\n\\n\");  \n    printf(\"左右翻转之后\\n\");  \nfor(int p1=0;p1<M;p1++)  \n    {  \n        for(int j=0;j<N;j++)  \n            printf(\"%d \",matrix[p1][j]);  \n        printf(\"\\n\");  \n    }  \n  \n  return 0;  \n}  \n\n```","slug":"矩阵/矩阵翻转","published":1,"updated":"2016-06-17T13:55:39.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qm3004ckgae6qcaxoyt","content":"<ul>\n<li><p>上下翻转</p>\n<p>上下翻转的遍历顺序是从最下面一行开始从左到右遍历，如图：</p>\n<center><img src=\"http://img.blog.csdn.net/20160423202405697?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n</li>\n</ul>\n<a id=\"more\"></a>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  上下翻转， </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> M=<span class=\"number\">4</span>,N=<span class=\"number\">3</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> temp=<span class=\"number\">0</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> matrix[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                      <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                      <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                      <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"上下翻转之前\\n\"</span>);  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p1=<span class=\"number\">0</span>;p1&lt;M;p1++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;N;j++)  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,matrix[p1][j]);  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p=<span class=\"number\">0</span>;p&lt;M/<span class=\"number\">2</span>;p++)&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> q=<span class=\"number\">0</span>;q&lt;N;q++)&#123;  </span><br><span class=\"line\">                temp=matrix[p][q];  </span><br><span class=\"line\">                matrix[p][q]=matrix[M-p<span class=\"number\">-1</span>][q];  </span><br><span class=\"line\">                matrix[M-p<span class=\"number\">-1</span>][q]=temp;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"============华丽的分割线=============\\n\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"上下翻转之后\\n\"</span>);  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p1=<span class=\"number\">0</span>;p1&lt;M;p1++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;N;j++)  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,matrix[p1][j]);  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>左右翻转<br> 原理差不多</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  左右翻转， </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> M=<span class=\"number\">4</span>,N=<span class=\"number\">3</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> temp=<span class=\"number\">0</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> matrix[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                      <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                      <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                      <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"左右翻转之前\\n\"</span>);  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p1=<span class=\"number\">0</span>;p1&lt;M;p1++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;N;j++)  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,matrix[p1][j]);  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p=<span class=\"number\">0</span>;p&lt;M;p++)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> q=<span class=\"number\">0</span>;q&lt;N/<span class=\"number\">2</span>;q++)  </span><br><span class=\"line\">            &#123;  </span><br><span class=\"line\">                temp=matrix[p][q];  </span><br><span class=\"line\">                matrix[p][q]=matrix[p][N-q<span class=\"number\">-1</span>];  </span><br><span class=\"line\">                matrix[p][N-q<span class=\"number\">-1</span>]=temp;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"============华丽的分割线=============\\n\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"左右翻转之后\\n\"</span>);  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p1=<span class=\"number\">0</span>;p1&lt;M;p1++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;N;j++)  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,matrix[p1][j]);  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<ul>\n<li><p>上下翻转</p>\n<p>上下翻转的遍历顺序是从最下面一行开始从左到右遍历，如图：</p>\n<center><img src=\"http://img.blog.csdn.net/20160423202405697?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"\"></center>\n\n</li>\n</ul>","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  上下翻转， </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> M=<span class=\"number\">4</span>,N=<span class=\"number\">3</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> temp=<span class=\"number\">0</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> matrix[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                      <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                      <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                      <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"上下翻转之前\\n\"</span>);  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p1=<span class=\"number\">0</span>;p1&lt;M;p1++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;N;j++)  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,matrix[p1][j]);  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p=<span class=\"number\">0</span>;p&lt;M/<span class=\"number\">2</span>;p++)&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> q=<span class=\"number\">0</span>;q&lt;N;q++)&#123;  </span><br><span class=\"line\">                temp=matrix[p][q];  </span><br><span class=\"line\">                matrix[p][q]=matrix[M-p<span class=\"number\">-1</span>][q];  </span><br><span class=\"line\">                matrix[M-p<span class=\"number\">-1</span>][q]=temp;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"============华丽的分割线=============\\n\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"上下翻转之后\\n\"</span>);  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p1=<span class=\"number\">0</span>;p1&lt;M;p1++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;N;j++)  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,matrix[p1][j]);  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>左右翻转<br> 原理差不多</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\"><span class=\"comment\">/** </span><br><span class=\"line\">  左右翻转， </span><br><span class=\"line\">*/</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> M=<span class=\"number\">4</span>,N=<span class=\"number\">3</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> temp=<span class=\"number\">0</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">int</span> matrix[<span class=\"number\">4</span>][<span class=\"number\">3</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,  </span><br><span class=\"line\">                      <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,  </span><br><span class=\"line\">                      <span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,  </span><br><span class=\"line\">                      <span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>&#125;;  </span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"左右翻转之前\\n\"</span>);  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p1=<span class=\"number\">0</span>;p1&lt;M;p1++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;N;j++)  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,matrix[p1][j]);  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"> <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p=<span class=\"number\">0</span>;p&lt;M;p++)  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> q=<span class=\"number\">0</span>;q&lt;N/<span class=\"number\">2</span>;q++)  </span><br><span class=\"line\">            &#123;  </span><br><span class=\"line\">                temp=matrix[p][q];  </span><br><span class=\"line\">                matrix[p][q]=matrix[p][N-q<span class=\"number\">-1</span>];  </span><br><span class=\"line\">                matrix[p][N-q<span class=\"number\">-1</span>]=temp;  </span><br><span class=\"line\">            &#125;  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"============华丽的分割线=============\\n\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"左右翻转之后\\n\"</span>);  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p1=<span class=\"number\">0</span>;p1&lt;M;p1++)  </span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;N;j++)  </span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,matrix[p1][j]);  </span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Hexo博客添加图片，音乐，视频","date":"2016-06-07T14:37:58.000Z","_content":"\n- 插入外部链接图片\n\n```markdown\n![“图片描述”](“图片地址”)\n```\n\n- 添加本地图片\n\n在\\hexo\\source目录下新建文件夹，命名为images或者其他你喜欢的名字，然后编辑你的md博文，插入下面的代码样式：\n\n```markdown\n![“图片描述”](/images/你的图片名字.JPG)\n```\n\n- 插入音乐\n\n比如网易云音乐，找到喜欢的歌曲，点击分享按钮，把里面的代码复制下来，直接粘贴到博文中即可\n\n```html\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">\n</iframe>\n```\n\n<center>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">\n</iframe>\t\n</center>\n\n- 插入视频\n\n```html\nIdina Menze和Caleb Hyles激情对唱Let It Go：\n<iframe \n\theight=498 width=510 \n\tsrc=\"http://player.youku.com/embed/XNjcyMDU4Njg0\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n```\n\n<center>\nIdina Menze和Caleb Hyles激情对唱Let It Go：\n<iframe \n\theight=498 width=510 \n\tsrc=\"http://player.youku.com/embed/XNjcyMDU4Njg0\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n</center>\n\n<!-- more -->\n\n参考博客：[传送门](http://blog.wleyuan.me/2015/07/18/Hexo-AddSoundPicMovie/)","source":"_posts/通用/Hexo博客添加图片，音乐，视频.md","raw":"---\ntitle: Hexo博客添加图片，音乐，视频\ndate: 2016-06-07 14:37:58\ntags: [hexo]\ncategories: 通用\n---\n\n- 插入外部链接图片\n\n```markdown\n![“图片描述”](“图片地址”)\n```\n\n- 添加本地图片\n\n在\\hexo\\source目录下新建文件夹，命名为images或者其他你喜欢的名字，然后编辑你的md博文，插入下面的代码样式：\n\n```markdown\n![“图片描述”](/images/你的图片名字.JPG)\n```\n\n- 插入音乐\n\n比如网易云音乐，找到喜欢的歌曲，点击分享按钮，把里面的代码复制下来，直接粘贴到博文中即可\n\n```html\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">\n</iframe>\n```\n\n<center>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n\tsrc=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">\n</iframe>\t\n</center>\n\n- 插入视频\n\n```html\nIdina Menze和Caleb Hyles激情对唱Let It Go：\n<iframe \n\theight=498 width=510 \n\tsrc=\"http://player.youku.com/embed/XNjcyMDU4Njg0\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n```\n\n<center>\nIdina Menze和Caleb Hyles激情对唱Let It Go：\n<iframe \n\theight=498 width=510 \n\tsrc=\"http://player.youku.com/embed/XNjcyMDU4Njg0\" \n\tframeborder=0 allowfullscreen>\n</iframe>\n</center>\n\n<!-- more -->\n\n参考博客：[传送门](http://blog.wleyuan.me/2015/07/18/Hexo-AddSoundPicMovie/)","slug":"通用/Hexo博客添加图片，音乐，视频","published":1,"updated":"2016-06-17T13:51:38.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qm5004gkgae51v5s493","content":"<ul>\n<li>插入外部链接图片</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">“图片描述”</span>](<span class=\"link\">“图片地址”</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加本地图片</li>\n</ul>\n<p>在\\hexo\\source目录下新建文件夹，命名为images或者其他你喜欢的名字，然后编辑你的md博文，插入下面的代码样式：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">“图片描述”</span>](<span class=\"link\">/images/你的图片名字.JPG</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>插入音乐</li>\n</ul>\n<p>比如网易云音乐，找到喜欢的歌曲，点击分享按钮，把里面的代码复制下来，直接粘贴到博文中即可</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"no\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> </span><br><span class=\"line\">\t<span class=\"attr\">src</span>=<span class=\"string\">\"http://music.163.com/outchain/player?type=2&amp;id=25706282&amp;auto=0&amp;height=66\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<center><br><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\"><br></iframe><br></center>\n\n<ul>\n<li>插入视频</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Idina Menze和Caleb Hyles激情对唱Let It Go：</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> </span><br><span class=\"line\">\t<span class=\"attr\">height</span>=<span class=\"string\">498</span> <span class=\"attr\">width</span>=<span class=\"string\">510</span> </span><br><span class=\"line\">\t<span class=\"attr\">src</span>=<span class=\"string\">\"http://player.youku.com/embed/XNjcyMDU4Njg0\"</span> </span><br><span class=\"line\">\t<span class=\"attr\">frameborder</span>=<span class=\"string\">0</span> <span class=\"attr\">allowfullscreen</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<center><br>Idina Menze和Caleb Hyles激情对唱Let It Go：<br><iframe height=\"498\" width=\"510\" src=\"http://player.youku.com/embed/XNjcyMDU4Njg0\" frameborder=\"0\" allowfullscreen><br></iframe><br></center>\n\n<a id=\"more\"></a>\n<p>参考博客：<a href=\"http://blog.wleyuan.me/2015/07/18/Hexo-AddSoundPicMovie/\" target=\"_blank\" rel=\"external\">传送门</a></p>\n","excerpt":"<ul>\n<li>插入外部链接图片</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">“图片描述”</span>](<span class=\"link\">“图片地址”</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加本地图片</li>\n</ul>\n<p>在\\hexo\\source目录下新建文件夹，命名为images或者其他你喜欢的名字，然后编辑你的md博文，插入下面的代码样式：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">“图片描述”</span>](<span class=\"link\">/images/你的图片名字.JPG</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>插入音乐</li>\n</ul>\n<p>比如网易云音乐，找到喜欢的歌曲，点击分享按钮，把里面的代码复制下来，直接粘贴到博文中即可</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"no\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> </span><br><span class=\"line\">\t<span class=\"attr\">src</span>=<span class=\"string\">\"http://music.163.com/outchain/player?type=2&amp;id=25706282&amp;auto=0&amp;height=66\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<center><br><iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 \n    src=\"http://music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\"><br></iframe><br></center>\n\n<ul>\n<li>插入视频</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Idina Menze和Caleb Hyles激情对唱Let It Go：</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> </span><br><span class=\"line\">\t<span class=\"attr\">height</span>=<span class=\"string\">498</span> <span class=\"attr\">width</span>=<span class=\"string\">510</span> </span><br><span class=\"line\">\t<span class=\"attr\">src</span>=<span class=\"string\">\"http://player.youku.com/embed/XNjcyMDU4Njg0\"</span> </span><br><span class=\"line\">\t<span class=\"attr\">frameborder</span>=<span class=\"string\">0</span> <span class=\"attr\">allowfullscreen</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<center><br>Idina Menze和Caleb Hyles激情对唱Let It Go：<br><iframe \n    height=498 width=510 \n    src=\"http://player.youku.com/embed/XNjcyMDU4Njg0\" \n    frameborder=0 allowfullscreen><br></iframe><br></center>","more":"<p>参考博客：<a href=\"http://blog.wleyuan.me/2015/07/18/Hexo-AddSoundPicMovie/\">传送门</a></p>"},{"title":"markdown使用技巧","date":"2016-06-24T10:26:18.000Z","_content":"\n### 资料专栏###\n\n- [传送门](http://46aae4d1e2371e4aa769798941cef698.devproxy.yunshipei.com/column/details/markdown.html)\n\n### 设置markdown背景色###\n\n- 借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能\n\n```html\n<table>\n   <tr>\n     <td bgcolor=#7FFFD4>这里的背景色是：Aquamarine，  十六进制颜色值：#7FFFD4， rgb(127, 255, 212)\n     </td>\n   </tr>\n</table>\n```\n\n- 效果\n\n<table><tr><td bgcolor=#00FF00>这里的背景色是：Lime，十六进制颜色值：#00FF00， rgb(0, 255, 0)</td></tr></table>\n\n\n<!-- more -->","source":"_posts/通用/markdown使用技巧.md","raw":"---\ntitle: markdown使用技巧\ndate: 2016-06-24 10:26:18\ntags: markdown\ncategories: 通用\n---\n\n### 资料专栏###\n\n- [传送门](http://46aae4d1e2371e4aa769798941cef698.devproxy.yunshipei.com/column/details/markdown.html)\n\n### 设置markdown背景色###\n\n- 借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能\n\n```html\n<table>\n   <tr>\n     <td bgcolor=#7FFFD4>这里的背景色是：Aquamarine，  十六进制颜色值：#7FFFD4， rgb(127, 255, 212)\n     </td>\n   </tr>\n</table>\n```\n\n- 效果\n\n<table><tr><td bgcolor=#00FF00>这里的背景色是：Lime，十六进制颜色值：#00FF00， rgb(0, 255, 0)</td></tr></table>\n\n\n<!-- more -->","slug":"通用/markdown使用技巧","published":1,"updated":"2016-06-24T11:36:47.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qmc004jkgaekbremqal","content":"<h3 id=\"资料专栏\"><a href=\"#资料专栏\" class=\"headerlink\" title=\"资料专栏\"></a>资料专栏</h3><ul>\n<li><a href=\"http://46aae4d1e2371e4aa769798941cef698.devproxy.yunshipei.com/column/details/markdown.html\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<h3 id=\"设置markdown背景色\"><a href=\"#设置markdown背景色\" class=\"headerlink\" title=\"设置markdown背景色\"></a>设置markdown背景色</h3><ul>\n<li>借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">#7FFFD4</span>&gt;</span>这里的背景色是：Aquamarine，  十六进制颜色值：#7FFFD4， rgb(127, 255, 212)</span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>效果</li>\n</ul>\n<table><tr><td bgcolor=\"#00FF00\">这里的背景色是：Lime，十六进制颜色值：#00FF00， rgb(0, 255, 0)</td></tr></table>\n\n\n<a id=\"more\"></a>","excerpt":"<h3 id=\"资料专栏\"><a href=\"#资料专栏\" class=\"headerlink\" title=\"资料专栏\"></a>资料专栏</h3><ul>\n<li><a href=\"http://46aae4d1e2371e4aa769798941cef698.devproxy.yunshipei.com/column/details/markdown.html\">传送门</a></li>\n</ul>\n<h3 id=\"设置markdown背景色\"><a href=\"#设置markdown背景色\" class=\"headerlink\" title=\"设置markdown背景色\"></a>设置markdown背景色</h3><ul>\n<li>借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">#7FFFD4</span>&gt;</span>这里的背景色是：Aquamarine，  十六进制颜色值：#7FFFD4， rgb(127, 255, 212)</span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>效果</li>\n</ul>\n<table><tr><td bgcolor=#00FF00>这里的背景色是：Lime，十六进制颜色值：#00FF00， rgb(0, 255, 0)</td></tr></table>","more":""},{"title":"hexo搭建个人博客","date":"2016-06-02T18:24:38.000Z","photos":["http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%875.png","http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%877.png","http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%873.png"],"_content":"\n- 首先我们应该学会看官方文档，文档是最好的资料 [传送门](https://hexo.io/zh-cn/docs/index.html)\n\n- 首先我们需要安装Git [传送门](https://git-scm.com/)和 Node.js [传送门](https://nodejs.org/en/)\n\n- 打开dos命令行，安装需要的组件\n\n```cpp\nnpm install -g hexo-cli\n```\n\n- 安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件\n\n```cpp\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n<!-- more -->\n\n- 部署\n\n\n安装 hexo-deployer-git\n \n```cpp\n npm install hexo-deployer-git --save\n```\n\n- 修改配置\n\n```cpp\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n  message: [message]\n```\n- 部署进 github 或 coding\n\n```cpp\nhexo g\nhexo d\n```\n\n- 还有一点注意事项，如果要添加 README.md 文件的话，我们可以在本地\n写好，然后放入public文件夹下，如图：\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA.png)</center>\n\n- 此文只是安装hexo的主要流程，具体事项参考hexo官方文档 [传送门](https://hexo.io/zh-cn/docs/index.html)\n\n- 我的hexo博客搭建在github [传送门](https://github.com/qiuchengjia/qiuchengjia.github.io)，coding上 [传送门](https://coding.net/u/qiuchengjia/p/qiuchengjia/git)，喜欢可以star一下\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%875.png)</center>\n\n</br>\n</center>![](http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%877.png)</center>\n\n</br>\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%873.png)</center>\n","source":"_posts/通用/hexo搭建个人博客.md","raw":"---\ntitle: hexo搭建个人博客\ndate: 2016-06-02 18:24:38\ntags: [hexo,博客]\ncategories: 通用\nphotos:\n- http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%875.png\n- http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%877.png\n- http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%873.png\n---\n\n- 首先我们应该学会看官方文档，文档是最好的资料 [传送门](https://hexo.io/zh-cn/docs/index.html)\n\n- 首先我们需要安装Git [传送门](https://git-scm.com/)和 Node.js [传送门](https://nodejs.org/en/)\n\n- 打开dos命令行，安装需要的组件\n\n```cpp\nnpm install -g hexo-cli\n```\n\n- 安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件\n\n```cpp\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n<!-- more -->\n\n- 部署\n\n\n安装 hexo-deployer-git\n \n```cpp\n npm install hexo-deployer-git --save\n```\n\n- 修改配置\n\n```cpp\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n  message: [message]\n```\n- 部署进 github 或 coding\n\n```cpp\nhexo g\nhexo d\n```\n\n- 还有一点注意事项，如果要添加 README.md 文件的话，我们可以在本地\n写好，然后放入public文件夹下，如图：\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA.png)</center>\n\n- 此文只是安装hexo的主要流程，具体事项参考hexo官方文档 [传送门](https://hexo.io/zh-cn/docs/index.html)\n\n- 我的hexo博客搭建在github [传送门](https://github.com/qiuchengjia/qiuchengjia.github.io)，coding上 [传送门](https://coding.net/u/qiuchengjia/p/qiuchengjia/git)，喜欢可以star一下\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%875.png)</center>\n\n</br>\n</center>![](http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%877.png)</center>\n\n</br>\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%873.png)</center>\n","slug":"通用/hexo搭建个人博客","published":1,"updated":"2016-06-17T13:52:08.125Z","comments":1,"layout":"post","link":"","_id":"ciqop7qmf004nkgaeks31llvv","content":"<ul>\n<li><p>首先我们应该学会看官方文档，文档是最好的资料 <a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>首先我们需要安装Git <a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"external\">传送门</a>和 Node.js <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>打开dos命令行，安装需要的组件</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\">cd &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li>部署</li>\n</ul>\n<p>安装 hexo-deployer-git</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改配置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: &lt;repository url&gt;</span><br><span class=\"line\">  branch: [branch]</span><br><span class=\"line\">  message: [message]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>部署进 github 或 coding</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<ul>\n<li>还有一点注意事项，如果要添加 README.md 文件的话，我们可以在本地<br>写好，然后放入public文件夹下，如图：</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA.png\" alt=\"\"></center>\n\n<ul>\n<li><p>此文只是安装hexo的主要流程，具体事项参考hexo官方文档 <a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>我的hexo博客搭建在github <a href=\"https://github.com/qiuchengjia/qiuchengjia.github.io\" target=\"_blank\" rel=\"external\">传送门</a>，coding上 <a href=\"https://coding.net/u/qiuchengjia/p/qiuchengjia/git\" target=\"_blank\" rel=\"external\">传送门</a>，喜欢可以star一下</p>\n</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%875.png\" alt=\"\"></center>\n\n<p><br><br><img src=\"http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%877.png\" alt=\"\"></p>\n<p><br></p>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%873.png\" alt=\"\"></center>\n","excerpt":"<ul>\n<li><p>首先我们应该学会看官方文档，文档是最好的资料 <a href=\"https://hexo.io/zh-cn/docs/index.html\">传送门</a></p>\n</li>\n<li><p>首先我们需要安装Git <a href=\"https://git-scm.com/\">传送门</a>和 Node.js <a href=\"https://nodejs.org/en/\">传送门</a></p>\n</li>\n<li><p>打开dos命令行，安装需要的组件</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\">cd &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>","more":"<ul>\n<li>部署</li>\n</ul>\n<p>安装 hexo-deployer-git</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改配置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: &lt;repository url&gt;</span><br><span class=\"line\">  branch: [branch]</span><br><span class=\"line\">  message: [message]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>部署进 github 或 coding</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<ul>\n<li>还有一点注意事项，如果要添加 README.md 文件的话，我们可以在本地<br>写好，然后放入public文件夹下，如图：</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA.png\" alt=\"\"></center>\n\n<ul>\n<li><p>此文只是安装hexo的主要流程，具体事项参考hexo官方文档 <a href=\"https://hexo.io/zh-cn/docs/index.html\">传送门</a></p>\n</li>\n<li><p>我的hexo博客搭建在github <a href=\"https://github.com/qiuchengjia/qiuchengjia.github.io\">传送门</a>，coding上 <a href=\"https://coding.net/u/qiuchengjia/p/qiuchengjia/git\">传送门</a>，喜欢可以star一下</p>\n</li>\n</ul>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%875.png\" alt=\"\"></center>\n\n<p></br><br></center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%877.png\" alt=\"\"></center></p>\n<p></br></p>\n<center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/github%E5%9B%BE%E7%89%873.png\" alt=\"\"></center>"},{"title":"优秀网站和博客","date":"2016-06-23T20:43:45.000Z","_content":"\n### 博客###\n\n- [键盘上的舞者](http://www.lrdup.net/) 东哥博客，主要是ios，其他编程啊之类的东西都有，很不错的一个站点，极力推荐\n\n- [Just do it!](http://blog.csdn.net/whjkm) 杰哥博客，极力推荐\n\n\n- [憧憬点滴记忆](https://www.licoy.cn/resource-sharing/fun-station)  比较综合的一个博客，技术文章，资源，项目，音乐，WEB等等都有\n\n\n\n### 技术网站###\n\n### 影视网站###\n\n- [腐宅资源站](http://www.zhaifu.cc/bl/dianying/) 各种电影电视剧动画资源\n\n### 音乐网站###\n\n- [麦田音乐网](http://www.mtyyw.com) 主要是轻音乐，民谣，电台，歌单，摇滚，原声，影像，还有有文艺范的画，故事等等......\n\n- [豆瓣音乐](https://music.douban.com/) 豆瓣，情怀，不解释\n\n- [巨鲸音乐](http://www.top100.cn/) 看起来挺简洁，符合我的风格，先试试\n\n- [奇摩音乐](https://yahoo.streetvoice.com/) 看起来还不错的样子~\n\n- [微博音乐](http://music.weibo.com/) 草根比较多，应该还可以~\n\n\n<!-- more -->","source":"_posts/通用/优秀网站和博客.md","raw":"---\ntitle: 优秀网站和博客\ndate: 2016-06-23 20:43:45\ntags: [网站,博客]\ncategories: 通用\n---\n\n### 博客###\n\n- [键盘上的舞者](http://www.lrdup.net/) 东哥博客，主要是ios，其他编程啊之类的东西都有，很不错的一个站点，极力推荐\n\n- [Just do it!](http://blog.csdn.net/whjkm) 杰哥博客，极力推荐\n\n\n- [憧憬点滴记忆](https://www.licoy.cn/resource-sharing/fun-station)  比较综合的一个博客，技术文章，资源，项目，音乐，WEB等等都有\n\n\n\n### 技术网站###\n\n### 影视网站###\n\n- [腐宅资源站](http://www.zhaifu.cc/bl/dianying/) 各种电影电视剧动画资源\n\n### 音乐网站###\n\n- [麦田音乐网](http://www.mtyyw.com) 主要是轻音乐，民谣，电台，歌单，摇滚，原声，影像，还有有文艺范的画，故事等等......\n\n- [豆瓣音乐](https://music.douban.com/) 豆瓣，情怀，不解释\n\n- [巨鲸音乐](http://www.top100.cn/) 看起来挺简洁，符合我的风格，先试试\n\n- [奇摩音乐](https://yahoo.streetvoice.com/) 看起来还不错的样子~\n\n- [微博音乐](http://music.weibo.com/) 草根比较多，应该还可以~\n\n\n<!-- more -->","slug":"通用/优秀网站和博客","published":1,"updated":"2016-07-14T13:17:07.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qmh004pkgaesbdby91h","content":"<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><ul>\n<li><p><a href=\"http://www.lrdup.net/\" target=\"_blank\" rel=\"external\">键盘上的舞者</a> 东哥博客，主要是ios，其他编程啊之类的东西都有，很不错的一个站点，极力推荐</p>\n</li>\n<li><p><a href=\"http://blog.csdn.net/whjkm\" target=\"_blank\" rel=\"external\">Just do it!</a> 杰哥博客，极力推荐</p>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://www.licoy.cn/resource-sharing/fun-station\" target=\"_blank\" rel=\"external\">憧憬点滴记忆</a>  比较综合的一个博客，技术文章，资源，项目，音乐，WEB等等都有</li>\n</ul>\n<h3 id=\"技术网站\"><a href=\"#技术网站\" class=\"headerlink\" title=\"技术网站\"></a>技术网站</h3><h3 id=\"影视网站\"><a href=\"#影视网站\" class=\"headerlink\" title=\"影视网站\"></a>影视网站</h3><ul>\n<li><a href=\"http://www.zhaifu.cc/bl/dianying/\" target=\"_blank\" rel=\"external\">腐宅资源站</a> 各种电影电视剧动画资源</li>\n</ul>\n<h3 id=\"音乐网站\"><a href=\"#音乐网站\" class=\"headerlink\" title=\"音乐网站\"></a>音乐网站</h3><ul>\n<li><p><a href=\"http://www.mtyyw.com\" target=\"_blank\" rel=\"external\">麦田音乐网</a> 主要是轻音乐，民谣，电台，歌单，摇滚，原声，影像，还有有文艺范的画，故事等等……</p>\n</li>\n<li><p><a href=\"https://music.douban.com/\" target=\"_blank\" rel=\"external\">豆瓣音乐</a> 豆瓣，情怀，不解释</p>\n</li>\n<li><p><a href=\"http://www.top100.cn/\" target=\"_blank\" rel=\"external\">巨鲸音乐</a> 看起来挺简洁，符合我的风格，先试试</p>\n</li>\n<li><p><a href=\"https://yahoo.streetvoice.com/\" target=\"_blank\" rel=\"external\">奇摩音乐</a> 看起来还不错的样子~</p>\n</li>\n<li><p><a href=\"http://music.weibo.com/\" target=\"_blank\" rel=\"external\">微博音乐</a> 草根比较多，应该还可以~</p>\n</li>\n</ul>\n<a id=\"more\"></a>","excerpt":"<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><ul>\n<li><p><a href=\"http://www.lrdup.net/\">键盘上的舞者</a> 东哥博客，主要是ios，其他编程啊之类的东西都有，很不错的一个站点，极力推荐</p>\n</li>\n<li><p><a href=\"http://blog.csdn.net/whjkm\">Just do it!</a> 杰哥博客，极力推荐</p>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://www.licoy.cn/resource-sharing/fun-station\">憧憬点滴记忆</a>  比较综合的一个博客，技术文章，资源，项目，音乐，WEB等等都有</li>\n</ul>\n<h3 id=\"技术网站\"><a href=\"#技术网站\" class=\"headerlink\" title=\"技术网站\"></a>技术网站</h3><h3 id=\"影视网站\"><a href=\"#影视网站\" class=\"headerlink\" title=\"影视网站\"></a>影视网站</h3><ul>\n<li><a href=\"http://www.zhaifu.cc/bl/dianying/\">腐宅资源站</a> 各种电影电视剧动画资源</li>\n</ul>\n<h3 id=\"音乐网站\"><a href=\"#音乐网站\" class=\"headerlink\" title=\"音乐网站\"></a>音乐网站</h3><ul>\n<li><p><a href=\"http://www.mtyyw.com\">麦田音乐网</a> 主要是轻音乐，民谣，电台，歌单，摇滚，原声，影像，还有有文艺范的画，故事等等……</p>\n</li>\n<li><p><a href=\"https://music.douban.com/\">豆瓣音乐</a> 豆瓣，情怀，不解释</p>\n</li>\n<li><p><a href=\"http://www.top100.cn/\">巨鲸音乐</a> 看起来挺简洁，符合我的风格，先试试</p>\n</li>\n<li><p><a href=\"https://yahoo.streetvoice.com/\">奇摩音乐</a> 看起来还不错的样子~</p>\n</li>\n<li><p><a href=\"http://music.weibo.com/\">微博音乐</a> 草根比较多，应该还可以~</p>\n</li>\n</ul>","more":""},{"title":"印象笔记快捷键","date":"2016-07-11T14:35:00.000Z","_content":"\n### 全局###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE1.png)</center>\n\n<!-- more -->\n### 保存###\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE3.png)</center>\n\n### 标注###\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE2.png)</center>\n\n\n","source":"_posts/通用/印象笔记快捷键.md","raw":"---\ntitle: 印象笔记快捷键\ndate: 2016-07-11 14:35:00\ntags: 印象笔记\ncategories: 通用\n---\n\n### 全局###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE1.png)</center>\n\n<!-- more -->\n### 保存###\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE3.png)</center>\n\n### 标注###\n<center>![](http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE2.png)</center>\n\n\n","slug":"通用/印象笔记快捷键","published":1,"updated":"2016-07-11T06:43:15.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qmn004skgaev3xcck1s","content":"<h3 id=\"全局\"><a href=\"#全局\" class=\"headerlink\" title=\"全局\"></a>全局</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE1.png\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<h3 id=\"保存\"><a href=\"#保存\" class=\"headerlink\" title=\"保存\"></a>保存</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE3.png\" alt=\"\"></center>\n\n<h3 id=\"标注\"><a href=\"#标注\" class=\"headerlink\" title=\"标注\"></a>标注</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE2.png\" alt=\"\"></center>\n\n\n","excerpt":"<h3 id=\"全局\"><a href=\"#全局\" class=\"headerlink\" title=\"全局\"></a>全局</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE1.png\" alt=\"\"></center>","more":"<h3 id=\"保存\"><a href=\"#保存\" class=\"headerlink\" title=\"保存\"></a>保存</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE3.png\" alt=\"\"></center>\n\n<h3 id=\"标注\"><a href=\"#标注\" class=\"headerlink\" title=\"标注\"></a>标注</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0%E5%BF%AB%E6%8D%B7%E9%94%AE2.png\" alt=\"\"></center>"},{"title":"NexT主题内置标签","date":"2016-06-17T17:38:40.000Z","photos":["http://7xstki.com1.z0.glb.clouddn.com/NexT%E4%B8%BB%E9%A2%98%E5%86%85%E7%BD%AE%E6%A0%87%E7%AD%BE.jpg","http://theme-next.iissnan.com/uploads/tags/blockquote-center.png"],"_content":"\n- 具体用法参考NexT文档 [传送门](http://theme-next.iissnan.com/tag-plugins.html)\n\n### 文本居中的引用###\n\n此标签将生成一个带上下分割线的引用，同时引用内文本将自动居中。 文本居中时，多行文本若长度不等，视觉上会显得不对称，因此建议在引用单行文本的场景下使用。 例如作为文章开篇引用 或者 结束语之前的总结引用\n\n#### 使用方式####\n- HTML方式：使用这种方式时，给 img 添加属性 class=\"blockquote-center\" 即可\n\n- 标签方式：使用 centerquote 或者 简写 cq\n\n> 此标签要求 NexT 的版本在 0.4.5 或以上。 若你正在使用的版本比较低，可以选择使用 HTML 方式\n\n```html\n<!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 -->\n<!-- 其中 class=\"blockquote-center\" 是必须的 -->\n  <blockquote class=\"blockquote-center\">blah blah blah</blockquote>\n\n  <!-- 标签 方式，要求版本在0.4.5或以上 -->\n{% centerquote %}blah blah blah{% endcenterquote %}\n\n  <!-- 标签别名 -->\n{% cq %} blah blah blah {% endcq %}\n```\n\n效果示例:\n\n<center>![](http://theme-next.iissnan.com/uploads/tags/blockquote-center.png)</center>\n\n<!-- more -->\n\n### 突破容器宽度限制的图片###\n\n当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）：\n\n\n#### 使用方式####\n\n- HTML方式：使用这种方式时，为 img 添加属性 class=\"full-image\"即可。\n\n- 标签方式：使用 fullimage 或者 简写 fi， 并传递图片地址、 alt 和 title 属性即可。 属性之间以逗号分隔\n\n\n> 此标签要求 NexT 的版本在 0.4.5 或以上。 若你正在使用的版本比较低，可以选择使用 HTML 方式。\n如果要在图片下显示图片的标题，请使用 标签方式 并给定 title 属性\n\n\n```html\n<!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 -->\n<!-- 其中 class=\"full-image\" 是必须的 -->\n<img src=\"/image-url\" class=\"full-image\" />\n\n    <!-- 标签 方式，要求版本在0.4.5或以上 -->\n{% fullimage /image-url, alt, title %}\n\n<!-- 别名 -->\n{% fi /image-url, alt, title %}\n```\n\n效果示例:\n\n<center><img src=\"http://theme-next.iissnan.com/uploads/tags/full-image.jpg\" class=\"full-image\" /></center>\n","source":"_posts/通用/NexT主题内置标签.md","raw":"---\ntitle: NexT主题内置标签\ndate: 2016-06-17 17:38:40\ntags: hexo\ncategories: 通用\nphotos:\n - http://7xstki.com1.z0.glb.clouddn.com/NexT%E4%B8%BB%E9%A2%98%E5%86%85%E7%BD%AE%E6%A0%87%E7%AD%BE.jpg\n - http://theme-next.iissnan.com/uploads/tags/blockquote-center.png\n---\n\n- 具体用法参考NexT文档 [传送门](http://theme-next.iissnan.com/tag-plugins.html)\n\n### 文本居中的引用###\n\n此标签将生成一个带上下分割线的引用，同时引用内文本将自动居中。 文本居中时，多行文本若长度不等，视觉上会显得不对称，因此建议在引用单行文本的场景下使用。 例如作为文章开篇引用 或者 结束语之前的总结引用\n\n#### 使用方式####\n- HTML方式：使用这种方式时，给 img 添加属性 class=\"blockquote-center\" 即可\n\n- 标签方式：使用 centerquote 或者 简写 cq\n\n> 此标签要求 NexT 的版本在 0.4.5 或以上。 若你正在使用的版本比较低，可以选择使用 HTML 方式\n\n```html\n<!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 -->\n<!-- 其中 class=\"blockquote-center\" 是必须的 -->\n  <blockquote class=\"blockquote-center\">blah blah blah</blockquote>\n\n  <!-- 标签 方式，要求版本在0.4.5或以上 -->\n{% centerquote %}blah blah blah{% endcenterquote %}\n\n  <!-- 标签别名 -->\n{% cq %} blah blah blah {% endcq %}\n```\n\n效果示例:\n\n<center>![](http://theme-next.iissnan.com/uploads/tags/blockquote-center.png)</center>\n\n<!-- more -->\n\n### 突破容器宽度限制的图片###\n\n当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）：\n\n\n#### 使用方式####\n\n- HTML方式：使用这种方式时，为 img 添加属性 class=\"full-image\"即可。\n\n- 标签方式：使用 fullimage 或者 简写 fi， 并传递图片地址、 alt 和 title 属性即可。 属性之间以逗号分隔\n\n\n> 此标签要求 NexT 的版本在 0.4.5 或以上。 若你正在使用的版本比较低，可以选择使用 HTML 方式。\n如果要在图片下显示图片的标题，请使用 标签方式 并给定 title 属性\n\n\n```html\n<!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 -->\n<!-- 其中 class=\"full-image\" 是必须的 -->\n<img src=\"/image-url\" class=\"full-image\" />\n\n    <!-- 标签 方式，要求版本在0.4.5或以上 -->\n{% fullimage /image-url, alt, title %}\n\n<!-- 别名 -->\n{% fi /image-url, alt, title %}\n```\n\n效果示例:\n\n<center><img src=\"http://theme-next.iissnan.com/uploads/tags/full-image.jpg\" class=\"full-image\" /></center>\n","slug":"通用/NexT主题内置标签","published":1,"updated":"2016-06-18T07:48:58.156Z","comments":1,"layout":"post","link":"","_id":"ciqop7qmp004ukgaebcyadw86","content":"<ul>\n<li>具体用法参考NexT文档 <a href=\"http://theme-next.iissnan.com/tag-plugins.html\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n<h3 id=\"文本居中的引用\"><a href=\"#文本居中的引用\" class=\"headerlink\" title=\"文本居中的引用\"></a>文本居中的引用</h3><p>此标签将生成一个带上下分割线的引用，同时引用内文本将自动居中。 文本居中时，多行文本若长度不等，视觉上会显得不对称，因此建议在引用单行文本的场景下使用。 例如作为文章开篇引用 或者 结束语之前的总结引用</p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><ul>\n<li><p>HTML方式：使用这种方式时，给 img 添加属性 class=”blockquote-center” 即可</p>\n</li>\n<li><p>标签方式：使用 centerquote 或者 简写 cq</p>\n</li>\n</ul>\n<blockquote>\n<p>此标签要求 NexT 的版本在 0.4.5 或以上。 若你正在使用的版本比较低，可以选择使用 HTML 方式</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 其中 class=\"blockquote-center\" 是必须的 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">class</span>=<span class=\"string\">\"blockquote-center\"</span>&gt;</span>blah blah blah<span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class=\"line\">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 标签别名 --&gt;</span></span><br><span class=\"line\">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>\n<p>效果示例:</p>\n<center><img src=\"http://theme-next.iissnan.com/uploads/tags/blockquote-center.png\" alt=\"\"></center>\n\n<a id=\"more\"></a>\n<h3 id=\"突破容器宽度限制的图片\"><a href=\"#突破容器宽度限制的图片\" class=\"headerlink\" title=\"突破容器宽度限制的图片\"></a>突破容器宽度限制的图片</h3><p>当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）：</p>\n<h4 id=\"使用方式-1\"><a href=\"#使用方式-1\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><ul>\n<li><p>HTML方式：使用这种方式时，为 img 添加属性 class=”full-image”即可。</p>\n</li>\n<li><p>标签方式：使用 fullimage 或者 简写 fi， 并传递图片地址、 alt 和 title 属性即可。 属性之间以逗号分隔</p>\n</li>\n</ul>\n<blockquote>\n<p>此标签要求 NexT 的版本在 0.4.5 或以上。 若你正在使用的版本比较低，可以选择使用 HTML 方式。<br>如果要在图片下显示图片的标题，请使用 标签方式 并给定 title 属性</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 其中 class=\"full-image\" 是必须的 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/image-url\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"full-image\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class=\"line\">&#123;% fullimage /image-url, alt, title %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 别名 --&gt;</span></span><br><span class=\"line\">&#123;% fi /image-url, alt, title %&#125;</span><br></pre></td></tr></table></figure>\n<p>效果示例:</p>\n<center><img src=\"http://theme-next.iissnan.com/uploads/tags/full-image.jpg\" class=\"full-image\"></center>\n","excerpt":"<ul>\n<li>具体用法参考NexT文档 <a href=\"http://theme-next.iissnan.com/tag-plugins.html\">传送门</a></li>\n</ul>\n<h3 id=\"文本居中的引用\"><a href=\"#文本居中的引用\" class=\"headerlink\" title=\"文本居中的引用\"></a>文本居中的引用</h3><p>此标签将生成一个带上下分割线的引用，同时引用内文本将自动居中。 文本居中时，多行文本若长度不等，视觉上会显得不对称，因此建议在引用单行文本的场景下使用。 例如作为文章开篇引用 或者 结束语之前的总结引用</p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><ul>\n<li><p>HTML方式：使用这种方式时，给 img 添加属性 class=”blockquote-center” 即可</p>\n</li>\n<li><p>标签方式：使用 centerquote 或者 简写 cq</p>\n</li>\n</ul>\n<blockquote>\n<p>此标签要求 NexT 的版本在 0.4.5 或以上。 若你正在使用的版本比较低，可以选择使用 HTML 方式</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 其中 class=\"blockquote-center\" 是必须的 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">class</span>=<span class=\"string\">\"blockquote-center\"</span>&gt;</span>blah blah blah<span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class=\"line\">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 标签别名 --&gt;</span></span><br><span class=\"line\">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>\n<p>效果示例:</p>\n<center><img src=\"http://theme-next.iissnan.com/uploads/tags/blockquote-center.png\" alt=\"\"></center>","more":"<h3 id=\"突破容器宽度限制的图片\"><a href=\"#突破容器宽度限制的图片\" class=\"headerlink\" title=\"突破容器宽度限制的图片\"></a>突破容器宽度限制的图片</h3><p>当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）：</p>\n<h4 id=\"使用方式-1\"><a href=\"#使用方式-1\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><ul>\n<li><p>HTML方式：使用这种方式时，为 img 添加属性 class=”full-image”即可。</p>\n</li>\n<li><p>标签方式：使用 fullimage 或者 简写 fi， 并传递图片地址、 alt 和 title 属性即可。 属性之间以逗号分隔</p>\n</li>\n</ul>\n<blockquote>\n<p>此标签要求 NexT 的版本在 0.4.5 或以上。 若你正在使用的版本比较低，可以选择使用 HTML 方式。<br>如果要在图片下显示图片的标题，请使用 标签方式 并给定 title 属性</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 其中 class=\"full-image\" 是必须的 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/image-url\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"full-image\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;</span></span><br><span class=\"line\">&#123;% fullimage /image-url, alt, title %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 别名 --&gt;</span></span><br><span class=\"line\">&#123;% fi /image-url, alt, title %&#125;</span><br></pre></td></tr></table></figure>\n<p>效果示例:</p>\n<center><img src=\"http://theme-next.iissnan.com/uploads/tags/full-image.jpg\" class=\"full-image\" /></center>"},{"title":"帮程序员和站长减压放松的10个良心网站","date":"2016-06-23T20:44:33.000Z","photos":["http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%996.jpg","http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%991.jpg"],"_content":"### 1.[Calm](http://www.calm.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%997.jpg)</center>\n\n- 这是同类型中最火的网站了，站如其名，「平和」，通过自然的图像（阳光下的暖流、淙淙的小溪等）与缓缓的音乐，帮你在短时间内放松下来\n\n- 左侧有时间设定，从2分钟到20分钟，右底部可以改变音频、图像，调节音量等。还有IOS客户端下载呦\n\n\n### 2.[Do Nothing For 2 Minutes](http://www.donothingfor2minutes.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%999.jpg)</center>\n\n- 木头人，两分钟，这是一个简单到极致的网站，当你打开的时候，自动开始计时，这时间你不能触碰键盘和鼠标，否则2分钟会重置\n\n- 你需要做的，就是放下手头的工作，静静地享受潮声，这也很棒，不是吗？两分钟足够你冷静下来，休息一下了\n\n<!-- more -->\n\n\n### 3.[Get Relaxed](http://www.getrelaxed.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%992.jpg)</center>\n\n- 如果两分钟不足以让你彻底放松，试试这个。如下图，打开网站后，头枕着双手往后仰，欣赏自然风光，聆听网站为你精心挑选的音乐\n\n- 图像3秒一换，有15种，每种持续大概2 – 4分钟，现在，开始吧！\n\n- 提醒：网站有简陋广告，稍微影响体验\n\n### 4.[LoungeV Studio](http://www.loungev.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%996.jpg)</center>\n\n- 前三个都是图像，现在来个新鲜的。这个网站提供高清的自然风光视频 + 音乐。有沙滩、瀑布、水下景色等等，网站背景是一个温馨的客厅，右侧有视频可选，对喜欢看视频的同学来说，还是蛮不错的\n\n### 5.[A Soft Murmur](http://asoftmurmur.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%991.jpg)</center>\n\n- 这个网站太棒了！博主玩了好久都舍不得停下来。网站让你自由创造美妙的声音。你可以通过混合不同的声音（雨声、火柴燃烧的声音、打雷声、海潮声…..不一而足。但是，总有一款令你爱不释手！）当然，声音的大小也可以自己调节\n\n- 如果你对混合的声音非常满意，也可以分享到脸书、谷歌等….\n\n### 6.[Nature Sounds For Me](http://naturesoundsfor.me/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%998.jpg)</center>\n\n- 这个比上面那个界面稍逊，但是玩起来更嗨！它提供的声音除了以上的自然类声音，还有很多你想不到的：绵羊咩咩、骏马跺脚喷气、不同的鸟叫声，甚至是心脏跳动、厨房叮当的声音，不仅令人身临其境，而且搭配起来简直不能更欢乐！\n\n- 当然，它还有IOS客户端。\n\n### 7.[Noisli](http://www.noisli.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%9910.jpg)</center>\n\n\n- 这个网站根据你的情绪变化，选择不同的音乐和背景颜色。颜色大多朴素平和，背景声音也有对应的图标可以选择。还有一点贴心的设计是，网站右侧有便签本，你可以一边享受静谧时光一边随手记点事。\n\n- 为了造福大众，网站还提供IOS 版。\n\n\n### 8.[Soundrown](http://soundrown.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%995.jpg)</center>\n\n- 网站一进去，有3个关键词：放松、专注、逃离。的确，它成功做到了这一点。它有10种不同的声音帮助你放松心情，也可以混合使用。不同的声音对应不同的背景，网站非常有设计感，相信你会重新回来体验一次\n\n\n### 9.[The Thoughts Room](http://thequietplaceproject.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%993.jpg)</center>\n\n- 一句话简洁：世界的秘密——树洞类网站。你可以在这里向全世界倾诉你的任何想法，网站支持37种语言，不过看了一下，没有中国…\n\n### 10.[Raining.Fm](http://raining.fm/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%994.jpg)</center>\n\n- 有时候，我们需要的仅仅是一点点雨声来帮助我们平静。网站专门提供雨声，因为单一，所以也更加专业。网站有3种不同的雨声类型，右侧有定时器可以在你放松时提醒你，简单也好用的一个网站，赞一个\n\n参考博客：[传送门](https://www.licoy.cn/624.html)\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/通用/帮程序员和站长减压放松的10个良心网站.md","raw":"---\ntitle: 帮程序员和站长减压放松的10个良心网站\ndate: 2016-06-23 20:44:33\ntags: 减压\ncategories: 通用\nphotos:\n -  http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%996.jpg\n -  http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%991.jpg\n---\n### 1.[Calm](http://www.calm.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%997.jpg)</center>\n\n- 这是同类型中最火的网站了，站如其名，「平和」，通过自然的图像（阳光下的暖流、淙淙的小溪等）与缓缓的音乐，帮你在短时间内放松下来\n\n- 左侧有时间设定，从2分钟到20分钟，右底部可以改变音频、图像，调节音量等。还有IOS客户端下载呦\n\n\n### 2.[Do Nothing For 2 Minutes](http://www.donothingfor2minutes.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%999.jpg)</center>\n\n- 木头人，两分钟，这是一个简单到极致的网站，当你打开的时候，自动开始计时，这时间你不能触碰键盘和鼠标，否则2分钟会重置\n\n- 你需要做的，就是放下手头的工作，静静地享受潮声，这也很棒，不是吗？两分钟足够你冷静下来，休息一下了\n\n<!-- more -->\n\n\n### 3.[Get Relaxed](http://www.getrelaxed.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%992.jpg)</center>\n\n- 如果两分钟不足以让你彻底放松，试试这个。如下图，打开网站后，头枕着双手往后仰，欣赏自然风光，聆听网站为你精心挑选的音乐\n\n- 图像3秒一换，有15种，每种持续大概2 – 4分钟，现在，开始吧！\n\n- 提醒：网站有简陋广告，稍微影响体验\n\n### 4.[LoungeV Studio](http://www.loungev.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%996.jpg)</center>\n\n- 前三个都是图像，现在来个新鲜的。这个网站提供高清的自然风光视频 + 音乐。有沙滩、瀑布、水下景色等等，网站背景是一个温馨的客厅，右侧有视频可选，对喜欢看视频的同学来说，还是蛮不错的\n\n### 5.[A Soft Murmur](http://asoftmurmur.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%991.jpg)</center>\n\n- 这个网站太棒了！博主玩了好久都舍不得停下来。网站让你自由创造美妙的声音。你可以通过混合不同的声音（雨声、火柴燃烧的声音、打雷声、海潮声…..不一而足。但是，总有一款令你爱不释手！）当然，声音的大小也可以自己调节\n\n- 如果你对混合的声音非常满意，也可以分享到脸书、谷歌等….\n\n### 6.[Nature Sounds For Me](http://naturesoundsfor.me/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%998.jpg)</center>\n\n- 这个比上面那个界面稍逊，但是玩起来更嗨！它提供的声音除了以上的自然类声音，还有很多你想不到的：绵羊咩咩、骏马跺脚喷气、不同的鸟叫声，甚至是心脏跳动、厨房叮当的声音，不仅令人身临其境，而且搭配起来简直不能更欢乐！\n\n- 当然，它还有IOS客户端。\n\n### 7.[Noisli](http://www.noisli.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%9910.jpg)</center>\n\n\n- 这个网站根据你的情绪变化，选择不同的音乐和背景颜色。颜色大多朴素平和，背景声音也有对应的图标可以选择。还有一点贴心的设计是，网站右侧有便签本，你可以一边享受静谧时光一边随手记点事。\n\n- 为了造福大众，网站还提供IOS 版。\n\n\n### 8.[Soundrown](http://soundrown.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%995.jpg)</center>\n\n- 网站一进去，有3个关键词：放松、专注、逃离。的确，它成功做到了这一点。它有10种不同的声音帮助你放松心情，也可以混合使用。不同的声音对应不同的背景，网站非常有设计感，相信你会重新回来体验一次\n\n\n### 9.[The Thoughts Room](http://thequietplaceproject.com/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%993.jpg)</center>\n\n- 一句话简洁：世界的秘密——树洞类网站。你可以在这里向全世界倾诉你的任何想法，网站支持37种语言，不过看了一下，没有中国…\n\n### 10.[Raining.Fm](http://raining.fm/)###\n\n<center>![](http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%994.jpg)</center>\n\n- 有时候，我们需要的仅仅是一点点雨声来帮助我们平静。网站专门提供雨声，因为单一，所以也更加专业。网站有3种不同的雨声类型，右侧有定时器可以在你放松时提醒你，简单也好用的一个网站，赞一个\n\n参考博客：[传送门](https://www.licoy.cn/624.html)\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"通用/帮程序员和站长减压放松的10个良心网站","published":1,"updated":"2016-06-23T13:10:10.140Z","comments":1,"layout":"post","link":"","_id":"ciqop7qms004xkgaeai86nmhs","content":"<h3 id=\"1-Calm\"><a href=\"#1-Calm\" class=\"headerlink\" title=\"1.Calm\"></a>1.<a href=\"http://www.calm.com/\" target=\"_blank\" rel=\"external\">Calm</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%997.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>这是同类型中最火的网站了，站如其名，「平和」，通过自然的图像（阳光下的暖流、淙淙的小溪等）与缓缓的音乐，帮你在短时间内放松下来</p>\n</li>\n<li><p>左侧有时间设定，从2分钟到20分钟，右底部可以改变音频、图像，调节音量等。还有IOS客户端下载呦</p>\n</li>\n</ul>\n<h3 id=\"2-Do-Nothing-For-2-Minutes\"><a href=\"#2-Do-Nothing-For-2-Minutes\" class=\"headerlink\" title=\"2.Do Nothing For 2 Minutes\"></a>2.<a href=\"http://www.donothingfor2minutes.com/\" target=\"_blank\" rel=\"external\">Do Nothing For 2 Minutes</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%999.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>木头人，两分钟，这是一个简单到极致的网站，当你打开的时候，自动开始计时，这时间你不能触碰键盘和鼠标，否则2分钟会重置</p>\n</li>\n<li><p>你需要做的，就是放下手头的工作，静静地享受潮声，这也很棒，不是吗？两分钟足够你冷静下来，休息一下了</p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"3-Get-Relaxed\"><a href=\"#3-Get-Relaxed\" class=\"headerlink\" title=\"3.Get Relaxed\"></a>3.<a href=\"http://www.getrelaxed.com/\" target=\"_blank\" rel=\"external\">Get Relaxed</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%992.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>如果两分钟不足以让你彻底放松，试试这个。如下图，打开网站后，头枕着双手往后仰，欣赏自然风光，聆听网站为你精心挑选的音乐</p>\n</li>\n<li><p>图像3秒一换，有15种，每种持续大概2 – 4分钟，现在，开始吧！</p>\n</li>\n<li><p>提醒：网站有简陋广告，稍微影响体验</p>\n</li>\n</ul>\n<h3 id=\"4-LoungeV-Studio\"><a href=\"#4-LoungeV-Studio\" class=\"headerlink\" title=\"4.LoungeV Studio\"></a>4.<a href=\"http://www.loungev.com/\" target=\"_blank\" rel=\"external\">LoungeV Studio</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%996.jpg\" alt=\"\"></center>\n\n<ul>\n<li>前三个都是图像，现在来个新鲜的。这个网站提供高清的自然风光视频 + 音乐。有沙滩、瀑布、水下景色等等，网站背景是一个温馨的客厅，右侧有视频可选，对喜欢看视频的同学来说，还是蛮不错的</li>\n</ul>\n<h3 id=\"5-A-Soft-Murmur\"><a href=\"#5-A-Soft-Murmur\" class=\"headerlink\" title=\"5.A Soft Murmur\"></a>5.<a href=\"http://asoftmurmur.com/\" target=\"_blank\" rel=\"external\">A Soft Murmur</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%991.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>这个网站太棒了！博主玩了好久都舍不得停下来。网站让你自由创造美妙的声音。你可以通过混合不同的声音（雨声、火柴燃烧的声音、打雷声、海潮声…..不一而足。但是，总有一款令你爱不释手！）当然，声音的大小也可以自己调节</p>\n</li>\n<li><p>如果你对混合的声音非常满意，也可以分享到脸书、谷歌等….</p>\n</li>\n</ul>\n<h3 id=\"6-Nature-Sounds-For-Me\"><a href=\"#6-Nature-Sounds-For-Me\" class=\"headerlink\" title=\"6.Nature Sounds For Me\"></a>6.<a href=\"http://naturesoundsfor.me/\" target=\"_blank\" rel=\"external\">Nature Sounds For Me</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%998.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>这个比上面那个界面稍逊，但是玩起来更嗨！它提供的声音除了以上的自然类声音，还有很多你想不到的：绵羊咩咩、骏马跺脚喷气、不同的鸟叫声，甚至是心脏跳动、厨房叮当的声音，不仅令人身临其境，而且搭配起来简直不能更欢乐！</p>\n</li>\n<li><p>当然，它还有IOS客户端。</p>\n</li>\n</ul>\n<h3 id=\"7-Noisli\"><a href=\"#7-Noisli\" class=\"headerlink\" title=\"7.Noisli\"></a>7.<a href=\"http://www.noisli.com/\" target=\"_blank\" rel=\"external\">Noisli</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%9910.jpg\" alt=\"\"></center>\n\n\n<ul>\n<li><p>这个网站根据你的情绪变化，选择不同的音乐和背景颜色。颜色大多朴素平和，背景声音也有对应的图标可以选择。还有一点贴心的设计是，网站右侧有便签本，你可以一边享受静谧时光一边随手记点事。</p>\n</li>\n<li><p>为了造福大众，网站还提供IOS 版。</p>\n</li>\n</ul>\n<h3 id=\"8-Soundrown\"><a href=\"#8-Soundrown\" class=\"headerlink\" title=\"8.Soundrown\"></a>8.<a href=\"http://soundrown.com/\" target=\"_blank\" rel=\"external\">Soundrown</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%995.jpg\" alt=\"\"></center>\n\n<ul>\n<li>网站一进去，有3个关键词：放松、专注、逃离。的确，它成功做到了这一点。它有10种不同的声音帮助你放松心情，也可以混合使用。不同的声音对应不同的背景，网站非常有设计感，相信你会重新回来体验一次</li>\n</ul>\n<h3 id=\"9-The-Thoughts-Room\"><a href=\"#9-The-Thoughts-Room\" class=\"headerlink\" title=\"9.The Thoughts Room\"></a>9.<a href=\"http://thequietplaceproject.com/\" target=\"_blank\" rel=\"external\">The Thoughts Room</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%993.jpg\" alt=\"\"></center>\n\n<ul>\n<li>一句话简洁：世界的秘密——树洞类网站。你可以在这里向全世界倾诉你的任何想法，网站支持37种语言，不过看了一下，没有中国…</li>\n</ul>\n<h3 id=\"10-Raining-Fm\"><a href=\"#10-Raining-Fm\" class=\"headerlink\" title=\"10.Raining.Fm\"></a>10.<a href=\"http://raining.fm/\" target=\"_blank\" rel=\"external\">Raining.Fm</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%994.jpg\" alt=\"\"></center>\n\n<ul>\n<li>有时候，我们需要的仅仅是一点点雨声来帮助我们平静。网站专门提供雨声，因为单一，所以也更加专业。网站有3种不同的雨声类型，右侧有定时器可以在你放松时提醒你，简单也好用的一个网站，赞一个</li>\n</ul>\n<p>参考博客：<a href=\"https://www.licoy.cn/624.html\" target=\"_blank\" rel=\"external\">传送门</a></p>\n","excerpt":"<h3 id=\"1-Calm\"><a href=\"#1-Calm\" class=\"headerlink\" title=\"1.Calm\"></a>1.<a href=\"http://www.calm.com/\">Calm</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%997.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>这是同类型中最火的网站了，站如其名，「平和」，通过自然的图像（阳光下的暖流、淙淙的小溪等）与缓缓的音乐，帮你在短时间内放松下来</p>\n</li>\n<li><p>左侧有时间设定，从2分钟到20分钟，右底部可以改变音频、图像，调节音量等。还有IOS客户端下载呦</p>\n</li>\n</ul>\n<h3 id=\"2-Do-Nothing-For-2-Minutes\"><a href=\"#2-Do-Nothing-For-2-Minutes\" class=\"headerlink\" title=\"2.Do Nothing For 2 Minutes\"></a>2.<a href=\"http://www.donothingfor2minutes.com/\">Do Nothing For 2 Minutes</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%999.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>木头人，两分钟，这是一个简单到极致的网站，当你打开的时候，自动开始计时，这时间你不能触碰键盘和鼠标，否则2分钟会重置</p>\n</li>\n<li><p>你需要做的，就是放下手头的工作，静静地享受潮声，这也很棒，不是吗？两分钟足够你冷静下来，休息一下了</p>\n</li>\n</ul>","more":"<h3 id=\"3-Get-Relaxed\"><a href=\"#3-Get-Relaxed\" class=\"headerlink\" title=\"3.Get Relaxed\"></a>3.<a href=\"http://www.getrelaxed.com/\">Get Relaxed</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%992.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>如果两分钟不足以让你彻底放松，试试这个。如下图，打开网站后，头枕着双手往后仰，欣赏自然风光，聆听网站为你精心挑选的音乐</p>\n</li>\n<li><p>图像3秒一换，有15种，每种持续大概2 – 4分钟，现在，开始吧！</p>\n</li>\n<li><p>提醒：网站有简陋广告，稍微影响体验</p>\n</li>\n</ul>\n<h3 id=\"4-LoungeV-Studio\"><a href=\"#4-LoungeV-Studio\" class=\"headerlink\" title=\"4.LoungeV Studio\"></a>4.<a href=\"http://www.loungev.com/\">LoungeV Studio</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%996.jpg\" alt=\"\"></center>\n\n<ul>\n<li>前三个都是图像，现在来个新鲜的。这个网站提供高清的自然风光视频 + 音乐。有沙滩、瀑布、水下景色等等，网站背景是一个温馨的客厅，右侧有视频可选，对喜欢看视频的同学来说，还是蛮不错的</li>\n</ul>\n<h3 id=\"5-A-Soft-Murmur\"><a href=\"#5-A-Soft-Murmur\" class=\"headerlink\" title=\"5.A Soft Murmur\"></a>5.<a href=\"http://asoftmurmur.com/\">A Soft Murmur</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%991.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>这个网站太棒了！博主玩了好久都舍不得停下来。网站让你自由创造美妙的声音。你可以通过混合不同的声音（雨声、火柴燃烧的声音、打雷声、海潮声…..不一而足。但是，总有一款令你爱不释手！）当然，声音的大小也可以自己调节</p>\n</li>\n<li><p>如果你对混合的声音非常满意，也可以分享到脸书、谷歌等….</p>\n</li>\n</ul>\n<h3 id=\"6-Nature-Sounds-For-Me\"><a href=\"#6-Nature-Sounds-For-Me\" class=\"headerlink\" title=\"6.Nature Sounds For Me\"></a>6.<a href=\"http://naturesoundsfor.me/\">Nature Sounds For Me</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%998.jpg\" alt=\"\"></center>\n\n<ul>\n<li><p>这个比上面那个界面稍逊，但是玩起来更嗨！它提供的声音除了以上的自然类声音，还有很多你想不到的：绵羊咩咩、骏马跺脚喷气、不同的鸟叫声，甚至是心脏跳动、厨房叮当的声音，不仅令人身临其境，而且搭配起来简直不能更欢乐！</p>\n</li>\n<li><p>当然，它还有IOS客户端。</p>\n</li>\n</ul>\n<h3 id=\"7-Noisli\"><a href=\"#7-Noisli\" class=\"headerlink\" title=\"7.Noisli\"></a>7.<a href=\"http://www.noisli.com/\">Noisli</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%9910.jpg\" alt=\"\"></center>\n\n\n<ul>\n<li><p>这个网站根据你的情绪变化，选择不同的音乐和背景颜色。颜色大多朴素平和，背景声音也有对应的图标可以选择。还有一点贴心的设计是，网站右侧有便签本，你可以一边享受静谧时光一边随手记点事。</p>\n</li>\n<li><p>为了造福大众，网站还提供IOS 版。</p>\n</li>\n</ul>\n<h3 id=\"8-Soundrown\"><a href=\"#8-Soundrown\" class=\"headerlink\" title=\"8.Soundrown\"></a>8.<a href=\"http://soundrown.com/\">Soundrown</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%995.jpg\" alt=\"\"></center>\n\n<ul>\n<li>网站一进去，有3个关键词：放松、专注、逃离。的确，它成功做到了这一点。它有10种不同的声音帮助你放松心情，也可以混合使用。不同的声音对应不同的背景，网站非常有设计感，相信你会重新回来体验一次</li>\n</ul>\n<h3 id=\"9-The-Thoughts-Room\"><a href=\"#9-The-Thoughts-Room\" class=\"headerlink\" title=\"9.The Thoughts Room\"></a>9.<a href=\"http://thequietplaceproject.com/\">The Thoughts Room</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%993.jpg\" alt=\"\"></center>\n\n<ul>\n<li>一句话简洁：世界的秘密——树洞类网站。你可以在这里向全世界倾诉你的任何想法，网站支持37种语言，不过看了一下，没有中国…</li>\n</ul>\n<h3 id=\"10-Raining-Fm\"><a href=\"#10-Raining-Fm\" class=\"headerlink\" title=\"10.Raining.Fm\"></a>10.<a href=\"http://raining.fm/\">Raining.Fm</a></h3><center><img src=\"http://7xstki.com1.z0.glb.clouddn.com/%E5%B8%AE%E7%A8%8B%E5%BA%8F%E5%91%98%E6%94%BE%E6%9D%BE%E7%9A%84%E5%8D%81%E4%B8%AA%E7%BD%91%E7%AB%994.jpg\" alt=\"\"></center>\n\n<ul>\n<li>有时候，我们需要的仅仅是一点点雨声来帮助我们平静。网站专门提供雨声，因为单一，所以也更加专业。网站有3种不同的雨声类型，右侧有定时器可以在你放松时提醒你，简单也好用的一个网站，赞一个</li>\n</ul>\n<p>参考博客：<a href=\"https://www.licoy.cn/624.html\">传送门</a></p>"},{"title":"常用RGB颜色","date":"2016-06-24T10:26:30.000Z","_content":"\n### 常用RGB颜色列表###\n\n\n<table><tbody><tr><th>颜色名</th><th>十六进制颜色值</th><th>颜色</th></tr><tr><td><font color=\"AliceBlue\">AliceBlue</font></td><td><font color=\"#F0F8FF\">#F0F8FF</font></td><td bgcolor=\"#F0F8FF\">rgb(240, 248, 255)</td></tr><tr><td><font color=\"AntiqueWhite\">AntiqueWhite</font></td><td><font color=\"#FAEBD7\">#FAEBD7</font></td><td bgcolor=\"#FAEBD7\">rgb(250, 235, 215)</td></tr><tr><td><font color=\"Aqua\">Aqua</font></td><td><font color=\"#00FFFF\">#00FFFF</font></td><td bgcolor=\"#00FFFF\">rgb(0, 255, 255)</td></tr><tr><td><font color=\"Aquamarine\">Aquamarine</font></td><td><font color=\"#7FFFD4\">#7FFFD4</font></td><td bgcolor=\"#7FFFD4\">rgb(127, 255, 212)</td></tr><tr><td><font color=\"Azure\">Azure</font></td><td><font color=\"#F0FFFF\">#F0FFFF</font></td><td bgcolor=\"#F0FFFF\">rgb(240, 255, 255)</td></tr><tr><td><font color=\"Beige\">Beige</font></td><td><font color=\"#F5F5DC\">#F5F5DC</font></td><td bgcolor=\"#F5F5DC\">rgb(245, 245, 220)</td></tr><tr><td><font color=\"Bisque\">Bisque</font></td><td><font color=\"#FFE4C4\">#FFE4C4</font></td><td bgcolor=\"#FFE4C4\">rgb(255, 228, 196)</td></tr><tr><td><font color=\"Black\">Black</font></td><td><font color=\"#000000\">#000000</font></td><td bgcolor=\"#000000\">rgb(0, 0, 0)</td></tr><tr><td><font color=\"BlanchedAlmond\">BlanchedAlmond</font></td><td><font color=\"#FFEBCD\">#FFEBCD</font></td><td bgcolor=\"#FFEBCD\">rgb(255, 235, 205)</td></tr><tr><td><font color=\"Blue\">Blue</font></td><td><font color=\"#0000FF\">#0000FF</font></td><td bgcolor=\"#0000FF\">rgb(0, 0, 255)</td></tr><tr><td><font color=\"BlueViolet\">BlueViolet</font></td><td><font color=\"#8A2BE2\">#8A2BE2</font></td><td bgcolor=\"#8A2BE2\">rgb(138, 43, 226)</td></tr><tr><td><font color=\"Brown\">Brown</font></td><td><font color=\"#A52A2A\">#A52A2A</font></td><td bgcolor=\"#A52A2A\">rgb(165, 42, 42)</td></tr><tr><td><font color=\"BurlyWood\">BurlyWood</font></td><td><font color=\"#DEB887\">#DEB887</font></td><td bgcolor=\"#DEB887\">rgb(222, 184, 135)</td></tr><tr><td><font color=\"CadetBlue\">CadetBlue</font></td><td><font color=\"#5F9EA0\">#5F9EA0</font></td><td bgcolor=\"#5F9EA0\">rgb(95, 158, 160)</td></tr><tr><td><font color=\"Chartreuse\">Chartreuse</font></td><td><font color=\"#7FFF00\">#7FFF00</font></td><td bgcolor=\"#7FFF00\">rgb(127, 255, 0)</td></tr><tr><td><font color=\"Chocolate\">Chocolate</font></td><td><font color=\"#D2691E\">#D2691E</font></td><td bgcolor=\"#D2691E\">rgb(210, 105, 30)</td></tr><tr><td><font color=\"Coral\">Coral</font></td><td><font color=\"#FF7F50\">#FF7F50</font></td><td bgcolor=\"#FF7F50\">rgb(255, 127, 80)</td></tr><tr><td><font color=\"CornflowerBlue\">CornflowerBlue</font></td><td><font color=\"#6495ED\">#6495ED</font></td><td bgcolor=\"#6495ED\">rgb(100, 149, 237)</td></tr><tr><td><font color=\"Cornsilk\">Cornsilk</font></td><td><font color=\"#FFF8DC\">#FFF8DC</font></td><td bgcolor=\"#FFF8DC\">rgb(255, 248, 220)</td></tr><tr><td><font color=\"Crimson\">Crimson</font></td><td><font color=\"#DC143C\">#DC143C</font></td><td bgcolor=\"#DC143C\">rgb(220, 20, 60)</td></tr><tr><td><font color=\"Cyan\">Cyan</font></td><td><font color=\"#00FFFF\">#00FFFF</font></td><td bgcolor=\"#00FFFF\">rgb(0, 255, 255)</td></tr><tr><td><font color=\"DarkBlue\">DarkBlue</font></td><td><font color=\"#00008B\">#00008B</font></td><td bgcolor=\"#00008B\">rgb(0, 0, 139)</td></tr><tr><td><font color=\"DarkCyan\">DarkCyan</font></td><td><font color=\"#008B8B\">#008B8B</font></td><td bgcolor=\"#008B8B\">rgb(0, 139, 139)</td></tr><tr><td><font color=\"DarkGoldenRod\">DarkGoldenRod</font></td><td><font color=\"#B8860B\">#B8860B</font></td><td bgcolor=\"#B8860B\">rgb(184, 134, 11)</td></tr><tr><td><font color=\"DarkGray\">DarkGray</font></td><td><font color=\"#A9A9A9\">#A9A9A9</font></td><td bgcolor=\"#A9A9A9\">rgb(169, 169, 169)</td></tr><tr><td><font color=\"DarkGreen\">DarkGreen</font></td><td><font color=\"#006400\">#006400</font></td><td bgcolor=\"#006400\">rgb(0, 100, 0)</td></tr><tr><td><font color=\"DarkKhaki\">DarkKhaki</font></td><td><font color=\"#BDB76B\">#BDB76B</font></td><td bgcolor=\"#BDB76B\">rgb(189, 183, 107)</td></tr><tr><td><font color=\"DarkMagenta\">DarkMagenta</font></td><td><font color=\"#8B008B\">#8B008B</font></td><td bgcolor=\"#8B008B\">rgb(139, 0, 139)</td></tr><tr><td><font color=\"DarkOliveGreen\">DarkOliveGreen</font></td><td><font color=\"#556B2F\">#556B2F</font></td><td bgcolor=\"#556B2F\">rgb(85, 107, 47)</td></tr><tr><td><font color=\"Darkorange\">Darkorange</font></td><td><font color=\"#FF8C00\">#FF8C00</font></td><td bgcolor=\"#FF8C00\">rgb(255, 140, 0)</td></tr><tr><td><font color=\"DarkOrchid\">DarkOrchid</font></td><td><font color=\"#9932CC\">#9932CC</font></td><td bgcolor=\"#9932CC\">rgb(153, 50, 204)</td></tr><tr><td><font color=\"DarkRed\">DarkRed</font></td><td><font color=\"#8B0000\">#8B0000</font></td><td bgcolor=\"#8B0000\">rgb(139, 0, 0)</td></tr><tr><td><font color=\"DarkSalmon\">DarkSalmon</font></td><td><font color=\"#E9967A\">#E9967A</font></td><td bgcolor=\"#E9967A\">rgb(233, 150, 122)</td></tr><tr><td><font color=\"DarkSeaGreen\">DarkSeaGreen</font></td><td><font color=\"#8FBC8F\">#8FBC8F</font></td><td bgcolor=\"#8FBC8F\">rgb(143, 188, 143)</td></tr><tr><td><font color=\"DarkSlateBlue\">DarkSlateBlue</font></td><td><font color=\"#483D8B\">#483D8B</font></td><td bgcolor=\"#483D8B\">rgb(72, 61, 139)</td></tr><tr><td><font color=\"DarkSlateGray\">DarkSlateGray</font></td><td><font color=\"#2F4F4F\">#2F4F4F</font></td><td bgcolor=\"#2F4F4F\">rgb(47, 79, 79)</td></tr><tr><td><font color=\"DarkTurquoise\">DarkTurquoise</font></td><td><font color=\"#00CED1\">#00CED1</font></td><td bgcolor=\"#00CED1\">rgb(0, 206, 209)</td></tr><tr><td><font color=\"DarkViolet\">DarkViolet</font></td><td><font color=\"#9400D3\">#9400D3</font></td><td bgcolor=\"#9400D3\">rgb(148, 0, 211)</td></tr><tr><td><font color=\"DeepPink\">DeepPink</font></td><td><font color=\"#FF1493\">#FF1493</font></td><td bgcolor=\"#FF1493\">rgb(255, 20, 147)</td></tr><tr><td><font color=\"DeepSkyBlue\">DeepSkyBlue</font></td><td><font color=\"#00BFFF\">#00BFFF</font></td><td bgcolor=\"#00BFFF\">rgb(0, 191, 255)</td></tr><tr><td><font color=\"DimGray\">DimGray</font></td><td><font color=\"#696969\">#696969</font></td><td bgcolor=\"#696969\">rgb(105, 105, 105)</td></tr><tr><td><font color=\"DodgerBlue\">DodgerBlue</font></td><td><font color=\"#1E90FF\">#1E90FF</font></td><td bgcolor=\"#1E90FF\">rgb(30, 144, 255)</td></tr><tr><td><font color=\"Feldspar\">Feldspar</font></td><td><font color=\"#D19275\">#D19275</font></td><td bgcolor=\"#D19275\">rgb(209, 146, 117)</td></tr><tr><td><font color=\"FireBrick\">FireBrick</font></td><td><font color=\"#B22222\">#B22222</font></td><td bgcolor=\"#B22222\">rgb(178, 34, 34)</td></tr><tr><td><font color=\"FloralWhite\">FloralWhite</font></td><td><font color=\"#FFFAF0\">#FFFAF0</font></td><td bgcolor=\"#FFFAF0\">rgb(255, 250, 240)</td></tr><tr><td><font color=\"ForestGreen\">ForestGreen</font></td><td><font color=\"#228B22\">#228B22</font></td><td bgcolor=\"#228B22\">rgb(34, 139, 34)</td></tr><tr><td><font color=\"Fuchsia\">Fuchsia</font></td><td><font color=\"#FF00FF\">#FF00FF</font></td><td bgcolor=\"#FF00FF\">rgb(255, 0, 255)</td></tr><tr><td><font color=\"Gainsboro\">Gainsboro</font></td><td><font color=\"#DCDCDC\">#DCDCDC</font></td><td bgcolor=\"#DCDCDC\">rgb(220, 220, 220)</td></tr><tr><td><font color=\"GhostWhite\">GhostWhite</font></td><td><font color=\"#F8F8FF\">#F8F8FF</font></td><td bgcolor=\"#F8F8FF\">rgb(248, 248, 255)</td></tr><tr><td><font color=\"Gold\">Gold</font></td><td><font color=\"#FFD700\">#FFD700</font></td><td bgcolor=\"#FFD700\">rgb(255, 215, 0)</td></tr><tr><td><font color=\"GoldenRod\">GoldenRod</font></td><td><font color=\"#DAA520\">#DAA520</font></td><td bgcolor=\"#DAA520\">rgb(218, 165, 32)</td></tr><tr><td><font color=\"Gray\">Gray</font></td><td><font color=\"#808080\">#808080</font></td><td bgcolor=\"#808080\">rgb(128, 128, 128)</td></tr><tr><td><font color=\"Green\">Green</font></td><td><font color=\"#008000\">#008000</font></td><td bgcolor=\"#008000\">rgb(0, 128, 0)</td></tr><tr><td><font color=\"GreenYellow\">GreenYellow</font></td><td><font color=\"#ADFF2F\">#ADFF2F</font></td><td bgcolor=\"#ADFF2F\">rgb(173, 255, 47)</td></tr><tr><td><font color=\"HoneyDew\">HoneyDew</font></td><td><font color=\"#F0FFF0\">#F0FFF0</font></td><td bgcolor=\"#F0FFF0\">rgb(240, 255, 240)</td></tr><tr><td><font color=\"HotPink\">HotPink</font></td><td><font color=\"#FF69B4\">#FF69B4</font></td><td bgcolor=\"#FF69B4\">rgb(255, 105, 180)</td></tr><tr><td><font color=\"IndianRed\">IndianRed</font></td><td><font color=\"#CD5C5C\">#CD5C5C</font></td><td bgcolor=\"#CD5C5C\">rgb(205, 92, 92)</td></tr><tr><td><font color=\"Indigo\">Indigo</font></td><td><font color=\"#4B0082\">#4B0082</font></td><td bgcolor=\"#4B0082\">rgb(75, 0, 130)</td></tr><tr><td><font color=\"Ivory\">Ivory</font></td><td><font color=\"#FFFFF0\">#FFFFF0</font></td><td bgcolor=\"#FFFFF0\">rgb(255, 255, 240)</td></tr><tr><td><font color=\"Khaki\">Khaki</font></td><td><font color=\"#F0E68C\">#F0E68C</font></td><td bgcolor=\"#F0E68C\">rgb(240, 230, 140)</td></tr><tr><td><font color=\"Lavender\">Lavender</font></td><td><font color=\"#E6E6FA\">#E6E6FA</font></td><td bgcolor=\"#E6E6FA\">rgb(230, 230, 250)</td></tr><tr><td><font color=\"LavenderBlush\">LavenderBlush</font></td><td><font color=\"#FFF0F5\">#FFF0F5</font></td><td bgcolor=\"#FFF0F5\">rgb(255, 240, 245)</td></tr><tr><td><font color=\"LawnGreen\">LawnGreen</font></td><td><font color=\"#7CFC00\">#7CFC00</font></td><td bgcolor=\"#7CFC00\">rgb(124, 252, 0)</td></tr><tr><td><font color=\"LemonChiffon\">LemonChiffon</font></td><td><font color=\"#FFFACD\">#FFFACD</font></td><td bgcolor=\"#FFFACD\">rgb(255, 250, 205)</td></tr><tr><td><font color=\"LightBlue\">LightBlue</font></td><td><font color=\"#ADD8E6\">#ADD8E6</font></td><td bgcolor=\"#ADD8E6\">rgb(173, 216, 230)</td></tr><tr><td><font color=\"LightCoral\">LightCoral</font></td><td><font color=\"#F08080\">#F08080</font></td><td bgcolor=\"#F08080\">rgb(240, 128, 128)</td></tr><tr><td><font color=\"LightCyan\">LightCyan</font></td><td><font color=\"#E0FFFF\">#E0FFFF</font></td><td bgcolor=\"#E0FFFF\">rgb(224, 255, 255)</td></tr><tr><td><font color=\"LightGoldenRodYellow\">LightGoldenRodYellow</font></td><td><font color=\"#FAFAD2\">#FAFAD2</font></td><td bgcolor=\"#FAFAD2\">rgb(250, 250, 210)</td></tr><tr><td><font color=\"LightGrey\">LightGrey</font></td><td><font color=\"#D3D3D3\">#D3D3D3</font></td><td bgcolor=\"#D3D3D3\">rgb(211, 211, 211)</td></tr><tr><td><font color=\"LightGreen\">LightGreen</font></td><td><font color=\"#90EE90\">#90EE90</font></td><td bgcolor=\"#90EE90\">rgb(144, 238, 144)</td></tr><tr><td><font color=\"LightPink\">LightPink</font></td><td><font color=\"#FFB6C1\">#FFB6C1</font></td><td bgcolor=\"#FFB6C1\">rgb(255, 182, 193)</td></tr><tr><td><font color=\"LightSalmon\">LightSalmon</font></td><td><font color=\"#FFA07A\">#FFA07A</font></td><td bgcolor=\"#FFA07A\">rgb(255, 160, 122)</td></tr><tr><td><font color=\"LightSeaGreen\">LightSeaGreen</font></td><td><font color=\"#20B2AA\">#20B2AA</font></td><td bgcolor=\"#20B2AA\">rgb(32, 178, 170)</td></tr><tr><td><font color=\"LightSkyBlue\">LightSkyBlue</font></td><td><font color=\"#87CEFA\">#87CEFA</font></td><td bgcolor=\"#87CEFA\">rgb(135, 206, 250)</td></tr><tr><td><font color=\"LightSlateBlue\">LightSlateBlue</font></td><td><font color=\"#8470FF\">#8470FF</font></td><td bgcolor=\"#8470FF\">rgb(132, 112, 255)</td></tr><tr><td><font color=\"LightSlateGray\">LightSlateGray</font></td><td><font color=\"#778899\">#778899</font></td><td bgcolor=\"#778899\">rgb(119, 136, 153)</td></tr><tr><td><font color=\"LightSteelBlue\">LightSteelBlue</font></td><td><font color=\"#B0C4DE\">#B0C4DE</font></td><td bgcolor=\"#B0C4DE\">rgb(176, 196, 222)</td></tr><tr><td><font color=\"LightYellow\">LightYellow</font></td><td><font color=\"#FFFFE0\">#FFFFE0</font></td><td bgcolor=\"#FFFFE0\">rgb(255, 255, 224)</td></tr><tr><td><font color=\"Lime\">Lime</font></td><td><font color=\"#00FF00\">#00FF00</font></td><td bgcolor=\"#00FF00\">rgb(0, 255, 0)</td></tr><tr><td><font color=\"LimeGreen\">LimeGreen</font></td><td><font color=\"#32CD32\">#32CD32</font></td><td bgcolor=\"#32CD32\">rgb(50, 205, 50)</td></tr><tr><td><font color=\"Linen\">Linen</font></td><td><font color=\"#FAF0E6\">#FAF0E6</font></td><td bgcolor=\"#FAF0E6\">rgb(250, 240, 230)</td></tr><tr><td><font color=\"Magenta\">Magenta</font></td><td><font color=\"#FF00FF\">#FF00FF</font></td><td bgcolor=\"#FF00FF\">rgb(255, 0, 255)</td></tr><tr><td><font color=\"Maroon\">Maroon</font></td><td><font color=\"#800000\">#800000</font></td><td bgcolor=\"#800000\">rgb(128, 0, 0)</td></tr><tr><td><font color=\"MediumAquaMarine\">MediumAquaMarine</font></td><td><font color=\"#66CDAA\">#66CDAA</font></td><td bgcolor=\"#66CDAA\">rgb(102, 205, 170)</td></tr><tr><td><font color=\"MediumBlue\">MediumBlue</font></td><td><font color=\"#0000CD\">#0000CD</font></td><td bgcolor=\"#0000CD\">rgb(0, 0, 205)</td></tr><tr><td><font color=\"MediumOrchid\">MediumOrchid</font></td><td><font color=\"#BA55D3\">#BA55D3</font></td><td bgcolor=\"#BA55D3\">rgb(186, 85, 211)</td></tr><tr><td><font color=\"MediumPurple\">MediumPurple</font></td><td><font color=\"#9370D8\">#9370D8</font></td><td bgcolor=\"#9370D8\">rgb(147, 112, 216)</td></tr><tr><td><font color=\"MediumSeaGreen\">MediumSeaGreen</font></td><td><font color=\"#3CB371\">#3CB371</font></td><td bgcolor=\"#3CB371\">rgb(60, 179, 113)</td></tr><tr><td><font color=\"MediumSlateBlue\">MediumSlateBlue</font></td><td><font color=\"#7B68EE\">#7B68EE</font></td><td bgcolor=\"#7B68EE\">rgb(123, 104, 238)</td></tr><tr><td><font color=\"MediumSpringGreen\">MediumSpringGreen</font></td><td><font color=\"#00FA9A\">#00FA9A</font></td><td bgcolor=\"#00FA9A\">rgb(0, 250, 154)</td></tr><tr><td><font color=\"MediumTurquoise\">MediumTurquoise</font></td><td><font color=\"#48D1CC\">#48D1CC</font></td><td bgcolor=\"#48D1CC\">rgb(72, 209, 204)</td></tr><tr><td><font color=\"MediumVioletRed\">MediumVioletRed</font></td><td><font color=\"#C71585\">#C71585</font></td><td bgcolor=\"#C71585\">rgb(199, 21, 133)</td></tr><tr><td><font color=\"MidnightBlue\">MidnightBlue</font></td><td><font color=\"#191970\">#191970</font></td><td bgcolor=\"#191970\">rgb(25, 25, 112)</td></tr><tr><td><font color=\"MintCream\">MintCream</font></td><td><font color=\"#F5FFFA\">#F5FFFA</font></td><td bgcolor=\"#F5FFFA\">rgb(245, 255, 250)</td></tr><tr><td><font color=\"MistyRose\">MistyRose</font></td><td><font color=\"#FFE4E1\">#FFE4E1</font></td><td bgcolor=\"#FFE4E1\">rgb(255, 228, 225)</td></tr><tr><td><font color=\"Moccasin\">Moccasin</font></td><td><font color=\"#FFE4B5\">#FFE4B5</font></td><td bgcolor=\"#FFE4B5\">rgb(255, 228, 181)</td></tr><tr><td><font color=\"NavajoWhite\">NavajoWhite</font></td><td><font color=\"#FFDEAD\">#FFDEAD</font></td><td bgcolor=\"#FFDEAD\">rgb(255, 222, 173)</td></tr><tr><td><font color=\"Navy\">Navy</font></td><td><font color=\"#000080\">#000080</font></td><td bgcolor=\"#000080\">rgb(0, 0, 128)</td></tr><tr><td><font color=\"OldLace\">OldLace</font></td><td><font color=\"#FDF5E6\">#FDF5E6</font></td><td bgcolor=\"#FDF5E6\">rgb(253, 245, 230)</td></tr><tr><td><font color=\"Olive\">Olive</font></td><td><font color=\"#808000\">#808000</font></td><td bgcolor=\"#808000\">rgb(128, 128, 0)</td></tr><tr><td><font color=\"OliveDrab\">OliveDrab</font></td><td><font color=\"#6B8E23\">#6B8E23</font></td><td bgcolor=\"#6B8E23\">rgb(107, 142, 35)</td></tr><tr><td><font color=\"Orange\">Orange</font></td><td><font color=\"#FFA500\">#FFA500</font></td><td bgcolor=\"#FFA500\">rgb(255, 165, 0)</td></tr><tr><td><font color=\"OrangeRed\">OrangeRed</font></td><td><font color=\"#FF4500\">#FF4500</font></td><td bgcolor=\"#FF4500\">rgb(255, 69, 0)</td></tr><tr><td><font color=\"Orchid\">Orchid</font></td><td><font color=\"#DA70D6\">#DA70D6</font></td><td bgcolor=\"#DA70D6\">rgb(218, 112, 214)</td></tr><tr><td><font color=\"PaleGoldenRod\">PaleGoldenRod</font></td><td><font color=\"#EEE8AA\">#EEE8AA</font></td><td bgcolor=\"#EEE8AA\">rgb(238, 232, 170)</td></tr><tr><td><font color=\"PaleGreen\">PaleGreen</font></td><td><font color=\"#98FB98\">#98FB98</font></td><td bgcolor=\"#98FB98\">rgb(152, 251, 152)</td></tr><tr><td><font color=\"PaleTurquoise\">PaleTurquoise</font></td><td><font color=\"#AFEEEE\">#AFEEEE</font></td><td bgcolor=\"#AFEEEE\">rgb(175, 238, 238)</td></tr><tr><td><font color=\"PaleVioletRed\">PaleVioletRed</font></td><td><font color=\"#D87093\">#D87093</font></td><td bgcolor=\"#D87093\">rgb(216, 112, 147)</td></tr><tr><td><font color=\"PapayaWhip\">PapayaWhip</font></td><td><font color=\"#FFEFD5\">#FFEFD5</font></td><td bgcolor=\"#FFEFD5\">rgb(255, 239, 213)</td></tr><tr><td><font color=\"PeachPuff\">PeachPuff</font></td><td><font color=\"#FFDAB9\">#FFDAB9</font></td><td bgcolor=\"#FFDAB9\">rgb(255, 218, 185)</td></tr><tr><td><font color=\"Peru\">Peru</font></td><td><font color=\"#CD853F\">#CD853F</font></td><td bgcolor=\"#CD853F\">rgb(205, 133, 63)</td></tr><tr><td><font color=\"Pink\">Pink</font></td><td><font color=\"#FFC0CB\">#FFC0CB</font></td><td bgcolor=\"#FFC0CB\">rgb(255, 192, 203)</td></tr><tr><td><font color=\"Plum\">Plum</font></td><td><font color=\"#DDA0DD\">#DDA0DD</font></td><td bgcolor=\"#DDA0DD\">rgb(221, 160, 221)</td></tr><tr><td><font color=\"PowderBlue\">PowderBlue</font></td><td><font color=\"#B0E0E6\">#B0E0E6</font></td><td bgcolor=\"#B0E0E6\">rgb(176, 224, 230)</td></tr><tr><td><font color=\"Purple\">Purple</font></td><td><font color=\"#800080\">#800080</font></td><td bgcolor=\"#800080\">rgb(128, 0, 128)</td></tr><tr><td><font color=\"Red\">Red</font></td><td><font color=\"#FF0000\">#FF0000</font></td><td bgcolor=\"#FF0000\">rgb(255, 0, 0)</td></tr><tr><td><font color=\"RosyBrown\">RosyBrown</font></td><td><font color=\"#BC8F8F\">#BC8F8F</font></td><td bgcolor=\"#BC8F8F\">rgb(188, 143, 143)</td></tr><tr><td><font color=\"RoyalBlue\">RoyalBlue</font></td><td><font color=\"#4169E1\">#4169E1</font></td><td bgcolor=\"#4169E1\">rgb(65, 105, 225)</td></tr><tr><td><font color=\"SaddleBrown\">SaddleBrown</font></td><td><font color=\"#8B4513\">#8B4513</font></td><td bgcolor=\"#8B4513\">rgb(139, 69, 19)</td></tr><tr><td><font color=\"Salmon\">Salmon</font></td><td><font color=\"#FA8072\">#FA8072</font></td><td bgcolor=\"#FA8072\">rgb(250, 128, 114)</td></tr><tr><td><font color=\"SandyBrown\">SandyBrown</font></td><td><font color=\"#F4A460\">#F4A460</font></td><td bgcolor=\"#F4A460\">rgb(244, 164, 96)</td></tr><tr><td><font color=\"SeaGreen\">SeaGreen</font></td><td><font color=\"#2E8B57\">#2E8B57</font></td><td bgcolor=\"#2E8B57\">rgb(46, 139, 87)</td></tr><tr><td><font color=\"SeaShell\">SeaShell</font></td><td><font color=\"#FFF5EE\">#FFF5EE</font></td><td bgcolor=\"#FFF5EE\">rgb(255, 245, 238)</td></tr><tr><td><font color=\"Sienna\">Sienna</font></td><td><font color=\"#A0522D\">#A0522D</font></td><td bgcolor=\"#A0522D\">rgb(160, 82, 45)</td></tr><tr><td><font color=\"Silver\">Silver</font></td><td><font color=\"#C0C0C0\">#C0C0C0</font></td><td bgcolor=\"#C0C0C0\">rgb(192, 192, 192)</td></tr><tr><td><font color=\"SkyBlue\">SkyBlue</font></td><td><font color=\"#87CEEB\">#87CEEB</font></td><td bgcolor=\"#87CEEB\">rgb(135, 206, 235)</td></tr><tr><td><font color=\"SlateBlue\">SlateBlue</font></td><td><font color=\"#6A5ACD\">#6A5ACD</font></td><td bgcolor=\"#6A5ACD\">rgb(106, 90, 205)</td></tr><tr><td><font color=\"SlateGray\">SlateGray</font></td><td><font color=\"#708090\">#708090</font></td><td bgcolor=\"#708090\">rgb(112, 128, 144)</td></tr><tr><td><font color=\"Snow\">Snow</font></td><td><font color=\"#FFFAFA\">#FFFAFA</font></td><td bgcolor=\"#FFFAFA\">rgb(255, 250, 250)</td></tr><tr><td><font color=\"SpringGreen\">SpringGreen</font></td><td><font color=\"#00FF7F\">#00FF7F</font></td><td bgcolor=\"#00FF7F\">rgb(0, 255, 127)</td></tr><tr><td><font color=\"SteelBlue\">SteelBlue</font></td><td><font color=\"#4682B4\">#4682B4</font></td><td bgcolor=\"#4682B4\">rgb(70, 130, 180)</td></tr><tr><td><font color=\"Tan\">Tan</font></td><td><font color=\"#D2B48C\">#D2B48C</font></td><td bgcolor=\"#D2B48C\">rgb(210, 180, 140)</td></tr><tr><td><font color=\"Teal\">Teal</font></td><td><font color=\"#008080\">#008080</font></td><td bgcolor=\"#008080\">rgb(0, 128, 128)</td></tr><tr><td><font color=\"Thistle\">Thistle</font></td><td><font color=\"#D8BFD8\">#D8BFD8</font></td><td bgcolor=\"#D8BFD8\">rgb(216, 191, 216)</td></tr><tr><td><font color=\"Tomato\">Tomato</font></td><td><font color=\"#FF6347\">#FF6347</font></td><td bgcolor=\"#FF6347\">rgb(255, 99, 71)</td></tr><tr><td><font color=\"Turquoise\">Turquoise</font></td><td><font color=\"#40E0D0\">#40E0D0</font></td><td bgcolor=\"#40E0D0\">rgb(64, 224, 208)</td></tr><tr><td><font color=\"Violet\">Violet</font></td><td><font color=\"#EE82EE\">#EE82EE</font></td><td bgcolor=\"#EE82EE\">rgb(238, 130, 238)</td></tr><tr><td><font color=\"VioletRed\">VioletRed</font></td><td><font color=\"#D02090\">#D02090</font></td><td bgcolor=\"#D02090\">rgb(208, 32, 144)</td></tr><tr><td><font color=\"Wheat\">Wheat</font></td><td><font color=\"#F5DEB3\">#F5DEB3</font></td><td bgcolor=\"#F5DEB3\">rgb(245, 222, 179)</td></tr><tr><td><font color=\"White\">White</font></td><td><font color=\"#FFFFFF\">#FFFFFF</font></td><td bgcolor=\"#FFFFFF\">rgb(255, 255, 255)</td></tr><tr><td><font color=\"WhiteSmoke\">WhiteSmoke</font></td><td><font color=\"#F5F5F5\">#F5F5F5</font></td><td bgcolor=\"#F5F5F5\">rgb(245, 245, 245)</td></tr><tr><td><font color=\"Yellow\">Yellow</font></td><td><font color=\"#FFFF00\">#FFFF00</font></td><td bgcolor=\"#FFFF00\">rgb(255, 255, 0)</td></tr><tr><td><font color=\"YellowGreen\">YellowGreen</font></td><td><font color=\"#9ACD32\">#9ACD32</font></td><td bgcolor=\"#9ACD32\">rgb(154, 205, 50)</td></tr></tbody></table>\n\n<!-- more -->","source":"_posts/通用/常用RGB颜色.md","raw":"---\ntitle: 常用RGB颜色\ndate: 2016-06-24 10:26:30\ntags: RGB颜色\ncategories: 通用\n---\n\n### 常用RGB颜色列表###\n\n\n<table><tbody><tr><th>颜色名</th><th>十六进制颜色值</th><th>颜色</th></tr><tr><td><font color=\"AliceBlue\">AliceBlue</font></td><td><font color=\"#F0F8FF\">#F0F8FF</font></td><td bgcolor=\"#F0F8FF\">rgb(240, 248, 255)</td></tr><tr><td><font color=\"AntiqueWhite\">AntiqueWhite</font></td><td><font color=\"#FAEBD7\">#FAEBD7</font></td><td bgcolor=\"#FAEBD7\">rgb(250, 235, 215)</td></tr><tr><td><font color=\"Aqua\">Aqua</font></td><td><font color=\"#00FFFF\">#00FFFF</font></td><td bgcolor=\"#00FFFF\">rgb(0, 255, 255)</td></tr><tr><td><font color=\"Aquamarine\">Aquamarine</font></td><td><font color=\"#7FFFD4\">#7FFFD4</font></td><td bgcolor=\"#7FFFD4\">rgb(127, 255, 212)</td></tr><tr><td><font color=\"Azure\">Azure</font></td><td><font color=\"#F0FFFF\">#F0FFFF</font></td><td bgcolor=\"#F0FFFF\">rgb(240, 255, 255)</td></tr><tr><td><font color=\"Beige\">Beige</font></td><td><font color=\"#F5F5DC\">#F5F5DC</font></td><td bgcolor=\"#F5F5DC\">rgb(245, 245, 220)</td></tr><tr><td><font color=\"Bisque\">Bisque</font></td><td><font color=\"#FFE4C4\">#FFE4C4</font></td><td bgcolor=\"#FFE4C4\">rgb(255, 228, 196)</td></tr><tr><td><font color=\"Black\">Black</font></td><td><font color=\"#000000\">#000000</font></td><td bgcolor=\"#000000\">rgb(0, 0, 0)</td></tr><tr><td><font color=\"BlanchedAlmond\">BlanchedAlmond</font></td><td><font color=\"#FFEBCD\">#FFEBCD</font></td><td bgcolor=\"#FFEBCD\">rgb(255, 235, 205)</td></tr><tr><td><font color=\"Blue\">Blue</font></td><td><font color=\"#0000FF\">#0000FF</font></td><td bgcolor=\"#0000FF\">rgb(0, 0, 255)</td></tr><tr><td><font color=\"BlueViolet\">BlueViolet</font></td><td><font color=\"#8A2BE2\">#8A2BE2</font></td><td bgcolor=\"#8A2BE2\">rgb(138, 43, 226)</td></tr><tr><td><font color=\"Brown\">Brown</font></td><td><font color=\"#A52A2A\">#A52A2A</font></td><td bgcolor=\"#A52A2A\">rgb(165, 42, 42)</td></tr><tr><td><font color=\"BurlyWood\">BurlyWood</font></td><td><font color=\"#DEB887\">#DEB887</font></td><td bgcolor=\"#DEB887\">rgb(222, 184, 135)</td></tr><tr><td><font color=\"CadetBlue\">CadetBlue</font></td><td><font color=\"#5F9EA0\">#5F9EA0</font></td><td bgcolor=\"#5F9EA0\">rgb(95, 158, 160)</td></tr><tr><td><font color=\"Chartreuse\">Chartreuse</font></td><td><font color=\"#7FFF00\">#7FFF00</font></td><td bgcolor=\"#7FFF00\">rgb(127, 255, 0)</td></tr><tr><td><font color=\"Chocolate\">Chocolate</font></td><td><font color=\"#D2691E\">#D2691E</font></td><td bgcolor=\"#D2691E\">rgb(210, 105, 30)</td></tr><tr><td><font color=\"Coral\">Coral</font></td><td><font color=\"#FF7F50\">#FF7F50</font></td><td bgcolor=\"#FF7F50\">rgb(255, 127, 80)</td></tr><tr><td><font color=\"CornflowerBlue\">CornflowerBlue</font></td><td><font color=\"#6495ED\">#6495ED</font></td><td bgcolor=\"#6495ED\">rgb(100, 149, 237)</td></tr><tr><td><font color=\"Cornsilk\">Cornsilk</font></td><td><font color=\"#FFF8DC\">#FFF8DC</font></td><td bgcolor=\"#FFF8DC\">rgb(255, 248, 220)</td></tr><tr><td><font color=\"Crimson\">Crimson</font></td><td><font color=\"#DC143C\">#DC143C</font></td><td bgcolor=\"#DC143C\">rgb(220, 20, 60)</td></tr><tr><td><font color=\"Cyan\">Cyan</font></td><td><font color=\"#00FFFF\">#00FFFF</font></td><td bgcolor=\"#00FFFF\">rgb(0, 255, 255)</td></tr><tr><td><font color=\"DarkBlue\">DarkBlue</font></td><td><font color=\"#00008B\">#00008B</font></td><td bgcolor=\"#00008B\">rgb(0, 0, 139)</td></tr><tr><td><font color=\"DarkCyan\">DarkCyan</font></td><td><font color=\"#008B8B\">#008B8B</font></td><td bgcolor=\"#008B8B\">rgb(0, 139, 139)</td></tr><tr><td><font color=\"DarkGoldenRod\">DarkGoldenRod</font></td><td><font color=\"#B8860B\">#B8860B</font></td><td bgcolor=\"#B8860B\">rgb(184, 134, 11)</td></tr><tr><td><font color=\"DarkGray\">DarkGray</font></td><td><font color=\"#A9A9A9\">#A9A9A9</font></td><td bgcolor=\"#A9A9A9\">rgb(169, 169, 169)</td></tr><tr><td><font color=\"DarkGreen\">DarkGreen</font></td><td><font color=\"#006400\">#006400</font></td><td bgcolor=\"#006400\">rgb(0, 100, 0)</td></tr><tr><td><font color=\"DarkKhaki\">DarkKhaki</font></td><td><font color=\"#BDB76B\">#BDB76B</font></td><td bgcolor=\"#BDB76B\">rgb(189, 183, 107)</td></tr><tr><td><font color=\"DarkMagenta\">DarkMagenta</font></td><td><font color=\"#8B008B\">#8B008B</font></td><td bgcolor=\"#8B008B\">rgb(139, 0, 139)</td></tr><tr><td><font color=\"DarkOliveGreen\">DarkOliveGreen</font></td><td><font color=\"#556B2F\">#556B2F</font></td><td bgcolor=\"#556B2F\">rgb(85, 107, 47)</td></tr><tr><td><font color=\"Darkorange\">Darkorange</font></td><td><font color=\"#FF8C00\">#FF8C00</font></td><td bgcolor=\"#FF8C00\">rgb(255, 140, 0)</td></tr><tr><td><font color=\"DarkOrchid\">DarkOrchid</font></td><td><font color=\"#9932CC\">#9932CC</font></td><td bgcolor=\"#9932CC\">rgb(153, 50, 204)</td></tr><tr><td><font color=\"DarkRed\">DarkRed</font></td><td><font color=\"#8B0000\">#8B0000</font></td><td bgcolor=\"#8B0000\">rgb(139, 0, 0)</td></tr><tr><td><font color=\"DarkSalmon\">DarkSalmon</font></td><td><font color=\"#E9967A\">#E9967A</font></td><td bgcolor=\"#E9967A\">rgb(233, 150, 122)</td></tr><tr><td><font color=\"DarkSeaGreen\">DarkSeaGreen</font></td><td><font color=\"#8FBC8F\">#8FBC8F</font></td><td bgcolor=\"#8FBC8F\">rgb(143, 188, 143)</td></tr><tr><td><font color=\"DarkSlateBlue\">DarkSlateBlue</font></td><td><font color=\"#483D8B\">#483D8B</font></td><td bgcolor=\"#483D8B\">rgb(72, 61, 139)</td></tr><tr><td><font color=\"DarkSlateGray\">DarkSlateGray</font></td><td><font color=\"#2F4F4F\">#2F4F4F</font></td><td bgcolor=\"#2F4F4F\">rgb(47, 79, 79)</td></tr><tr><td><font color=\"DarkTurquoise\">DarkTurquoise</font></td><td><font color=\"#00CED1\">#00CED1</font></td><td bgcolor=\"#00CED1\">rgb(0, 206, 209)</td></tr><tr><td><font color=\"DarkViolet\">DarkViolet</font></td><td><font color=\"#9400D3\">#9400D3</font></td><td bgcolor=\"#9400D3\">rgb(148, 0, 211)</td></tr><tr><td><font color=\"DeepPink\">DeepPink</font></td><td><font color=\"#FF1493\">#FF1493</font></td><td bgcolor=\"#FF1493\">rgb(255, 20, 147)</td></tr><tr><td><font color=\"DeepSkyBlue\">DeepSkyBlue</font></td><td><font color=\"#00BFFF\">#00BFFF</font></td><td bgcolor=\"#00BFFF\">rgb(0, 191, 255)</td></tr><tr><td><font color=\"DimGray\">DimGray</font></td><td><font color=\"#696969\">#696969</font></td><td bgcolor=\"#696969\">rgb(105, 105, 105)</td></tr><tr><td><font color=\"DodgerBlue\">DodgerBlue</font></td><td><font color=\"#1E90FF\">#1E90FF</font></td><td bgcolor=\"#1E90FF\">rgb(30, 144, 255)</td></tr><tr><td><font color=\"Feldspar\">Feldspar</font></td><td><font color=\"#D19275\">#D19275</font></td><td bgcolor=\"#D19275\">rgb(209, 146, 117)</td></tr><tr><td><font color=\"FireBrick\">FireBrick</font></td><td><font color=\"#B22222\">#B22222</font></td><td bgcolor=\"#B22222\">rgb(178, 34, 34)</td></tr><tr><td><font color=\"FloralWhite\">FloralWhite</font></td><td><font color=\"#FFFAF0\">#FFFAF0</font></td><td bgcolor=\"#FFFAF0\">rgb(255, 250, 240)</td></tr><tr><td><font color=\"ForestGreen\">ForestGreen</font></td><td><font color=\"#228B22\">#228B22</font></td><td bgcolor=\"#228B22\">rgb(34, 139, 34)</td></tr><tr><td><font color=\"Fuchsia\">Fuchsia</font></td><td><font color=\"#FF00FF\">#FF00FF</font></td><td bgcolor=\"#FF00FF\">rgb(255, 0, 255)</td></tr><tr><td><font color=\"Gainsboro\">Gainsboro</font></td><td><font color=\"#DCDCDC\">#DCDCDC</font></td><td bgcolor=\"#DCDCDC\">rgb(220, 220, 220)</td></tr><tr><td><font color=\"GhostWhite\">GhostWhite</font></td><td><font color=\"#F8F8FF\">#F8F8FF</font></td><td bgcolor=\"#F8F8FF\">rgb(248, 248, 255)</td></tr><tr><td><font color=\"Gold\">Gold</font></td><td><font color=\"#FFD700\">#FFD700</font></td><td bgcolor=\"#FFD700\">rgb(255, 215, 0)</td></tr><tr><td><font color=\"GoldenRod\">GoldenRod</font></td><td><font color=\"#DAA520\">#DAA520</font></td><td bgcolor=\"#DAA520\">rgb(218, 165, 32)</td></tr><tr><td><font color=\"Gray\">Gray</font></td><td><font color=\"#808080\">#808080</font></td><td bgcolor=\"#808080\">rgb(128, 128, 128)</td></tr><tr><td><font color=\"Green\">Green</font></td><td><font color=\"#008000\">#008000</font></td><td bgcolor=\"#008000\">rgb(0, 128, 0)</td></tr><tr><td><font color=\"GreenYellow\">GreenYellow</font></td><td><font color=\"#ADFF2F\">#ADFF2F</font></td><td bgcolor=\"#ADFF2F\">rgb(173, 255, 47)</td></tr><tr><td><font color=\"HoneyDew\">HoneyDew</font></td><td><font color=\"#F0FFF0\">#F0FFF0</font></td><td bgcolor=\"#F0FFF0\">rgb(240, 255, 240)</td></tr><tr><td><font color=\"HotPink\">HotPink</font></td><td><font color=\"#FF69B4\">#FF69B4</font></td><td bgcolor=\"#FF69B4\">rgb(255, 105, 180)</td></tr><tr><td><font color=\"IndianRed\">IndianRed</font></td><td><font color=\"#CD5C5C\">#CD5C5C</font></td><td bgcolor=\"#CD5C5C\">rgb(205, 92, 92)</td></tr><tr><td><font color=\"Indigo\">Indigo</font></td><td><font color=\"#4B0082\">#4B0082</font></td><td bgcolor=\"#4B0082\">rgb(75, 0, 130)</td></tr><tr><td><font color=\"Ivory\">Ivory</font></td><td><font color=\"#FFFFF0\">#FFFFF0</font></td><td bgcolor=\"#FFFFF0\">rgb(255, 255, 240)</td></tr><tr><td><font color=\"Khaki\">Khaki</font></td><td><font color=\"#F0E68C\">#F0E68C</font></td><td bgcolor=\"#F0E68C\">rgb(240, 230, 140)</td></tr><tr><td><font color=\"Lavender\">Lavender</font></td><td><font color=\"#E6E6FA\">#E6E6FA</font></td><td bgcolor=\"#E6E6FA\">rgb(230, 230, 250)</td></tr><tr><td><font color=\"LavenderBlush\">LavenderBlush</font></td><td><font color=\"#FFF0F5\">#FFF0F5</font></td><td bgcolor=\"#FFF0F5\">rgb(255, 240, 245)</td></tr><tr><td><font color=\"LawnGreen\">LawnGreen</font></td><td><font color=\"#7CFC00\">#7CFC00</font></td><td bgcolor=\"#7CFC00\">rgb(124, 252, 0)</td></tr><tr><td><font color=\"LemonChiffon\">LemonChiffon</font></td><td><font color=\"#FFFACD\">#FFFACD</font></td><td bgcolor=\"#FFFACD\">rgb(255, 250, 205)</td></tr><tr><td><font color=\"LightBlue\">LightBlue</font></td><td><font color=\"#ADD8E6\">#ADD8E6</font></td><td bgcolor=\"#ADD8E6\">rgb(173, 216, 230)</td></tr><tr><td><font color=\"LightCoral\">LightCoral</font></td><td><font color=\"#F08080\">#F08080</font></td><td bgcolor=\"#F08080\">rgb(240, 128, 128)</td></tr><tr><td><font color=\"LightCyan\">LightCyan</font></td><td><font color=\"#E0FFFF\">#E0FFFF</font></td><td bgcolor=\"#E0FFFF\">rgb(224, 255, 255)</td></tr><tr><td><font color=\"LightGoldenRodYellow\">LightGoldenRodYellow</font></td><td><font color=\"#FAFAD2\">#FAFAD2</font></td><td bgcolor=\"#FAFAD2\">rgb(250, 250, 210)</td></tr><tr><td><font color=\"LightGrey\">LightGrey</font></td><td><font color=\"#D3D3D3\">#D3D3D3</font></td><td bgcolor=\"#D3D3D3\">rgb(211, 211, 211)</td></tr><tr><td><font color=\"LightGreen\">LightGreen</font></td><td><font color=\"#90EE90\">#90EE90</font></td><td bgcolor=\"#90EE90\">rgb(144, 238, 144)</td></tr><tr><td><font color=\"LightPink\">LightPink</font></td><td><font color=\"#FFB6C1\">#FFB6C1</font></td><td bgcolor=\"#FFB6C1\">rgb(255, 182, 193)</td></tr><tr><td><font color=\"LightSalmon\">LightSalmon</font></td><td><font color=\"#FFA07A\">#FFA07A</font></td><td bgcolor=\"#FFA07A\">rgb(255, 160, 122)</td></tr><tr><td><font color=\"LightSeaGreen\">LightSeaGreen</font></td><td><font color=\"#20B2AA\">#20B2AA</font></td><td bgcolor=\"#20B2AA\">rgb(32, 178, 170)</td></tr><tr><td><font color=\"LightSkyBlue\">LightSkyBlue</font></td><td><font color=\"#87CEFA\">#87CEFA</font></td><td bgcolor=\"#87CEFA\">rgb(135, 206, 250)</td></tr><tr><td><font color=\"LightSlateBlue\">LightSlateBlue</font></td><td><font color=\"#8470FF\">#8470FF</font></td><td bgcolor=\"#8470FF\">rgb(132, 112, 255)</td></tr><tr><td><font color=\"LightSlateGray\">LightSlateGray</font></td><td><font color=\"#778899\">#778899</font></td><td bgcolor=\"#778899\">rgb(119, 136, 153)</td></tr><tr><td><font color=\"LightSteelBlue\">LightSteelBlue</font></td><td><font color=\"#B0C4DE\">#B0C4DE</font></td><td bgcolor=\"#B0C4DE\">rgb(176, 196, 222)</td></tr><tr><td><font color=\"LightYellow\">LightYellow</font></td><td><font color=\"#FFFFE0\">#FFFFE0</font></td><td bgcolor=\"#FFFFE0\">rgb(255, 255, 224)</td></tr><tr><td><font color=\"Lime\">Lime</font></td><td><font color=\"#00FF00\">#00FF00</font></td><td bgcolor=\"#00FF00\">rgb(0, 255, 0)</td></tr><tr><td><font color=\"LimeGreen\">LimeGreen</font></td><td><font color=\"#32CD32\">#32CD32</font></td><td bgcolor=\"#32CD32\">rgb(50, 205, 50)</td></tr><tr><td><font color=\"Linen\">Linen</font></td><td><font color=\"#FAF0E6\">#FAF0E6</font></td><td bgcolor=\"#FAF0E6\">rgb(250, 240, 230)</td></tr><tr><td><font color=\"Magenta\">Magenta</font></td><td><font color=\"#FF00FF\">#FF00FF</font></td><td bgcolor=\"#FF00FF\">rgb(255, 0, 255)</td></tr><tr><td><font color=\"Maroon\">Maroon</font></td><td><font color=\"#800000\">#800000</font></td><td bgcolor=\"#800000\">rgb(128, 0, 0)</td></tr><tr><td><font color=\"MediumAquaMarine\">MediumAquaMarine</font></td><td><font color=\"#66CDAA\">#66CDAA</font></td><td bgcolor=\"#66CDAA\">rgb(102, 205, 170)</td></tr><tr><td><font color=\"MediumBlue\">MediumBlue</font></td><td><font color=\"#0000CD\">#0000CD</font></td><td bgcolor=\"#0000CD\">rgb(0, 0, 205)</td></tr><tr><td><font color=\"MediumOrchid\">MediumOrchid</font></td><td><font color=\"#BA55D3\">#BA55D3</font></td><td bgcolor=\"#BA55D3\">rgb(186, 85, 211)</td></tr><tr><td><font color=\"MediumPurple\">MediumPurple</font></td><td><font color=\"#9370D8\">#9370D8</font></td><td bgcolor=\"#9370D8\">rgb(147, 112, 216)</td></tr><tr><td><font color=\"MediumSeaGreen\">MediumSeaGreen</font></td><td><font color=\"#3CB371\">#3CB371</font></td><td bgcolor=\"#3CB371\">rgb(60, 179, 113)</td></tr><tr><td><font color=\"MediumSlateBlue\">MediumSlateBlue</font></td><td><font color=\"#7B68EE\">#7B68EE</font></td><td bgcolor=\"#7B68EE\">rgb(123, 104, 238)</td></tr><tr><td><font color=\"MediumSpringGreen\">MediumSpringGreen</font></td><td><font color=\"#00FA9A\">#00FA9A</font></td><td bgcolor=\"#00FA9A\">rgb(0, 250, 154)</td></tr><tr><td><font color=\"MediumTurquoise\">MediumTurquoise</font></td><td><font color=\"#48D1CC\">#48D1CC</font></td><td bgcolor=\"#48D1CC\">rgb(72, 209, 204)</td></tr><tr><td><font color=\"MediumVioletRed\">MediumVioletRed</font></td><td><font color=\"#C71585\">#C71585</font></td><td bgcolor=\"#C71585\">rgb(199, 21, 133)</td></tr><tr><td><font color=\"MidnightBlue\">MidnightBlue</font></td><td><font color=\"#191970\">#191970</font></td><td bgcolor=\"#191970\">rgb(25, 25, 112)</td></tr><tr><td><font color=\"MintCream\">MintCream</font></td><td><font color=\"#F5FFFA\">#F5FFFA</font></td><td bgcolor=\"#F5FFFA\">rgb(245, 255, 250)</td></tr><tr><td><font color=\"MistyRose\">MistyRose</font></td><td><font color=\"#FFE4E1\">#FFE4E1</font></td><td bgcolor=\"#FFE4E1\">rgb(255, 228, 225)</td></tr><tr><td><font color=\"Moccasin\">Moccasin</font></td><td><font color=\"#FFE4B5\">#FFE4B5</font></td><td bgcolor=\"#FFE4B5\">rgb(255, 228, 181)</td></tr><tr><td><font color=\"NavajoWhite\">NavajoWhite</font></td><td><font color=\"#FFDEAD\">#FFDEAD</font></td><td bgcolor=\"#FFDEAD\">rgb(255, 222, 173)</td></tr><tr><td><font color=\"Navy\">Navy</font></td><td><font color=\"#000080\">#000080</font></td><td bgcolor=\"#000080\">rgb(0, 0, 128)</td></tr><tr><td><font color=\"OldLace\">OldLace</font></td><td><font color=\"#FDF5E6\">#FDF5E6</font></td><td bgcolor=\"#FDF5E6\">rgb(253, 245, 230)</td></tr><tr><td><font color=\"Olive\">Olive</font></td><td><font color=\"#808000\">#808000</font></td><td bgcolor=\"#808000\">rgb(128, 128, 0)</td></tr><tr><td><font color=\"OliveDrab\">OliveDrab</font></td><td><font color=\"#6B8E23\">#6B8E23</font></td><td bgcolor=\"#6B8E23\">rgb(107, 142, 35)</td></tr><tr><td><font color=\"Orange\">Orange</font></td><td><font color=\"#FFA500\">#FFA500</font></td><td bgcolor=\"#FFA500\">rgb(255, 165, 0)</td></tr><tr><td><font color=\"OrangeRed\">OrangeRed</font></td><td><font color=\"#FF4500\">#FF4500</font></td><td bgcolor=\"#FF4500\">rgb(255, 69, 0)</td></tr><tr><td><font color=\"Orchid\">Orchid</font></td><td><font color=\"#DA70D6\">#DA70D6</font></td><td bgcolor=\"#DA70D6\">rgb(218, 112, 214)</td></tr><tr><td><font color=\"PaleGoldenRod\">PaleGoldenRod</font></td><td><font color=\"#EEE8AA\">#EEE8AA</font></td><td bgcolor=\"#EEE8AA\">rgb(238, 232, 170)</td></tr><tr><td><font color=\"PaleGreen\">PaleGreen</font></td><td><font color=\"#98FB98\">#98FB98</font></td><td bgcolor=\"#98FB98\">rgb(152, 251, 152)</td></tr><tr><td><font color=\"PaleTurquoise\">PaleTurquoise</font></td><td><font color=\"#AFEEEE\">#AFEEEE</font></td><td bgcolor=\"#AFEEEE\">rgb(175, 238, 238)</td></tr><tr><td><font color=\"PaleVioletRed\">PaleVioletRed</font></td><td><font color=\"#D87093\">#D87093</font></td><td bgcolor=\"#D87093\">rgb(216, 112, 147)</td></tr><tr><td><font color=\"PapayaWhip\">PapayaWhip</font></td><td><font color=\"#FFEFD5\">#FFEFD5</font></td><td bgcolor=\"#FFEFD5\">rgb(255, 239, 213)</td></tr><tr><td><font color=\"PeachPuff\">PeachPuff</font></td><td><font color=\"#FFDAB9\">#FFDAB9</font></td><td bgcolor=\"#FFDAB9\">rgb(255, 218, 185)</td></tr><tr><td><font color=\"Peru\">Peru</font></td><td><font color=\"#CD853F\">#CD853F</font></td><td bgcolor=\"#CD853F\">rgb(205, 133, 63)</td></tr><tr><td><font color=\"Pink\">Pink</font></td><td><font color=\"#FFC0CB\">#FFC0CB</font></td><td bgcolor=\"#FFC0CB\">rgb(255, 192, 203)</td></tr><tr><td><font color=\"Plum\">Plum</font></td><td><font color=\"#DDA0DD\">#DDA0DD</font></td><td bgcolor=\"#DDA0DD\">rgb(221, 160, 221)</td></tr><tr><td><font color=\"PowderBlue\">PowderBlue</font></td><td><font color=\"#B0E0E6\">#B0E0E6</font></td><td bgcolor=\"#B0E0E6\">rgb(176, 224, 230)</td></tr><tr><td><font color=\"Purple\">Purple</font></td><td><font color=\"#800080\">#800080</font></td><td bgcolor=\"#800080\">rgb(128, 0, 128)</td></tr><tr><td><font color=\"Red\">Red</font></td><td><font color=\"#FF0000\">#FF0000</font></td><td bgcolor=\"#FF0000\">rgb(255, 0, 0)</td></tr><tr><td><font color=\"RosyBrown\">RosyBrown</font></td><td><font color=\"#BC8F8F\">#BC8F8F</font></td><td bgcolor=\"#BC8F8F\">rgb(188, 143, 143)</td></tr><tr><td><font color=\"RoyalBlue\">RoyalBlue</font></td><td><font color=\"#4169E1\">#4169E1</font></td><td bgcolor=\"#4169E1\">rgb(65, 105, 225)</td></tr><tr><td><font color=\"SaddleBrown\">SaddleBrown</font></td><td><font color=\"#8B4513\">#8B4513</font></td><td bgcolor=\"#8B4513\">rgb(139, 69, 19)</td></tr><tr><td><font color=\"Salmon\">Salmon</font></td><td><font color=\"#FA8072\">#FA8072</font></td><td bgcolor=\"#FA8072\">rgb(250, 128, 114)</td></tr><tr><td><font color=\"SandyBrown\">SandyBrown</font></td><td><font color=\"#F4A460\">#F4A460</font></td><td bgcolor=\"#F4A460\">rgb(244, 164, 96)</td></tr><tr><td><font color=\"SeaGreen\">SeaGreen</font></td><td><font color=\"#2E8B57\">#2E8B57</font></td><td bgcolor=\"#2E8B57\">rgb(46, 139, 87)</td></tr><tr><td><font color=\"SeaShell\">SeaShell</font></td><td><font color=\"#FFF5EE\">#FFF5EE</font></td><td bgcolor=\"#FFF5EE\">rgb(255, 245, 238)</td></tr><tr><td><font color=\"Sienna\">Sienna</font></td><td><font color=\"#A0522D\">#A0522D</font></td><td bgcolor=\"#A0522D\">rgb(160, 82, 45)</td></tr><tr><td><font color=\"Silver\">Silver</font></td><td><font color=\"#C0C0C0\">#C0C0C0</font></td><td bgcolor=\"#C0C0C0\">rgb(192, 192, 192)</td></tr><tr><td><font color=\"SkyBlue\">SkyBlue</font></td><td><font color=\"#87CEEB\">#87CEEB</font></td><td bgcolor=\"#87CEEB\">rgb(135, 206, 235)</td></tr><tr><td><font color=\"SlateBlue\">SlateBlue</font></td><td><font color=\"#6A5ACD\">#6A5ACD</font></td><td bgcolor=\"#6A5ACD\">rgb(106, 90, 205)</td></tr><tr><td><font color=\"SlateGray\">SlateGray</font></td><td><font color=\"#708090\">#708090</font></td><td bgcolor=\"#708090\">rgb(112, 128, 144)</td></tr><tr><td><font color=\"Snow\">Snow</font></td><td><font color=\"#FFFAFA\">#FFFAFA</font></td><td bgcolor=\"#FFFAFA\">rgb(255, 250, 250)</td></tr><tr><td><font color=\"SpringGreen\">SpringGreen</font></td><td><font color=\"#00FF7F\">#00FF7F</font></td><td bgcolor=\"#00FF7F\">rgb(0, 255, 127)</td></tr><tr><td><font color=\"SteelBlue\">SteelBlue</font></td><td><font color=\"#4682B4\">#4682B4</font></td><td bgcolor=\"#4682B4\">rgb(70, 130, 180)</td></tr><tr><td><font color=\"Tan\">Tan</font></td><td><font color=\"#D2B48C\">#D2B48C</font></td><td bgcolor=\"#D2B48C\">rgb(210, 180, 140)</td></tr><tr><td><font color=\"Teal\">Teal</font></td><td><font color=\"#008080\">#008080</font></td><td bgcolor=\"#008080\">rgb(0, 128, 128)</td></tr><tr><td><font color=\"Thistle\">Thistle</font></td><td><font color=\"#D8BFD8\">#D8BFD8</font></td><td bgcolor=\"#D8BFD8\">rgb(216, 191, 216)</td></tr><tr><td><font color=\"Tomato\">Tomato</font></td><td><font color=\"#FF6347\">#FF6347</font></td><td bgcolor=\"#FF6347\">rgb(255, 99, 71)</td></tr><tr><td><font color=\"Turquoise\">Turquoise</font></td><td><font color=\"#40E0D0\">#40E0D0</font></td><td bgcolor=\"#40E0D0\">rgb(64, 224, 208)</td></tr><tr><td><font color=\"Violet\">Violet</font></td><td><font color=\"#EE82EE\">#EE82EE</font></td><td bgcolor=\"#EE82EE\">rgb(238, 130, 238)</td></tr><tr><td><font color=\"VioletRed\">VioletRed</font></td><td><font color=\"#D02090\">#D02090</font></td><td bgcolor=\"#D02090\">rgb(208, 32, 144)</td></tr><tr><td><font color=\"Wheat\">Wheat</font></td><td><font color=\"#F5DEB3\">#F5DEB3</font></td><td bgcolor=\"#F5DEB3\">rgb(245, 222, 179)</td></tr><tr><td><font color=\"White\">White</font></td><td><font color=\"#FFFFFF\">#FFFFFF</font></td><td bgcolor=\"#FFFFFF\">rgb(255, 255, 255)</td></tr><tr><td><font color=\"WhiteSmoke\">WhiteSmoke</font></td><td><font color=\"#F5F5F5\">#F5F5F5</font></td><td bgcolor=\"#F5F5F5\">rgb(245, 245, 245)</td></tr><tr><td><font color=\"Yellow\">Yellow</font></td><td><font color=\"#FFFF00\">#FFFF00</font></td><td bgcolor=\"#FFFF00\">rgb(255, 255, 0)</td></tr><tr><td><font color=\"YellowGreen\">YellowGreen</font></td><td><font color=\"#9ACD32\">#9ACD32</font></td><td bgcolor=\"#9ACD32\">rgb(154, 205, 50)</td></tr></tbody></table>\n\n<!-- more -->","slug":"通用/常用RGB颜色","published":1,"updated":"2016-06-24T02:28:26.612Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qmy004zkgaemopht8nx","content":"<h3 id=\"常用RGB颜色列表\"><a href=\"#常用RGB颜色列表\" class=\"headerlink\" title=\"常用RGB颜色列表\"></a>常用RGB颜色列表</h3><table><tbody><tr><th>颜色名</th><th>十六进制颜色值</th><th>颜色</th></tr><tr><td><font color=\"AliceBlue\">AliceBlue</font></td><td><font color=\"#F0F8FF\">#F0F8FF</font></td><td bgcolor=\"#F0F8FF\">rgb(240, 248, 255)</td></tr><tr><td><font color=\"AntiqueWhite\">AntiqueWhite</font></td><td><font color=\"#FAEBD7\">#FAEBD7</font></td><td bgcolor=\"#FAEBD7\">rgb(250, 235, 215)</td></tr><tr><td><font color=\"Aqua\">Aqua</font></td><td><font color=\"#00FFFF\">#00FFFF</font></td><td bgcolor=\"#00FFFF\">rgb(0, 255, 255)</td></tr><tr><td><font color=\"Aquamarine\">Aquamarine</font></td><td><font color=\"#7FFFD4\">#7FFFD4</font></td><td bgcolor=\"#7FFFD4\">rgb(127, 255, 212)</td></tr><tr><td><font color=\"Azure\">Azure</font></td><td><font color=\"#F0FFFF\">#F0FFFF</font></td><td bgcolor=\"#F0FFFF\">rgb(240, 255, 255)</td></tr><tr><td><font color=\"Beige\">Beige</font></td><td><font color=\"#F5F5DC\">#F5F5DC</font></td><td bgcolor=\"#F5F5DC\">rgb(245, 245, 220)</td></tr><tr><td><font color=\"Bisque\">Bisque</font></td><td><font color=\"#FFE4C4\">#FFE4C4</font></td><td bgcolor=\"#FFE4C4\">rgb(255, 228, 196)</td></tr><tr><td><font color=\"Black\">Black</font></td><td><font color=\"#000000\">#000000</font></td><td bgcolor=\"#000000\">rgb(0, 0, 0)</td></tr><tr><td><font color=\"BlanchedAlmond\">BlanchedAlmond</font></td><td><font color=\"#FFEBCD\">#FFEBCD</font></td><td bgcolor=\"#FFEBCD\">rgb(255, 235, 205)</td></tr><tr><td><font color=\"Blue\">Blue</font></td><td><font color=\"#0000FF\">#0000FF</font></td><td bgcolor=\"#0000FF\">rgb(0, 0, 255)</td></tr><tr><td><font color=\"BlueViolet\">BlueViolet</font></td><td><font color=\"#8A2BE2\">#8A2BE2</font></td><td bgcolor=\"#8A2BE2\">rgb(138, 43, 226)</td></tr><tr><td><font color=\"Brown\">Brown</font></td><td><font color=\"#A52A2A\">#A52A2A</font></td><td bgcolor=\"#A52A2A\">rgb(165, 42, 42)</td></tr><tr><td><font color=\"BurlyWood\">BurlyWood</font></td><td><font color=\"#DEB887\">#DEB887</font></td><td bgcolor=\"#DEB887\">rgb(222, 184, 135)</td></tr><tr><td><font color=\"CadetBlue\">CadetBlue</font></td><td><font color=\"#5F9EA0\">#5F9EA0</font></td><td bgcolor=\"#5F9EA0\">rgb(95, 158, 160)</td></tr><tr><td><font color=\"Chartreuse\">Chartreuse</font></td><td><font color=\"#7FFF00\">#7FFF00</font></td><td bgcolor=\"#7FFF00\">rgb(127, 255, 0)</td></tr><tr><td><font color=\"Chocolate\">Chocolate</font></td><td><font color=\"#D2691E\">#D2691E</font></td><td bgcolor=\"#D2691E\">rgb(210, 105, 30)</td></tr><tr><td><font color=\"Coral\">Coral</font></td><td><font color=\"#FF7F50\">#FF7F50</font></td><td bgcolor=\"#FF7F50\">rgb(255, 127, 80)</td></tr><tr><td><font color=\"CornflowerBlue\">CornflowerBlue</font></td><td><font color=\"#6495ED\">#6495ED</font></td><td bgcolor=\"#6495ED\">rgb(100, 149, 237)</td></tr><tr><td><font color=\"Cornsilk\">Cornsilk</font></td><td><font color=\"#FFF8DC\">#FFF8DC</font></td><td bgcolor=\"#FFF8DC\">rgb(255, 248, 220)</td></tr><tr><td><font color=\"Crimson\">Crimson</font></td><td><font color=\"#DC143C\">#DC143C</font></td><td bgcolor=\"#DC143C\">rgb(220, 20, 60)</td></tr><tr><td><font color=\"Cyan\">Cyan</font></td><td><font color=\"#00FFFF\">#00FFFF</font></td><td bgcolor=\"#00FFFF\">rgb(0, 255, 255)</td></tr><tr><td><font color=\"DarkBlue\">DarkBlue</font></td><td><font color=\"#00008B\">#00008B</font></td><td bgcolor=\"#00008B\">rgb(0, 0, 139)</td></tr><tr><td><font color=\"DarkCyan\">DarkCyan</font></td><td><font color=\"#008B8B\">#008B8B</font></td><td bgcolor=\"#008B8B\">rgb(0, 139, 139)</td></tr><tr><td><font color=\"DarkGoldenRod\">DarkGoldenRod</font></td><td><font color=\"#B8860B\">#B8860B</font></td><td bgcolor=\"#B8860B\">rgb(184, 134, 11)</td></tr><tr><td><font color=\"DarkGray\">DarkGray</font></td><td><font color=\"#A9A9A9\">#A9A9A9</font></td><td bgcolor=\"#A9A9A9\">rgb(169, 169, 169)</td></tr><tr><td><font color=\"DarkGreen\">DarkGreen</font></td><td><font color=\"#006400\">#006400</font></td><td bgcolor=\"#006400\">rgb(0, 100, 0)</td></tr><tr><td><font color=\"DarkKhaki\">DarkKhaki</font></td><td><font color=\"#BDB76B\">#BDB76B</font></td><td bgcolor=\"#BDB76B\">rgb(189, 183, 107)</td></tr><tr><td><font color=\"DarkMagenta\">DarkMagenta</font></td><td><font color=\"#8B008B\">#8B008B</font></td><td bgcolor=\"#8B008B\">rgb(139, 0, 139)</td></tr><tr><td><font color=\"DarkOliveGreen\">DarkOliveGreen</font></td><td><font color=\"#556B2F\">#556B2F</font></td><td bgcolor=\"#556B2F\">rgb(85, 107, 47)</td></tr><tr><td><font color=\"Darkorange\">Darkorange</font></td><td><font color=\"#FF8C00\">#FF8C00</font></td><td bgcolor=\"#FF8C00\">rgb(255, 140, 0)</td></tr><tr><td><font color=\"DarkOrchid\">DarkOrchid</font></td><td><font color=\"#9932CC\">#9932CC</font></td><td bgcolor=\"#9932CC\">rgb(153, 50, 204)</td></tr><tr><td><font color=\"DarkRed\">DarkRed</font></td><td><font color=\"#8B0000\">#8B0000</font></td><td bgcolor=\"#8B0000\">rgb(139, 0, 0)</td></tr><tr><td><font color=\"DarkSalmon\">DarkSalmon</font></td><td><font color=\"#E9967A\">#E9967A</font></td><td bgcolor=\"#E9967A\">rgb(233, 150, 122)</td></tr><tr><td><font color=\"DarkSeaGreen\">DarkSeaGreen</font></td><td><font color=\"#8FBC8F\">#8FBC8F</font></td><td bgcolor=\"#8FBC8F\">rgb(143, 188, 143)</td></tr><tr><td><font color=\"DarkSlateBlue\">DarkSlateBlue</font></td><td><font color=\"#483D8B\">#483D8B</font></td><td bgcolor=\"#483D8B\">rgb(72, 61, 139)</td></tr><tr><td><font color=\"DarkSlateGray\">DarkSlateGray</font></td><td><font color=\"#2F4F4F\">#2F4F4F</font></td><td bgcolor=\"#2F4F4F\">rgb(47, 79, 79)</td></tr><tr><td><font color=\"DarkTurquoise\">DarkTurquoise</font></td><td><font color=\"#00CED1\">#00CED1</font></td><td bgcolor=\"#00CED1\">rgb(0, 206, 209)</td></tr><tr><td><font color=\"DarkViolet\">DarkViolet</font></td><td><font color=\"#9400D3\">#9400D3</font></td><td bgcolor=\"#9400D3\">rgb(148, 0, 211)</td></tr><tr><td><font color=\"DeepPink\">DeepPink</font></td><td><font color=\"#FF1493\">#FF1493</font></td><td bgcolor=\"#FF1493\">rgb(255, 20, 147)</td></tr><tr><td><font color=\"DeepSkyBlue\">DeepSkyBlue</font></td><td><font color=\"#00BFFF\">#00BFFF</font></td><td bgcolor=\"#00BFFF\">rgb(0, 191, 255)</td></tr><tr><td><font color=\"DimGray\">DimGray</font></td><td><font color=\"#696969\">#696969</font></td><td bgcolor=\"#696969\">rgb(105, 105, 105)</td></tr><tr><td><font color=\"DodgerBlue\">DodgerBlue</font></td><td><font color=\"#1E90FF\">#1E90FF</font></td><td bgcolor=\"#1E90FF\">rgb(30, 144, 255)</td></tr><tr><td><font color=\"Feldspar\">Feldspar</font></td><td><font color=\"#D19275\">#D19275</font></td><td bgcolor=\"#D19275\">rgb(209, 146, 117)</td></tr><tr><td><font color=\"FireBrick\">FireBrick</font></td><td><font color=\"#B22222\">#B22222</font></td><td bgcolor=\"#B22222\">rgb(178, 34, 34)</td></tr><tr><td><font color=\"FloralWhite\">FloralWhite</font></td><td><font color=\"#FFFAF0\">#FFFAF0</font></td><td bgcolor=\"#FFFAF0\">rgb(255, 250, 240)</td></tr><tr><td><font color=\"ForestGreen\">ForestGreen</font></td><td><font color=\"#228B22\">#228B22</font></td><td bgcolor=\"#228B22\">rgb(34, 139, 34)</td></tr><tr><td><font color=\"Fuchsia\">Fuchsia</font></td><td><font color=\"#FF00FF\">#FF00FF</font></td><td bgcolor=\"#FF00FF\">rgb(255, 0, 255)</td></tr><tr><td><font color=\"Gainsboro\">Gainsboro</font></td><td><font color=\"#DCDCDC\">#DCDCDC</font></td><td bgcolor=\"#DCDCDC\">rgb(220, 220, 220)</td></tr><tr><td><font color=\"GhostWhite\">GhostWhite</font></td><td><font color=\"#F8F8FF\">#F8F8FF</font></td><td bgcolor=\"#F8F8FF\">rgb(248, 248, 255)</td></tr><tr><td><font color=\"Gold\">Gold</font></td><td><font color=\"#FFD700\">#FFD700</font></td><td bgcolor=\"#FFD700\">rgb(255, 215, 0)</td></tr><tr><td><font color=\"GoldenRod\">GoldenRod</font></td><td><font color=\"#DAA520\">#DAA520</font></td><td bgcolor=\"#DAA520\">rgb(218, 165, 32)</td></tr><tr><td><font color=\"Gray\">Gray</font></td><td><font color=\"#808080\">#808080</font></td><td bgcolor=\"#808080\">rgb(128, 128, 128)</td></tr><tr><td><font color=\"Green\">Green</font></td><td><font color=\"#008000\">#008000</font></td><td bgcolor=\"#008000\">rgb(0, 128, 0)</td></tr><tr><td><font color=\"GreenYellow\">GreenYellow</font></td><td><font color=\"#ADFF2F\">#ADFF2F</font></td><td bgcolor=\"#ADFF2F\">rgb(173, 255, 47)</td></tr><tr><td><font color=\"HoneyDew\">HoneyDew</font></td><td><font color=\"#F0FFF0\">#F0FFF0</font></td><td bgcolor=\"#F0FFF0\">rgb(240, 255, 240)</td></tr><tr><td><font color=\"HotPink\">HotPink</font></td><td><font color=\"#FF69B4\">#FF69B4</font></td><td bgcolor=\"#FF69B4\">rgb(255, 105, 180)</td></tr><tr><td><font color=\"IndianRed\">IndianRed</font></td><td><font color=\"#CD5C5C\">#CD5C5C</font></td><td bgcolor=\"#CD5C5C\">rgb(205, 92, 92)</td></tr><tr><td><font color=\"Indigo\">Indigo</font></td><td><font color=\"#4B0082\">#4B0082</font></td><td bgcolor=\"#4B0082\">rgb(75, 0, 130)</td></tr><tr><td><font color=\"Ivory\">Ivory</font></td><td><font color=\"#FFFFF0\">#FFFFF0</font></td><td bgcolor=\"#FFFFF0\">rgb(255, 255, 240)</td></tr><tr><td><font color=\"Khaki\">Khaki</font></td><td><font color=\"#F0E68C\">#F0E68C</font></td><td bgcolor=\"#F0E68C\">rgb(240, 230, 140)</td></tr><tr><td><font color=\"Lavender\">Lavender</font></td><td><font color=\"#E6E6FA\">#E6E6FA</font></td><td bgcolor=\"#E6E6FA\">rgb(230, 230, 250)</td></tr><tr><td><font color=\"LavenderBlush\">LavenderBlush</font></td><td><font color=\"#FFF0F5\">#FFF0F5</font></td><td bgcolor=\"#FFF0F5\">rgb(255, 240, 245)</td></tr><tr><td><font color=\"LawnGreen\">LawnGreen</font></td><td><font color=\"#7CFC00\">#7CFC00</font></td><td bgcolor=\"#7CFC00\">rgb(124, 252, 0)</td></tr><tr><td><font color=\"LemonChiffon\">LemonChiffon</font></td><td><font color=\"#FFFACD\">#FFFACD</font></td><td bgcolor=\"#FFFACD\">rgb(255, 250, 205)</td></tr><tr><td><font color=\"LightBlue\">LightBlue</font></td><td><font color=\"#ADD8E6\">#ADD8E6</font></td><td bgcolor=\"#ADD8E6\">rgb(173, 216, 230)</td></tr><tr><td><font color=\"LightCoral\">LightCoral</font></td><td><font color=\"#F08080\">#F08080</font></td><td bgcolor=\"#F08080\">rgb(240, 128, 128)</td></tr><tr><td><font color=\"LightCyan\">LightCyan</font></td><td><font color=\"#E0FFFF\">#E0FFFF</font></td><td bgcolor=\"#E0FFFF\">rgb(224, 255, 255)</td></tr><tr><td><font color=\"LightGoldenRodYellow\">LightGoldenRodYellow</font></td><td><font color=\"#FAFAD2\">#FAFAD2</font></td><td bgcolor=\"#FAFAD2\">rgb(250, 250, 210)</td></tr><tr><td><font color=\"LightGrey\">LightGrey</font></td><td><font color=\"#D3D3D3\">#D3D3D3</font></td><td bgcolor=\"#D3D3D3\">rgb(211, 211, 211)</td></tr><tr><td><font color=\"LightGreen\">LightGreen</font></td><td><font color=\"#90EE90\">#90EE90</font></td><td bgcolor=\"#90EE90\">rgb(144, 238, 144)</td></tr><tr><td><font color=\"LightPink\">LightPink</font></td><td><font color=\"#FFB6C1\">#FFB6C1</font></td><td bgcolor=\"#FFB6C1\">rgb(255, 182, 193)</td></tr><tr><td><font color=\"LightSalmon\">LightSalmon</font></td><td><font color=\"#FFA07A\">#FFA07A</font></td><td bgcolor=\"#FFA07A\">rgb(255, 160, 122)</td></tr><tr><td><font color=\"LightSeaGreen\">LightSeaGreen</font></td><td><font color=\"#20B2AA\">#20B2AA</font></td><td bgcolor=\"#20B2AA\">rgb(32, 178, 170)</td></tr><tr><td><font color=\"LightSkyBlue\">LightSkyBlue</font></td><td><font color=\"#87CEFA\">#87CEFA</font></td><td bgcolor=\"#87CEFA\">rgb(135, 206, 250)</td></tr><tr><td><font color=\"LightSlateBlue\">LightSlateBlue</font></td><td><font color=\"#8470FF\">#8470FF</font></td><td bgcolor=\"#8470FF\">rgb(132, 112, 255)</td></tr><tr><td><font color=\"LightSlateGray\">LightSlateGray</font></td><td><font color=\"#778899\">#778899</font></td><td bgcolor=\"#778899\">rgb(119, 136, 153)</td></tr><tr><td><font color=\"LightSteelBlue\">LightSteelBlue</font></td><td><font color=\"#B0C4DE\">#B0C4DE</font></td><td bgcolor=\"#B0C4DE\">rgb(176, 196, 222)</td></tr><tr><td><font color=\"LightYellow\">LightYellow</font></td><td><font color=\"#FFFFE0\">#FFFFE0</font></td><td bgcolor=\"#FFFFE0\">rgb(255, 255, 224)</td></tr><tr><td><font color=\"Lime\">Lime</font></td><td><font color=\"#00FF00\">#00FF00</font></td><td bgcolor=\"#00FF00\">rgb(0, 255, 0)</td></tr><tr><td><font color=\"LimeGreen\">LimeGreen</font></td><td><font color=\"#32CD32\">#32CD32</font></td><td bgcolor=\"#32CD32\">rgb(50, 205, 50)</td></tr><tr><td><font color=\"Linen\">Linen</font></td><td><font color=\"#FAF0E6\">#FAF0E6</font></td><td bgcolor=\"#FAF0E6\">rgb(250, 240, 230)</td></tr><tr><td><font color=\"Magenta\">Magenta</font></td><td><font color=\"#FF00FF\">#FF00FF</font></td><td bgcolor=\"#FF00FF\">rgb(255, 0, 255)</td></tr><tr><td><font color=\"Maroon\">Maroon</font></td><td><font color=\"#800000\">#800000</font></td><td bgcolor=\"#800000\">rgb(128, 0, 0)</td></tr><tr><td><font color=\"MediumAquaMarine\">MediumAquaMarine</font></td><td><font color=\"#66CDAA\">#66CDAA</font></td><td bgcolor=\"#66CDAA\">rgb(102, 205, 170)</td></tr><tr><td><font color=\"MediumBlue\">MediumBlue</font></td><td><font color=\"#0000CD\">#0000CD</font></td><td bgcolor=\"#0000CD\">rgb(0, 0, 205)</td></tr><tr><td><font color=\"MediumOrchid\">MediumOrchid</font></td><td><font color=\"#BA55D3\">#BA55D3</font></td><td bgcolor=\"#BA55D3\">rgb(186, 85, 211)</td></tr><tr><td><font color=\"MediumPurple\">MediumPurple</font></td><td><font color=\"#9370D8\">#9370D8</font></td><td bgcolor=\"#9370D8\">rgb(147, 112, 216)</td></tr><tr><td><font color=\"MediumSeaGreen\">MediumSeaGreen</font></td><td><font color=\"#3CB371\">#3CB371</font></td><td bgcolor=\"#3CB371\">rgb(60, 179, 113)</td></tr><tr><td><font color=\"MediumSlateBlue\">MediumSlateBlue</font></td><td><font color=\"#7B68EE\">#7B68EE</font></td><td bgcolor=\"#7B68EE\">rgb(123, 104, 238)</td></tr><tr><td><font color=\"MediumSpringGreen\">MediumSpringGreen</font></td><td><font color=\"#00FA9A\">#00FA9A</font></td><td bgcolor=\"#00FA9A\">rgb(0, 250, 154)</td></tr><tr><td><font color=\"MediumTurquoise\">MediumTurquoise</font></td><td><font color=\"#48D1CC\">#48D1CC</font></td><td bgcolor=\"#48D1CC\">rgb(72, 209, 204)</td></tr><tr><td><font color=\"MediumVioletRed\">MediumVioletRed</font></td><td><font color=\"#C71585\">#C71585</font></td><td bgcolor=\"#C71585\">rgb(199, 21, 133)</td></tr><tr><td><font color=\"MidnightBlue\">MidnightBlue</font></td><td><font color=\"#191970\">#191970</font></td><td bgcolor=\"#191970\">rgb(25, 25, 112)</td></tr><tr><td><font color=\"MintCream\">MintCream</font></td><td><font color=\"#F5FFFA\">#F5FFFA</font></td><td bgcolor=\"#F5FFFA\">rgb(245, 255, 250)</td></tr><tr><td><font color=\"MistyRose\">MistyRose</font></td><td><font color=\"#FFE4E1\">#FFE4E1</font></td><td bgcolor=\"#FFE4E1\">rgb(255, 228, 225)</td></tr><tr><td><font color=\"Moccasin\">Moccasin</font></td><td><font color=\"#FFE4B5\">#FFE4B5</font></td><td bgcolor=\"#FFE4B5\">rgb(255, 228, 181)</td></tr><tr><td><font color=\"NavajoWhite\">NavajoWhite</font></td><td><font color=\"#FFDEAD\">#FFDEAD</font></td><td bgcolor=\"#FFDEAD\">rgb(255, 222, 173)</td></tr><tr><td><font color=\"Navy\">Navy</font></td><td><font color=\"#000080\">#000080</font></td><td bgcolor=\"#000080\">rgb(0, 0, 128)</td></tr><tr><td><font color=\"OldLace\">OldLace</font></td><td><font color=\"#FDF5E6\">#FDF5E6</font></td><td bgcolor=\"#FDF5E6\">rgb(253, 245, 230)</td></tr><tr><td><font color=\"Olive\">Olive</font></td><td><font color=\"#808000\">#808000</font></td><td bgcolor=\"#808000\">rgb(128, 128, 0)</td></tr><tr><td><font color=\"OliveDrab\">OliveDrab</font></td><td><font color=\"#6B8E23\">#6B8E23</font></td><td bgcolor=\"#6B8E23\">rgb(107, 142, 35)</td></tr><tr><td><font color=\"Orange\">Orange</font></td><td><font color=\"#FFA500\">#FFA500</font></td><td bgcolor=\"#FFA500\">rgb(255, 165, 0)</td></tr><tr><td><font color=\"OrangeRed\">OrangeRed</font></td><td><font color=\"#FF4500\">#FF4500</font></td><td bgcolor=\"#FF4500\">rgb(255, 69, 0)</td></tr><tr><td><font color=\"Orchid\">Orchid</font></td><td><font color=\"#DA70D6\">#DA70D6</font></td><td bgcolor=\"#DA70D6\">rgb(218, 112, 214)</td></tr><tr><td><font color=\"PaleGoldenRod\">PaleGoldenRod</font></td><td><font color=\"#EEE8AA\">#EEE8AA</font></td><td bgcolor=\"#EEE8AA\">rgb(238, 232, 170)</td></tr><tr><td><font color=\"PaleGreen\">PaleGreen</font></td><td><font color=\"#98FB98\">#98FB98</font></td><td bgcolor=\"#98FB98\">rgb(152, 251, 152)</td></tr><tr><td><font color=\"PaleTurquoise\">PaleTurquoise</font></td><td><font color=\"#AFEEEE\">#AFEEEE</font></td><td bgcolor=\"#AFEEEE\">rgb(175, 238, 238)</td></tr><tr><td><font color=\"PaleVioletRed\">PaleVioletRed</font></td><td><font color=\"#D87093\">#D87093</font></td><td bgcolor=\"#D87093\">rgb(216, 112, 147)</td></tr><tr><td><font color=\"PapayaWhip\">PapayaWhip</font></td><td><font color=\"#FFEFD5\">#FFEFD5</font></td><td bgcolor=\"#FFEFD5\">rgb(255, 239, 213)</td></tr><tr><td><font color=\"PeachPuff\">PeachPuff</font></td><td><font color=\"#FFDAB9\">#FFDAB9</font></td><td bgcolor=\"#FFDAB9\">rgb(255, 218, 185)</td></tr><tr><td><font color=\"Peru\">Peru</font></td><td><font color=\"#CD853F\">#CD853F</font></td><td bgcolor=\"#CD853F\">rgb(205, 133, 63)</td></tr><tr><td><font color=\"Pink\">Pink</font></td><td><font color=\"#FFC0CB\">#FFC0CB</font></td><td bgcolor=\"#FFC0CB\">rgb(255, 192, 203)</td></tr><tr><td><font color=\"Plum\">Plum</font></td><td><font color=\"#DDA0DD\">#DDA0DD</font></td><td bgcolor=\"#DDA0DD\">rgb(221, 160, 221)</td></tr><tr><td><font color=\"PowderBlue\">PowderBlue</font></td><td><font color=\"#B0E0E6\">#B0E0E6</font></td><td bgcolor=\"#B0E0E6\">rgb(176, 224, 230)</td></tr><tr><td><font color=\"Purple\">Purple</font></td><td><font color=\"#800080\">#800080</font></td><td bgcolor=\"#800080\">rgb(128, 0, 128)</td></tr><tr><td><font color=\"Red\">Red</font></td><td><font color=\"#FF0000\">#FF0000</font></td><td bgcolor=\"#FF0000\">rgb(255, 0, 0)</td></tr><tr><td><font color=\"RosyBrown\">RosyBrown</font></td><td><font color=\"#BC8F8F\">#BC8F8F</font></td><td bgcolor=\"#BC8F8F\">rgb(188, 143, 143)</td></tr><tr><td><font color=\"RoyalBlue\">RoyalBlue</font></td><td><font color=\"#4169E1\">#4169E1</font></td><td bgcolor=\"#4169E1\">rgb(65, 105, 225)</td></tr><tr><td><font color=\"SaddleBrown\">SaddleBrown</font></td><td><font color=\"#8B4513\">#8B4513</font></td><td bgcolor=\"#8B4513\">rgb(139, 69, 19)</td></tr><tr><td><font color=\"Salmon\">Salmon</font></td><td><font color=\"#FA8072\">#FA8072</font></td><td bgcolor=\"#FA8072\">rgb(250, 128, 114)</td></tr><tr><td><font color=\"SandyBrown\">SandyBrown</font></td><td><font color=\"#F4A460\">#F4A460</font></td><td bgcolor=\"#F4A460\">rgb(244, 164, 96)</td></tr><tr><td><font color=\"SeaGreen\">SeaGreen</font></td><td><font color=\"#2E8B57\">#2E8B57</font></td><td bgcolor=\"#2E8B57\">rgb(46, 139, 87)</td></tr><tr><td><font color=\"SeaShell\">SeaShell</font></td><td><font color=\"#FFF5EE\">#FFF5EE</font></td><td bgcolor=\"#FFF5EE\">rgb(255, 245, 238)</td></tr><tr><td><font color=\"Sienna\">Sienna</font></td><td><font color=\"#A0522D\">#A0522D</font></td><td bgcolor=\"#A0522D\">rgb(160, 82, 45)</td></tr><tr><td><font color=\"Silver\">Silver</font></td><td><font color=\"#C0C0C0\">#C0C0C0</font></td><td bgcolor=\"#C0C0C0\">rgb(192, 192, 192)</td></tr><tr><td><font color=\"SkyBlue\">SkyBlue</font></td><td><font color=\"#87CEEB\">#87CEEB</font></td><td bgcolor=\"#87CEEB\">rgb(135, 206, 235)</td></tr><tr><td><font color=\"SlateBlue\">SlateBlue</font></td><td><font color=\"#6A5ACD\">#6A5ACD</font></td><td bgcolor=\"#6A5ACD\">rgb(106, 90, 205)</td></tr><tr><td><font color=\"SlateGray\">SlateGray</font></td><td><font color=\"#708090\">#708090</font></td><td bgcolor=\"#708090\">rgb(112, 128, 144)</td></tr><tr><td><font color=\"Snow\">Snow</font></td><td><font color=\"#FFFAFA\">#FFFAFA</font></td><td bgcolor=\"#FFFAFA\">rgb(255, 250, 250)</td></tr><tr><td><font color=\"SpringGreen\">SpringGreen</font></td><td><font color=\"#00FF7F\">#00FF7F</font></td><td bgcolor=\"#00FF7F\">rgb(0, 255, 127)</td></tr><tr><td><font color=\"SteelBlue\">SteelBlue</font></td><td><font color=\"#4682B4\">#4682B4</font></td><td bgcolor=\"#4682B4\">rgb(70, 130, 180)</td></tr><tr><td><font color=\"Tan\">Tan</font></td><td><font color=\"#D2B48C\">#D2B48C</font></td><td bgcolor=\"#D2B48C\">rgb(210, 180, 140)</td></tr><tr><td><font color=\"Teal\">Teal</font></td><td><font color=\"#008080\">#008080</font></td><td bgcolor=\"#008080\">rgb(0, 128, 128)</td></tr><tr><td><font color=\"Thistle\">Thistle</font></td><td><font color=\"#D8BFD8\">#D8BFD8</font></td><td bgcolor=\"#D8BFD8\">rgb(216, 191, 216)</td></tr><tr><td><font color=\"Tomato\">Tomato</font></td><td><font color=\"#FF6347\">#FF6347</font></td><td bgcolor=\"#FF6347\">rgb(255, 99, 71)</td></tr><tr><td><font color=\"Turquoise\">Turquoise</font></td><td><font color=\"#40E0D0\">#40E0D0</font></td><td bgcolor=\"#40E0D0\">rgb(64, 224, 208)</td></tr><tr><td><font color=\"Violet\">Violet</font></td><td><font color=\"#EE82EE\">#EE82EE</font></td><td bgcolor=\"#EE82EE\">rgb(238, 130, 238)</td></tr><tr><td><font color=\"VioletRed\">VioletRed</font></td><td><font color=\"#D02090\">#D02090</font></td><td bgcolor=\"#D02090\">rgb(208, 32, 144)</td></tr><tr><td><font color=\"Wheat\">Wheat</font></td><td><font color=\"#F5DEB3\">#F5DEB3</font></td><td bgcolor=\"#F5DEB3\">rgb(245, 222, 179)</td></tr><tr><td><font color=\"White\">White</font></td><td><font color=\"#FFFFFF\">#FFFFFF</font></td><td bgcolor=\"#FFFFFF\">rgb(255, 255, 255)</td></tr><tr><td><font color=\"WhiteSmoke\">WhiteSmoke</font></td><td><font color=\"#F5F5F5\">#F5F5F5</font></td><td bgcolor=\"#F5F5F5\">rgb(245, 245, 245)</td></tr><tr><td><font color=\"Yellow\">Yellow</font></td><td><font color=\"#FFFF00\">#FFFF00</font></td><td bgcolor=\"#FFFF00\">rgb(255, 255, 0)</td></tr><tr><td><font color=\"YellowGreen\">YellowGreen</font></td><td><font color=\"#9ACD32\">#9ACD32</font></td><td bgcolor=\"#9ACD32\">rgb(154, 205, 50)</td></tr></tbody></table>\n\n<a id=\"more\"></a>","excerpt":"<h3 id=\"常用RGB颜色列表\"><a href=\"#常用RGB颜色列表\" class=\"headerlink\" title=\"常用RGB颜色列表\"></a>常用RGB颜色列表</h3><table><tbody><tr><th>颜色名</th><th>十六进制颜色值</th><th>颜色</th></tr><tr><td><font color=\"AliceBlue\">AliceBlue</font></td><td><font color=\"#F0F8FF\">#F0F8FF</font></td><td bgcolor=\"#F0F8FF\">rgb(240, 248, 255)</td></tr><tr><td><font color=\"AntiqueWhite\">AntiqueWhite</font></td><td><font color=\"#FAEBD7\">#FAEBD7</font></td><td bgcolor=\"#FAEBD7\">rgb(250, 235, 215)</td></tr><tr><td><font color=\"Aqua\">Aqua</font></td><td><font color=\"#00FFFF\">#00FFFF</font></td><td bgcolor=\"#00FFFF\">rgb(0, 255, 255)</td></tr><tr><td><font color=\"Aquamarine\">Aquamarine</font></td><td><font color=\"#7FFFD4\">#7FFFD4</font></td><td bgcolor=\"#7FFFD4\">rgb(127, 255, 212)</td></tr><tr><td><font color=\"Azure\">Azure</font></td><td><font color=\"#F0FFFF\">#F0FFFF</font></td><td bgcolor=\"#F0FFFF\">rgb(240, 255, 255)</td></tr><tr><td><font color=\"Beige\">Beige</font></td><td><font color=\"#F5F5DC\">#F5F5DC</font></td><td bgcolor=\"#F5F5DC\">rgb(245, 245, 220)</td></tr><tr><td><font color=\"Bisque\">Bisque</font></td><td><font color=\"#FFE4C4\">#FFE4C4</font></td><td bgcolor=\"#FFE4C4\">rgb(255, 228, 196)</td></tr><tr><td><font color=\"Black\">Black</font></td><td><font color=\"#000000\">#000000</font></td><td bgcolor=\"#000000\">rgb(0, 0, 0)</td></tr><tr><td><font color=\"BlanchedAlmond\">BlanchedAlmond</font></td><td><font color=\"#FFEBCD\">#FFEBCD</font></td><td bgcolor=\"#FFEBCD\">rgb(255, 235, 205)</td></tr><tr><td><font color=\"Blue\">Blue</font></td><td><font color=\"#0000FF\">#0000FF</font></td><td bgcolor=\"#0000FF\">rgb(0, 0, 255)</td></tr><tr><td><font color=\"BlueViolet\">BlueViolet</font></td><td><font color=\"#8A2BE2\">#8A2BE2</font></td><td bgcolor=\"#8A2BE2\">rgb(138, 43, 226)</td></tr><tr><td><font color=\"Brown\">Brown</font></td><td><font color=\"#A52A2A\">#A52A2A</font></td><td bgcolor=\"#A52A2A\">rgb(165, 42, 42)</td></tr><tr><td><font color=\"BurlyWood\">BurlyWood</font></td><td><font color=\"#DEB887\">#DEB887</font></td><td bgcolor=\"#DEB887\">rgb(222, 184, 135)</td></tr><tr><td><font color=\"CadetBlue\">CadetBlue</font></td><td><font color=\"#5F9EA0\">#5F9EA0</font></td><td bgcolor=\"#5F9EA0\">rgb(95, 158, 160)</td></tr><tr><td><font color=\"Chartreuse\">Chartreuse</font></td><td><font color=\"#7FFF00\">#7FFF00</font></td><td bgcolor=\"#7FFF00\">rgb(127, 255, 0)</td></tr><tr><td><font color=\"Chocolate\">Chocolate</font></td><td><font color=\"#D2691E\">#D2691E</font></td><td bgcolor=\"#D2691E\">rgb(210, 105, 30)</td></tr><tr><td><font color=\"Coral\">Coral</font></td><td><font color=\"#FF7F50\">#FF7F50</font></td><td bgcolor=\"#FF7F50\">rgb(255, 127, 80)</td></tr><tr><td><font color=\"CornflowerBlue\">CornflowerBlue</font></td><td><font color=\"#6495ED\">#6495ED</font></td><td bgcolor=\"#6495ED\">rgb(100, 149, 237)</td></tr><tr><td><font color=\"Cornsilk\">Cornsilk</font></td><td><font color=\"#FFF8DC\">#FFF8DC</font></td><td bgcolor=\"#FFF8DC\">rgb(255, 248, 220)</td></tr><tr><td><font color=\"Crimson\">Crimson</font></td><td><font color=\"#DC143C\">#DC143C</font></td><td bgcolor=\"#DC143C\">rgb(220, 20, 60)</td></tr><tr><td><font color=\"Cyan\">Cyan</font></td><td><font color=\"#00FFFF\">#00FFFF</font></td><td bgcolor=\"#00FFFF\">rgb(0, 255, 255)</td></tr><tr><td><font color=\"DarkBlue\">DarkBlue</font></td><td><font color=\"#00008B\">#00008B</font></td><td bgcolor=\"#00008B\">rgb(0, 0, 139)</td></tr><tr><td><font color=\"DarkCyan\">DarkCyan</font></td><td><font color=\"#008B8B\">#008B8B</font></td><td bgcolor=\"#008B8B\">rgb(0, 139, 139)</td></tr><tr><td><font color=\"DarkGoldenRod\">DarkGoldenRod</font></td><td><font color=\"#B8860B\">#B8860B</font></td><td bgcolor=\"#B8860B\">rgb(184, 134, 11)</td></tr><tr><td><font color=\"DarkGray\">DarkGray</font></td><td><font color=\"#A9A9A9\">#A9A9A9</font></td><td bgcolor=\"#A9A9A9\">rgb(169, 169, 169)</td></tr><tr><td><font color=\"DarkGreen\">DarkGreen</font></td><td><font color=\"#006400\">#006400</font></td><td bgcolor=\"#006400\">rgb(0, 100, 0)</td></tr><tr><td><font color=\"DarkKhaki\">DarkKhaki</font></td><td><font color=\"#BDB76B\">#BDB76B</font></td><td bgcolor=\"#BDB76B\">rgb(189, 183, 107)</td></tr><tr><td><font color=\"DarkMagenta\">DarkMagenta</font></td><td><font color=\"#8B008B\">#8B008B</font></td><td bgcolor=\"#8B008B\">rgb(139, 0, 139)</td></tr><tr><td><font color=\"DarkOliveGreen\">DarkOliveGreen</font></td><td><font color=\"#556B2F\">#556B2F</font></td><td bgcolor=\"#556B2F\">rgb(85, 107, 47)</td></tr><tr><td><font color=\"Darkorange\">Darkorange</font></td><td><font color=\"#FF8C00\">#FF8C00</font></td><td bgcolor=\"#FF8C00\">rgb(255, 140, 0)</td></tr><tr><td><font color=\"DarkOrchid\">DarkOrchid</font></td><td><font color=\"#9932CC\">#9932CC</font></td><td bgcolor=\"#9932CC\">rgb(153, 50, 204)</td></tr><tr><td><font color=\"DarkRed\">DarkRed</font></td><td><font color=\"#8B0000\">#8B0000</font></td><td bgcolor=\"#8B0000\">rgb(139, 0, 0)</td></tr><tr><td><font color=\"DarkSalmon\">DarkSalmon</font></td><td><font color=\"#E9967A\">#E9967A</font></td><td bgcolor=\"#E9967A\">rgb(233, 150, 122)</td></tr><tr><td><font color=\"DarkSeaGreen\">DarkSeaGreen</font></td><td><font color=\"#8FBC8F\">#8FBC8F</font></td><td bgcolor=\"#8FBC8F\">rgb(143, 188, 143)</td></tr><tr><td><font color=\"DarkSlateBlue\">DarkSlateBlue</font></td><td><font color=\"#483D8B\">#483D8B</font></td><td bgcolor=\"#483D8B\">rgb(72, 61, 139)</td></tr><tr><td><font color=\"DarkSlateGray\">DarkSlateGray</font></td><td><font color=\"#2F4F4F\">#2F4F4F</font></td><td bgcolor=\"#2F4F4F\">rgb(47, 79, 79)</td></tr><tr><td><font color=\"DarkTurquoise\">DarkTurquoise</font></td><td><font color=\"#00CED1\">#00CED1</font></td><td bgcolor=\"#00CED1\">rgb(0, 206, 209)</td></tr><tr><td><font color=\"DarkViolet\">DarkViolet</font></td><td><font color=\"#9400D3\">#9400D3</font></td><td bgcolor=\"#9400D3\">rgb(148, 0, 211)</td></tr><tr><td><font color=\"DeepPink\">DeepPink</font></td><td><font color=\"#FF1493\">#FF1493</font></td><td bgcolor=\"#FF1493\">rgb(255, 20, 147)</td></tr><tr><td><font color=\"DeepSkyBlue\">DeepSkyBlue</font></td><td><font color=\"#00BFFF\">#00BFFF</font></td><td bgcolor=\"#00BFFF\">rgb(0, 191, 255)</td></tr><tr><td><font color=\"DimGray\">DimGray</font></td><td><font color=\"#696969\">#696969</font></td><td bgcolor=\"#696969\">rgb(105, 105, 105)</td></tr><tr><td><font color=\"DodgerBlue\">DodgerBlue</font></td><td><font color=\"#1E90FF\">#1E90FF</font></td><td bgcolor=\"#1E90FF\">rgb(30, 144, 255)</td></tr><tr><td><font color=\"Feldspar\">Feldspar</font></td><td><font color=\"#D19275\">#D19275</font></td><td bgcolor=\"#D19275\">rgb(209, 146, 117)</td></tr><tr><td><font color=\"FireBrick\">FireBrick</font></td><td><font color=\"#B22222\">#B22222</font></td><td bgcolor=\"#B22222\">rgb(178, 34, 34)</td></tr><tr><td><font color=\"FloralWhite\">FloralWhite</font></td><td><font color=\"#FFFAF0\">#FFFAF0</font></td><td bgcolor=\"#FFFAF0\">rgb(255, 250, 240)</td></tr><tr><td><font color=\"ForestGreen\">ForestGreen</font></td><td><font color=\"#228B22\">#228B22</font></td><td bgcolor=\"#228B22\">rgb(34, 139, 34)</td></tr><tr><td><font color=\"Fuchsia\">Fuchsia</font></td><td><font color=\"#FF00FF\">#FF00FF</font></td><td bgcolor=\"#FF00FF\">rgb(255, 0, 255)</td></tr><tr><td><font color=\"Gainsboro\">Gainsboro</font></td><td><font color=\"#DCDCDC\">#DCDCDC</font></td><td bgcolor=\"#DCDCDC\">rgb(220, 220, 220)</td></tr><tr><td><font color=\"GhostWhite\">GhostWhite</font></td><td><font color=\"#F8F8FF\">#F8F8FF</font></td><td bgcolor=\"#F8F8FF\">rgb(248, 248, 255)</td></tr><tr><td><font color=\"Gold\">Gold</font></td><td><font color=\"#FFD700\">#FFD700</font></td><td bgcolor=\"#FFD700\">rgb(255, 215, 0)</td></tr><tr><td><font color=\"GoldenRod\">GoldenRod</font></td><td><font color=\"#DAA520\">#DAA520</font></td><td bgcolor=\"#DAA520\">rgb(218, 165, 32)</td></tr><tr><td><font color=\"Gray\">Gray</font></td><td><font color=\"#808080\">#808080</font></td><td bgcolor=\"#808080\">rgb(128, 128, 128)</td></tr><tr><td><font color=\"Green\">Green</font></td><td><font color=\"#008000\">#008000</font></td><td bgcolor=\"#008000\">rgb(0, 128, 0)</td></tr><tr><td><font color=\"GreenYellow\">GreenYellow</font></td><td><font color=\"#ADFF2F\">#ADFF2F</font></td><td bgcolor=\"#ADFF2F\">rgb(173, 255, 47)</td></tr><tr><td><font color=\"HoneyDew\">HoneyDew</font></td><td><font color=\"#F0FFF0\">#F0FFF0</font></td><td bgcolor=\"#F0FFF0\">rgb(240, 255, 240)</td></tr><tr><td><font color=\"HotPink\">HotPink</font></td><td><font color=\"#FF69B4\">#FF69B4</font></td><td bgcolor=\"#FF69B4\">rgb(255, 105, 180)</td></tr><tr><td><font color=\"IndianRed\">IndianRed</font></td><td><font color=\"#CD5C5C\">#CD5C5C</font></td><td bgcolor=\"#CD5C5C\">rgb(205, 92, 92)</td></tr><tr><td><font color=\"Indigo\">Indigo</font></td><td><font color=\"#4B0082\">#4B0082</font></td><td bgcolor=\"#4B0082\">rgb(75, 0, 130)</td></tr><tr><td><font color=\"Ivory\">Ivory</font></td><td><font color=\"#FFFFF0\">#FFFFF0</font></td><td bgcolor=\"#FFFFF0\">rgb(255, 255, 240)</td></tr><tr><td><font color=\"Khaki\">Khaki</font></td><td><font color=\"#F0E68C\">#F0E68C</font></td><td bgcolor=\"#F0E68C\">rgb(240, 230, 140)</td></tr><tr><td><font color=\"Lavender\">Lavender</font></td><td><font color=\"#E6E6FA\">#E6E6FA</font></td><td bgcolor=\"#E6E6FA\">rgb(230, 230, 250)</td></tr><tr><td><font color=\"LavenderBlush\">LavenderBlush</font></td><td><font color=\"#FFF0F5\">#FFF0F5</font></td><td bgcolor=\"#FFF0F5\">rgb(255, 240, 245)</td></tr><tr><td><font color=\"LawnGreen\">LawnGreen</font></td><td><font color=\"#7CFC00\">#7CFC00</font></td><td bgcolor=\"#7CFC00\">rgb(124, 252, 0)</td></tr><tr><td><font color=\"LemonChiffon\">LemonChiffon</font></td><td><font color=\"#FFFACD\">#FFFACD</font></td><td bgcolor=\"#FFFACD\">rgb(255, 250, 205)</td></tr><tr><td><font color=\"LightBlue\">LightBlue</font></td><td><font color=\"#ADD8E6\">#ADD8E6</font></td><td bgcolor=\"#ADD8E6\">rgb(173, 216, 230)</td></tr><tr><td><font color=\"LightCoral\">LightCoral</font></td><td><font color=\"#F08080\">#F08080</font></td><td bgcolor=\"#F08080\">rgb(240, 128, 128)</td></tr><tr><td><font color=\"LightCyan\">LightCyan</font></td><td><font color=\"#E0FFFF\">#E0FFFF</font></td><td bgcolor=\"#E0FFFF\">rgb(224, 255, 255)</td></tr><tr><td><font color=\"LightGoldenRodYellow\">LightGoldenRodYellow</font></td><td><font color=\"#FAFAD2\">#FAFAD2</font></td><td bgcolor=\"#FAFAD2\">rgb(250, 250, 210)</td></tr><tr><td><font color=\"LightGrey\">LightGrey</font></td><td><font color=\"#D3D3D3\">#D3D3D3</font></td><td bgcolor=\"#D3D3D3\">rgb(211, 211, 211)</td></tr><tr><td><font color=\"LightGreen\">LightGreen</font></td><td><font color=\"#90EE90\">#90EE90</font></td><td bgcolor=\"#90EE90\">rgb(144, 238, 144)</td></tr><tr><td><font color=\"LightPink\">LightPink</font></td><td><font color=\"#FFB6C1\">#FFB6C1</font></td><td bgcolor=\"#FFB6C1\">rgb(255, 182, 193)</td></tr><tr><td><font color=\"LightSalmon\">LightSalmon</font></td><td><font color=\"#FFA07A\">#FFA07A</font></td><td bgcolor=\"#FFA07A\">rgb(255, 160, 122)</td></tr><tr><td><font color=\"LightSeaGreen\">LightSeaGreen</font></td><td><font color=\"#20B2AA\">#20B2AA</font></td><td bgcolor=\"#20B2AA\">rgb(32, 178, 170)</td></tr><tr><td><font color=\"LightSkyBlue\">LightSkyBlue</font></td><td><font color=\"#87CEFA\">#87CEFA</font></td><td bgcolor=\"#87CEFA\">rgb(135, 206, 250)</td></tr><tr><td><font color=\"LightSlateBlue\">LightSlateBlue</font></td><td><font color=\"#8470FF\">#8470FF</font></td><td bgcolor=\"#8470FF\">rgb(132, 112, 255)</td></tr><tr><td><font color=\"LightSlateGray\">LightSlateGray</font></td><td><font color=\"#778899\">#778899</font></td><td bgcolor=\"#778899\">rgb(119, 136, 153)</td></tr><tr><td><font color=\"LightSteelBlue\">LightSteelBlue</font></td><td><font color=\"#B0C4DE\">#B0C4DE</font></td><td bgcolor=\"#B0C4DE\">rgb(176, 196, 222)</td></tr><tr><td><font color=\"LightYellow\">LightYellow</font></td><td><font color=\"#FFFFE0\">#FFFFE0</font></td><td bgcolor=\"#FFFFE0\">rgb(255, 255, 224)</td></tr><tr><td><font color=\"Lime\">Lime</font></td><td><font color=\"#00FF00\">#00FF00</font></td><td bgcolor=\"#00FF00\">rgb(0, 255, 0)</td></tr><tr><td><font color=\"LimeGreen\">LimeGreen</font></td><td><font color=\"#32CD32\">#32CD32</font></td><td bgcolor=\"#32CD32\">rgb(50, 205, 50)</td></tr><tr><td><font color=\"Linen\">Linen</font></td><td><font color=\"#FAF0E6\">#FAF0E6</font></td><td bgcolor=\"#FAF0E6\">rgb(250, 240, 230)</td></tr><tr><td><font color=\"Magenta\">Magenta</font></td><td><font color=\"#FF00FF\">#FF00FF</font></td><td bgcolor=\"#FF00FF\">rgb(255, 0, 255)</td></tr><tr><td><font color=\"Maroon\">Maroon</font></td><td><font color=\"#800000\">#800000</font></td><td bgcolor=\"#800000\">rgb(128, 0, 0)</td></tr><tr><td><font color=\"MediumAquaMarine\">MediumAquaMarine</font></td><td><font color=\"#66CDAA\">#66CDAA</font></td><td bgcolor=\"#66CDAA\">rgb(102, 205, 170)</td></tr><tr><td><font color=\"MediumBlue\">MediumBlue</font></td><td><font color=\"#0000CD\">#0000CD</font></td><td bgcolor=\"#0000CD\">rgb(0, 0, 205)</td></tr><tr><td><font color=\"MediumOrchid\">MediumOrchid</font></td><td><font color=\"#BA55D3\">#BA55D3</font></td><td bgcolor=\"#BA55D3\">rgb(186, 85, 211)</td></tr><tr><td><font color=\"MediumPurple\">MediumPurple</font></td><td><font color=\"#9370D8\">#9370D8</font></td><td bgcolor=\"#9370D8\">rgb(147, 112, 216)</td></tr><tr><td><font color=\"MediumSeaGreen\">MediumSeaGreen</font></td><td><font color=\"#3CB371\">#3CB371</font></td><td bgcolor=\"#3CB371\">rgb(60, 179, 113)</td></tr><tr><td><font color=\"MediumSlateBlue\">MediumSlateBlue</font></td><td><font color=\"#7B68EE\">#7B68EE</font></td><td bgcolor=\"#7B68EE\">rgb(123, 104, 238)</td></tr><tr><td><font color=\"MediumSpringGreen\">MediumSpringGreen</font></td><td><font color=\"#00FA9A\">#00FA9A</font></td><td bgcolor=\"#00FA9A\">rgb(0, 250, 154)</td></tr><tr><td><font color=\"MediumTurquoise\">MediumTurquoise</font></td><td><font color=\"#48D1CC\">#48D1CC</font></td><td bgcolor=\"#48D1CC\">rgb(72, 209, 204)</td></tr><tr><td><font color=\"MediumVioletRed\">MediumVioletRed</font></td><td><font color=\"#C71585\">#C71585</font></td><td bgcolor=\"#C71585\">rgb(199, 21, 133)</td></tr><tr><td><font color=\"MidnightBlue\">MidnightBlue</font></td><td><font color=\"#191970\">#191970</font></td><td bgcolor=\"#191970\">rgb(25, 25, 112)</td></tr><tr><td><font color=\"MintCream\">MintCream</font></td><td><font color=\"#F5FFFA\">#F5FFFA</font></td><td bgcolor=\"#F5FFFA\">rgb(245, 255, 250)</td></tr><tr><td><font color=\"MistyRose\">MistyRose</font></td><td><font color=\"#FFE4E1\">#FFE4E1</font></td><td bgcolor=\"#FFE4E1\">rgb(255, 228, 225)</td></tr><tr><td><font color=\"Moccasin\">Moccasin</font></td><td><font color=\"#FFE4B5\">#FFE4B5</font></td><td bgcolor=\"#FFE4B5\">rgb(255, 228, 181)</td></tr><tr><td><font color=\"NavajoWhite\">NavajoWhite</font></td><td><font color=\"#FFDEAD\">#FFDEAD</font></td><td bgcolor=\"#FFDEAD\">rgb(255, 222, 173)</td></tr><tr><td><font color=\"Navy\">Navy</font></td><td><font color=\"#000080\">#000080</font></td><td bgcolor=\"#000080\">rgb(0, 0, 128)</td></tr><tr><td><font color=\"OldLace\">OldLace</font></td><td><font color=\"#FDF5E6\">#FDF5E6</font></td><td bgcolor=\"#FDF5E6\">rgb(253, 245, 230)</td></tr><tr><td><font color=\"Olive\">Olive</font></td><td><font color=\"#808000\">#808000</font></td><td bgcolor=\"#808000\">rgb(128, 128, 0)</td></tr><tr><td><font color=\"OliveDrab\">OliveDrab</font></td><td><font color=\"#6B8E23\">#6B8E23</font></td><td bgcolor=\"#6B8E23\">rgb(107, 142, 35)</td></tr><tr><td><font color=\"Orange\">Orange</font></td><td><font color=\"#FFA500\">#FFA500</font></td><td bgcolor=\"#FFA500\">rgb(255, 165, 0)</td></tr><tr><td><font color=\"OrangeRed\">OrangeRed</font></td><td><font color=\"#FF4500\">#FF4500</font></td><td bgcolor=\"#FF4500\">rgb(255, 69, 0)</td></tr><tr><td><font color=\"Orchid\">Orchid</font></td><td><font color=\"#DA70D6\">#DA70D6</font></td><td bgcolor=\"#DA70D6\">rgb(218, 112, 214)</td></tr><tr><td><font color=\"PaleGoldenRod\">PaleGoldenRod</font></td><td><font color=\"#EEE8AA\">#EEE8AA</font></td><td bgcolor=\"#EEE8AA\">rgb(238, 232, 170)</td></tr><tr><td><font color=\"PaleGreen\">PaleGreen</font></td><td><font color=\"#98FB98\">#98FB98</font></td><td bgcolor=\"#98FB98\">rgb(152, 251, 152)</td></tr><tr><td><font color=\"PaleTurquoise\">PaleTurquoise</font></td><td><font color=\"#AFEEEE\">#AFEEEE</font></td><td bgcolor=\"#AFEEEE\">rgb(175, 238, 238)</td></tr><tr><td><font color=\"PaleVioletRed\">PaleVioletRed</font></td><td><font color=\"#D87093\">#D87093</font></td><td bgcolor=\"#D87093\">rgb(216, 112, 147)</td></tr><tr><td><font color=\"PapayaWhip\">PapayaWhip</font></td><td><font color=\"#FFEFD5\">#FFEFD5</font></td><td bgcolor=\"#FFEFD5\">rgb(255, 239, 213)</td></tr><tr><td><font color=\"PeachPuff\">PeachPuff</font></td><td><font color=\"#FFDAB9\">#FFDAB9</font></td><td bgcolor=\"#FFDAB9\">rgb(255, 218, 185)</td></tr><tr><td><font color=\"Peru\">Peru</font></td><td><font color=\"#CD853F\">#CD853F</font></td><td bgcolor=\"#CD853F\">rgb(205, 133, 63)</td></tr><tr><td><font color=\"Pink\">Pink</font></td><td><font color=\"#FFC0CB\">#FFC0CB</font></td><td bgcolor=\"#FFC0CB\">rgb(255, 192, 203)</td></tr><tr><td><font color=\"Plum\">Plum</font></td><td><font color=\"#DDA0DD\">#DDA0DD</font></td><td bgcolor=\"#DDA0DD\">rgb(221, 160, 221)</td></tr><tr><td><font color=\"PowderBlue\">PowderBlue</font></td><td><font color=\"#B0E0E6\">#B0E0E6</font></td><td bgcolor=\"#B0E0E6\">rgb(176, 224, 230)</td></tr><tr><td><font color=\"Purple\">Purple</font></td><td><font color=\"#800080\">#800080</font></td><td bgcolor=\"#800080\">rgb(128, 0, 128)</td></tr><tr><td><font color=\"Red\">Red</font></td><td><font color=\"#FF0000\">#FF0000</font></td><td bgcolor=\"#FF0000\">rgb(255, 0, 0)</td></tr><tr><td><font color=\"RosyBrown\">RosyBrown</font></td><td><font color=\"#BC8F8F\">#BC8F8F</font></td><td bgcolor=\"#BC8F8F\">rgb(188, 143, 143)</td></tr><tr><td><font color=\"RoyalBlue\">RoyalBlue</font></td><td><font color=\"#4169E1\">#4169E1</font></td><td bgcolor=\"#4169E1\">rgb(65, 105, 225)</td></tr><tr><td><font color=\"SaddleBrown\">SaddleBrown</font></td><td><font color=\"#8B4513\">#8B4513</font></td><td bgcolor=\"#8B4513\">rgb(139, 69, 19)</td></tr><tr><td><font color=\"Salmon\">Salmon</font></td><td><font color=\"#FA8072\">#FA8072</font></td><td bgcolor=\"#FA8072\">rgb(250, 128, 114)</td></tr><tr><td><font color=\"SandyBrown\">SandyBrown</font></td><td><font color=\"#F4A460\">#F4A460</font></td><td bgcolor=\"#F4A460\">rgb(244, 164, 96)</td></tr><tr><td><font color=\"SeaGreen\">SeaGreen</font></td><td><font color=\"#2E8B57\">#2E8B57</font></td><td bgcolor=\"#2E8B57\">rgb(46, 139, 87)</td></tr><tr><td><font color=\"SeaShell\">SeaShell</font></td><td><font color=\"#FFF5EE\">#FFF5EE</font></td><td bgcolor=\"#FFF5EE\">rgb(255, 245, 238)</td></tr><tr><td><font color=\"Sienna\">Sienna</font></td><td><font color=\"#A0522D\">#A0522D</font></td><td bgcolor=\"#A0522D\">rgb(160, 82, 45)</td></tr><tr><td><font color=\"Silver\">Silver</font></td><td><font color=\"#C0C0C0\">#C0C0C0</font></td><td bgcolor=\"#C0C0C0\">rgb(192, 192, 192)</td></tr><tr><td><font color=\"SkyBlue\">SkyBlue</font></td><td><font color=\"#87CEEB\">#87CEEB</font></td><td bgcolor=\"#87CEEB\">rgb(135, 206, 235)</td></tr><tr><td><font color=\"SlateBlue\">SlateBlue</font></td><td><font color=\"#6A5ACD\">#6A5ACD</font></td><td bgcolor=\"#6A5ACD\">rgb(106, 90, 205)</td></tr><tr><td><font color=\"SlateGray\">SlateGray</font></td><td><font color=\"#708090\">#708090</font></td><td bgcolor=\"#708090\">rgb(112, 128, 144)</td></tr><tr><td><font color=\"Snow\">Snow</font></td><td><font color=\"#FFFAFA\">#FFFAFA</font></td><td bgcolor=\"#FFFAFA\">rgb(255, 250, 250)</td></tr><tr><td><font color=\"SpringGreen\">SpringGreen</font></td><td><font color=\"#00FF7F\">#00FF7F</font></td><td bgcolor=\"#00FF7F\">rgb(0, 255, 127)</td></tr><tr><td><font color=\"SteelBlue\">SteelBlue</font></td><td><font color=\"#4682B4\">#4682B4</font></td><td bgcolor=\"#4682B4\">rgb(70, 130, 180)</td></tr><tr><td><font color=\"Tan\">Tan</font></td><td><font color=\"#D2B48C\">#D2B48C</font></td><td bgcolor=\"#D2B48C\">rgb(210, 180, 140)</td></tr><tr><td><font color=\"Teal\">Teal</font></td><td><font color=\"#008080\">#008080</font></td><td bgcolor=\"#008080\">rgb(0, 128, 128)</td></tr><tr><td><font color=\"Thistle\">Thistle</font></td><td><font color=\"#D8BFD8\">#D8BFD8</font></td><td bgcolor=\"#D8BFD8\">rgb(216, 191, 216)</td></tr><tr><td><font color=\"Tomato\">Tomato</font></td><td><font color=\"#FF6347\">#FF6347</font></td><td bgcolor=\"#FF6347\">rgb(255, 99, 71)</td></tr><tr><td><font color=\"Turquoise\">Turquoise</font></td><td><font color=\"#40E0D0\">#40E0D0</font></td><td bgcolor=\"#40E0D0\">rgb(64, 224, 208)</td></tr><tr><td><font color=\"Violet\">Violet</font></td><td><font color=\"#EE82EE\">#EE82EE</font></td><td bgcolor=\"#EE82EE\">rgb(238, 130, 238)</td></tr><tr><td><font color=\"VioletRed\">VioletRed</font></td><td><font color=\"#D02090\">#D02090</font></td><td bgcolor=\"#D02090\">rgb(208, 32, 144)</td></tr><tr><td><font color=\"Wheat\">Wheat</font></td><td><font color=\"#F5DEB3\">#F5DEB3</font></td><td bgcolor=\"#F5DEB3\">rgb(245, 222, 179)</td></tr><tr><td><font color=\"White\">White</font></td><td><font color=\"#FFFFFF\">#FFFFFF</font></td><td bgcolor=\"#FFFFFF\">rgb(255, 255, 255)</td></tr><tr><td><font color=\"WhiteSmoke\">WhiteSmoke</font></td><td><font color=\"#F5F5F5\">#F5F5F5</font></td><td bgcolor=\"#F5F5F5\">rgb(245, 245, 245)</td></tr><tr><td><font color=\"Yellow\">Yellow</font></td><td><font color=\"#FFFF00\">#FFFF00</font></td><td bgcolor=\"#FFFF00\">rgb(255, 255, 0)</td></tr><tr><td><font color=\"YellowGreen\">YellowGreen</font></td><td><font color=\"#9ACD32\">#9ACD32</font></td><td bgcolor=\"#9ACD32\">rgb(154, 205, 50)</td></tr></tbody></table>","more":""},{"title":"有趣代码注释","date":"2016-07-12T11:26:56.000Z","_content":"\n### 佛祖保佑\n\n```cpp\n/*\n                   _ooOoo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  O\\  =  /O\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n         佛祖保佑       永无BUG\n*/\n//          佛曰:  \n//                  写字楼里写字间，写字间里程序员；  \n//                  程序人员写程序，又拿程序换酒钱。  \n//                  酒醒只在网上坐，酒醉还来网下眠；  \n//                  酒醉酒醒日复日，网上网下年复年。  \n//                  但愿老死电脑间，不愿鞠躬老板前；  \n//                  奔驰宝马贵者趣，公交自行程序员。  \n//                  别人笑我忒疯癫，我笑自己命太贱；  \n//                  不见满街漂亮妹，哪个归得程序员？  \n```\n\n<!-- more -->\n\n### 神兽草泥马###\n\n\n```cpp\n/*\n*\n*          ┌─┐       ┌─┐\n*       ┌──┘ ┴───────┘ ┴──┐\n*       │                 │\n*       │       ───       │\n*       │  ─┬┘       └┬─  │\n*       │                 │\n*       │       ─┴─       │\n*       │                 │\n*       └───┐         ┌───┘\n*           │         │\n*           │         │\n*           │         │\n*           │         └──────────────┐\n*           │                        │\n*           │                        ├─┐\n*           │                        ┌─┘\n*           │                        │\n*           └─┐  ┐  ┌───────┬──┐  ┌──┘\n*             │ ─┤ ─┤       │ ─┤ ─┤\n*             └──┴──┘       └──┴──┘\n*                 神兽保佑\n*                 代码无BUG!\n*/\n```\n\n- - -\n\n```cpp\n/**\n *   ┏┓　　　┏┓\n * ┏┛┻━━━┛┻┓\n * ┃　　　　　　　┃\n * ┃　　　━　　　┃\n * ┃　┳┛　┗┳　┃\n * ┃　　　　　　　┃\n * ┃　　　┻　　　┃\n * ┃　　　　　　　┃\n * ┗━┓　　　┏━┛\n *    ┃　　　┃   \n *    ┃　　　┃   \n *    ┃　　　┗━━━┓\n *    ┃　　　　　　　┣┓\n *    ┃　　　　　　　┏┛\n *    ┗┓┓┏━┳┓┏┛\n *      ┃┫┫　┃┫┫\n *      ┗┻┛　┗┻┛\n *        神兽保佑 \n *        代码无BUG! \n */\n```\n\n### 胜利手势###\n\n```cpp\n//                      d*##$.\n// zP\"\"\"\"\"$e.           $\"    $o\n//4$       '$          $\"      $\n//'$        '$        J$       $F\n// 'b        $k       $>       $\n//  $k        $r     J$       d$\n//  '$         $     $\"       $~\n//   '$        \"$   '$E       $\n//    $         $L   $\"      $F ...\n//     $.       4B   $      $$$*\"\"\"*b\n//     '$        $.  $$     $$      $F\n//      \"$       R$  $F     $\"      $\n//       $k      ?$ u*     dF      .$\n//       ^$.      $$\"     z$      u$$$$e\n//        #$b             $E.dW@e$\"    ?$\n//         #$           .o$$# d$$$$c    ?F\n//          $      .d$$#\" . zo$>   #$r .uF\n//          $L .u$*\"      $&$$$k   .$$d$$F\n//           $$\"            \"\"^\"$$$P\"$P9$\n//          JP              .o$$$$u:$P $$\n//          $          ..ue$\"      \"\"  $\"\n//         d$          $F              $\n//         $$     ....udE             4B\n//          #$    \"\"\"\"` $r            @$\n//           ^$L        '$            $F\n//             RN        4N           $\n//              *$b                  d$\n//               $$k                 $F\n//               $$b                $F\n//                 $\"\"               $F\n//                 '$                $\n//                  $L               $\n//                  '$               $\n//                   $               $\n```\n\n### 围棋棋盘###\n\n```cpp\n//                             _______________________________________  \n//                            /  ___________________________________  \\\n//     _--\"\"\"\"--_            /  /_/_/_/_/_|_|_|_|_|_|_|_|_|_\\_\\_\\_\\_\\  \\\n//    /          \\          /  /_/_/_/_J__L_L_L_|_|_|_J_J_J__L_\\_\\_\\_\\  \\\n//   /\\          /\\        /  /_/_/_J__L_J__L_L_|_|_|_J_J__L_J__L_\\_\\_\\  \\\n//   L \"\"-____-\"\" J       /  /_/_J__L_J__L_J_J__L_|_J__L_L_J__L_J__L_\\_\\  \\\n//   \\            /      /  /_/__L_/__L_J__L_J__L_|_J__L_J__L_J__\\_J__\\_\\  \\\n//    \\_        _/      /  /_J__/_J__/__L_J__|__L_|_J__|__L_J__\\__L_\\__L_\\  \\\n//  _--\"\"\"\"\"--_\"       /  /  F /  F J  J  |  F J  |  F J  |  F  F J  \\ J  \\  \\\n// /           \\      /  /--/-J--/--L--|--L-J--J--|--L--L-J--|--J--\\--L-\\--\\  \\\n///\\           /\\    /  /__/__L_J__J___L_J__J__|__|__|__L__L_J___L__L_J__\\__\\  \\\n//L \"\"-_____-\"\" J   /  /  /  /  F  F  J  J  |  |  |  |  |  F  F  J  J  \\  \\  \\  \\\n//\\             /  /  /--/--/--/--J---L--|--|--|--o--|--|--|--J---L--\\--\\--\\--\\  \\\n// \\_         _/  /  /__/__J__J___L__J___L__L__L__|__J__J__J___L__J___L__L__\\__\\  \\\n//   \"--___--\"   /  /  /   F  F  J   F  J  J   F  |  J   F  F  J   F  J  J   \\  \\  \\\n//              /  /--/---/--J---L--J---L--|--J---|---L--|--J---L--J---L--\\---\\--\\  \\\n//             /  /__J___/___L__/___L__J___L__J___|___L__J___L__J___\\__J___\\___L__\\  \\\n//            /  /   F  J   /  J   J   |  J   J   |   F   F  |   F   F  \\   F  J   \\  \\\n//           /  /---/---L--J---L---L---L--|---|---|---|---|--J---J---J---L--J---\\---\\  \\\n//          /  /___/___/___L__J___J___J___|___|___|___|___|___L___L___L__J___\\___\\___\\  \\\n//         /  /   /   /   /   F   F   F   F   F   |   J   J   J   J   J   \\   \\   \\   \\  \\\n//        /  /___/___J___J___J___J___J____L___L___|___J___J____L___L___L___L___L___\\___\\  \\\n//       /  /   /    F   F   F   |   |   J    F   |   J    F   |   |   J   J   J    \\   \\  \\\n//      /  /___J____/___/___J____L___L___|___J____|____L___|___J___J____L___\\___\\____L___\\  \\\n//     /  /    F   /   J    F   J   J    |   J    |    F   |    F   F   J    F   \\   J    \\  \\\n//    /  /____/___J____L___/____L___|____L___|____|____|___J____|___J____\\___J____L___\\____\\  \\\n//   /  /    /    F   /   J    J    F   J    F    |    J    F   J    F    F   \\   J    \\    \\  \\\n//  /  /____/____/___J____L____|____L___J____L____|____J____L___J____|____J____L___\\____\\____\\  \\\n// /                                                                                             \\\n///_______________________________________________________________________________________________\\\n//|                                                                                               |\n//| hs                                                                                            |\n//|_______________________________________________________________________________________________|\n```\n\n### 书本###\n\n```cpp\n//                .-~~~~~~~~~-._       _.-~~~~~~~~~-.\n//            __.'              ~.   .~              `.__\n//          .'//                  \\./                  \\\\`.\n//        .'//                     |                     \\\\`.\n//      .'// .-~\"\"\"\"\"\"\"~~~~-._     |     _,-~~~~\"\"\"\"\"\"\"~-. \\\\`.\n//    .'//.-\"                 `-.  |  .-'                 \"-.\\\\`.\n//  .'//______.============-..   \\ | /   ..-============.______\\\\`.\n//.'______________________________\\|/______________________________`.\n```\n\n### 微软金典图标###\n\n```cpp\n  /*\n                         __\n                    ,-~¨^  ^¨-,           _,\n                   /          / ;^-._...,¨/\n                  /          / /         /\n                 /          / /         /\n                /          / /         /\n               /,.-:''-,_ / /         /\n               _,.-:--._ ^ ^:-._ __../\n             /^         / /¨:.._¨__.;\n            /          / /      ^  /\n           /          / /         /\n          /          / /         /\n         /_,.--:^-._/ /         /\n        ^            ^¨¨-.___.:^  (R) - G33K\n       \n        */\n```\n\n### Google###\n\n```cpp\n/*\n          ___                _\n         / __|___  ___  __ _| |___\n        | (_ / _ \\/ _ \\/ _` |   -_)\n         \\___\\___/\\___/\\__, |_\\___|\n                       |___/\n         \n        */\n```\n\n### 奥运五环###\n\n```cpp\n /*\n              _.-\"\"\"\"\"-._         _.-\"\"\"\"\"-._         _.-\"\"\"\"\"-._\n           ,'           `.     ,'           `.     ,'           `.\n          /               \\   /               \\   /               \\\n         |                 | |                 | |                 |\n        |                   |                   |                   |\n        |                   |                   |                   |\n         |             _.-\"|\"|\"-._         _.-\"|\"|\"-._             |\n          \\          ,'   /   \\   `.     ,'   /   \\   `.          /\n           `.       /   ,'     `.   \\   /   ,'     `.   \\       ,'\n             `-..__|..-'         `-..|_|..-'         `-..|__..-'\n                  |                   |                   |\n                  |                   |                   |\n                   |                 | |                 |\n                    \\               /   \\               /\n                     `.           ,'     `.           ,'\n                       `-..___..-'         `-..___..-'\n\n         */\n```\n\n### 七龙珠比克###\n\n```cpp\n /*\n                       _.---..._\n                   ./^         ^-._\n                 ./^C===.         ^\\.   /\\\n                .|'     \\\\        _ ^|.^.|\n           ___.--'_     ( )  .      ./ /||\n          /.---^T\\      ,     |     / /|||\n         C'   ._`|  ._ /  __,-/    / /-,||\n              \\ \\/    ;  /O  / _    |) )|,\n               i \\./^O\\./_,-^/^    ,;-^,'\n                \\ |`--/ ..-^^      |_-^\n                 `|  \\^-           /|:\n                  i.  .--         / '|.\n                   i   =='       /'  |\\._\n                 _./`._        //    |.  ^-ooo.._\n          _.oo../'  |  ^-.__./X/   . `|    |#######b\n         d####     |'      ^^^^   /   |    _\\#######\n         #####b ^^^^^^^^--. ...--^--^^^^^^^_.d######\n         ######b._         Y            _.d#########\n         ##########b._     |        _.d#############\n\n                                        \"Piccolo\" no. 2\n                                           (from Dragonball Z)\n                                                --- Steven J. Simmons\n         */\n```\n\n- - -\n\n```cpp\n /*\n                              /^_.-^  _  --^=_\n                           ./'-^__    _>=\\^^==^-.\n                           |'/^^_/  /^    \\ \\.^\\\\\\/\\\n                          ,|/| '  /'  _____\\ `\\|.^.|\n                          |'/   /_--^^ .   ^^-./ /||\n                          |/,--^  ,     |     / /||'\n                        ._|/   \\ /  __,-/    / /-,||\n                        \\ '/    ;  /O  / _    |) )|,\n                         i \\./^O\\./_,-^/^    ,;-^,'\n                          \\ |`--/ ..-^^      |_-^\n                           `|  \\^-_,/^Y\\      | ^^\\\n                           _i.  \\\".--V_/     /| \\. ^\\._____...--.>^^^^^^-------...._\n                          /  i   ^--^^     /'|' |\\. |./'        |                  ;\n        ___...----/^^^^---|.  `._\\  /^   /' |'_/' \\ `|         |'               ,/'\n                 |'        \\   _|^-.__./'__.^^\\     .|        ,|            _.-^\n                 `\\       ,|`_./^^-----^^._    ` ./ /        /^        _.-^^/\n                          |'  ^                  /-^                ./^    /\n        \\                 `\\_     __.-<       _,/                 ./'     |'\n         `\\.        `i       ^^--/._____...--^            .      ./       |.\n           `|        |                                   /       /        `|\n\n\n                                        \"Piccolo\"\n                                           (from Dragonball Z)\n                                                --- Steven J. Simmons         \n        */\n```\n\n### 七龙珠孙悟空###\n```cpp\n/*\n                           _\n                           \\\"-._ _.--\"~~\"--._\n                            \\   \"            ^.    ___\n                            /                  \\.-~_.-~\n                     .-----'     /\\/\"\\ /~-._      /\n                    /  __      _/\\-.__\\L_.-/\\     \"-.\n                   /.-\"  \\    ( ` \\_o>\"<o_/  \\  .--._\\\n                  /'      \\    \\:     \"     :/_/     \"`\n                          /  /\\ \"\\    ~    /~\"\n                          \\ I  \\/]\"-._ _.-\"[\n                       ___ \\|___/ ./    l   \\___   ___\n                  .--v~   \"v` ( `-.__   __.-' ) ~v\"   ~v--.\n               .-{   |     :   \\_    \"~\"    _/   :     |   }-.\n              /   \\  |           ~-.,___,.-~           |  /   \\\n             ]     \\ |                                 | /     [\n             /\\     \\|     :                     :     |/     /\\\n            /  ^._  _K.___,^                     ^.___,K_  _.^  \\\n           /   /  \"~/  \"\\                           /\"  \\~\"  \\   \\\n          /   /    /     \\ _          :          _ /     \\    \\   \\\n        .^--./    /       Y___________l___________Y       \\    \\.--^.\n        [    \\   /        |        [/    ]        |        \\   /    ]\n        |     \"v\"         l________[____/]________j  -Row   }r\"     /\n        }------t          /                       \\       /`-.     /\n        |      |         Y                         Y     /    \"-._/\n        }-----v'         |         :               |     7-.     /\n        |   |_|          |         l               |    / . \"-._/\n        l  .[_]          :          \\              :  r[]/_.  /\n         \\_____]                     \"--.             \"-.____/\n\n                                            \"Dragonball Z\"\n                                                        ---Row\n         \n        */\n```\n\n- - -\n\n```cpp\n /*\n                                MMMMM\n                                  MMMMMM\n                                    MMMMMMM\n                                     MMMMMMMM     .\n                                      MMMMMMMMM\n                                      HMMMMMMMMMM\n                                       MMMMMMMMMMMM  M\n                                       MMMMMMMMMMMMM  M\n                                        MMMMMMMMMMMMM  M\n                                        MMMMMMMMMMMMM:\n                                        oMMMMMMMMMMMMMM\n              .MMMMMMMMMMMMMMo           MMMMMMMMMMMMMMM M\n        MMMMMMMMMMMMMMMMMMMMMMMMMMM      MMMMMMMMMMMMMMMM\n          MMMMMMMMMMMMMMMMMMMMMMMMMMMM.  oMMMMMMMMMMMMMMM.M\n            MMMMMMMMMMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMMMMMM\n              MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                oMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:                     H\n                     MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM                  .         MMM\n                      MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM              M       MMMMMM\n                       .MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM          M   MMMMMMMMMM\n                MM.      MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM       M MMMMMMMMMMMM\n                    MM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    .MMMMMMMMMMMMMM\n                      MM  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                        MM MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n               .MMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                  HMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                     MMMMMMMMMMMMMMM MMM.oMMMMMMM..MMMMMMMMM:MMMMMMMMMMMMMMMMMMMMMMM\n                       MMMMMMMMMMMMMM MM..MMMMMMM...MMMMMMM. MMMMMMMMMMMMMMMMMMMMM\n                         MMMMMMMMMMMMMMM ..MMMMMM...MMMMMM ..MMMMMMMMMMMMMMMMMMM\n                          MMMMMMM:M.MMM.M.. MMMMM M..MMMMM...MMMMMMMMMMMMMMMMMM  MMM\n                            MMMM. .M..MM.M...MMMMMM..MMMMM.. MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM .\n                             MMMM..M....M.....:MMM .MMMMMM..MMMMMMM...MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                              MMM.M.. ...M......MM.MMMMM.......MHM.M  .MMMMMMMMMMMMMMMMMMMMMMMMM\n                         MMMMMMMM..MM. . MMM.....MMMMMM.M.....M ..MM..M MMMMMMMMMMMMMMMMMMM\n                            .MMMMMHMM. ..MMMM. MMM............o..... . .MMMMMMMMMMMMMMM\n                               MMM. M... .........................M..:.MMMMMMMMMMMM\n                                 oMMM............ .................M.M.MMMMMMMMM\n                                    .....MM........................ . MMMMMM\n                                   M.....M.....................o.MM.MMMMMMMM.\n                                    M........................M.. ...MMMMMMMMMMMMMo\n                                      :....MMM..............MMM..oMMMMMMM\n                                       M...MMM.............MMMMMMM\n                                          .............:MMMMMMMM\n                                          M..... MMM.....M\n                                          M M.............\n                                          ................M\n                                       ooM.................MM  MoMMMMMoooM\n                                  MMoooM......................MoooooooH..oMM\n                              MHooooMoM.....................MMooooooM........M\n                            oooooooMoooM......... o........MoooooooM............\n                            Mooooooooooo.......M.........Moooooooo:..............M\n                           MooMoooooooooM...M........:Mooooooooooo:..............M\n                          M..oooooooooooo .........Mooooooooooooooo..............M\n                         M...Mooo:oooooooo.M....ooooooooooooooooooo..M...........M\n                          ...oooooMoooooooM..Mooooooooooooo:oooooooM.M...........M.\n                         M...ooooooMoo:ooooMoooooooooooooHoooooooooH:M. ...........:\n                         M..MoooooooMoooooooooooooooooo:ooooooMooooMoM..............M\n                         M..ooooooooooMooooooooooooooHoooooooMooHooooM...............M\n                         ...ooooooooooooooooooo:MooooooooooooooMoMoooM................\n                        M...oooooooooooooooooooooooooooooooooooooMooMM................M\n                        ...MooooooooooooooooooooooooooooooooooooooooMo ................\n                        ...MooooooooooooooooooooooooooooooooooooooooM M................M\n                       M...ooooooooooooooooooooooooooooooooooooooooM   ................M\n                       ...MoooooooooooooooooooooooooooooooooooooooMM   .:...............\n                       .....MooooooooooooooooooooooooooooooooooooMoo       .............M\n                       M...... ooooooooooooooooooooooooooooooooooooM       M..............M\n                       M........MooooMMM MM MM  MMMMMMMMMooooooooM         M...............M\n                       .........HM     M:  MM :MMMMMM          M           M...............\n                      M..........M     M   MoM M                           M................M\n                      M.........:M  MoH  M M M MooooHoooMM.   M             M...............M\n                      M..........Moooo MMooM    oooooMooooooooM              M..............H\n                      M.........MooooM  Mooo  : ooooooMooooMoooM              M........ . .o.M\n                      H..  .....ooooo   oooo  M MooooooooooooooM               M... MMMMMMMMMMM\n                      MMMMMMMMMMooooM M oooo  .  ooooooMooooooooM              .MMMMMMMMMMMMMMM\n                      MMMMMMMMMMooooH : ooooH    oooooooooooooooo               MMMMMMMMMMMMMMM\n                      MMMMMMMMMMoooo    ooooM    Moooooooooooooooo              .MMMMMMMMMMMMMMM\n                      MMMMMMMMMMoooo    ooooM    MooooooooooooooooM              MMMMMMMMMMMMMMM\n                      MMMMMMMMMMoooM    ooooM     ooooooooooooooooo               MMMMMMMMMMM:M\n                      MMMMMMMMMMoooM   MooooM     oooooooooooMoooooo               MH...........\n                       . ......Mooo.   MooooM     oooooooooooooooooo              M............M\n                      M.M......oooo    MooooM     Moooooooooooooooooo:           .........M.....\n                      M.M.....Moooo    MooooM      ooooooooooooooooooM            .M............\n                      .......MooooH    MooooM      oooooooooMoooooooooo          M..o...M..o....M\n                      .o....HMooooM    MooooH      MooooooooMooooooooooM          .:M...M.......M\n                     M..M.....MoooM    :oooo:    .MooooooooHooMoooooooooM         M M... ..oM.M\n                      M...M.:.Mooo. MMMMooooo   oooooooooooMoooooooooooooM          ....M. M\n                       M:M..o.Moooooooooooooo MooooooooooooooMooooooooooooM          .Mo\n                              MooooooooooooooMooooooooooooMoMoooooooooooooo\n                              Mooooooooooooooo:ooooooooooooooooooooooooooooo\n                              ooooooooooooooooMooooooooooMoooooooooooooooooo\n                              ooooooooooooooooMoooooooooooMooooooooooooooooHo\n                              ooMooooooooooooooMoooooooooooooooooooooooooooMoM\n                             MooMoooooooooooooo.ooooooooooooooooooooooooooo:oM\n                             MoooooooooooooooooooooooooooooooooooooooooooooooM\n                             MoooMooooooooooooooMooooooooooooooooooooooooooooo.\n                             MoooMooooooooooooooMoooooooooooooooooooooooooMooooM\n                             MooooooooooooooooooMoooooooooooooooooooooooooMoooooM\n                             MooooMoooooooooooooMoooooooooooooooooooooooooMoHooooM\n                             ooooooMooooooooooooooooooooooooooooooooooooooooMoMoooM\n                            MooooooooooooooooooooMooooooooooooooooooooooooooMoooooH:\n                            MoooooooMooooooooooooMoooooooooooooooooooooooooooooHoooM\n                            MooooooooMoooooooooooMoooooooooooooooooooooooooMoooMooooM\n                            Moooooooooooooooooooooooooooooooooooooooooooooo.oooMooooo\n                            MoooooooooooooooooooooooooooooooooooooooooooooMoooooooooM\n                             MooooooooooooooooooooMoooooooooooooooooooooooooooooooooM\n                              MooooooooooooooooooooMHooooooooooooooooooooMoooo:ooooo\n                               MMooooooooooooooooooMoMHoooooooooooooooooooooooMooooo\n                                MMoooooooooooooooMMooo MMooooooooooooooooooooooooooM\n                                MMMoooooooooooooMooooo  oooooooooooooooooooooMooooo\n                                MooMMoooooooooMoooMMoM  ooooHooooooooooooooooMooooM\n                                MooooMooooooMooooMoooM  MoooooMoooooooooooooMooooo\n                                ooooooMMooooooooMooooM  MoooooooooMooooooooooooooM\n                                HooooooMoooooooMooooM    HoooooooHooMooooooooooooo\n                                 oooMoooooooooHoooM         MoooooooooMoooooooooM\n                                  HooooooooooooHM             MooooooooMMoooooooM\n                                   MMMMMMMMMMMMMM                Moooooo:MooooHMM\n                                    MMMMMMM: ...                  MMMMMMMMMMMMMM\n                                   M............M                  MMMMMMMMM ....\n                                   M.MM..........                  M.............M\n                                M ..............MM                 M..............\n                             MMMMM............MMMM                 ..MMMMMMMM ....M\n                           MMMMMMMMMMMMMMMMMMMMMMMM               MMMMMMMMMMMMM...M\n                        .MMMMMMMMMMMMMMMMMMMMMMMMMM               MMMMMMMMMMMMMMMMMM\n                        MMMMMMMMMMMMMMMMMMMMMMMMM                MMMMMMMMMMMMMMMMMMM\n                        :MMMMMMMMMMMMMMMMMMH                     MMMMMMMMMMMMMMMMMMM\n                           By EBEN Jérôme                        MMMMMMMMMMMMMMMMMM\n                                                                 MMMMMMMMMMMMMMM\n                                                                  HMMMMMM\n         \n        */\n```\n\n### 皮卡丘###\n\n```cpp\n /*\n        quu..__\n         $$$b  `---.__\n          \"$$b        `--.                          ___.---uuudP\n           `$$b           `.__.------.__     __.---'      $$$$\"              .\n             \"$b          -'            `-.-'            $$$\"              .'|\n               \".                                       d$\"             _.'  |\n                 `.   /                              ...\"             .'     |\n                   `./                           ..::-'            _.'       |\n                    /                         .:::-'            .-'         .'\n                   :                          ::''\\          _.'            |\n                  .' .-.             .-.           `.      .'               |\n                  : /'$$|           .@\"$\\           `.   .'              _.-'\n                 .'|$u$$|          |$$,$$|           |  <            _.-'\n                 | `:$$:'          :$$$$$:           `.  `.       .-'\n                 :                  `\"--'             |    `-.     \\\n                :##.       ==             .###.       `.      `.    `\\\n                |##:                      :###:        |        >     >\n                |#'     `..'`..'          `###'        x:      /     /\n                 \\                                   xXX|     /    ./\n                  \\                                xXXX'|    /   ./\n                  /`-.                                  `.  /   /\n                 :    `-  ...........,                   | /  .'\n                 |         ``:::::::'       .            |<    `.\n                 |             ```          |           x| \\ `.:``.\n                 |                         .'    /'   xXX|  `:`M`M':.\n                 |    |                    ;    /:' xXXX'|  -'MMMMM:'\n                 `.  .'                   :    /:'       |-'MMMM.-'\n                  |  |                   .'   /'        .'MMM.-'\n                  `'`'                   :  ,'          |MMM<\n                    |                     `'            |tbap\\\n                     \\                                  :MM.-'\n                      \\                 |              .''\n                       \\.               `.            /\n                        /     .:::::::.. :           /\n                       |     .:::::::::::`.         /\n                       |   .:::------------\\       /\n                      /   .''               >::'  /\n                      `',:                 :    .'\n                                           `:.:'\n\n         \n        */\n```\n\n### 电脑图像###\n\n```cpp\n /*\n                     ,----------------,              ,---------,\n                ,-----------------------,          ,\"        ,\"|\n              ,\"                      ,\"|        ,\"        ,\"  |\n             +-----------------------+  |      ,\"        ,\"    |\n             |  .-----------------.  |  |     +---------+      |\n             |  |                 |  |  |     | -==----'|      |\n             |  |  I LOVE DOS!    |  |  |     |         |      |\n             |  |  Bad command or |  |  |/----|`---=    |      |\n             |  |  C:\\>_          |  |  |   ,/|==== ooo |      ;\n             |  |                 |  |  |  // |(((( [33]|    ,\"\n             |  `-----------------'  |,\" .;'| |((((     |  ,\"\n             +-----------------------+  ;;  | |         |,\"\n                /_)______________(_/  //'   | +---------+\n           ___________________________/___  `,\n          /  oooooooooooooooo  .o.  oooo /,   \\,\"-----------\n         / ==ooooooooooooooo==.o.  ooo= //   ,`\\--{)B     ,\"\n        /_==__==========__==_ooo__ooo=_/'   /___________,\"\n         \n        */\n```\n\n- - - \n\n```cpp\n /*\n                                    _________\n                                   /         /.\n            .-------------.       /_________/ |\n           /             / |      |         | |\n          /+============+\\ |      | |====|  | |\n          ||C:\\>        || |      |         | |\n          ||            || |      | |====|  | |\n          ||            || |      |   ___   | |\n          ||            || |      |  |166|  | |\n          ||            ||/@@@    |   ---   | |\n          \\+============+/    @   |_________|./.\n                             @          ..  ....'\n          ..................@     __.'.'  ''\n         /oooooooooooooooo//     ///\n        /................//     /_/\n        ------------------\n        */\n```\n\n### 龙###\n\n```cpp\n/*\n        11111111111111111111111111111111111111001111111111111111111111111\n        11111111111111111111111111111111111100011111111111111111111111111\n        11111111111111111111111111111111100001111111111111111111111111111\n        11111111111111111111111111111110000111111111111111111111111111111\n        11111111111111111111111111111000000111111111111111111111111111111\n        11111111111111111111111111100000011110001100000000000000011111111\n        11111111111111111100000000000000000000000000000000011111111111111\n        11111111111111110111000000000000000000000000000011111111111111111\n        11111111111111111111111000000000000000000000000000000000111111111\n        11111111111111111110000000000000000000000000000000111111111111111\n        11111111111111111100011100000000000000000000000000000111111111111\n        11111111111111100000110000000000011000000000000000000011111111111\n        11111111111111000000000000000100111100000000000001100000111111111\n        11111111110000000000000000001110111110000000000000111000011111111\n        11111111000000000000000000011111111100000000000000011110001111111\n        11111110000000011111111111111111111100000000000000001111100111111\n        11111111000001111111111111111111110000000000000000001111111111111\n        11111111110111111111111111111100000000000000000000000111111111111\n        11111111111111110000000000000000000000000000000000000111111111111\n        11111111111111111100000000000000000000000000001100000111111111111\n        11111111111111000000000000000000000000000000111100000111111111111\n        11111111111000000000000000000000000000000001111110000111111111111\n        11111111100000000000000000000000000000001111111110000111111111111\n        11111110000000000000000000000000000000111111111110000111111111111\n        11111100000000000000000001110000001111111111111110001111111111111\n        11111000000000000000011111111111111111111111111110011111111111111\n        11110000000000000001111111111111111100111111111111111111111111111\n        11100000000000000011111111111111111111100001111111111111111111111\n        11100000000001000111111111111111111111111000001111111111111111111\n        11000000000001100111111111111111111111111110000000111111111111111\n        11000000000000111011111111111100011111000011100000001111111111111\n        11000000000000011111111111111111000111110000000000000011111111111\n        11000000000000000011111111111111000000000000000000000000111111111\n        11001000000000000000001111111110000000000000000000000000001111111\n        11100110000000000001111111110000000000000000111000000000000111111\n        11110110000000000000000000000000000000000111111111110000000011111\n        11111110000000000000000000000000000000001111111111111100000001111\n        11111110000010000000000000000001100000000111011111111110000001111\n        11111111000111110000000000000111110000000000111111111110110000111\n        11111110001111111100010000000001111100000111111111111111110000111\n        11111110001111111111111110000000111111100000000111111111111000111\n        11111111001111111111111111111000000111111111111111111111111100011\n        11111111101111111111111111111110000111111111111111111111111001111\n        11111111111111111111111111111110001111111111111111111111100111111\n        11111111111111111111111111111111001111111111111111111111001111111\n        11111111111111111111111111111111100111111111111111111111111111111\n        11111111111111111111111111111111110111111111111111111111111111111\n\n\n        */\n```\n\n- - -\n\n```cpp\n /*\n                                                     __----~~~~~~~~~~~------___\n                                          .  .   ~~//====......          __--~ ~~\n                          -.            \\_|//     |||\\\\  ~~~~~~::::... /~\n                       ___-==_       _-~o~  \\/    |||  \\\\            _/~~-\n               __---~~~.==~||\\=_    -_--~/_-~|-   |\\\\   \\\\        _/~\n           _-~~     .=~    |  \\\\-_    '-~7  /-   /  ||    \\      /\n         .~       .~       |   \\\\ -_    /  /-   /   ||      \\   /\n        /  ____  /         |     \\\\ ~-_/  /|- _/   .||       \\ /\n        |~~    ~~|--~~~~--_ \\     ~==-/   | \\~--===~~        .\\\n                 '         ~-|      /|    |-~\\~~       __--~~\n                             |-~~-_/ |    |   ~\\_   _-~            /\\\n                                  /  \\     \\__   \\/~                \\__\n                              _--~ _/ | .-~~____--~-/                  ~~==.\n                             ((->/~   '.|||' -_|    ~~-/ ,              . _||\n                                        -_     ~\\      ~~---l__i__i__i--~~_/\n                                        _-~-__   ~)  \\--______________--~~\n                                      //.-~~~-~_--~- |-------~~~~~~~~\n                                             //.-~~~--\\\n\n         \n        */\n```\n\n- - -\n\n```cpp\n//                       )      (\n//                  /+++=))    ((=+++\\\n//             /++++++++//      \\\\+++++++++\\\n//          /++++++++++//(  /\\  )\\\\++++++++++\\\n//        /+++++++++++//  \\\\^^//  \\\\+++++++++++\\\n//     _/++++++++++++//  {{@::@}}  \\\\++++++++++++\\_\n//    /+++++++++++++((     {\\/}     ))+++++++++++++\\\n//   /+++++++++++++++\\\\    <**>    //+++++++++++++++\\\n//  /+++++++++++++++++\\\\  / VV \\  //+++++++++++++++++\\\n// /+++++++++++++++++++\\\\/******\\//+++++++++++++++++++\\\n//|+/|++++++++++/\\++++++(***/\\***)++++++/\\++++++++++|\\+\\\n//|/ |+/\\+/\\+/\\/  \\+/\\++\\**|**|**/++/\\+/  \\/\\+/\\+/\\+| \\|\n//v  |/  V  V  V   V  \\+\\|*|**|*|/+/  V   v  V  V  \\|  v\n//   v                 /*|*|**|*|*\\...              v\n//                    (**|*|**|*|**). .\n//                   __\\*|*|**|*|*/__. .\n//                  (vvv(VVV)(VVV)vvv). .\n//                      ............../ /\n//                     / ............../\n//                     ((\n```\n\n- - -\n\n```cpp\n/*\n                 ___====-_  _-====___\n           _--^^^#####//      \\\\#####^^^--_\n        _-^##########// (    ) \\\\##########^-_\n       -############//  |\\^^/|  \\\\############-\n     _/############//   (@::@)   \\\\############\\_\n    /#############((     \\\\//     ))#############\\\n   -###############\\\\    (oo)    //###############-\n  -#################\\\\  / VV \\  //#################-\n -###################\\\\/      \\//###################-\n_#/|##########/\\######(   /\\   )######/\\##########|\\#_\n|/ |#/\\#/\\#/\\/  \\#/\\##\\  |  |  /##/\\#/  \\/\\#/\\#/\\#| \\|\n`  |/  V  V  `   V  \\#\\| |  | |/#/  V   '  V  V  \\|  '\n   `   `  `      `   / | |  | | \\   '      '  '   '\n                    (  | |  | |  )\n                   __\\ | |  | | /__\n                  (vvv(VVV)(VVV)vvv)\n                  \n*/\n```\n\n[参考博客](http://shiyousan.com/post/635479912728885400)","source":"_posts/通用/有趣代码注释.md","raw":"---\ntitle: 有趣代码注释\ndate: 2016-07-12 11:26:56\ntags: 代码注释\ncategories: 通用\n---\n\n### 佛祖保佑\n\n```cpp\n/*\n                   _ooOoo_\n                  o8888888o\n                  88\" . \"88\n                  (| -_- |)\n                  O\\  =  /O\n               ____/`---'\\____\n             .'  \\\\|     |//  `.\n            /  \\\\|||  :  |||//  \\\n           /  _||||| -:- |||||-  \\\n           |   | \\\\\\  -  /// |   |\n           | \\_|  ''\\---/''  |   |\n           \\  .-\\__  `-`  ___/-. /\n         ___`. .'  /--.--\\  `. . __\n      .\"\" '<  `.___\\_<|>_/___.'  >'\"\".\n     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /\n======`-.____`-.___\\_____/___.-`____.-'======\n                   `=---='\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n         佛祖保佑       永无BUG\n*/\n//          佛曰:  \n//                  写字楼里写字间，写字间里程序员；  \n//                  程序人员写程序，又拿程序换酒钱。  \n//                  酒醒只在网上坐，酒醉还来网下眠；  \n//                  酒醉酒醒日复日，网上网下年复年。  \n//                  但愿老死电脑间，不愿鞠躬老板前；  \n//                  奔驰宝马贵者趣，公交自行程序员。  \n//                  别人笑我忒疯癫，我笑自己命太贱；  \n//                  不见满街漂亮妹，哪个归得程序员？  \n```\n\n<!-- more -->\n\n### 神兽草泥马###\n\n\n```cpp\n/*\n*\n*          ┌─┐       ┌─┐\n*       ┌──┘ ┴───────┘ ┴──┐\n*       │                 │\n*       │       ───       │\n*       │  ─┬┘       └┬─  │\n*       │                 │\n*       │       ─┴─       │\n*       │                 │\n*       └───┐         ┌───┘\n*           │         │\n*           │         │\n*           │         │\n*           │         └──────────────┐\n*           │                        │\n*           │                        ├─┐\n*           │                        ┌─┘\n*           │                        │\n*           └─┐  ┐  ┌───────┬──┐  ┌──┘\n*             │ ─┤ ─┤       │ ─┤ ─┤\n*             └──┴──┘       └──┴──┘\n*                 神兽保佑\n*                 代码无BUG!\n*/\n```\n\n- - -\n\n```cpp\n/**\n *   ┏┓　　　┏┓\n * ┏┛┻━━━┛┻┓\n * ┃　　　　　　　┃\n * ┃　　　━　　　┃\n * ┃　┳┛　┗┳　┃\n * ┃　　　　　　　┃\n * ┃　　　┻　　　┃\n * ┃　　　　　　　┃\n * ┗━┓　　　┏━┛\n *    ┃　　　┃   \n *    ┃　　　┃   \n *    ┃　　　┗━━━┓\n *    ┃　　　　　　　┣┓\n *    ┃　　　　　　　┏┛\n *    ┗┓┓┏━┳┓┏┛\n *      ┃┫┫　┃┫┫\n *      ┗┻┛　┗┻┛\n *        神兽保佑 \n *        代码无BUG! \n */\n```\n\n### 胜利手势###\n\n```cpp\n//                      d*##$.\n// zP\"\"\"\"\"$e.           $\"    $o\n//4$       '$          $\"      $\n//'$        '$        J$       $F\n// 'b        $k       $>       $\n//  $k        $r     J$       d$\n//  '$         $     $\"       $~\n//   '$        \"$   '$E       $\n//    $         $L   $\"      $F ...\n//     $.       4B   $      $$$*\"\"\"*b\n//     '$        $.  $$     $$      $F\n//      \"$       R$  $F     $\"      $\n//       $k      ?$ u*     dF      .$\n//       ^$.      $$\"     z$      u$$$$e\n//        #$b             $E.dW@e$\"    ?$\n//         #$           .o$$# d$$$$c    ?F\n//          $      .d$$#\" . zo$>   #$r .uF\n//          $L .u$*\"      $&$$$k   .$$d$$F\n//           $$\"            \"\"^\"$$$P\"$P9$\n//          JP              .o$$$$u:$P $$\n//          $          ..ue$\"      \"\"  $\"\n//         d$          $F              $\n//         $$     ....udE             4B\n//          #$    \"\"\"\"` $r            @$\n//           ^$L        '$            $F\n//             RN        4N           $\n//              *$b                  d$\n//               $$k                 $F\n//               $$b                $F\n//                 $\"\"               $F\n//                 '$                $\n//                  $L               $\n//                  '$               $\n//                   $               $\n```\n\n### 围棋棋盘###\n\n```cpp\n//                             _______________________________________  \n//                            /  ___________________________________  \\\n//     _--\"\"\"\"--_            /  /_/_/_/_/_|_|_|_|_|_|_|_|_|_\\_\\_\\_\\_\\  \\\n//    /          \\          /  /_/_/_/_J__L_L_L_|_|_|_J_J_J__L_\\_\\_\\_\\  \\\n//   /\\          /\\        /  /_/_/_J__L_J__L_L_|_|_|_J_J__L_J__L_\\_\\_\\  \\\n//   L \"\"-____-\"\" J       /  /_/_J__L_J__L_J_J__L_|_J__L_L_J__L_J__L_\\_\\  \\\n//   \\            /      /  /_/__L_/__L_J__L_J__L_|_J__L_J__L_J__\\_J__\\_\\  \\\n//    \\_        _/      /  /_J__/_J__/__L_J__|__L_|_J__|__L_J__\\__L_\\__L_\\  \\\n//  _--\"\"\"\"\"--_\"       /  /  F /  F J  J  |  F J  |  F J  |  F  F J  \\ J  \\  \\\n// /           \\      /  /--/-J--/--L--|--L-J--J--|--L--L-J--|--J--\\--L-\\--\\  \\\n///\\           /\\    /  /__/__L_J__J___L_J__J__|__|__|__L__L_J___L__L_J__\\__\\  \\\n//L \"\"-_____-\"\" J   /  /  /  /  F  F  J  J  |  |  |  |  |  F  F  J  J  \\  \\  \\  \\\n//\\             /  /  /--/--/--/--J---L--|--|--|--o--|--|--|--J---L--\\--\\--\\--\\  \\\n// \\_         _/  /  /__/__J__J___L__J___L__L__L__|__J__J__J___L__J___L__L__\\__\\  \\\n//   \"--___--\"   /  /  /   F  F  J   F  J  J   F  |  J   F  F  J   F  J  J   \\  \\  \\\n//              /  /--/---/--J---L--J---L--|--J---|---L--|--J---L--J---L--\\---\\--\\  \\\n//             /  /__J___/___L__/___L__J___L__J___|___L__J___L__J___\\__J___\\___L__\\  \\\n//            /  /   F  J   /  J   J   |  J   J   |   F   F  |   F   F  \\   F  J   \\  \\\n//           /  /---/---L--J---L---L---L--|---|---|---|---|--J---J---J---L--J---\\---\\  \\\n//          /  /___/___/___L__J___J___J___|___|___|___|___|___L___L___L__J___\\___\\___\\  \\\n//         /  /   /   /   /   F   F   F   F   F   |   J   J   J   J   J   \\   \\   \\   \\  \\\n//        /  /___/___J___J___J___J___J____L___L___|___J___J____L___L___L___L___L___\\___\\  \\\n//       /  /   /    F   F   F   |   |   J    F   |   J    F   |   |   J   J   J    \\   \\  \\\n//      /  /___J____/___/___J____L___L___|___J____|____L___|___J___J____L___\\___\\____L___\\  \\\n//     /  /    F   /   J    F   J   J    |   J    |    F   |    F   F   J    F   \\   J    \\  \\\n//    /  /____/___J____L___/____L___|____L___|____|____|___J____|___J____\\___J____L___\\____\\  \\\n//   /  /    /    F   /   J    J    F   J    F    |    J    F   J    F    F   \\   J    \\    \\  \\\n//  /  /____/____/___J____L____|____L___J____L____|____J____L___J____|____J____L___\\____\\____\\  \\\n// /                                                                                             \\\n///_______________________________________________________________________________________________\\\n//|                                                                                               |\n//| hs                                                                                            |\n//|_______________________________________________________________________________________________|\n```\n\n### 书本###\n\n```cpp\n//                .-~~~~~~~~~-._       _.-~~~~~~~~~-.\n//            __.'              ~.   .~              `.__\n//          .'//                  \\./                  \\\\`.\n//        .'//                     |                     \\\\`.\n//      .'// .-~\"\"\"\"\"\"\"~~~~-._     |     _,-~~~~\"\"\"\"\"\"\"~-. \\\\`.\n//    .'//.-\"                 `-.  |  .-'                 \"-.\\\\`.\n//  .'//______.============-..   \\ | /   ..-============.______\\\\`.\n//.'______________________________\\|/______________________________`.\n```\n\n### 微软金典图标###\n\n```cpp\n  /*\n                         __\n                    ,-~¨^  ^¨-,           _,\n                   /          / ;^-._...,¨/\n                  /          / /         /\n                 /          / /         /\n                /          / /         /\n               /,.-:''-,_ / /         /\n               _,.-:--._ ^ ^:-._ __../\n             /^         / /¨:.._¨__.;\n            /          / /      ^  /\n           /          / /         /\n          /          / /         /\n         /_,.--:^-._/ /         /\n        ^            ^¨¨-.___.:^  (R) - G33K\n       \n        */\n```\n\n### Google###\n\n```cpp\n/*\n          ___                _\n         / __|___  ___  __ _| |___\n        | (_ / _ \\/ _ \\/ _` |   -_)\n         \\___\\___/\\___/\\__, |_\\___|\n                       |___/\n         \n        */\n```\n\n### 奥运五环###\n\n```cpp\n /*\n              _.-\"\"\"\"\"-._         _.-\"\"\"\"\"-._         _.-\"\"\"\"\"-._\n           ,'           `.     ,'           `.     ,'           `.\n          /               \\   /               \\   /               \\\n         |                 | |                 | |                 |\n        |                   |                   |                   |\n        |                   |                   |                   |\n         |             _.-\"|\"|\"-._         _.-\"|\"|\"-._             |\n          \\          ,'   /   \\   `.     ,'   /   \\   `.          /\n           `.       /   ,'     `.   \\   /   ,'     `.   \\       ,'\n             `-..__|..-'         `-..|_|..-'         `-..|__..-'\n                  |                   |                   |\n                  |                   |                   |\n                   |                 | |                 |\n                    \\               /   \\               /\n                     `.           ,'     `.           ,'\n                       `-..___..-'         `-..___..-'\n\n         */\n```\n\n### 七龙珠比克###\n\n```cpp\n /*\n                       _.---..._\n                   ./^         ^-._\n                 ./^C===.         ^\\.   /\\\n                .|'     \\\\        _ ^|.^.|\n           ___.--'_     ( )  .      ./ /||\n          /.---^T\\      ,     |     / /|||\n         C'   ._`|  ._ /  __,-/    / /-,||\n              \\ \\/    ;  /O  / _    |) )|,\n               i \\./^O\\./_,-^/^    ,;-^,'\n                \\ |`--/ ..-^^      |_-^\n                 `|  \\^-           /|:\n                  i.  .--         / '|.\n                   i   =='       /'  |\\._\n                 _./`._        //    |.  ^-ooo.._\n          _.oo../'  |  ^-.__./X/   . `|    |#######b\n         d####     |'      ^^^^   /   |    _\\#######\n         #####b ^^^^^^^^--. ...--^--^^^^^^^_.d######\n         ######b._         Y            _.d#########\n         ##########b._     |        _.d#############\n\n                                        \"Piccolo\" no. 2\n                                           (from Dragonball Z)\n                                                --- Steven J. Simmons\n         */\n```\n\n- - -\n\n```cpp\n /*\n                              /^_.-^  _  --^=_\n                           ./'-^__    _>=\\^^==^-.\n                           |'/^^_/  /^    \\ \\.^\\\\\\/\\\n                          ,|/| '  /'  _____\\ `\\|.^.|\n                          |'/   /_--^^ .   ^^-./ /||\n                          |/,--^  ,     |     / /||'\n                        ._|/   \\ /  __,-/    / /-,||\n                        \\ '/    ;  /O  / _    |) )|,\n                         i \\./^O\\./_,-^/^    ,;-^,'\n                          \\ |`--/ ..-^^      |_-^\n                           `|  \\^-_,/^Y\\      | ^^\\\n                           _i.  \\\".--V_/     /| \\. ^\\._____...--.>^^^^^^-------...._\n                          /  i   ^--^^     /'|' |\\. |./'        |                  ;\n        ___...----/^^^^---|.  `._\\  /^   /' |'_/' \\ `|         |'               ,/'\n                 |'        \\   _|^-.__./'__.^^\\     .|        ,|            _.-^\n                 `\\       ,|`_./^^-----^^._    ` ./ /        /^        _.-^^/\n                          |'  ^                  /-^                ./^    /\n        \\                 `\\_     __.-<       _,/                 ./'     |'\n         `\\.        `i       ^^--/._____...--^            .      ./       |.\n           `|        |                                   /       /        `|\n\n\n                                        \"Piccolo\"\n                                           (from Dragonball Z)\n                                                --- Steven J. Simmons         \n        */\n```\n\n### 七龙珠孙悟空###\n```cpp\n/*\n                           _\n                           \\\"-._ _.--\"~~\"--._\n                            \\   \"            ^.    ___\n                            /                  \\.-~_.-~\n                     .-----'     /\\/\"\\ /~-._      /\n                    /  __      _/\\-.__\\L_.-/\\     \"-.\n                   /.-\"  \\    ( ` \\_o>\"<o_/  \\  .--._\\\n                  /'      \\    \\:     \"     :/_/     \"`\n                          /  /\\ \"\\    ~    /~\"\n                          \\ I  \\/]\"-._ _.-\"[\n                       ___ \\|___/ ./    l   \\___   ___\n                  .--v~   \"v` ( `-.__   __.-' ) ~v\"   ~v--.\n               .-{   |     :   \\_    \"~\"    _/   :     |   }-.\n              /   \\  |           ~-.,___,.-~           |  /   \\\n             ]     \\ |                                 | /     [\n             /\\     \\|     :                     :     |/     /\\\n            /  ^._  _K.___,^                     ^.___,K_  _.^  \\\n           /   /  \"~/  \"\\                           /\"  \\~\"  \\   \\\n          /   /    /     \\ _          :          _ /     \\    \\   \\\n        .^--./    /       Y___________l___________Y       \\    \\.--^.\n        [    \\   /        |        [/    ]        |        \\   /    ]\n        |     \"v\"         l________[____/]________j  -Row   }r\"     /\n        }------t          /                       \\       /`-.     /\n        |      |         Y                         Y     /    \"-._/\n        }-----v'         |         :               |     7-.     /\n        |   |_|          |         l               |    / . \"-._/\n        l  .[_]          :          \\              :  r[]/_.  /\n         \\_____]                     \"--.             \"-.____/\n\n                                            \"Dragonball Z\"\n                                                        ---Row\n         \n        */\n```\n\n- - -\n\n```cpp\n /*\n                                MMMMM\n                                  MMMMMM\n                                    MMMMMMM\n                                     MMMMMMMM     .\n                                      MMMMMMMMM\n                                      HMMMMMMMMMM\n                                       MMMMMMMMMMMM  M\n                                       MMMMMMMMMMMMM  M\n                                        MMMMMMMMMMMMM  M\n                                        MMMMMMMMMMMMM:\n                                        oMMMMMMMMMMMMMM\n              .MMMMMMMMMMMMMMo           MMMMMMMMMMMMMMM M\n        MMMMMMMMMMMMMMMMMMMMMMMMMMM      MMMMMMMMMMMMMMMM\n          MMMMMMMMMMMMMMMMMMMMMMMMMMMM.  oMMMMMMMMMMMMMMM.M\n            MMMMMMMMMMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMMMMMM\n              MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                oMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:                     H\n                     MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM                  .         MMM\n                      MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM              M       MMMMMM\n                       .MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM          M   MMMMMMMMMM\n                MM.      MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM       M MMMMMMMMMMMM\n                    MM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    .MMMMMMMMMMMMMM\n                      MM  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                        MM MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n               .MMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                  HMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                     MMMMMMMMMMMMMMM MMM.oMMMMMMM..MMMMMMMMM:MMMMMMMMMMMMMMMMMMMMMMM\n                       MMMMMMMMMMMMMM MM..MMMMMMM...MMMMMMM. MMMMMMMMMMMMMMMMMMMMM\n                         MMMMMMMMMMMMMMM ..MMMMMM...MMMMMM ..MMMMMMMMMMMMMMMMMMM\n                          MMMMMMM:M.MMM.M.. MMMMM M..MMMMM...MMMMMMMMMMMMMMMMMM  MMM\n                            MMMM. .M..MM.M...MMMMMM..MMMMM.. MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM .\n                             MMMM..M....M.....:MMM .MMMMMM..MMMMMMM...MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n                              MMM.M.. ...M......MM.MMMMM.......MHM.M  .MMMMMMMMMMMMMMMMMMMMMMMMM\n                         MMMMMMMM..MM. . MMM.....MMMMMM.M.....M ..MM..M MMMMMMMMMMMMMMMMMMM\n                            .MMMMMHMM. ..MMMM. MMM............o..... . .MMMMMMMMMMMMMMM\n                               MMM. M... .........................M..:.MMMMMMMMMMMM\n                                 oMMM............ .................M.M.MMMMMMMMM\n                                    .....MM........................ . MMMMMM\n                                   M.....M.....................o.MM.MMMMMMMM.\n                                    M........................M.. ...MMMMMMMMMMMMMo\n                                      :....MMM..............MMM..oMMMMMMM\n                                       M...MMM.............MMMMMMM\n                                          .............:MMMMMMMM\n                                          M..... MMM.....M\n                                          M M.............\n                                          ................M\n                                       ooM.................MM  MoMMMMMoooM\n                                  MMoooM......................MoooooooH..oMM\n                              MHooooMoM.....................MMooooooM........M\n                            oooooooMoooM......... o........MoooooooM............\n                            Mooooooooooo.......M.........Moooooooo:..............M\n                           MooMoooooooooM...M........:Mooooooooooo:..............M\n                          M..oooooooooooo .........Mooooooooooooooo..............M\n                         M...Mooo:oooooooo.M....ooooooooooooooooooo..M...........M\n                          ...oooooMoooooooM..Mooooooooooooo:oooooooM.M...........M.\n                         M...ooooooMoo:ooooMoooooooooooooHoooooooooH:M. ...........:\n                         M..MoooooooMoooooooooooooooooo:ooooooMooooMoM..............M\n                         M..ooooooooooMooooooooooooooHoooooooMooHooooM...............M\n                         ...ooooooooooooooooooo:MooooooooooooooMoMoooM................\n                        M...oooooooooooooooooooooooooooooooooooooMooMM................M\n                        ...MooooooooooooooooooooooooooooooooooooooooMo ................\n                        ...MooooooooooooooooooooooooooooooooooooooooM M................M\n                       M...ooooooooooooooooooooooooooooooooooooooooM   ................M\n                       ...MoooooooooooooooooooooooooooooooooooooooMM   .:...............\n                       .....MooooooooooooooooooooooooooooooooooooMoo       .............M\n                       M...... ooooooooooooooooooooooooooooooooooooM       M..............M\n                       M........MooooMMM MM MM  MMMMMMMMMooooooooM         M...............M\n                       .........HM     M:  MM :MMMMMM          M           M...............\n                      M..........M     M   MoM M                           M................M\n                      M.........:M  MoH  M M M MooooHoooMM.   M             M...............M\n                      M..........Moooo MMooM    oooooMooooooooM              M..............H\n                      M.........MooooM  Mooo  : ooooooMooooMoooM              M........ . .o.M\n                      H..  .....ooooo   oooo  M MooooooooooooooM               M... MMMMMMMMMMM\n                      MMMMMMMMMMooooM M oooo  .  ooooooMooooooooM              .MMMMMMMMMMMMMMM\n                      MMMMMMMMMMooooH : ooooH    oooooooooooooooo               MMMMMMMMMMMMMMM\n                      MMMMMMMMMMoooo    ooooM    Moooooooooooooooo              .MMMMMMMMMMMMMMM\n                      MMMMMMMMMMoooo    ooooM    MooooooooooooooooM              MMMMMMMMMMMMMMM\n                      MMMMMMMMMMoooM    ooooM     ooooooooooooooooo               MMMMMMMMMMM:M\n                      MMMMMMMMMMoooM   MooooM     oooooooooooMoooooo               MH...........\n                       . ......Mooo.   MooooM     oooooooooooooooooo              M............M\n                      M.M......oooo    MooooM     Moooooooooooooooooo:           .........M.....\n                      M.M.....Moooo    MooooM      ooooooooooooooooooM            .M............\n                      .......MooooH    MooooM      oooooooooMoooooooooo          M..o...M..o....M\n                      .o....HMooooM    MooooH      MooooooooMooooooooooM          .:M...M.......M\n                     M..M.....MoooM    :oooo:    .MooooooooHooMoooooooooM         M M... ..oM.M\n                      M...M.:.Mooo. MMMMooooo   oooooooooooMoooooooooooooM          ....M. M\n                       M:M..o.Moooooooooooooo MooooooooooooooMooooooooooooM          .Mo\n                              MooooooooooooooMooooooooooooMoMoooooooooooooo\n                              Mooooooooooooooo:ooooooooooooooooooooooooooooo\n                              ooooooooooooooooMooooooooooMoooooooooooooooooo\n                              ooooooooooooooooMoooooooooooMooooooooooooooooHo\n                              ooMooooooooooooooMoooooooooooooooooooooooooooMoM\n                             MooMoooooooooooooo.ooooooooooooooooooooooooooo:oM\n                             MoooooooooooooooooooooooooooooooooooooooooooooooM\n                             MoooMooooooooooooooMooooooooooooooooooooooooooooo.\n                             MoooMooooooooooooooMoooooooooooooooooooooooooMooooM\n                             MooooooooooooooooooMoooooooooooooooooooooooooMoooooM\n                             MooooMoooooooooooooMoooooooooooooooooooooooooMoHooooM\n                             ooooooMooooooooooooooooooooooooooooooooooooooooMoMoooM\n                            MooooooooooooooooooooMooooooooooooooooooooooooooMoooooH:\n                            MoooooooMooooooooooooMoooooooooooooooooooooooooooooHoooM\n                            MooooooooMoooooooooooMoooooooooooooooooooooooooMoooMooooM\n                            Moooooooooooooooooooooooooooooooooooooooooooooo.oooMooooo\n                            MoooooooooooooooooooooooooooooooooooooooooooooMoooooooooM\n                             MooooooooooooooooooooMoooooooooooooooooooooooooooooooooM\n                              MooooooooooooooooooooMHooooooooooooooooooooMoooo:ooooo\n                               MMooooooooooooooooooMoMHoooooooooooooooooooooooMooooo\n                                MMoooooooooooooooMMooo MMooooooooooooooooooooooooooM\n                                MMMoooooooooooooMooooo  oooooooooooooooooooooMooooo\n                                MooMMoooooooooMoooMMoM  ooooHooooooooooooooooMooooM\n                                MooooMooooooMooooMoooM  MoooooMoooooooooooooMooooo\n                                ooooooMMooooooooMooooM  MoooooooooMooooooooooooooM\n                                HooooooMoooooooMooooM    HoooooooHooMooooooooooooo\n                                 oooMoooooooooHoooM         MoooooooooMoooooooooM\n                                  HooooooooooooHM             MooooooooMMoooooooM\n                                   MMMMMMMMMMMMMM                Moooooo:MooooHMM\n                                    MMMMMMM: ...                  MMMMMMMMMMMMMM\n                                   M............M                  MMMMMMMMM ....\n                                   M.MM..........                  M.............M\n                                M ..............MM                 M..............\n                             MMMMM............MMMM                 ..MMMMMMMM ....M\n                           MMMMMMMMMMMMMMMMMMMMMMMM               MMMMMMMMMMMMM...M\n                        .MMMMMMMMMMMMMMMMMMMMMMMMMM               MMMMMMMMMMMMMMMMMM\n                        MMMMMMMMMMMMMMMMMMMMMMMMM                MMMMMMMMMMMMMMMMMMM\n                        :MMMMMMMMMMMMMMMMMMH                     MMMMMMMMMMMMMMMMMMM\n                           By EBEN Jérôme                        MMMMMMMMMMMMMMMMMM\n                                                                 MMMMMMMMMMMMMMM\n                                                                  HMMMMMM\n         \n        */\n```\n\n### 皮卡丘###\n\n```cpp\n /*\n        quu..__\n         $$$b  `---.__\n          \"$$b        `--.                          ___.---uuudP\n           `$$b           `.__.------.__     __.---'      $$$$\"              .\n             \"$b          -'            `-.-'            $$$\"              .'|\n               \".                                       d$\"             _.'  |\n                 `.   /                              ...\"             .'     |\n                   `./                           ..::-'            _.'       |\n                    /                         .:::-'            .-'         .'\n                   :                          ::''\\          _.'            |\n                  .' .-.             .-.           `.      .'               |\n                  : /'$$|           .@\"$\\           `.   .'              _.-'\n                 .'|$u$$|          |$$,$$|           |  <            _.-'\n                 | `:$$:'          :$$$$$:           `.  `.       .-'\n                 :                  `\"--'             |    `-.     \\\n                :##.       ==             .###.       `.      `.    `\\\n                |##:                      :###:        |        >     >\n                |#'     `..'`..'          `###'        x:      /     /\n                 \\                                   xXX|     /    ./\n                  \\                                xXXX'|    /   ./\n                  /`-.                                  `.  /   /\n                 :    `-  ...........,                   | /  .'\n                 |         ``:::::::'       .            |<    `.\n                 |             ```          |           x| \\ `.:``.\n                 |                         .'    /'   xXX|  `:`M`M':.\n                 |    |                    ;    /:' xXXX'|  -'MMMMM:'\n                 `.  .'                   :    /:'       |-'MMMM.-'\n                  |  |                   .'   /'        .'MMM.-'\n                  `'`'                   :  ,'          |MMM<\n                    |                     `'            |tbap\\\n                     \\                                  :MM.-'\n                      \\                 |              .''\n                       \\.               `.            /\n                        /     .:::::::.. :           /\n                       |     .:::::::::::`.         /\n                       |   .:::------------\\       /\n                      /   .''               >::'  /\n                      `',:                 :    .'\n                                           `:.:'\n\n         \n        */\n```\n\n### 电脑图像###\n\n```cpp\n /*\n                     ,----------------,              ,---------,\n                ,-----------------------,          ,\"        ,\"|\n              ,\"                      ,\"|        ,\"        ,\"  |\n             +-----------------------+  |      ,\"        ,\"    |\n             |  .-----------------.  |  |     +---------+      |\n             |  |                 |  |  |     | -==----'|      |\n             |  |  I LOVE DOS!    |  |  |     |         |      |\n             |  |  Bad command or |  |  |/----|`---=    |      |\n             |  |  C:\\>_          |  |  |   ,/|==== ooo |      ;\n             |  |                 |  |  |  // |(((( [33]|    ,\"\n             |  `-----------------'  |,\" .;'| |((((     |  ,\"\n             +-----------------------+  ;;  | |         |,\"\n                /_)______________(_/  //'   | +---------+\n           ___________________________/___  `,\n          /  oooooooooooooooo  .o.  oooo /,   \\,\"-----------\n         / ==ooooooooooooooo==.o.  ooo= //   ,`\\--{)B     ,\"\n        /_==__==========__==_ooo__ooo=_/'   /___________,\"\n         \n        */\n```\n\n- - - \n\n```cpp\n /*\n                                    _________\n                                   /         /.\n            .-------------.       /_________/ |\n           /             / |      |         | |\n          /+============+\\ |      | |====|  | |\n          ||C:\\>        || |      |         | |\n          ||            || |      | |====|  | |\n          ||            || |      |   ___   | |\n          ||            || |      |  |166|  | |\n          ||            ||/@@@    |   ---   | |\n          \\+============+/    @   |_________|./.\n                             @          ..  ....'\n          ..................@     __.'.'  ''\n         /oooooooooooooooo//     ///\n        /................//     /_/\n        ------------------\n        */\n```\n\n### 龙###\n\n```cpp\n/*\n        11111111111111111111111111111111111111001111111111111111111111111\n        11111111111111111111111111111111111100011111111111111111111111111\n        11111111111111111111111111111111100001111111111111111111111111111\n        11111111111111111111111111111110000111111111111111111111111111111\n        11111111111111111111111111111000000111111111111111111111111111111\n        11111111111111111111111111100000011110001100000000000000011111111\n        11111111111111111100000000000000000000000000000000011111111111111\n        11111111111111110111000000000000000000000000000011111111111111111\n        11111111111111111111111000000000000000000000000000000000111111111\n        11111111111111111110000000000000000000000000000000111111111111111\n        11111111111111111100011100000000000000000000000000000111111111111\n        11111111111111100000110000000000011000000000000000000011111111111\n        11111111111111000000000000000100111100000000000001100000111111111\n        11111111110000000000000000001110111110000000000000111000011111111\n        11111111000000000000000000011111111100000000000000011110001111111\n        11111110000000011111111111111111111100000000000000001111100111111\n        11111111000001111111111111111111110000000000000000001111111111111\n        11111111110111111111111111111100000000000000000000000111111111111\n        11111111111111110000000000000000000000000000000000000111111111111\n        11111111111111111100000000000000000000000000001100000111111111111\n        11111111111111000000000000000000000000000000111100000111111111111\n        11111111111000000000000000000000000000000001111110000111111111111\n        11111111100000000000000000000000000000001111111110000111111111111\n        11111110000000000000000000000000000000111111111110000111111111111\n        11111100000000000000000001110000001111111111111110001111111111111\n        11111000000000000000011111111111111111111111111110011111111111111\n        11110000000000000001111111111111111100111111111111111111111111111\n        11100000000000000011111111111111111111100001111111111111111111111\n        11100000000001000111111111111111111111111000001111111111111111111\n        11000000000001100111111111111111111111111110000000111111111111111\n        11000000000000111011111111111100011111000011100000001111111111111\n        11000000000000011111111111111111000111110000000000000011111111111\n        11000000000000000011111111111111000000000000000000000000111111111\n        11001000000000000000001111111110000000000000000000000000001111111\n        11100110000000000001111111110000000000000000111000000000000111111\n        11110110000000000000000000000000000000000111111111110000000011111\n        11111110000000000000000000000000000000001111111111111100000001111\n        11111110000010000000000000000001100000000111011111111110000001111\n        11111111000111110000000000000111110000000000111111111110110000111\n        11111110001111111100010000000001111100000111111111111111110000111\n        11111110001111111111111110000000111111100000000111111111111000111\n        11111111001111111111111111111000000111111111111111111111111100011\n        11111111101111111111111111111110000111111111111111111111111001111\n        11111111111111111111111111111110001111111111111111111111100111111\n        11111111111111111111111111111111001111111111111111111111001111111\n        11111111111111111111111111111111100111111111111111111111111111111\n        11111111111111111111111111111111110111111111111111111111111111111\n\n\n        */\n```\n\n- - -\n\n```cpp\n /*\n                                                     __----~~~~~~~~~~~------___\n                                          .  .   ~~//====......          __--~ ~~\n                          -.            \\_|//     |||\\\\  ~~~~~~::::... /~\n                       ___-==_       _-~o~  \\/    |||  \\\\            _/~~-\n               __---~~~.==~||\\=_    -_--~/_-~|-   |\\\\   \\\\        _/~\n           _-~~     .=~    |  \\\\-_    '-~7  /-   /  ||    \\      /\n         .~       .~       |   \\\\ -_    /  /-   /   ||      \\   /\n        /  ____  /         |     \\\\ ~-_/  /|- _/   .||       \\ /\n        |~~    ~~|--~~~~--_ \\     ~==-/   | \\~--===~~        .\\\n                 '         ~-|      /|    |-~\\~~       __--~~\n                             |-~~-_/ |    |   ~\\_   _-~            /\\\n                                  /  \\     \\__   \\/~                \\__\n                              _--~ _/ | .-~~____--~-/                  ~~==.\n                             ((->/~   '.|||' -_|    ~~-/ ,              . _||\n                                        -_     ~\\      ~~---l__i__i__i--~~_/\n                                        _-~-__   ~)  \\--______________--~~\n                                      //.-~~~-~_--~- |-------~~~~~~~~\n                                             //.-~~~--\\\n\n         \n        */\n```\n\n- - -\n\n```cpp\n//                       )      (\n//                  /+++=))    ((=+++\\\n//             /++++++++//      \\\\+++++++++\\\n//          /++++++++++//(  /\\  )\\\\++++++++++\\\n//        /+++++++++++//  \\\\^^//  \\\\+++++++++++\\\n//     _/++++++++++++//  {{@::@}}  \\\\++++++++++++\\_\n//    /+++++++++++++((     {\\/}     ))+++++++++++++\\\n//   /+++++++++++++++\\\\    <**>    //+++++++++++++++\\\n//  /+++++++++++++++++\\\\  / VV \\  //+++++++++++++++++\\\n// /+++++++++++++++++++\\\\/******\\//+++++++++++++++++++\\\n//|+/|++++++++++/\\++++++(***/\\***)++++++/\\++++++++++|\\+\\\n//|/ |+/\\+/\\+/\\/  \\+/\\++\\**|**|**/++/\\+/  \\/\\+/\\+/\\+| \\|\n//v  |/  V  V  V   V  \\+\\|*|**|*|/+/  V   v  V  V  \\|  v\n//   v                 /*|*|**|*|*\\...              v\n//                    (**|*|**|*|**). .\n//                   __\\*|*|**|*|*/__. .\n//                  (vvv(VVV)(VVV)vvv). .\n//                      ............../ /\n//                     / ............../\n//                     ((\n```\n\n- - -\n\n```cpp\n/*\n                 ___====-_  _-====___\n           _--^^^#####//      \\\\#####^^^--_\n        _-^##########// (    ) \\\\##########^-_\n       -############//  |\\^^/|  \\\\############-\n     _/############//   (@::@)   \\\\############\\_\n    /#############((     \\\\//     ))#############\\\n   -###############\\\\    (oo)    //###############-\n  -#################\\\\  / VV \\  //#################-\n -###################\\\\/      \\//###################-\n_#/|##########/\\######(   /\\   )######/\\##########|\\#_\n|/ |#/\\#/\\#/\\/  \\#/\\##\\  |  |  /##/\\#/  \\/\\#/\\#/\\#| \\|\n`  |/  V  V  `   V  \\#\\| |  | |/#/  V   '  V  V  \\|  '\n   `   `  `      `   / | |  | | \\   '      '  '   '\n                    (  | |  | |  )\n                   __\\ | |  | | /__\n                  (vvv(VVV)(VVV)vvv)\n                  \n*/\n```\n\n[参考博客](http://shiyousan.com/post/635479912728885400)","slug":"通用/有趣代码注释","published":1,"updated":"2016-07-12T03:50:14.819Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qn00051kgaedjweej7h","content":"<h3 id=\"佛祖保佑\"><a href=\"#佛祖保佑\" class=\"headerlink\" title=\"佛祖保佑\"></a>佛祖保佑</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                   _ooOoo_</span><br><span class=\"line\">                  o8888888o</span><br><span class=\"line\">                  88\" . \"88</span><br><span class=\"line\">                  (| -_- |)</span><br><span class=\"line\">                  O\\  =  /O</span><br><span class=\"line\">               ____/`---'\\____</span><br><span class=\"line\">             .'  \\\\|     |//  `.</span><br><span class=\"line\">            /  \\\\|||  :  |||//  \\</span><br><span class=\"line\">           /  _||||| -:- |||||-  \\</span><br><span class=\"line\">           |   | \\\\\\  -  /// |   |</span><br><span class=\"line\">           | \\_|  ''\\---/''  |   |</span><br><span class=\"line\">           \\  .-\\__  `-`  ___/-. /</span><br><span class=\"line\">         ___`. .'  /--.--\\  `. . __</span><br><span class=\"line\">      .\"\" '&lt;  `.___\\_&lt;|&gt;_/___.'  &gt;'\"\".</span><br><span class=\"line\">     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |</span><br><span class=\"line\">     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /</span><br><span class=\"line\">======`-.____`-.___\\_____/___.-`____.-'======</span><br><span class=\"line\">                   `=---='</span><br><span class=\"line\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class=\"line\">         佛祖保佑       永无BUG</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//          佛曰:  </span></span><br><span class=\"line\"><span class=\"comment\">//                  写字楼里写字间，写字间里程序员；  </span></span><br><span class=\"line\"><span class=\"comment\">//                  程序人员写程序，又拿程序换酒钱。  </span></span><br><span class=\"line\"><span class=\"comment\">//                  酒醒只在网上坐，酒醉还来网下眠；  </span></span><br><span class=\"line\"><span class=\"comment\">//                  酒醉酒醒日复日，网上网下年复年。  </span></span><br><span class=\"line\"><span class=\"comment\">//                  但愿老死电脑间，不愿鞠躬老板前；  </span></span><br><span class=\"line\"><span class=\"comment\">//                  奔驰宝马贵者趣，公交自行程序员。  </span></span><br><span class=\"line\"><span class=\"comment\">//                  别人笑我忒疯癫，我笑自己命太贱；  </span></span><br><span class=\"line\"><span class=\"comment\">//                  不见满街漂亮妹，哪个归得程序员？</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"神兽草泥马\"><a href=\"#神兽草泥马\" class=\"headerlink\" title=\"神兽草泥马\"></a>神兽草泥马</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">*</span><br><span class=\"line\">*          ┌─┐       ┌─┐</span><br><span class=\"line\">*       ┌──┘ ┴───────┘ ┴──┐</span><br><span class=\"line\">*       │                 │</span><br><span class=\"line\">*       │       ───       │</span><br><span class=\"line\">*       │  ─┬┘       └┬─  │</span><br><span class=\"line\">*       │                 │</span><br><span class=\"line\">*       │       ─┴─       │</span><br><span class=\"line\">*       │                 │</span><br><span class=\"line\">*       └───┐         ┌───┘</span><br><span class=\"line\">*           │         │</span><br><span class=\"line\">*           │         │</span><br><span class=\"line\">*           │         │</span><br><span class=\"line\">*           │         └──────────────┐</span><br><span class=\"line\">*           │                        │</span><br><span class=\"line\">*           │                        ├─┐</span><br><span class=\"line\">*           │                        ┌─┘</span><br><span class=\"line\">*           │                        │</span><br><span class=\"line\">*           └─┐  ┐  ┌───────┬──┐  ┌──┘</span><br><span class=\"line\">*             │ ─┤ ─┤       │ ─┤ ─┤</span><br><span class=\"line\">*             └──┴──┘       └──┴──┘</span><br><span class=\"line\">*                 神兽保佑</span><br><span class=\"line\">*                 代码无BUG!</span><br><span class=\"line\">*/</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> *   ┏┓　　　┏┓</span><br><span class=\"line\"> * ┏┛┻━━━┛┻┓</span><br><span class=\"line\"> * ┃　　　　　　　┃</span><br><span class=\"line\"> * ┃　　　━　　　┃</span><br><span class=\"line\"> * ┃　┳┛　┗┳　┃</span><br><span class=\"line\"> * ┃　　　　　　　┃</span><br><span class=\"line\"> * ┃　　　┻　　　┃</span><br><span class=\"line\"> * ┃　　　　　　　┃</span><br><span class=\"line\"> * ┗━┓　　　┏━┛</span><br><span class=\"line\"> *    ┃　　　┃   </span><br><span class=\"line\"> *    ┃　　　┃   </span><br><span class=\"line\"> *    ┃　　　┗━━━┓</span><br><span class=\"line\"> *    ┃　　　　　　　┣┓</span><br><span class=\"line\"> *    ┃　　　　　　　┏┛</span><br><span class=\"line\"> *    ┗┓┓┏━┳┓┏┛</span><br><span class=\"line\"> *      ┃┫┫　┃┫┫</span><br><span class=\"line\"> *      ┗┻┛　┗┻┛</span><br><span class=\"line\"> *        神兽保佑 </span><br><span class=\"line\"> *        代码无BUG! </span><br><span class=\"line\"> */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"胜利手势\"><a href=\"#胜利手势\" class=\"headerlink\" title=\"胜利手势\"></a>胜利手势</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//                      d*##$.</span></span><br><span class=\"line\"><span class=\"comment\">// zP\"\"\"\"\"$e.           $\"    $o</span></span><br><span class=\"line\"><span class=\"comment\">//4$       '$          $\"      $</span></span><br><span class=\"line\"><span class=\"comment\">//'$        '$        J$       $F</span></span><br><span class=\"line\"><span class=\"comment\">// 'b        $k       $&gt;       $</span></span><br><span class=\"line\"><span class=\"comment\">//  $k        $r     J$       d$</span></span><br><span class=\"line\"><span class=\"comment\">//  '$         $     $\"       $~</span></span><br><span class=\"line\"><span class=\"comment\">//   '$        \"$   '$E       $</span></span><br><span class=\"line\"><span class=\"comment\">//    $         $L   $\"      $F ...</span></span><br><span class=\"line\"><span class=\"comment\">//     $.       4B   $      $$$*\"\"\"*b</span></span><br><span class=\"line\"><span class=\"comment\">//     '$        $.  $$     $$      $F</span></span><br><span class=\"line\"><span class=\"comment\">//      \"$       R$  $F     $\"      $</span></span><br><span class=\"line\"><span class=\"comment\">//       $k      ?$ u*     dF      .$</span></span><br><span class=\"line\"><span class=\"comment\">//       ^$.      $$\"     z$      u$$$$e</span></span><br><span class=\"line\"><span class=\"comment\">//        #$b             $E.dW@e$\"    ?$</span></span><br><span class=\"line\"><span class=\"comment\">//         #$           .o$$# d$$$$c    ?F</span></span><br><span class=\"line\"><span class=\"comment\">//          $      .d$$#\" . zo$&gt;   #$r .uF</span></span><br><span class=\"line\"><span class=\"comment\">//          $L .u$*\"      $&amp;$$$k   .$$d$$F</span></span><br><span class=\"line\"><span class=\"comment\">//           $$\"            \"\"^\"$$$P\"$P9$</span></span><br><span class=\"line\"><span class=\"comment\">//          JP              .o$$$$u:$P $$</span></span><br><span class=\"line\"><span class=\"comment\">//          $          ..ue$\"      \"\"  $\"</span></span><br><span class=\"line\"><span class=\"comment\">//         d$          $F              $</span></span><br><span class=\"line\"><span class=\"comment\">//         $$     ....udE             4B</span></span><br><span class=\"line\"><span class=\"comment\">//          #$    \"\"\"\"` $r            @$</span></span><br><span class=\"line\"><span class=\"comment\">//           ^$L        '$            $F</span></span><br><span class=\"line\"><span class=\"comment\">//             RN        4N           $</span></span><br><span class=\"line\"><span class=\"comment\">//              *$b                  d$</span></span><br><span class=\"line\"><span class=\"comment\">//               $$k                 $F</span></span><br><span class=\"line\"><span class=\"comment\">//               $$b                $F</span></span><br><span class=\"line\"><span class=\"comment\">//                 $\"\"               $F</span></span><br><span class=\"line\"><span class=\"comment\">//                 '$                $</span></span><br><span class=\"line\"><span class=\"comment\">//                  $L               $</span></span><br><span class=\"line\"><span class=\"comment\">//                  '$               $</span></span><br><span class=\"line\"><span class=\"comment\">//                   $               $</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"围棋棋盘\"><a href=\"#围棋棋盘\" class=\"headerlink\" title=\"围棋棋盘\"></a>围棋棋盘</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//                             _______________________________________  </span></span><br><span class=\"line\"><span class=\"comment\">//                            /  ___________________________________  \\</span></span><br><span class=\"line\"><span class=\"comment\">//     _--\"\"\"\"--_            /  /_/_/_/_/_|_|_|_|_|_|_|_|_|_\\_\\_\\_\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//    /          \\          /  /_/_/_/_J__L_L_L_|_|_|_J_J_J__L_\\_\\_\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   /\\          /\\        /  /_/_/_J__L_J__L_L_|_|_|_J_J__L_J__L_\\_\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   L \"\"-____-\"\" J       /  /_/_J__L_J__L_J_J__L_|_J__L_L_J__L_J__L_\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   \\            /      /  /_/__L_/__L_J__L_J__L_|_J__L_J__L_J__\\_J__\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//    \\_        _/      /  /_J__/_J__/__L_J__|__L_|_J__|__L_J__\\__L_\\__L_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//  _--\"\"\"\"\"--_\"       /  /  F /  F J  J  |  F J  |  F J  |  F  F J  \\ J  \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">// /           \\      /  /--/-J--/--L--|--L-J--J--|--L--L-J--|--J--\\--L-\\--\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">///\\           /\\    /  /__/__L_J__J___L_J__J__|__|__|__L__L_J___L__L_J__\\__\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//L \"\"-_____-\"\" J   /  /  /  /  F  F  J  J  |  |  |  |  |  F  F  J  J  \\  \\  \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//\\             /  /  /--/--/--/--J---L--|--|--|--o--|--|--|--J---L--\\--\\--\\--\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">// \\_         _/  /  /__/__J__J___L__J___L__L__L__|__J__J__J___L__J___L__L__\\__\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   \"--___--\"   /  /  /   F  F  J   F  J  J   F  |  J   F  F  J   F  J  J   \\  \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//              /  /--/---/--J---L--J---L--|--J---|---L--|--J---L--J---L--\\---\\--\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//             /  /__J___/___L__/___L__J___L__J___|___L__J___L__J___\\__J___\\___L__\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//            /  /   F  J   /  J   J   |  J   J   |   F   F  |   F   F  \\   F  J   \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//           /  /---/---L--J---L---L---L--|---|---|---|---|--J---J---J---L--J---\\---\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//          /  /___/___/___L__J___J___J___|___|___|___|___|___L___L___L__J___\\___\\___\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//         /  /   /   /   /   F   F   F   F   F   |   J   J   J   J   J   \\   \\   \\   \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//        /  /___/___J___J___J___J___J____L___L___|___J___J____L___L___L___L___L___\\___\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//       /  /   /    F   F   F   |   |   J    F   |   J    F   |   |   J   J   J    \\   \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//      /  /___J____/___/___J____L___L___|___J____|____L___|___J___J____L___\\___\\____L___\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//     /  /    F   /   J    F   J   J    |   J    |    F   |    F   F   J    F   \\   J    \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//    /  /____/___J____L___/____L___|____L___|____|____|___J____|___J____\\___J____L___\\____\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   /  /    /    F   /   J    J    F   J    F    |    J    F   J    F    F   \\   J    \\    \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//  /  /____/____/___J____L____|____L___J____L____|____J____L___J____|____J____L___\\____\\____\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">// /                                                                                             \\</span></span><br><span class=\"line\"><span class=\"comment\">///_______________________________________________________________________________________________\\</span></span><br><span class=\"line\"><span class=\"comment\">//|                                                                                               |</span></span><br><span class=\"line\"><span class=\"comment\">//| hs                                                                                            |</span></span><br><span class=\"line\"><span class=\"comment\">//|_______________________________________________________________________________________________|</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"书本\"><a href=\"#书本\" class=\"headerlink\" title=\"书本\"></a>书本</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//                .-~~~~~~~~~-._       _.-~~~~~~~~~-.</span></span><br><span class=\"line\"><span class=\"comment\">//            __.'              ~.   .~              `.__</span></span><br><span class=\"line\"><span class=\"comment\">//          .'//                  \\./                  \\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//        .'//                     |                     \\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//      .'// .-~\"\"\"\"\"\"\"~~~~-._     |     _,-~~~~\"\"\"\"\"\"\"~-. \\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//    .'//.-\"                 `-.  |  .-'                 \"-.\\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//  .'//______.============-..   \\ | /   ..-============.______\\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//.'______________________________\\|/______________________________`.</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"微软金典图标\"><a href=\"#微软金典图标\" class=\"headerlink\" title=\"微软金典图标\"></a>微软金典图标</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                       __</span><br><span class=\"line\">                  ,-~¨^  ^¨-,           _,</span><br><span class=\"line\">                 /          / ;^-._...,¨/</span><br><span class=\"line\">                /          / /         /</span><br><span class=\"line\">               /          / /         /</span><br><span class=\"line\">              /          / /         /</span><br><span class=\"line\">             /,.-:''-,_ / /         /</span><br><span class=\"line\">             _,.-:--._ ^ ^:-._ __../</span><br><span class=\"line\">           /^         / /¨:.._¨__.;</span><br><span class=\"line\">          /          / /      ^  /</span><br><span class=\"line\">         /          / /         /</span><br><span class=\"line\">        /          / /         /</span><br><span class=\"line\">       /_,.--:^-._/ /         /</span><br><span class=\"line\">      ^            ^¨¨-.___.:^  (R) - G33K</span><br><span class=\"line\">     </span><br><span class=\"line\">      */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Google\"><a href=\"#Google\" class=\"headerlink\" title=\"Google\"></a>Google</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">          ___                _</span><br><span class=\"line\">         / __|___  ___  __ _| |___</span><br><span class=\"line\">        | (_ / _ \\/ _ \\/ _` |   -_)</span><br><span class=\"line\">         \\___\\___/\\___/\\__, |_\\___|</span><br><span class=\"line\">                       |___/</span><br><span class=\"line\">         </span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"奥运五环\"><a href=\"#奥运五环\" class=\"headerlink\" title=\"奥运五环\"></a>奥运五环</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">             _.-\"\"\"\"\"-._         _.-\"\"\"\"\"-._         _.-\"\"\"\"\"-._</span><br><span class=\"line\">          ,'           `.     ,'           `.     ,'           `.</span><br><span class=\"line\">         /               \\   /               \\   /               \\</span><br><span class=\"line\">        |                 | |                 | |                 |</span><br><span class=\"line\">       |                   |                   |                   |</span><br><span class=\"line\">       |                   |                   |                   |</span><br><span class=\"line\">        |             _.-\"|\"|\"-._         _.-\"|\"|\"-._             |</span><br><span class=\"line\">         \\          ,'   /   \\   `.     ,'   /   \\   `.          /</span><br><span class=\"line\">          `.       /   ,'     `.   \\   /   ,'     `.   \\       ,'</span><br><span class=\"line\">            `-..__|..-'         `-..|_|..-'         `-..|__..-'</span><br><span class=\"line\">                 |                   |                   |</span><br><span class=\"line\">                 |                   |                   |</span><br><span class=\"line\">                  |                 | |                 |</span><br><span class=\"line\">                   \\               /   \\               /</span><br><span class=\"line\">                    `.           ,'     `.           ,'</span><br><span class=\"line\">                      `-..___..-'         `-..___..-'</span><br><span class=\"line\"></span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"七龙珠比克\"><a href=\"#七龙珠比克\" class=\"headerlink\" title=\"七龙珠比克\"></a>七龙珠比克</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                      _.---..._</span><br><span class=\"line\">                  ./^         ^-._</span><br><span class=\"line\">                ./^C===.         ^\\.   /\\</span><br><span class=\"line\">               .|'     \\\\        _ ^|.^.|</span><br><span class=\"line\">          ___.--'_     ( )  .      ./ /||</span><br><span class=\"line\">         /.---^T\\      ,     |     / /|||</span><br><span class=\"line\">        C'   ._`|  ._ /  __,-/    / /-,||</span><br><span class=\"line\">             \\ \\/    ;  /O  / _    |) )|,</span><br><span class=\"line\">              i \\./^O\\./_,-^/^    ,;-^,'</span><br><span class=\"line\">               \\ |`--/ ..-^^      |_-^</span><br><span class=\"line\">                `|  \\^-           /|:</span><br><span class=\"line\">                 i.  .--         / '|.</span><br><span class=\"line\">                  i   =='       /'  |\\._</span><br><span class=\"line\">                _./`._        //    |.  ^-ooo.._</span><br><span class=\"line\">         _.oo../'  |  ^-.__./X/   . `|    |#######b</span><br><span class=\"line\">        d####     |'      ^^^^   /   |    _\\#######</span><br><span class=\"line\">        #####b ^^^^^^^^--. ...--^--^^^^^^^_.d######</span><br><span class=\"line\">        ######b._         Y            _.d#########</span><br><span class=\"line\">        ##########b._     |        _.d#############</span><br><span class=\"line\"></span><br><span class=\"line\">                                       \"Piccolo\" no. 2</span><br><span class=\"line\">                                          (from Dragonball Z)</span><br><span class=\"line\">                                               --- Steven J. Simmons</span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                             /^_.-^  _  --^=_</span><br><span class=\"line\">                          ./'-^__    _&gt;=\\^^==^-.</span><br><span class=\"line\">                          |'/^^_/  /^    \\ \\.^\\\\\\/\\</span><br><span class=\"line\">                         ,|/| '  /'  _____\\ `\\|.^.|</span><br><span class=\"line\">                         |'/   /_--^^ .   ^^-./ /||</span><br><span class=\"line\">                         |/,--^  ,     |     / /||'</span><br><span class=\"line\">                       ._|/   \\ /  __,-/    / /-,||</span><br><span class=\"line\">                       \\ '/    ;  /O  / _    |) )|,</span><br><span class=\"line\">                        i \\./^O\\./_,-^/^    ,;-^,'</span><br><span class=\"line\">                         \\ |`--/ ..-^^      |_-^</span><br><span class=\"line\">                          `|  \\^-_,/^Y\\      | ^^\\</span><br><span class=\"line\">                          _i.  \\\".--V_/     /| \\. ^\\._____...--.&gt;^^^^^^-------...._</span><br><span class=\"line\">                         /  i   ^--^^     /'|' |\\. |./'        |                  ;</span><br><span class=\"line\">       ___...----/^^^^---|.  `._\\  /^   /' |'_/' \\ `|         |'               ,/'</span><br><span class=\"line\">                |'        \\   _|^-.__./'__.^^\\     .|        ,|            _.-^</span><br><span class=\"line\">                `\\       ,|`_./^^-----^^._    ` ./ /        /^        _.-^^/</span><br><span class=\"line\">                         |'  ^                  /-^                ./^    /</span><br><span class=\"line\">       \\                 `\\_     __.-&lt;       _,/                 ./'     |'</span><br><span class=\"line\">        `\\.        `i       ^^--/._____...--^            .      ./       |.</span><br><span class=\"line\">          `|        |                                   /       /        `|</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                                       \"Piccolo\"</span><br><span class=\"line\">                                          (from Dragonball Z)</span><br><span class=\"line\">                                               --- Steven J. Simmons         </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"七龙珠孙悟空\"><a href=\"#七龙珠孙悟空\" class=\"headerlink\" title=\"七龙珠孙悟空\"></a>七龙珠孙悟空</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                           _</span><br><span class=\"line\">                           \\\"-._ _.--\"~~\"--._</span><br><span class=\"line\">                            \\   \"            ^.    ___</span><br><span class=\"line\">                            /                  \\.-~_.-~</span><br><span class=\"line\">                     .-----'     /\\/\"\\ /~-._      /</span><br><span class=\"line\">                    /  __      _/\\-.__\\L_.-/\\     \"-.</span><br><span class=\"line\">                   /.-\"  \\    ( ` \\_o&gt;\"&lt;o_/  \\  .--._\\</span><br><span class=\"line\">                  /'      \\    \\:     \"     :/_/     \"`</span><br><span class=\"line\">                          /  /\\ \"\\    ~    /~\"</span><br><span class=\"line\">                          \\ I  \\/]\"-._ _.-\"[</span><br><span class=\"line\">                       ___ \\|___/ ./    l   \\___   ___</span><br><span class=\"line\">                  .--v~   \"v` ( `-.__   __.-' ) ~v\"   ~v--.</span><br><span class=\"line\">               .-&#123;   |     :   \\_    \"~\"    _/   :     |   &#125;-.</span><br><span class=\"line\">              /   \\  |           ~-.,___,.-~           |  /   \\</span><br><span class=\"line\">             ]     \\ |                                 | /     [</span><br><span class=\"line\">             /\\     \\|     :                     :     |/     /\\</span><br><span class=\"line\">            /  ^._  _K.___,^                     ^.___,K_  _.^  \\</span><br><span class=\"line\">           /   /  \"~/  \"\\                           /\"  \\~\"  \\   \\</span><br><span class=\"line\">          /   /    /     \\ _          :          _ /     \\    \\   \\</span><br><span class=\"line\">        .^--./    /       Y___________l___________Y       \\    \\.--^.</span><br><span class=\"line\">        [    \\   /        |        [/    ]        |        \\   /    ]</span><br><span class=\"line\">        |     \"v\"         l________[____/]________j  -Row   &#125;r\"     /</span><br><span class=\"line\">        &#125;------t          /                       \\       /`-.     /</span><br><span class=\"line\">        |      |         Y                         Y     /    \"-._/</span><br><span class=\"line\">        &#125;-----v'         |         :               |     7-.     /</span><br><span class=\"line\">        |   |_|          |         l               |    / . \"-._/</span><br><span class=\"line\">        l  .[_]          :          \\              :  r[]/_.  /</span><br><span class=\"line\">         \\_____]                     \"--.             \"-.____/</span><br><span class=\"line\"></span><br><span class=\"line\">                                            \"Dragonball Z\"</span><br><span class=\"line\">                                                        ---Row</span><br><span class=\"line\">         </span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                               MMMMM</span><br><span class=\"line\">                                 MMMMMM</span><br><span class=\"line\">                                   MMMMMMM</span><br><span class=\"line\">                                    MMMMMMMM     .</span><br><span class=\"line\">                                     MMMMMMMMM</span><br><span class=\"line\">                                     HMMMMMMMMMM</span><br><span class=\"line\">                                      MMMMMMMMMMMM  M</span><br><span class=\"line\">                                      MMMMMMMMMMMMM  M</span><br><span class=\"line\">                                       MMMMMMMMMMMMM  M</span><br><span class=\"line\">                                       MMMMMMMMMMMMM:</span><br><span class=\"line\">                                       oMMMMMMMMMMMMMM</span><br><span class=\"line\">             .MMMMMMMMMMMMMMo           MMMMMMMMMMMMMMM M</span><br><span class=\"line\">       MMMMMMMMMMMMMMMMMMMMMMMMMMM      MMMMMMMMMMMMMMMM</span><br><span class=\"line\">         MMMMMMMMMMMMMMMMMMMMMMMMMMMM.  oMMMMMMMMMMMMMMM.M</span><br><span class=\"line\">           MMMMMMMMMMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMMMMMM</span><br><span class=\"line\">             MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">               oMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                 MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                   MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:                     H</span><br><span class=\"line\">                    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM                  .         MMM</span><br><span class=\"line\">                     MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM              M       MMMMMM</span><br><span class=\"line\">                      .MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM          M   MMMMMMMMMM</span><br><span class=\"line\">               MM.      MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM       M MMMMMMMMMMMM</span><br><span class=\"line\">                   MM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    .MMMMMMMMMMMMMM</span><br><span class=\"line\">                     MM  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                       MM MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">              .MMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                 HMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                    MMMMMMMMMMMMMMM MMM.oMMMMMMM..MMMMMMMMM:MMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                      MMMMMMMMMMMMMM MM..MMMMMMM...MMMMMMM. MMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                        MMMMMMMMMMMMMMM ..MMMMMM...MMMMMM ..MMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                         MMMMMMM:M.MMM.M.. MMMMM M..MMMMM...MMMMMMMMMMMMMMMMMM  MMM</span><br><span class=\"line\">                           MMMM. .M..MM.M...MMMMMM..MMMMM.. MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM .</span><br><span class=\"line\">                            MMMM..M....M.....:MMM .MMMMMM..MMMMMMM...MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                             MMM.M.. ...M......MM.MMMMM.......MHM.M  .MMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                        MMMMMMMM..MM. . MMM.....MMMMMM.M.....M ..MM..M MMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                           .MMMMMHMM. ..MMMM. MMM............o..... . .MMMMMMMMMMMMMMM</span><br><span class=\"line\">                              MMM. M... .........................M..:.MMMMMMMMMMMM</span><br><span class=\"line\">                                oMMM............ .................M.M.MMMMMMMMM</span><br><span class=\"line\">                                   .....MM........................ . MMMMMM</span><br><span class=\"line\">                                  M.....M.....................o.MM.MMMMMMMM.</span><br><span class=\"line\">                                   M........................M.. ...MMMMMMMMMMMMMo</span><br><span class=\"line\">                                     :....MMM..............MMM..oMMMMMMM</span><br><span class=\"line\">                                      M...MMM.............MMMMMMM</span><br><span class=\"line\">                                         .............:MMMMMMMM</span><br><span class=\"line\">                                         M..... MMM.....M</span><br><span class=\"line\">                                         M M.............</span><br><span class=\"line\">                                         ................M</span><br><span class=\"line\">                                      ooM.................MM  MoMMMMMoooM</span><br><span class=\"line\">                                 MMoooM......................MoooooooH..oMM</span><br><span class=\"line\">                             MHooooMoM.....................MMooooooM........M</span><br><span class=\"line\">                           oooooooMoooM......... o........MoooooooM............</span><br><span class=\"line\">                           Mooooooooooo.......M.........Moooooooo:..............M</span><br><span class=\"line\">                          MooMoooooooooM...M........:Mooooooooooo:..............M</span><br><span class=\"line\">                         M..oooooooooooo .........Mooooooooooooooo..............M</span><br><span class=\"line\">                        M...Mooo:oooooooo.M....ooooooooooooooooooo..M...........M</span><br><span class=\"line\">                         ...oooooMoooooooM..Mooooooooooooo:oooooooM.M...........M.</span><br><span class=\"line\">                        M...ooooooMoo:ooooMoooooooooooooHoooooooooH:M. ...........:</span><br><span class=\"line\">                        M..MoooooooMoooooooooooooooooo:ooooooMooooMoM..............M</span><br><span class=\"line\">                        M..ooooooooooMooooooooooooooHoooooooMooHooooM...............M</span><br><span class=\"line\">                        ...ooooooooooooooooooo:MooooooooooooooMoMoooM................</span><br><span class=\"line\">                       M...oooooooooooooooooooooooooooooooooooooMooMM................M</span><br><span class=\"line\">                       ...MooooooooooooooooooooooooooooooooooooooooMo ................</span><br><span class=\"line\">                       ...MooooooooooooooooooooooooooooooooooooooooM M................M</span><br><span class=\"line\">                      M...ooooooooooooooooooooooooooooooooooooooooM   ................M</span><br><span class=\"line\">                      ...MoooooooooooooooooooooooooooooooooooooooMM   .:...............</span><br><span class=\"line\">                      .....MooooooooooooooooooooooooooooooooooooMoo       .............M</span><br><span class=\"line\">                      M...... ooooooooooooooooooooooooooooooooooooM       M..............M</span><br><span class=\"line\">                      M........MooooMMM MM MM  MMMMMMMMMooooooooM         M...............M</span><br><span class=\"line\">                      .........HM     M:  MM :MMMMMM          M           M...............</span><br><span class=\"line\">                     M..........M     M   MoM M                           M................M</span><br><span class=\"line\">                     M.........:M  MoH  M M M MooooHoooMM.   M             M...............M</span><br><span class=\"line\">                     M..........Moooo MMooM    oooooMooooooooM              M..............H</span><br><span class=\"line\">                     M.........MooooM  Mooo  : ooooooMooooMoooM              M........ . .o.M</span><br><span class=\"line\">                     H..  .....ooooo   oooo  M MooooooooooooooM               M... MMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMooooM M oooo  .  ooooooMooooooooM              .MMMMMMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMooooH : ooooH    oooooooooooooooo               MMMMMMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMoooo    ooooM    Moooooooooooooooo              .MMMMMMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMoooo    ooooM    MooooooooooooooooM              MMMMMMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMoooM    ooooM     ooooooooooooooooo               MMMMMMMMMMM:M</span><br><span class=\"line\">                     MMMMMMMMMMoooM   MooooM     oooooooooooMoooooo               MH...........</span><br><span class=\"line\">                      . ......Mooo.   MooooM     oooooooooooooooooo              M............M</span><br><span class=\"line\">                     M.M......oooo    MooooM     Moooooooooooooooooo:           .........M.....</span><br><span class=\"line\">                     M.M.....Moooo    MooooM      ooooooooooooooooooM            .M............</span><br><span class=\"line\">                     .......MooooH    MooooM      oooooooooMoooooooooo          M..o...M..o....M</span><br><span class=\"line\">                     .o....HMooooM    MooooH      MooooooooMooooooooooM          .:M...M.......M</span><br><span class=\"line\">                    M..M.....MoooM    :oooo:    .MooooooooHooMoooooooooM         M M... ..oM.M</span><br><span class=\"line\">                     M...M.:.Mooo. MMMMooooo   oooooooooooMoooooooooooooM          ....M. M</span><br><span class=\"line\">                      M:M..o.Moooooooooooooo MooooooooooooooMooooooooooooM          .Mo</span><br><span class=\"line\">                             MooooooooooooooMooooooooooooMoMoooooooooooooo</span><br><span class=\"line\">                             Mooooooooooooooo:ooooooooooooooooooooooooooooo</span><br><span class=\"line\">                             ooooooooooooooooMooooooooooMoooooooooooooooooo</span><br><span class=\"line\">                             ooooooooooooooooMoooooooooooMooooooooooooooooHo</span><br><span class=\"line\">                             ooMooooooooooooooMoooooooooooooooooooooooooooMoM</span><br><span class=\"line\">                            MooMoooooooooooooo.ooooooooooooooooooooooooooo:oM</span><br><span class=\"line\">                            MoooooooooooooooooooooooooooooooooooooooooooooooM</span><br><span class=\"line\">                            MoooMooooooooooooooMooooooooooooooooooooooooooooo.</span><br><span class=\"line\">                            MoooMooooooooooooooMoooooooooooooooooooooooooMooooM</span><br><span class=\"line\">                            MooooooooooooooooooMoooooooooooooooooooooooooMoooooM</span><br><span class=\"line\">                            MooooMoooooooooooooMoooooooooooooooooooooooooMoHooooM</span><br><span class=\"line\">                            ooooooMooooooooooooooooooooooooooooooooooooooooMoMoooM</span><br><span class=\"line\">                           MooooooooooooooooooooMooooooooooooooooooooooooooMoooooH:</span><br><span class=\"line\">                           MoooooooMooooooooooooMoooooooooooooooooooooooooooooHoooM</span><br><span class=\"line\">                           MooooooooMoooooooooooMoooooooooooooooooooooooooMoooMooooM</span><br><span class=\"line\">                           Moooooooooooooooooooooooooooooooooooooooooooooo.oooMooooo</span><br><span class=\"line\">                           MoooooooooooooooooooooooooooooooooooooooooooooMoooooooooM</span><br><span class=\"line\">                            MooooooooooooooooooooMoooooooooooooooooooooooooooooooooM</span><br><span class=\"line\">                             MooooooooooooooooooooMHooooooooooooooooooooMoooo:ooooo</span><br><span class=\"line\">                              MMooooooooooooooooooMoMHoooooooooooooooooooooooMooooo</span><br><span class=\"line\">                               MMoooooooooooooooMMooo MMooooooooooooooooooooooooooM</span><br><span class=\"line\">                               MMMoooooooooooooMooooo  oooooooooooooooooooooMooooo</span><br><span class=\"line\">                               MooMMoooooooooMoooMMoM  ooooHooooooooooooooooMooooM</span><br><span class=\"line\">                               MooooMooooooMooooMoooM  MoooooMoooooooooooooMooooo</span><br><span class=\"line\">                               ooooooMMooooooooMooooM  MoooooooooMooooooooooooooM</span><br><span class=\"line\">                               HooooooMoooooooMooooM    HoooooooHooMooooooooooooo</span><br><span class=\"line\">                                oooMoooooooooHoooM         MoooooooooMoooooooooM</span><br><span class=\"line\">                                 HooooooooooooHM             MooooooooMMoooooooM</span><br><span class=\"line\">                                  MMMMMMMMMMMMMM                Moooooo:MooooHMM</span><br><span class=\"line\">                                   MMMMMMM: ...                  MMMMMMMMMMMMMM</span><br><span class=\"line\">                                  M............M                  MMMMMMMMM ....</span><br><span class=\"line\">                                  M.MM..........                  M.............M</span><br><span class=\"line\">                               M ..............MM                 M..............</span><br><span class=\"line\">                            MMMMM............MMMM                 ..MMMMMMMM ....M</span><br><span class=\"line\">                          MMMMMMMMMMMMMMMMMMMMMMMM               MMMMMMMMMMMMM...M</span><br><span class=\"line\">                       .MMMMMMMMMMMMMMMMMMMMMMMMMM               MMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                       MMMMMMMMMMMMMMMMMMMMMMMMM                MMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                       :MMMMMMMMMMMMMMMMMMH                     MMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                          By EBEN Jérôme                        MMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                                                                MMMMMMMMMMMMMMM</span><br><span class=\"line\">                                                                 HMMMMMM</span><br><span class=\"line\">        </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"皮卡丘\"><a href=\"#皮卡丘\" class=\"headerlink\" title=\"皮卡丘\"></a>皮卡丘</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">       quu..__</span><br><span class=\"line\">        $$$b  `---.__</span><br><span class=\"line\">         \"$$b        `--.                          ___.---uuudP</span><br><span class=\"line\">          `$$b           `.__.------.__     __.---'      $$$$\"              .</span><br><span class=\"line\">            \"$b          -'            `-.-'            $$$\"              .'|</span><br><span class=\"line\">              \".                                       d$\"             _.'  |</span><br><span class=\"line\">                `.   /                              ...\"             .'     |</span><br><span class=\"line\">                  `./                           ..::-'            _.'       |</span><br><span class=\"line\">                   /                         .:::-'            .-'         .'</span><br><span class=\"line\">                  :                          ::''\\          _.'            |</span><br><span class=\"line\">                 .' .-.             .-.           `.      .'               |</span><br><span class=\"line\">                 : /'$$|           .@\"$\\           `.   .'              _.-'</span><br><span class=\"line\">                .'|$u$$|          |$$,$$|           |  &lt;            _.-'</span><br><span class=\"line\">                | `:$$:'          :$$$$$:           `.  `.       .-'</span><br><span class=\"line\">                :                  `\"--'             |    `-.     \\</span><br><span class=\"line\">               :##.       ==             .###.       `.      `.    `\\</span><br><span class=\"line\">               |##:                      :###:        |        &gt;     &gt;</span><br><span class=\"line\">               |#'     `..'`..'          `###'        x:      /     /</span><br><span class=\"line\">                \\                                   xXX|     /    ./</span><br><span class=\"line\">                 \\                                xXXX'|    /   ./</span><br><span class=\"line\">                 /`-.                                  `.  /   /</span><br><span class=\"line\">                :    `-  ...........,                   | /  .'</span><br><span class=\"line\">                |         ``:::::::'       .            |&lt;    `.</span><br><span class=\"line\">                |             ```          |           x| \\ `.:``.</span><br><span class=\"line\">                |                         .'    /'   xXX|  `:`M`M':.</span><br><span class=\"line\">                |    |                    ;    /:' xXXX'|  -'MMMMM:'</span><br><span class=\"line\">                `.  .'                   :    /:'       |-'MMMM.-'</span><br><span class=\"line\">                 |  |                   .'   /'        .'MMM.-'</span><br><span class=\"line\">                 `'`'                   :  ,'          |MMM&lt;</span><br><span class=\"line\">                   |                     `'            |tbap\\</span><br><span class=\"line\">                    \\                                  :MM.-'</span><br><span class=\"line\">                     \\                 |              .''</span><br><span class=\"line\">                      \\.               `.            /</span><br><span class=\"line\">                       /     .:::::::.. :           /</span><br><span class=\"line\">                      |     .:::::::::::`.         /</span><br><span class=\"line\">                      |   .:::------------\\       /</span><br><span class=\"line\">                     /   .''               &gt;::'  /</span><br><span class=\"line\">                     `',:                 :    .'</span><br><span class=\"line\">                                          `:.:'</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"电脑图像\"><a href=\"#电脑图像\" class=\"headerlink\" title=\"电脑图像\"></a>电脑图像</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                    ,----------------,              ,---------,</span><br><span class=\"line\">               ,-----------------------,          ,\"        ,\"|</span><br><span class=\"line\">             ,\"                      ,\"|        ,\"        ,\"  |</span><br><span class=\"line\">            +-----------------------+  |      ,\"        ,\"    |</span><br><span class=\"line\">            |  .-----------------.  |  |     +---------+      |</span><br><span class=\"line\">            |  |                 |  |  |     | -==----'|      |</span><br><span class=\"line\">            |  |  I LOVE DOS!    |  |  |     |         |      |</span><br><span class=\"line\">            |  |  Bad command or |  |  |/----|`---=    |      |</span><br><span class=\"line\">            |  |  C:\\&gt;_          |  |  |   ,/|==== ooo |      ;</span><br><span class=\"line\">            |  |                 |  |  |  // |(((( [33]|    ,\"</span><br><span class=\"line\">            |  `-----------------'  |,\" .;'| |((((     |  ,\"</span><br><span class=\"line\">            +-----------------------+  ;;  | |         |,\"</span><br><span class=\"line\">               /_)______________(_/  //'   | +---------+</span><br><span class=\"line\">          ___________________________/___  `,</span><br><span class=\"line\">         /  oooooooooooooooo  .o.  oooo /,   \\,\"-----------</span><br><span class=\"line\">        / ==ooooooooooooooo==.o.  ooo= //   ,`\\--&#123;)B     ,\"</span><br><span class=\"line\">       /_==__==========__==_ooo__ooo=_/'   /___________,\"</span><br><span class=\"line\">        </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                                   _________</span><br><span class=\"line\">                                  /         /.</span><br><span class=\"line\">           .-------------.       /_________/ |</span><br><span class=\"line\">          /             / |      |         | |</span><br><span class=\"line\">         /+============+\\ |      | |====|  | |</span><br><span class=\"line\">         ||C:\\&gt;        || |      |         | |</span><br><span class=\"line\">         ||            || |      | |====|  | |</span><br><span class=\"line\">         ||            || |      |   ___   | |</span><br><span class=\"line\">         ||            || |      |  |166|  | |</span><br><span class=\"line\">         ||            ||/@@@    |   ---   | |</span><br><span class=\"line\">         \\+============+/    @   |_________|./.</span><br><span class=\"line\">                            @          ..  ....'</span><br><span class=\"line\">         ..................@     __.'.'  ''</span><br><span class=\"line\">        /oooooooooooooooo//     ///</span><br><span class=\"line\">       /................//     /_/</span><br><span class=\"line\">       ------------------</span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"龙\"><a href=\"#龙\" class=\"headerlink\" title=\"龙\"></a>龙</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">        11111111111111111111111111111111111111001111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111111111100011111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111111100001111111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111110000111111111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111000000111111111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111100000011110001100000000000000011111111</span><br><span class=\"line\">        11111111111111111100000000000000000000000000000000011111111111111</span><br><span class=\"line\">        11111111111111110111000000000000000000000000000011111111111111111</span><br><span class=\"line\">        11111111111111111111111000000000000000000000000000000000111111111</span><br><span class=\"line\">        11111111111111111110000000000000000000000000000000111111111111111</span><br><span class=\"line\">        11111111111111111100011100000000000000000000000000000111111111111</span><br><span class=\"line\">        11111111111111100000110000000000011000000000000000000011111111111</span><br><span class=\"line\">        11111111111111000000000000000100111100000000000001100000111111111</span><br><span class=\"line\">        11111111110000000000000000001110111110000000000000111000011111111</span><br><span class=\"line\">        11111111000000000000000000011111111100000000000000011110001111111</span><br><span class=\"line\">        11111110000000011111111111111111111100000000000000001111100111111</span><br><span class=\"line\">        11111111000001111111111111111111110000000000000000001111111111111</span><br><span class=\"line\">        11111111110111111111111111111100000000000000000000000111111111111</span><br><span class=\"line\">        11111111111111110000000000000000000000000000000000000111111111111</span><br><span class=\"line\">        11111111111111111100000000000000000000000000001100000111111111111</span><br><span class=\"line\">        11111111111111000000000000000000000000000000111100000111111111111</span><br><span class=\"line\">        11111111111000000000000000000000000000000001111110000111111111111</span><br><span class=\"line\">        11111111100000000000000000000000000000001111111110000111111111111</span><br><span class=\"line\">        11111110000000000000000000000000000000111111111110000111111111111</span><br><span class=\"line\">        11111100000000000000000001110000001111111111111110001111111111111</span><br><span class=\"line\">        11111000000000000000011111111111111111111111111110011111111111111</span><br><span class=\"line\">        11110000000000000001111111111111111100111111111111111111111111111</span><br><span class=\"line\">        11100000000000000011111111111111111111100001111111111111111111111</span><br><span class=\"line\">        11100000000001000111111111111111111111111000001111111111111111111</span><br><span class=\"line\">        11000000000001100111111111111111111111111110000000111111111111111</span><br><span class=\"line\">        11000000000000111011111111111100011111000011100000001111111111111</span><br><span class=\"line\">        11000000000000011111111111111111000111110000000000000011111111111</span><br><span class=\"line\">        11000000000000000011111111111111000000000000000000000000111111111</span><br><span class=\"line\">        11001000000000000000001111111110000000000000000000000000001111111</span><br><span class=\"line\">        11100110000000000001111111110000000000000000111000000000000111111</span><br><span class=\"line\">        11110110000000000000000000000000000000000111111111110000000011111</span><br><span class=\"line\">        11111110000000000000000000000000000000001111111111111100000001111</span><br><span class=\"line\">        11111110000010000000000000000001100000000111011111111110000001111</span><br><span class=\"line\">        11111111000111110000000000000111110000000000111111111110110000111</span><br><span class=\"line\">        11111110001111111100010000000001111100000111111111111111110000111</span><br><span class=\"line\">        11111110001111111111111110000000111111100000000111111111111000111</span><br><span class=\"line\">        11111111001111111111111111111000000111111111111111111111111100011</span><br><span class=\"line\">        11111111101111111111111111111110000111111111111111111111111001111</span><br><span class=\"line\">        11111111111111111111111111111110001111111111111111111111100111111</span><br><span class=\"line\">        11111111111111111111111111111111001111111111111111111111001111111</span><br><span class=\"line\">        11111111111111111111111111111111100111111111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111111110111111111111111111111111111111</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                                                    __----~~~~~~~~~~~------___</span><br><span class=\"line\">                                         .  .   ~~//====......          __--~ ~~</span><br><span class=\"line\">                         -.            \\_|//     |||\\\\  ~~~~~~::::... /~</span><br><span class=\"line\">                      ___-==_       _-~o~  \\/    |||  \\\\            _/~~-</span><br><span class=\"line\">              __---~~~.==~||\\=_    -_--~/_-~|-   |\\\\   \\\\        _/~</span><br><span class=\"line\">          _-~~     .=~    |  \\\\-_    '-~7  /-   /  ||    \\      /</span><br><span class=\"line\">        .~       .~       |   \\\\ -_    /  /-   /   ||      \\   /</span><br><span class=\"line\">       /  ____  /         |     \\\\ ~-_/  /|- _/   .||       \\ /</span><br><span class=\"line\">       |~~    ~~|--~~~~--_ \\     ~==-/   | \\~--===~~        .\\</span><br><span class=\"line\">                '         ~-|      /|    |-~\\~~       __--~~</span><br><span class=\"line\">                            |-~~-_/ |    |   ~\\_   _-~            /\\</span><br><span class=\"line\">                                 /  \\     \\__   \\/~                \\__</span><br><span class=\"line\">                             _--~ _/ | .-~~____--~-/                  ~~==.</span><br><span class=\"line\">                            ((-&gt;/~   '.|||' -_|    ~~-/ ,              . _||</span><br><span class=\"line\">                                       -_     ~\\      ~~---l__i__i__i--~~_/</span><br><span class=\"line\">                                       _-~-__   ~)  \\--______________--~~</span><br><span class=\"line\">                                     //.-~~~-~_--~- |-------~~~~~~~~</span><br><span class=\"line\">                                            //.-~~~--\\</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//                       )      (</span></span><br><span class=\"line\"><span class=\"comment\">//                  /+++=))    ((=+++\\</span></span><br><span class=\"line\"><span class=\"comment\">//             /++++++++//      \\\\+++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//          /++++++++++//(  /\\  )\\\\++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//        /+++++++++++//  \\\\^^//  \\\\+++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//     _/++++++++++++//  &#123;&#123;@::@&#125;&#125;  \\\\++++++++++++\\_</span></span><br><span class=\"line\"><span class=\"comment\">//    /+++++++++++++((     &#123;\\/&#125;     ))+++++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//   /+++++++++++++++\\\\    &lt;**&gt;    //+++++++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//  /+++++++++++++++++\\\\  / VV \\  //+++++++++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">// /+++++++++++++++++++\\\\/******\\//+++++++++++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//|+/|++++++++++/\\++++++(***/\\***)++++++/\\++++++++++|\\+\\</span></span><br><span class=\"line\"><span class=\"comment\">//|/ |+/\\+/\\+/\\/  \\+/\\++\\**|**|**/++/\\+/  \\/\\+/\\+/\\+| \\|</span></span><br><span class=\"line\"><span class=\"comment\">//v  |/  V  V  V   V  \\+\\|*|**|*|/+/  V   v  V  V  \\|  v</span></span><br><span class=\"line\"><span class=\"comment\">//   v                 /*|*|**|*|*\\...              v</span></span><br><span class=\"line\"><span class=\"comment\">//                    (**|*|**|*|**). .</span></span><br><span class=\"line\"><span class=\"comment\">//                   __\\*|*|**|*|*/__. .</span></span><br><span class=\"line\"><span class=\"comment\">//                  (vvv(VVV)(VVV)vvv). .</span></span><br><span class=\"line\"><span class=\"comment\">//                      ............../ /</span></span><br><span class=\"line\"><span class=\"comment\">//                     / ............../</span></span><br><span class=\"line\"><span class=\"comment\">//                     ((</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                 ___====-_  _-====___</span><br><span class=\"line\">           _--^^^#####//      \\\\#####^^^--_</span><br><span class=\"line\">        _-^##########// (    ) \\\\##########^-_</span><br><span class=\"line\">       -############//  |\\^^/|  \\\\############-</span><br><span class=\"line\">     _/############//   (@::@)   \\\\############\\_</span><br><span class=\"line\">    /#############((     \\\\//     ))#############\\</span><br><span class=\"line\">   -###############\\\\    (oo)    //###############-</span><br><span class=\"line\">  -#################\\\\  / VV \\  //#################-</span><br><span class=\"line\"> -###################\\\\/      \\//###################-</span><br><span class=\"line\">_#/|##########/\\######(   /\\   )######/\\##########|\\#_</span><br><span class=\"line\">|/ |#/\\#/\\#/\\/  \\#/\\##\\  |  |  /##/\\#/  \\/\\#/\\#/\\#| \\|</span><br><span class=\"line\">`  |/  V  V  `   V  \\#\\| |  | |/#/  V   '  V  V  \\|  '</span><br><span class=\"line\">   `   `  `      `   / | |  | | \\   '      '  '   '</span><br><span class=\"line\">                    (  | |  | |  )</span><br><span class=\"line\">                   __\\ | |  | | /__</span><br><span class=\"line\">                  (vvv(VVV)(VVV)vvv)</span><br><span class=\"line\">                  </span><br><span class=\"line\">*/</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://shiyousan.com/post/635479912728885400\" target=\"_blank\" rel=\"external\">参考博客</a></p>\n","excerpt":"<h3 id=\"佛祖保佑\"><a href=\"#佛祖保佑\" class=\"headerlink\" title=\"佛祖保佑\"></a>佛祖保佑</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                   _ooOoo_</span><br><span class=\"line\">                  o8888888o</span><br><span class=\"line\">                  88\" . \"88</span><br><span class=\"line\">                  (| -_- |)</span><br><span class=\"line\">                  O\\  =  /O</span><br><span class=\"line\">               ____/`---'\\____</span><br><span class=\"line\">             .'  \\\\|     |//  `.</span><br><span class=\"line\">            /  \\\\|||  :  |||//  \\</span><br><span class=\"line\">           /  _||||| -:- |||||-  \\</span><br><span class=\"line\">           |   | \\\\\\  -  /// |   |</span><br><span class=\"line\">           | \\_|  ''\\---/''  |   |</span><br><span class=\"line\">           \\  .-\\__  `-`  ___/-. /</span><br><span class=\"line\">         ___`. .'  /--.--\\  `. . __</span><br><span class=\"line\">      .\"\" '&lt;  `.___\\_&lt;|&gt;_/___.'  &gt;'\"\".</span><br><span class=\"line\">     | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |</span><br><span class=\"line\">     \\  \\ `-.   \\_ __\\ /__ _/   .-` /  /</span><br><span class=\"line\">======`-.____`-.___\\_____/___.-`____.-'======</span><br><span class=\"line\">                   `=---='</span><br><span class=\"line\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class=\"line\">         佛祖保佑       永无BUG</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//          佛曰:  </span></span><br><span class=\"line\"><span class=\"comment\">//                  写字楼里写字间，写字间里程序员；  </span></span><br><span class=\"line\"><span class=\"comment\">//                  程序人员写程序，又拿程序换酒钱。  </span></span><br><span class=\"line\"><span class=\"comment\">//                  酒醒只在网上坐，酒醉还来网下眠；  </span></span><br><span class=\"line\"><span class=\"comment\">//                  酒醉酒醒日复日，网上网下年复年。  </span></span><br><span class=\"line\"><span class=\"comment\">//                  但愿老死电脑间，不愿鞠躬老板前；  </span></span><br><span class=\"line\"><span class=\"comment\">//                  奔驰宝马贵者趣，公交自行程序员。  </span></span><br><span class=\"line\"><span class=\"comment\">//                  别人笑我忒疯癫，我笑自己命太贱；  </span></span><br><span class=\"line\"><span class=\"comment\">//                  不见满街漂亮妹，哪个归得程序员？</span></span><br></pre></td></tr></table></figure>","more":"<h3 id=\"神兽草泥马\"><a href=\"#神兽草泥马\" class=\"headerlink\" title=\"神兽草泥马\"></a>神兽草泥马</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">*</span><br><span class=\"line\">*          ┌─┐       ┌─┐</span><br><span class=\"line\">*       ┌──┘ ┴───────┘ ┴──┐</span><br><span class=\"line\">*       │                 │</span><br><span class=\"line\">*       │       ───       │</span><br><span class=\"line\">*       │  ─┬┘       └┬─  │</span><br><span class=\"line\">*       │                 │</span><br><span class=\"line\">*       │       ─┴─       │</span><br><span class=\"line\">*       │                 │</span><br><span class=\"line\">*       └───┐         ┌───┘</span><br><span class=\"line\">*           │         │</span><br><span class=\"line\">*           │         │</span><br><span class=\"line\">*           │         │</span><br><span class=\"line\">*           │         └──────────────┐</span><br><span class=\"line\">*           │                        │</span><br><span class=\"line\">*           │                        ├─┐</span><br><span class=\"line\">*           │                        ┌─┘</span><br><span class=\"line\">*           │                        │</span><br><span class=\"line\">*           └─┐  ┐  ┌───────┬──┐  ┌──┘</span><br><span class=\"line\">*             │ ─┤ ─┤       │ ─┤ ─┤</span><br><span class=\"line\">*             └──┴──┘       └──┴──┘</span><br><span class=\"line\">*                 神兽保佑</span><br><span class=\"line\">*                 代码无BUG!</span><br><span class=\"line\">*/</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> *   ┏┓　　　┏┓</span><br><span class=\"line\"> * ┏┛┻━━━┛┻┓</span><br><span class=\"line\"> * ┃　　　　　　　┃</span><br><span class=\"line\"> * ┃　　　━　　　┃</span><br><span class=\"line\"> * ┃　┳┛　┗┳　┃</span><br><span class=\"line\"> * ┃　　　　　　　┃</span><br><span class=\"line\"> * ┃　　　┻　　　┃</span><br><span class=\"line\"> * ┃　　　　　　　┃</span><br><span class=\"line\"> * ┗━┓　　　┏━┛</span><br><span class=\"line\"> *    ┃　　　┃   </span><br><span class=\"line\"> *    ┃　　　┃   </span><br><span class=\"line\"> *    ┃　　　┗━━━┓</span><br><span class=\"line\"> *    ┃　　　　　　　┣┓</span><br><span class=\"line\"> *    ┃　　　　　　　┏┛</span><br><span class=\"line\"> *    ┗┓┓┏━┳┓┏┛</span><br><span class=\"line\"> *      ┃┫┫　┃┫┫</span><br><span class=\"line\"> *      ┗┻┛　┗┻┛</span><br><span class=\"line\"> *        神兽保佑 </span><br><span class=\"line\"> *        代码无BUG! </span><br><span class=\"line\"> */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"胜利手势\"><a href=\"#胜利手势\" class=\"headerlink\" title=\"胜利手势\"></a>胜利手势</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//                      d*##$.</span></span><br><span class=\"line\"><span class=\"comment\">// zP\"\"\"\"\"$e.           $\"    $o</span></span><br><span class=\"line\"><span class=\"comment\">//4$       '$          $\"      $</span></span><br><span class=\"line\"><span class=\"comment\">//'$        '$        J$       $F</span></span><br><span class=\"line\"><span class=\"comment\">// 'b        $k       $&gt;       $</span></span><br><span class=\"line\"><span class=\"comment\">//  $k        $r     J$       d$</span></span><br><span class=\"line\"><span class=\"comment\">//  '$         $     $\"       $~</span></span><br><span class=\"line\"><span class=\"comment\">//   '$        \"$   '$E       $</span></span><br><span class=\"line\"><span class=\"comment\">//    $         $L   $\"      $F ...</span></span><br><span class=\"line\"><span class=\"comment\">//     $.       4B   $      $$$*\"\"\"*b</span></span><br><span class=\"line\"><span class=\"comment\">//     '$        $.  $$     $$      $F</span></span><br><span class=\"line\"><span class=\"comment\">//      \"$       R$  $F     $\"      $</span></span><br><span class=\"line\"><span class=\"comment\">//       $k      ?$ u*     dF      .$</span></span><br><span class=\"line\"><span class=\"comment\">//       ^$.      $$\"     z$      u$$$$e</span></span><br><span class=\"line\"><span class=\"comment\">//        #$b             $E.dW@e$\"    ?$</span></span><br><span class=\"line\"><span class=\"comment\">//         #$           .o$$# d$$$$c    ?F</span></span><br><span class=\"line\"><span class=\"comment\">//          $      .d$$#\" . zo$&gt;   #$r .uF</span></span><br><span class=\"line\"><span class=\"comment\">//          $L .u$*\"      $&amp;$$$k   .$$d$$F</span></span><br><span class=\"line\"><span class=\"comment\">//           $$\"            \"\"^\"$$$P\"$P9$</span></span><br><span class=\"line\"><span class=\"comment\">//          JP              .o$$$$u:$P $$</span></span><br><span class=\"line\"><span class=\"comment\">//          $          ..ue$\"      \"\"  $\"</span></span><br><span class=\"line\"><span class=\"comment\">//         d$          $F              $</span></span><br><span class=\"line\"><span class=\"comment\">//         $$     ....udE             4B</span></span><br><span class=\"line\"><span class=\"comment\">//          #$    \"\"\"\"` $r            @$</span></span><br><span class=\"line\"><span class=\"comment\">//           ^$L        '$            $F</span></span><br><span class=\"line\"><span class=\"comment\">//             RN        4N           $</span></span><br><span class=\"line\"><span class=\"comment\">//              *$b                  d$</span></span><br><span class=\"line\"><span class=\"comment\">//               $$k                 $F</span></span><br><span class=\"line\"><span class=\"comment\">//               $$b                $F</span></span><br><span class=\"line\"><span class=\"comment\">//                 $\"\"               $F</span></span><br><span class=\"line\"><span class=\"comment\">//                 '$                $</span></span><br><span class=\"line\"><span class=\"comment\">//                  $L               $</span></span><br><span class=\"line\"><span class=\"comment\">//                  '$               $</span></span><br><span class=\"line\"><span class=\"comment\">//                   $               $</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"围棋棋盘\"><a href=\"#围棋棋盘\" class=\"headerlink\" title=\"围棋棋盘\"></a>围棋棋盘</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//                             _______________________________________  </span></span><br><span class=\"line\"><span class=\"comment\">//                            /  ___________________________________  \\</span></span><br><span class=\"line\"><span class=\"comment\">//     _--\"\"\"\"--_            /  /_/_/_/_/_|_|_|_|_|_|_|_|_|_\\_\\_\\_\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//    /          \\          /  /_/_/_/_J__L_L_L_|_|_|_J_J_J__L_\\_\\_\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   /\\          /\\        /  /_/_/_J__L_J__L_L_|_|_|_J_J__L_J__L_\\_\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   L \"\"-____-\"\" J       /  /_/_J__L_J__L_J_J__L_|_J__L_L_J__L_J__L_\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   \\            /      /  /_/__L_/__L_J__L_J__L_|_J__L_J__L_J__\\_J__\\_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//    \\_        _/      /  /_J__/_J__/__L_J__|__L_|_J__|__L_J__\\__L_\\__L_\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//  _--\"\"\"\"\"--_\"       /  /  F /  F J  J  |  F J  |  F J  |  F  F J  \\ J  \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">// /           \\      /  /--/-J--/--L--|--L-J--J--|--L--L-J--|--J--\\--L-\\--\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">///\\           /\\    /  /__/__L_J__J___L_J__J__|__|__|__L__L_J___L__L_J__\\__\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//L \"\"-_____-\"\" J   /  /  /  /  F  F  J  J  |  |  |  |  |  F  F  J  J  \\  \\  \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//\\             /  /  /--/--/--/--J---L--|--|--|--o--|--|--|--J---L--\\--\\--\\--\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">// \\_         _/  /  /__/__J__J___L__J___L__L__L__|__J__J__J___L__J___L__L__\\__\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   \"--___--\"   /  /  /   F  F  J   F  J  J   F  |  J   F  F  J   F  J  J   \\  \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//              /  /--/---/--J---L--J---L--|--J---|---L--|--J---L--J---L--\\---\\--\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//             /  /__J___/___L__/___L__J___L__J___|___L__J___L__J___\\__J___\\___L__\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//            /  /   F  J   /  J   J   |  J   J   |   F   F  |   F   F  \\   F  J   \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//           /  /---/---L--J---L---L---L--|---|---|---|---|--J---J---J---L--J---\\---\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//          /  /___/___/___L__J___J___J___|___|___|___|___|___L___L___L__J___\\___\\___\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//         /  /   /   /   /   F   F   F   F   F   |   J   J   J   J   J   \\   \\   \\   \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//        /  /___/___J___J___J___J___J____L___L___|___J___J____L___L___L___L___L___\\___\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//       /  /   /    F   F   F   |   |   J    F   |   J    F   |   |   J   J   J    \\   \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//      /  /___J____/___/___J____L___L___|___J____|____L___|___J___J____L___\\___\\____L___\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//     /  /    F   /   J    F   J   J    |   J    |    F   |    F   F   J    F   \\   J    \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//    /  /____/___J____L___/____L___|____L___|____|____|___J____|___J____\\___J____L___\\____\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//   /  /    /    F   /   J    J    F   J    F    |    J    F   J    F    F   \\   J    \\    \\  \\</span></span><br><span class=\"line\"><span class=\"comment\">//  /  /____/____/___J____L____|____L___J____L____|____J____L___J____|____J____L___\\____\\____\\  \\</span></span><br><span class=\"line\"><span class=\"comment\">// /                                                                                             \\</span></span><br><span class=\"line\"><span class=\"comment\">///_______________________________________________________________________________________________\\</span></span><br><span class=\"line\"><span class=\"comment\">//|                                                                                               |</span></span><br><span class=\"line\"><span class=\"comment\">//| hs                                                                                            |</span></span><br><span class=\"line\"><span class=\"comment\">//|_______________________________________________________________________________________________|</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"书本\"><a href=\"#书本\" class=\"headerlink\" title=\"书本\"></a>书本</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//                .-~~~~~~~~~-._       _.-~~~~~~~~~-.</span></span><br><span class=\"line\"><span class=\"comment\">//            __.'              ~.   .~              `.__</span></span><br><span class=\"line\"><span class=\"comment\">//          .'//                  \\./                  \\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//        .'//                     |                     \\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//      .'// .-~\"\"\"\"\"\"\"~~~~-._     |     _,-~~~~\"\"\"\"\"\"\"~-. \\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//    .'//.-\"                 `-.  |  .-'                 \"-.\\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//  .'//______.============-..   \\ | /   ..-============.______\\\\`.</span></span><br><span class=\"line\"><span class=\"comment\">//.'______________________________\\|/______________________________`.</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"微软金典图标\"><a href=\"#微软金典图标\" class=\"headerlink\" title=\"微软金典图标\"></a>微软金典图标</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                       __</span><br><span class=\"line\">                  ,-~¨^  ^¨-,           _,</span><br><span class=\"line\">                 /          / ;^-._...,¨/</span><br><span class=\"line\">                /          / /         /</span><br><span class=\"line\">               /          / /         /</span><br><span class=\"line\">              /          / /         /</span><br><span class=\"line\">             /,.-:''-,_ / /         /</span><br><span class=\"line\">             _,.-:--._ ^ ^:-._ __../</span><br><span class=\"line\">           /^         / /¨:.._¨__.;</span><br><span class=\"line\">          /          / /      ^  /</span><br><span class=\"line\">         /          / /         /</span><br><span class=\"line\">        /          / /         /</span><br><span class=\"line\">       /_,.--:^-._/ /         /</span><br><span class=\"line\">      ^            ^¨¨-.___.:^  (R) - G33K</span><br><span class=\"line\">     </span><br><span class=\"line\">      */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Google\"><a href=\"#Google\" class=\"headerlink\" title=\"Google\"></a>Google</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">          ___                _</span><br><span class=\"line\">         / __|___  ___  __ _| |___</span><br><span class=\"line\">        | (_ / _ \\/ _ \\/ _` |   -_)</span><br><span class=\"line\">         \\___\\___/\\___/\\__, |_\\___|</span><br><span class=\"line\">                       |___/</span><br><span class=\"line\">         </span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"奥运五环\"><a href=\"#奥运五环\" class=\"headerlink\" title=\"奥运五环\"></a>奥运五环</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">             _.-\"\"\"\"\"-._         _.-\"\"\"\"\"-._         _.-\"\"\"\"\"-._</span><br><span class=\"line\">          ,'           `.     ,'           `.     ,'           `.</span><br><span class=\"line\">         /               \\   /               \\   /               \\</span><br><span class=\"line\">        |                 | |                 | |                 |</span><br><span class=\"line\">       |                   |                   |                   |</span><br><span class=\"line\">       |                   |                   |                   |</span><br><span class=\"line\">        |             _.-\"|\"|\"-._         _.-\"|\"|\"-._             |</span><br><span class=\"line\">         \\          ,'   /   \\   `.     ,'   /   \\   `.          /</span><br><span class=\"line\">          `.       /   ,'     `.   \\   /   ,'     `.   \\       ,'</span><br><span class=\"line\">            `-..__|..-'         `-..|_|..-'         `-..|__..-'</span><br><span class=\"line\">                 |                   |                   |</span><br><span class=\"line\">                 |                   |                   |</span><br><span class=\"line\">                  |                 | |                 |</span><br><span class=\"line\">                   \\               /   \\               /</span><br><span class=\"line\">                    `.           ,'     `.           ,'</span><br><span class=\"line\">                      `-..___..-'         `-..___..-'</span><br><span class=\"line\"></span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"七龙珠比克\"><a href=\"#七龙珠比克\" class=\"headerlink\" title=\"七龙珠比克\"></a>七龙珠比克</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                      _.---..._</span><br><span class=\"line\">                  ./^         ^-._</span><br><span class=\"line\">                ./^C===.         ^\\.   /\\</span><br><span class=\"line\">               .|'     \\\\        _ ^|.^.|</span><br><span class=\"line\">          ___.--'_     ( )  .      ./ /||</span><br><span class=\"line\">         /.---^T\\      ,     |     / /|||</span><br><span class=\"line\">        C'   ._`|  ._ /  __,-/    / /-,||</span><br><span class=\"line\">             \\ \\/    ;  /O  / _    |) )|,</span><br><span class=\"line\">              i \\./^O\\./_,-^/^    ,;-^,'</span><br><span class=\"line\">               \\ |`--/ ..-^^      |_-^</span><br><span class=\"line\">                `|  \\^-           /|:</span><br><span class=\"line\">                 i.  .--         / '|.</span><br><span class=\"line\">                  i   =='       /'  |\\._</span><br><span class=\"line\">                _./`._        //    |.  ^-ooo.._</span><br><span class=\"line\">         _.oo../'  |  ^-.__./X/   . `|    |#######b</span><br><span class=\"line\">        d####     |'      ^^^^   /   |    _\\#######</span><br><span class=\"line\">        #####b ^^^^^^^^--. ...--^--^^^^^^^_.d######</span><br><span class=\"line\">        ######b._         Y            _.d#########</span><br><span class=\"line\">        ##########b._     |        _.d#############</span><br><span class=\"line\"></span><br><span class=\"line\">                                       \"Piccolo\" no. 2</span><br><span class=\"line\">                                          (from Dragonball Z)</span><br><span class=\"line\">                                               --- Steven J. Simmons</span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                             /^_.-^  _  --^=_</span><br><span class=\"line\">                          ./'-^__    _&gt;=\\^^==^-.</span><br><span class=\"line\">                          |'/^^_/  /^    \\ \\.^\\\\\\/\\</span><br><span class=\"line\">                         ,|/| '  /'  _____\\ `\\|.^.|</span><br><span class=\"line\">                         |'/   /_--^^ .   ^^-./ /||</span><br><span class=\"line\">                         |/,--^  ,     |     / /||'</span><br><span class=\"line\">                       ._|/   \\ /  __,-/    / /-,||</span><br><span class=\"line\">                       \\ '/    ;  /O  / _    |) )|,</span><br><span class=\"line\">                        i \\./^O\\./_,-^/^    ,;-^,'</span><br><span class=\"line\">                         \\ |`--/ ..-^^      |_-^</span><br><span class=\"line\">                          `|  \\^-_,/^Y\\      | ^^\\</span><br><span class=\"line\">                          _i.  \\\".--V_/     /| \\. ^\\._____...--.&gt;^^^^^^-------...._</span><br><span class=\"line\">                         /  i   ^--^^     /'|' |\\. |./'        |                  ;</span><br><span class=\"line\">       ___...----/^^^^---|.  `._\\  /^   /' |'_/' \\ `|         |'               ,/'</span><br><span class=\"line\">                |'        \\   _|^-.__./'__.^^\\     .|        ,|            _.-^</span><br><span class=\"line\">                `\\       ,|`_./^^-----^^._    ` ./ /        /^        _.-^^/</span><br><span class=\"line\">                         |'  ^                  /-^                ./^    /</span><br><span class=\"line\">       \\                 `\\_     __.-&lt;       _,/                 ./'     |'</span><br><span class=\"line\">        `\\.        `i       ^^--/._____...--^            .      ./       |.</span><br><span class=\"line\">          `|        |                                   /       /        `|</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                                       \"Piccolo\"</span><br><span class=\"line\">                                          (from Dragonball Z)</span><br><span class=\"line\">                                               --- Steven J. Simmons         </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"七龙珠孙悟空\"><a href=\"#七龙珠孙悟空\" class=\"headerlink\" title=\"七龙珠孙悟空\"></a>七龙珠孙悟空</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                           _</span><br><span class=\"line\">                           \\\"-._ _.--\"~~\"--._</span><br><span class=\"line\">                            \\   \"            ^.    ___</span><br><span class=\"line\">                            /                  \\.-~_.-~</span><br><span class=\"line\">                     .-----'     /\\/\"\\ /~-._      /</span><br><span class=\"line\">                    /  __      _/\\-.__\\L_.-/\\     \"-.</span><br><span class=\"line\">                   /.-\"  \\    ( ` \\_o&gt;\"&lt;o_/  \\  .--._\\</span><br><span class=\"line\">                  /'      \\    \\:     \"     :/_/     \"`</span><br><span class=\"line\">                          /  /\\ \"\\    ~    /~\"</span><br><span class=\"line\">                          \\ I  \\/]\"-._ _.-\"[</span><br><span class=\"line\">                       ___ \\|___/ ./    l   \\___   ___</span><br><span class=\"line\">                  .--v~   \"v` ( `-.__   __.-' ) ~v\"   ~v--.</span><br><span class=\"line\">               .-&#123;   |     :   \\_    \"~\"    _/   :     |   &#125;-.</span><br><span class=\"line\">              /   \\  |           ~-.,___,.-~           |  /   \\</span><br><span class=\"line\">             ]     \\ |                                 | /     [</span><br><span class=\"line\">             /\\     \\|     :                     :     |/     /\\</span><br><span class=\"line\">            /  ^._  _K.___,^                     ^.___,K_  _.^  \\</span><br><span class=\"line\">           /   /  \"~/  \"\\                           /\"  \\~\"  \\   \\</span><br><span class=\"line\">          /   /    /     \\ _          :          _ /     \\    \\   \\</span><br><span class=\"line\">        .^--./    /       Y___________l___________Y       \\    \\.--^.</span><br><span class=\"line\">        [    \\   /        |        [/    ]        |        \\   /    ]</span><br><span class=\"line\">        |     \"v\"         l________[____/]________j  -Row   &#125;r\"     /</span><br><span class=\"line\">        &#125;------t          /                       \\       /`-.     /</span><br><span class=\"line\">        |      |         Y                         Y     /    \"-._/</span><br><span class=\"line\">        &#125;-----v'         |         :               |     7-.     /</span><br><span class=\"line\">        |   |_|          |         l               |    / . \"-._/</span><br><span class=\"line\">        l  .[_]          :          \\              :  r[]/_.  /</span><br><span class=\"line\">         \\_____]                     \"--.             \"-.____/</span><br><span class=\"line\"></span><br><span class=\"line\">                                            \"Dragonball Z\"</span><br><span class=\"line\">                                                        ---Row</span><br><span class=\"line\">         </span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                               MMMMM</span><br><span class=\"line\">                                 MMMMMM</span><br><span class=\"line\">                                   MMMMMMM</span><br><span class=\"line\">                                    MMMMMMMM     .</span><br><span class=\"line\">                                     MMMMMMMMM</span><br><span class=\"line\">                                     HMMMMMMMMMM</span><br><span class=\"line\">                                      MMMMMMMMMMMM  M</span><br><span class=\"line\">                                      MMMMMMMMMMMMM  M</span><br><span class=\"line\">                                       MMMMMMMMMMMMM  M</span><br><span class=\"line\">                                       MMMMMMMMMMMMM:</span><br><span class=\"line\">                                       oMMMMMMMMMMMMMM</span><br><span class=\"line\">             .MMMMMMMMMMMMMMo           MMMMMMMMMMMMMMM M</span><br><span class=\"line\">       MMMMMMMMMMMMMMMMMMMMMMMMMMM      MMMMMMMMMMMMMMMM</span><br><span class=\"line\">         MMMMMMMMMMMMMMMMMMMMMMMMMMMM.  oMMMMMMMMMMMMMMM.M</span><br><span class=\"line\">           MMMMMMMMMMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMMMMMM</span><br><span class=\"line\">             MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">               oMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                 MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                   MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:                     H</span><br><span class=\"line\">                    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM                  .         MMM</span><br><span class=\"line\">                     MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM              M       MMMMMM</span><br><span class=\"line\">                      .MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM          M   MMMMMMMMMM</span><br><span class=\"line\">               MM.      MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM       M MMMMMMMMMMMM</span><br><span class=\"line\">                   MM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    .MMMMMMMMMMMMMM</span><br><span class=\"line\">                     MM  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                       MM MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">              .MMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                 HMMMMMMMMMMMMMMMMMMMMM.MMMMMMMMM.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                    MMMMMMMMMMMMMMM MMM.oMMMMMMM..MMMMMMMMM:MMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                      MMMMMMMMMMMMMM MM..MMMMMMM...MMMMMMM. MMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                        MMMMMMMMMMMMMMM ..MMMMMM...MMMMMM ..MMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                         MMMMMMM:M.MMM.M.. MMMMM M..MMMMM...MMMMMMMMMMMMMMMMMM  MMM</span><br><span class=\"line\">                           MMMM. .M..MM.M...MMMMMM..MMMMM.. MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM .</span><br><span class=\"line\">                            MMMM..M....M.....:MMM .MMMMMM..MMMMMMM...MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                             MMM.M.. ...M......MM.MMMMM.......MHM.M  .MMMMMMMMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                        MMMMMMMM..MM. . MMM.....MMMMMM.M.....M ..MM..M MMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                           .MMMMMHMM. ..MMMM. MMM............o..... . .MMMMMMMMMMMMMMM</span><br><span class=\"line\">                              MMM. M... .........................M..:.MMMMMMMMMMMM</span><br><span class=\"line\">                                oMMM............ .................M.M.MMMMMMMMM</span><br><span class=\"line\">                                   .....MM........................ . MMMMMM</span><br><span class=\"line\">                                  M.....M.....................o.MM.MMMMMMMM.</span><br><span class=\"line\">                                   M........................M.. ...MMMMMMMMMMMMMo</span><br><span class=\"line\">                                     :....MMM..............MMM..oMMMMMMM</span><br><span class=\"line\">                                      M...MMM.............MMMMMMM</span><br><span class=\"line\">                                         .............:MMMMMMMM</span><br><span class=\"line\">                                         M..... MMM.....M</span><br><span class=\"line\">                                         M M.............</span><br><span class=\"line\">                                         ................M</span><br><span class=\"line\">                                      ooM.................MM  MoMMMMMoooM</span><br><span class=\"line\">                                 MMoooM......................MoooooooH..oMM</span><br><span class=\"line\">                             MHooooMoM.....................MMooooooM........M</span><br><span class=\"line\">                           oooooooMoooM......... o........MoooooooM............</span><br><span class=\"line\">                           Mooooooooooo.......M.........Moooooooo:..............M</span><br><span class=\"line\">                          MooMoooooooooM...M........:Mooooooooooo:..............M</span><br><span class=\"line\">                         M..oooooooooooo .........Mooooooooooooooo..............M</span><br><span class=\"line\">                        M...Mooo:oooooooo.M....ooooooooooooooooooo..M...........M</span><br><span class=\"line\">                         ...oooooMoooooooM..Mooooooooooooo:oooooooM.M...........M.</span><br><span class=\"line\">                        M...ooooooMoo:ooooMoooooooooooooHoooooooooH:M. ...........:</span><br><span class=\"line\">                        M..MoooooooMoooooooooooooooooo:ooooooMooooMoM..............M</span><br><span class=\"line\">                        M..ooooooooooMooooooooooooooHoooooooMooHooooM...............M</span><br><span class=\"line\">                        ...ooooooooooooooooooo:MooooooooooooooMoMoooM................</span><br><span class=\"line\">                       M...oooooooooooooooooooooooooooooooooooooMooMM................M</span><br><span class=\"line\">                       ...MooooooooooooooooooooooooooooooooooooooooMo ................</span><br><span class=\"line\">                       ...MooooooooooooooooooooooooooooooooooooooooM M................M</span><br><span class=\"line\">                      M...ooooooooooooooooooooooooooooooooooooooooM   ................M</span><br><span class=\"line\">                      ...MoooooooooooooooooooooooooooooooooooooooMM   .:...............</span><br><span class=\"line\">                      .....MooooooooooooooooooooooooooooooooooooMoo       .............M</span><br><span class=\"line\">                      M...... ooooooooooooooooooooooooooooooooooooM       M..............M</span><br><span class=\"line\">                      M........MooooMMM MM MM  MMMMMMMMMooooooooM         M...............M</span><br><span class=\"line\">                      .........HM     M:  MM :MMMMMM          M           M...............</span><br><span class=\"line\">                     M..........M     M   MoM M                           M................M</span><br><span class=\"line\">                     M.........:M  MoH  M M M MooooHoooMM.   M             M...............M</span><br><span class=\"line\">                     M..........Moooo MMooM    oooooMooooooooM              M..............H</span><br><span class=\"line\">                     M.........MooooM  Mooo  : ooooooMooooMoooM              M........ . .o.M</span><br><span class=\"line\">                     H..  .....ooooo   oooo  M MooooooooooooooM               M... MMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMooooM M oooo  .  ooooooMooooooooM              .MMMMMMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMooooH : ooooH    oooooooooooooooo               MMMMMMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMoooo    ooooM    Moooooooooooooooo              .MMMMMMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMoooo    ooooM    MooooooooooooooooM              MMMMMMMMMMMMMMM</span><br><span class=\"line\">                     MMMMMMMMMMoooM    ooooM     ooooooooooooooooo               MMMMMMMMMMM:M</span><br><span class=\"line\">                     MMMMMMMMMMoooM   MooooM     oooooooooooMoooooo               MH...........</span><br><span class=\"line\">                      . ......Mooo.   MooooM     oooooooooooooooooo              M............M</span><br><span class=\"line\">                     M.M......oooo    MooooM     Moooooooooooooooooo:           .........M.....</span><br><span class=\"line\">                     M.M.....Moooo    MooooM      ooooooooooooooooooM            .M............</span><br><span class=\"line\">                     .......MooooH    MooooM      oooooooooMoooooooooo          M..o...M..o....M</span><br><span class=\"line\">                     .o....HMooooM    MooooH      MooooooooMooooooooooM          .:M...M.......M</span><br><span class=\"line\">                    M..M.....MoooM    :oooo:    .MooooooooHooMoooooooooM         M M... ..oM.M</span><br><span class=\"line\">                     M...M.:.Mooo. MMMMooooo   oooooooooooMoooooooooooooM          ....M. M</span><br><span class=\"line\">                      M:M..o.Moooooooooooooo MooooooooooooooMooooooooooooM          .Mo</span><br><span class=\"line\">                             MooooooooooooooMooooooooooooMoMoooooooooooooo</span><br><span class=\"line\">                             Mooooooooooooooo:ooooooooooooooooooooooooooooo</span><br><span class=\"line\">                             ooooooooooooooooMooooooooooMoooooooooooooooooo</span><br><span class=\"line\">                             ooooooooooooooooMoooooooooooMooooooooooooooooHo</span><br><span class=\"line\">                             ooMooooooooooooooMoooooooooooooooooooooooooooMoM</span><br><span class=\"line\">                            MooMoooooooooooooo.ooooooooooooooooooooooooooo:oM</span><br><span class=\"line\">                            MoooooooooooooooooooooooooooooooooooooooooooooooM</span><br><span class=\"line\">                            MoooMooooooooooooooMooooooooooooooooooooooooooooo.</span><br><span class=\"line\">                            MoooMooooooooooooooMoooooooooooooooooooooooooMooooM</span><br><span class=\"line\">                            MooooooooooooooooooMoooooooooooooooooooooooooMoooooM</span><br><span class=\"line\">                            MooooMoooooooooooooMoooooooooooooooooooooooooMoHooooM</span><br><span class=\"line\">                            ooooooMooooooooooooooooooooooooooooooooooooooooMoMoooM</span><br><span class=\"line\">                           MooooooooooooooooooooMooooooooooooooooooooooooooMoooooH:</span><br><span class=\"line\">                           MoooooooMooooooooooooMoooooooooooooooooooooooooooooHoooM</span><br><span class=\"line\">                           MooooooooMoooooooooooMoooooooooooooooooooooooooMoooMooooM</span><br><span class=\"line\">                           Moooooooooooooooooooooooooooooooooooooooooooooo.oooMooooo</span><br><span class=\"line\">                           MoooooooooooooooooooooooooooooooooooooooooooooMoooooooooM</span><br><span class=\"line\">                            MooooooooooooooooooooMoooooooooooooooooooooooooooooooooM</span><br><span class=\"line\">                             MooooooooooooooooooooMHooooooooooooooooooooMoooo:ooooo</span><br><span class=\"line\">                              MMooooooooooooooooooMoMHoooooooooooooooooooooooMooooo</span><br><span class=\"line\">                               MMoooooooooooooooMMooo MMooooooooooooooooooooooooooM</span><br><span class=\"line\">                               MMMoooooooooooooMooooo  oooooooooooooooooooooMooooo</span><br><span class=\"line\">                               MooMMoooooooooMoooMMoM  ooooHooooooooooooooooMooooM</span><br><span class=\"line\">                               MooooMooooooMooooMoooM  MoooooMoooooooooooooMooooo</span><br><span class=\"line\">                               ooooooMMooooooooMooooM  MoooooooooMooooooooooooooM</span><br><span class=\"line\">                               HooooooMoooooooMooooM    HoooooooHooMooooooooooooo</span><br><span class=\"line\">                                oooMoooooooooHoooM         MoooooooooMoooooooooM</span><br><span class=\"line\">                                 HooooooooooooHM             MooooooooMMoooooooM</span><br><span class=\"line\">                                  MMMMMMMMMMMMMM                Moooooo:MooooHMM</span><br><span class=\"line\">                                   MMMMMMM: ...                  MMMMMMMMMMMMMM</span><br><span class=\"line\">                                  M............M                  MMMMMMMMM ....</span><br><span class=\"line\">                                  M.MM..........                  M.............M</span><br><span class=\"line\">                               M ..............MM                 M..............</span><br><span class=\"line\">                            MMMMM............MMMM                 ..MMMMMMMM ....M</span><br><span class=\"line\">                          MMMMMMMMMMMMMMMMMMMMMMMM               MMMMMMMMMMMMM...M</span><br><span class=\"line\">                       .MMMMMMMMMMMMMMMMMMMMMMMMMM               MMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                       MMMMMMMMMMMMMMMMMMMMMMMMM                MMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                       :MMMMMMMMMMMMMMMMMMH                     MMMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                          By EBEN Jérôme                        MMMMMMMMMMMMMMMMMM</span><br><span class=\"line\">                                                                MMMMMMMMMMMMMMM</span><br><span class=\"line\">                                                                 HMMMMMM</span><br><span class=\"line\">        </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"皮卡丘\"><a href=\"#皮卡丘\" class=\"headerlink\" title=\"皮卡丘\"></a>皮卡丘</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">       quu..__</span><br><span class=\"line\">        $$$b  `---.__</span><br><span class=\"line\">         \"$$b        `--.                          ___.---uuudP</span><br><span class=\"line\">          `$$b           `.__.------.__     __.---'      $$$$\"              .</span><br><span class=\"line\">            \"$b          -'            `-.-'            $$$\"              .'|</span><br><span class=\"line\">              \".                                       d$\"             _.'  |</span><br><span class=\"line\">                `.   /                              ...\"             .'     |</span><br><span class=\"line\">                  `./                           ..::-'            _.'       |</span><br><span class=\"line\">                   /                         .:::-'            .-'         .'</span><br><span class=\"line\">                  :                          ::''\\          _.'            |</span><br><span class=\"line\">                 .' .-.             .-.           `.      .'               |</span><br><span class=\"line\">                 : /'$$|           .@\"$\\           `.   .'              _.-'</span><br><span class=\"line\">                .'|$u$$|          |$$,$$|           |  &lt;            _.-'</span><br><span class=\"line\">                | `:$$:'          :$$$$$:           `.  `.       .-'</span><br><span class=\"line\">                :                  `\"--'             |    `-.     \\</span><br><span class=\"line\">               :##.       ==             .###.       `.      `.    `\\</span><br><span class=\"line\">               |##:                      :###:        |        &gt;     &gt;</span><br><span class=\"line\">               |#'     `..'`..'          `###'        x:      /     /</span><br><span class=\"line\">                \\                                   xXX|     /    ./</span><br><span class=\"line\">                 \\                                xXXX'|    /   ./</span><br><span class=\"line\">                 /`-.                                  `.  /   /</span><br><span class=\"line\">                :    `-  ...........,                   | /  .'</span><br><span class=\"line\">                |         ``:::::::'       .            |&lt;    `.</span><br><span class=\"line\">                |             ```          |           x| \\ `.:``.</span><br><span class=\"line\">                |                         .'    /'   xXX|  `:`M`M':.</span><br><span class=\"line\">                |    |                    ;    /:' xXXX'|  -'MMMMM:'</span><br><span class=\"line\">                `.  .'                   :    /:'       |-'MMMM.-'</span><br><span class=\"line\">                 |  |                   .'   /'        .'MMM.-'</span><br><span class=\"line\">                 `'`'                   :  ,'          |MMM&lt;</span><br><span class=\"line\">                   |                     `'            |tbap\\</span><br><span class=\"line\">                    \\                                  :MM.-'</span><br><span class=\"line\">                     \\                 |              .''</span><br><span class=\"line\">                      \\.               `.            /</span><br><span class=\"line\">                       /     .:::::::.. :           /</span><br><span class=\"line\">                      |     .:::::::::::`.         /</span><br><span class=\"line\">                      |   .:::------------\\       /</span><br><span class=\"line\">                     /   .''               &gt;::'  /</span><br><span class=\"line\">                     `',:                 :    .'</span><br><span class=\"line\">                                          `:.:'</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"电脑图像\"><a href=\"#电脑图像\" class=\"headerlink\" title=\"电脑图像\"></a>电脑图像</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                    ,----------------,              ,---------,</span><br><span class=\"line\">               ,-----------------------,          ,\"        ,\"|</span><br><span class=\"line\">             ,\"                      ,\"|        ,\"        ,\"  |</span><br><span class=\"line\">            +-----------------------+  |      ,\"        ,\"    |</span><br><span class=\"line\">            |  .-----------------.  |  |     +---------+      |</span><br><span class=\"line\">            |  |                 |  |  |     | -==----'|      |</span><br><span class=\"line\">            |  |  I LOVE DOS!    |  |  |     |         |      |</span><br><span class=\"line\">            |  |  Bad command or |  |  |/----|`---=    |      |</span><br><span class=\"line\">            |  |  C:\\&gt;_          |  |  |   ,/|==== ooo |      ;</span><br><span class=\"line\">            |  |                 |  |  |  // |(((( [33]|    ,\"</span><br><span class=\"line\">            |  `-----------------'  |,\" .;'| |((((     |  ,\"</span><br><span class=\"line\">            +-----------------------+  ;;  | |         |,\"</span><br><span class=\"line\">               /_)______________(_/  //'   | +---------+</span><br><span class=\"line\">          ___________________________/___  `,</span><br><span class=\"line\">         /  oooooooooooooooo  .o.  oooo /,   \\,\"-----------</span><br><span class=\"line\">        / ==ooooooooooooooo==.o.  ooo= //   ,`\\--&#123;)B     ,\"</span><br><span class=\"line\">       /_==__==========__==_ooo__ooo=_/'   /___________,\"</span><br><span class=\"line\">        </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                                   _________</span><br><span class=\"line\">                                  /         /.</span><br><span class=\"line\">           .-------------.       /_________/ |</span><br><span class=\"line\">          /             / |      |         | |</span><br><span class=\"line\">         /+============+\\ |      | |====|  | |</span><br><span class=\"line\">         ||C:\\&gt;        || |      |         | |</span><br><span class=\"line\">         ||            || |      | |====|  | |</span><br><span class=\"line\">         ||            || |      |   ___   | |</span><br><span class=\"line\">         ||            || |      |  |166|  | |</span><br><span class=\"line\">         ||            ||/@@@    |   ---   | |</span><br><span class=\"line\">         \\+============+/    @   |_________|./.</span><br><span class=\"line\">                            @          ..  ....'</span><br><span class=\"line\">         ..................@     __.'.'  ''</span><br><span class=\"line\">        /oooooooooooooooo//     ///</span><br><span class=\"line\">       /................//     /_/</span><br><span class=\"line\">       ------------------</span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"龙\"><a href=\"#龙\" class=\"headerlink\" title=\"龙\"></a>龙</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">        11111111111111111111111111111111111111001111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111111111100011111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111111100001111111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111110000111111111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111000000111111111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111100000011110001100000000000000011111111</span><br><span class=\"line\">        11111111111111111100000000000000000000000000000000011111111111111</span><br><span class=\"line\">        11111111111111110111000000000000000000000000000011111111111111111</span><br><span class=\"line\">        11111111111111111111111000000000000000000000000000000000111111111</span><br><span class=\"line\">        11111111111111111110000000000000000000000000000000111111111111111</span><br><span class=\"line\">        11111111111111111100011100000000000000000000000000000111111111111</span><br><span class=\"line\">        11111111111111100000110000000000011000000000000000000011111111111</span><br><span class=\"line\">        11111111111111000000000000000100111100000000000001100000111111111</span><br><span class=\"line\">        11111111110000000000000000001110111110000000000000111000011111111</span><br><span class=\"line\">        11111111000000000000000000011111111100000000000000011110001111111</span><br><span class=\"line\">        11111110000000011111111111111111111100000000000000001111100111111</span><br><span class=\"line\">        11111111000001111111111111111111110000000000000000001111111111111</span><br><span class=\"line\">        11111111110111111111111111111100000000000000000000000111111111111</span><br><span class=\"line\">        11111111111111110000000000000000000000000000000000000111111111111</span><br><span class=\"line\">        11111111111111111100000000000000000000000000001100000111111111111</span><br><span class=\"line\">        11111111111111000000000000000000000000000000111100000111111111111</span><br><span class=\"line\">        11111111111000000000000000000000000000000001111110000111111111111</span><br><span class=\"line\">        11111111100000000000000000000000000000001111111110000111111111111</span><br><span class=\"line\">        11111110000000000000000000000000000000111111111110000111111111111</span><br><span class=\"line\">        11111100000000000000000001110000001111111111111110001111111111111</span><br><span class=\"line\">        11111000000000000000011111111111111111111111111110011111111111111</span><br><span class=\"line\">        11110000000000000001111111111111111100111111111111111111111111111</span><br><span class=\"line\">        11100000000000000011111111111111111111100001111111111111111111111</span><br><span class=\"line\">        11100000000001000111111111111111111111111000001111111111111111111</span><br><span class=\"line\">        11000000000001100111111111111111111111111110000000111111111111111</span><br><span class=\"line\">        11000000000000111011111111111100011111000011100000001111111111111</span><br><span class=\"line\">        11000000000000011111111111111111000111110000000000000011111111111</span><br><span class=\"line\">        11000000000000000011111111111111000000000000000000000000111111111</span><br><span class=\"line\">        11001000000000000000001111111110000000000000000000000000001111111</span><br><span class=\"line\">        11100110000000000001111111110000000000000000111000000000000111111</span><br><span class=\"line\">        11110110000000000000000000000000000000000111111111110000000011111</span><br><span class=\"line\">        11111110000000000000000000000000000000001111111111111100000001111</span><br><span class=\"line\">        11111110000010000000000000000001100000000111011111111110000001111</span><br><span class=\"line\">        11111111000111110000000000000111110000000000111111111110110000111</span><br><span class=\"line\">        11111110001111111100010000000001111100000111111111111111110000111</span><br><span class=\"line\">        11111110001111111111111110000000111111100000000111111111111000111</span><br><span class=\"line\">        11111111001111111111111111111000000111111111111111111111111100011</span><br><span class=\"line\">        11111111101111111111111111111110000111111111111111111111111001111</span><br><span class=\"line\">        11111111111111111111111111111110001111111111111111111111100111111</span><br><span class=\"line\">        11111111111111111111111111111111001111111111111111111111001111111</span><br><span class=\"line\">        11111111111111111111111111111111100111111111111111111111111111111</span><br><span class=\"line\">        11111111111111111111111111111111110111111111111111111111111111111</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                                                    __----~~~~~~~~~~~------___</span><br><span class=\"line\">                                         .  .   ~~//====......          __--~ ~~</span><br><span class=\"line\">                         -.            \\_|//     |||\\\\  ~~~~~~::::... /~</span><br><span class=\"line\">                      ___-==_       _-~o~  \\/    |||  \\\\            _/~~-</span><br><span class=\"line\">              __---~~~.==~||\\=_    -_--~/_-~|-   |\\\\   \\\\        _/~</span><br><span class=\"line\">          _-~~     .=~    |  \\\\-_    '-~7  /-   /  ||    \\      /</span><br><span class=\"line\">        .~       .~       |   \\\\ -_    /  /-   /   ||      \\   /</span><br><span class=\"line\">       /  ____  /         |     \\\\ ~-_/  /|- _/   .||       \\ /</span><br><span class=\"line\">       |~~    ~~|--~~~~--_ \\     ~==-/   | \\~--===~~        .\\</span><br><span class=\"line\">                '         ~-|      /|    |-~\\~~       __--~~</span><br><span class=\"line\">                            |-~~-_/ |    |   ~\\_   _-~            /\\</span><br><span class=\"line\">                                 /  \\     \\__   \\/~                \\__</span><br><span class=\"line\">                             _--~ _/ | .-~~____--~-/                  ~~==.</span><br><span class=\"line\">                            ((-&gt;/~   '.|||' -_|    ~~-/ ,              . _||</span><br><span class=\"line\">                                       -_     ~\\      ~~---l__i__i__i--~~_/</span><br><span class=\"line\">                                       _-~-__   ~)  \\--______________--~~</span><br><span class=\"line\">                                     //.-~~~-~_--~- |-------~~~~~~~~</span><br><span class=\"line\">                                            //.-~~~--\\</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">       */</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//                       )      (</span></span><br><span class=\"line\"><span class=\"comment\">//                  /+++=))    ((=+++\\</span></span><br><span class=\"line\"><span class=\"comment\">//             /++++++++//      \\\\+++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//          /++++++++++//(  /\\  )\\\\++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//        /+++++++++++//  \\\\^^//  \\\\+++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//     _/++++++++++++//  &#123;&#123;@::@&#125;&#125;  \\\\++++++++++++\\_</span></span><br><span class=\"line\"><span class=\"comment\">//    /+++++++++++++((     &#123;\\/&#125;     ))+++++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//   /+++++++++++++++\\\\    &lt;**&gt;    //+++++++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//  /+++++++++++++++++\\\\  / VV \\  //+++++++++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">// /+++++++++++++++++++\\\\/******\\//+++++++++++++++++++\\</span></span><br><span class=\"line\"><span class=\"comment\">//|+/|++++++++++/\\++++++(***/\\***)++++++/\\++++++++++|\\+\\</span></span><br><span class=\"line\"><span class=\"comment\">//|/ |+/\\+/\\+/\\/  \\+/\\++\\**|**|**/++/\\+/  \\/\\+/\\+/\\+| \\|</span></span><br><span class=\"line\"><span class=\"comment\">//v  |/  V  V  V   V  \\+\\|*|**|*|/+/  V   v  V  V  \\|  v</span></span><br><span class=\"line\"><span class=\"comment\">//   v                 /*|*|**|*|*\\...              v</span></span><br><span class=\"line\"><span class=\"comment\">//                    (**|*|**|*|**). .</span></span><br><span class=\"line\"><span class=\"comment\">//                   __\\*|*|**|*|*/__. .</span></span><br><span class=\"line\"><span class=\"comment\">//                  (vvv(VVV)(VVV)vvv). .</span></span><br><span class=\"line\"><span class=\"comment\">//                      ............../ /</span></span><br><span class=\"line\"><span class=\"comment\">//                     / ............../</span></span><br><span class=\"line\"><span class=\"comment\">//                     ((</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">                 ___====-_  _-====___</span><br><span class=\"line\">           _--^^^#####//      \\\\#####^^^--_</span><br><span class=\"line\">        _-^##########// (    ) \\\\##########^-_</span><br><span class=\"line\">       -############//  |\\^^/|  \\\\############-</span><br><span class=\"line\">     _/############//   (@::@)   \\\\############\\_</span><br><span class=\"line\">    /#############((     \\\\//     ))#############\\</span><br><span class=\"line\">   -###############\\\\    (oo)    //###############-</span><br><span class=\"line\">  -#################\\\\  / VV \\  //#################-</span><br><span class=\"line\"> -###################\\\\/      \\//###################-</span><br><span class=\"line\">_#/|##########/\\######(   /\\   )######/\\##########|\\#_</span><br><span class=\"line\">|/ |#/\\#/\\#/\\/  \\#/\\##\\  |  |  /##/\\#/  \\/\\#/\\#/\\#| \\|</span><br><span class=\"line\">`  |/  V  V  `   V  \\#\\| |  | |/#/  V   '  V  V  \\|  '</span><br><span class=\"line\">   `   `  `      `   / | |  | | \\   '      '  '   '</span><br><span class=\"line\">                    (  | |  | |  )</span><br><span class=\"line\">                   __\\ | |  | | /__</span><br><span class=\"line\">                  (vvv(VVV)(VVV)vvv)</span><br><span class=\"line\">                  </span><br><span class=\"line\">*/</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://shiyousan.com/post/635479912728885400\">参考博客</a></p>"},{"title":"装机软件清单","date":"2016-06-01T16:04:21.000Z","_content":"\n### 装机必备###\n\n- 暴风影音\n\n- 蓝灯 [传送门](http://pan.baidu.com/s/1c1AOJpm)，密码: v9im\n\n- 赛风3\n\n- 网易云音乐\n\n- TGP\n\n- FSCapture（截屏软件，附带截色笔等）\n\n- mcool（小众化的音乐软件，内存占用极小）\n\n- WPS\n\n- 迅雷破解版 [传送门](http://pan.baidu.com/s/1c2sjjhQ)\n\n<!-- more -->\n\n- 破解版百度云管家（下载地址：[传送门](http://pan.baidu.com/s/1c2Z9H8)）\n\n- Firefox\n\n- Chrome\n\n- Apowersoft录屏王\n\n- 金山词霸\n\n- ADSafe\n\n- Avira Launcher（小红伞）\n\n- ScreenToGif 1.4.1（录制GIF图片）\n\n\n### 编程相关###\n\n- GitHub\n\n- cmd (markdown编辑软件)\n\n- Genymotion [传送门](http://pan.baidu.com/s/1skWJGRV)\n\n- Oracle VM VirtualBox\n\n- phpStorm\n\n- codeblocks [传送门](http://pan.baidu.com/s/1dED59mh)\n\n- eclipse\n\n- eclipseADT [传送门](http://www.qiuchengjia.cn/2016/07/06/Android/Eclipse-Android-ADT-Bundle%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E5%92%8Cgenymotion%E6%8F%92%E4%BB%B6/)\n\n- photoshop\n\n- Start Tor Browser（洋葱浏览器）\n\n- Android Studio\n\n- Xampp集成开发环境\n\n- putty（远程主机访问软件）\n\n- VMware \n\n- camtasia studio （屏幕录制软件，[传送门](http://pan.baidu.com/s/1dEPFHD3) ， 密码: 6dnm）\n\n- 屏幕录像专家（屏幕录制软件，[传送门](http://pan.baidu.com/s/1dED43G9)，密码: 5pnj）\n\n\n### chrome插件###\n\n- 不得不说，chrome真是一个让人惊喜的东西，我认为它不仅仅是一个浏览器，我有预感，chrome将会改变世界\n\n- Google Keep Chrome（记事本 [扩展程序](https://chrome.google.com/webstore/detail/google-keep-chrome-extens/lpcaedmchfhocbbapmcbpinfpgnhiddi/related)  [应用](https://chrome.google.com/webstore/detail/google-keep-notes-and-lis/hmjkmjkepdijhoojdojkdfohbdgmmhki?hl=zh-CN)）\n\n- 黑色非金属主题 [传送门](https://chrome.google.com/webstore/detail/black-metallic-theme/gbhhihkiaeeioepkklgfpdohnemkjcoi?hl=zh-CN)\n\n- vysor（PC控制Android设备的神器）\n\n- Full Page Screen Capture(截取整个屏幕 [传送门](https://chrome.google.com/webstore/detail/full-page-screen-capture/fdpohaocaechififmbbbbbknoalclacl?hl=zh-CN))\n\n- Google翻译 [传送门](https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb?hl=zh-CN)\n\n- Downloads - Your Download Box（下载管理工具）[传送门](https://chrome.google.com/webstore/detail/downloads-your-download-b/gjihnjejboipjmadkpmknccijhibnpfe?hl=zh-CN)\n\n- ABP（Adblock Plus）（广告屏蔽 [传送门](https://chrome.google.com/webstore/detail/adblock-plus/cfhdojbkjhnklbpkdaibdccddilifddb?hl=zh-CN)）\n\n- 广告终结者 [传送门](https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/fpdnjdlbdmifoocedhkighhlbchbiikl?hl=zh-CN)\n\n- Google文档、表格及幻灯片的Office编辑 [传送门](https://chrome.google.com/webstore/detail/office-editing-for-docs-s/gbkeegbaiigmenfmjfclcdgdpimamgkj)\n\n- 印象笔记·剪藏 [传送门](https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc?hl=zh-CN)\n\n- 锤子便签\n\n### firefox插件###\n\n- Full Web Page Screenshots（广告屏蔽 [传送门](https://addons.mozilla.org/zh-CN/firefox/addon/fireshot/?src=userprofile)）\n\n- firefox模仿chrome界面 [传送门](http://firefoxfan.cc/firefox-theme/155.html) ","source":"_posts/通用/装机软件清单.md","raw":"---\ntitle: 装机软件清单\ndate: 2016-06-01 16:04:21\ntags: 装机软件清单\ncategories: 通用\n---\n\n### 装机必备###\n\n- 暴风影音\n\n- 蓝灯 [传送门](http://pan.baidu.com/s/1c1AOJpm)，密码: v9im\n\n- 赛风3\n\n- 网易云音乐\n\n- TGP\n\n- FSCapture（截屏软件，附带截色笔等）\n\n- mcool（小众化的音乐软件，内存占用极小）\n\n- WPS\n\n- 迅雷破解版 [传送门](http://pan.baidu.com/s/1c2sjjhQ)\n\n<!-- more -->\n\n- 破解版百度云管家（下载地址：[传送门](http://pan.baidu.com/s/1c2Z9H8)）\n\n- Firefox\n\n- Chrome\n\n- Apowersoft录屏王\n\n- 金山词霸\n\n- ADSafe\n\n- Avira Launcher（小红伞）\n\n- ScreenToGif 1.4.1（录制GIF图片）\n\n\n### 编程相关###\n\n- GitHub\n\n- cmd (markdown编辑软件)\n\n- Genymotion [传送门](http://pan.baidu.com/s/1skWJGRV)\n\n- Oracle VM VirtualBox\n\n- phpStorm\n\n- codeblocks [传送门](http://pan.baidu.com/s/1dED59mh)\n\n- eclipse\n\n- eclipseADT [传送门](http://www.qiuchengjia.cn/2016/07/06/Android/Eclipse-Android-ADT-Bundle%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E5%92%8Cgenymotion%E6%8F%92%E4%BB%B6/)\n\n- photoshop\n\n- Start Tor Browser（洋葱浏览器）\n\n- Android Studio\n\n- Xampp集成开发环境\n\n- putty（远程主机访问软件）\n\n- VMware \n\n- camtasia studio （屏幕录制软件，[传送门](http://pan.baidu.com/s/1dEPFHD3) ， 密码: 6dnm）\n\n- 屏幕录像专家（屏幕录制软件，[传送门](http://pan.baidu.com/s/1dED43G9)，密码: 5pnj）\n\n\n### chrome插件###\n\n- 不得不说，chrome真是一个让人惊喜的东西，我认为它不仅仅是一个浏览器，我有预感，chrome将会改变世界\n\n- Google Keep Chrome（记事本 [扩展程序](https://chrome.google.com/webstore/detail/google-keep-chrome-extens/lpcaedmchfhocbbapmcbpinfpgnhiddi/related)  [应用](https://chrome.google.com/webstore/detail/google-keep-notes-and-lis/hmjkmjkepdijhoojdojkdfohbdgmmhki?hl=zh-CN)）\n\n- 黑色非金属主题 [传送门](https://chrome.google.com/webstore/detail/black-metallic-theme/gbhhihkiaeeioepkklgfpdohnemkjcoi?hl=zh-CN)\n\n- vysor（PC控制Android设备的神器）\n\n- Full Page Screen Capture(截取整个屏幕 [传送门](https://chrome.google.com/webstore/detail/full-page-screen-capture/fdpohaocaechififmbbbbbknoalclacl?hl=zh-CN))\n\n- Google翻译 [传送门](https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb?hl=zh-CN)\n\n- Downloads - Your Download Box（下载管理工具）[传送门](https://chrome.google.com/webstore/detail/downloads-your-download-b/gjihnjejboipjmadkpmknccijhibnpfe?hl=zh-CN)\n\n- ABP（Adblock Plus）（广告屏蔽 [传送门](https://chrome.google.com/webstore/detail/adblock-plus/cfhdojbkjhnklbpkdaibdccddilifddb?hl=zh-CN)）\n\n- 广告终结者 [传送门](https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/fpdnjdlbdmifoocedhkighhlbchbiikl?hl=zh-CN)\n\n- Google文档、表格及幻灯片的Office编辑 [传送门](https://chrome.google.com/webstore/detail/office-editing-for-docs-s/gbkeegbaiigmenfmjfclcdgdpimamgkj)\n\n- 印象笔记·剪藏 [传送门](https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc?hl=zh-CN)\n\n- 锤子便签\n\n### firefox插件###\n\n- Full Web Page Screenshots（广告屏蔽 [传送门](https://addons.mozilla.org/zh-CN/firefox/addon/fireshot/?src=userprofile)）\n\n- firefox模仿chrome界面 [传送门](http://firefoxfan.cc/firefox-theme/155.html) ","slug":"通用/装机软件清单","published":1,"updated":"2016-07-11T06:30:14.837Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qn50055kgaexgffm0w1","content":"<h3 id=\"装机必备\"><a href=\"#装机必备\" class=\"headerlink\" title=\"装机必备\"></a>装机必备</h3><ul>\n<li><p>暴风影音</p>\n</li>\n<li><p>蓝灯 <a href=\"http://pan.baidu.com/s/1c1AOJpm\" target=\"_blank\" rel=\"external\">传送门</a>，密码: v9im</p>\n</li>\n<li><p>赛风3</p>\n</li>\n<li><p>网易云音乐</p>\n</li>\n<li><p>TGP</p>\n</li>\n<li><p>FSCapture（截屏软件，附带截色笔等）</p>\n</li>\n<li><p>mcool（小众化的音乐软件，内存占用极小）</p>\n</li>\n<li><p>WPS</p>\n</li>\n<li><p>迅雷破解版 <a href=\"http://pan.baidu.com/s/1c2sjjhQ\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li><p>破解版百度云管家（下载地址：<a href=\"http://pan.baidu.com/s/1c2Z9H8\" target=\"_blank\" rel=\"external\">传送门</a>）</p>\n</li>\n<li><p>Firefox</p>\n</li>\n<li><p>Chrome</p>\n</li>\n<li><p>Apowersoft录屏王</p>\n</li>\n<li><p>金山词霸</p>\n</li>\n<li><p>ADSafe</p>\n</li>\n<li><p>Avira Launcher（小红伞）</p>\n</li>\n<li><p>ScreenToGif 1.4.1（录制GIF图片）</p>\n</li>\n</ul>\n<h3 id=\"编程相关\"><a href=\"#编程相关\" class=\"headerlink\" title=\"编程相关\"></a>编程相关</h3><ul>\n<li><p>GitHub</p>\n</li>\n<li><p>cmd (markdown编辑软件)</p>\n</li>\n<li><p>Genymotion <a href=\"http://pan.baidu.com/s/1skWJGRV\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>Oracle VM VirtualBox</p>\n</li>\n<li><p>phpStorm</p>\n</li>\n<li><p>codeblocks <a href=\"http://pan.baidu.com/s/1dED59mh\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>eclipse</p>\n</li>\n<li><p>eclipseADT <a href=\"http://www.qiuchengjia.cn/2016/07/06/Android/Eclipse-Android-ADT-Bundle%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E5%92%8Cgenymotion%E6%8F%92%E4%BB%B6/\">传送门</a></p>\n</li>\n<li><p>photoshop</p>\n</li>\n<li><p>Start Tor Browser（洋葱浏览器）</p>\n</li>\n<li><p>Android Studio</p>\n</li>\n<li><p>Xampp集成开发环境</p>\n</li>\n<li><p>putty（远程主机访问软件）</p>\n</li>\n<li><p>VMware </p>\n</li>\n<li><p>camtasia studio （屏幕录制软件，<a href=\"http://pan.baidu.com/s/1dEPFHD3\" target=\"_blank\" rel=\"external\">传送门</a> ， 密码: 6dnm）</p>\n</li>\n<li><p>屏幕录像专家（屏幕录制软件，<a href=\"http://pan.baidu.com/s/1dED43G9\" target=\"_blank\" rel=\"external\">传送门</a>，密码: 5pnj）</p>\n</li>\n</ul>\n<h3 id=\"chrome插件\"><a href=\"#chrome插件\" class=\"headerlink\" title=\"chrome插件\"></a>chrome插件</h3><ul>\n<li><p>不得不说，chrome真是一个让人惊喜的东西，我认为它不仅仅是一个浏览器，我有预感，chrome将会改变世界</p>\n</li>\n<li><p>Google Keep Chrome（记事本 <a href=\"https://chrome.google.com/webstore/detail/google-keep-chrome-extens/lpcaedmchfhocbbapmcbpinfpgnhiddi/related\" target=\"_blank\" rel=\"external\">扩展程序</a>  <a href=\"https://chrome.google.com/webstore/detail/google-keep-notes-and-lis/hmjkmjkepdijhoojdojkdfohbdgmmhki?hl=zh-CN\" target=\"_blank\" rel=\"external\">应用</a>）</p>\n</li>\n<li><p>黑色非金属主题 <a href=\"https://chrome.google.com/webstore/detail/black-metallic-theme/gbhhihkiaeeioepkklgfpdohnemkjcoi?hl=zh-CN\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>vysor（PC控制Android设备的神器）</p>\n</li>\n<li><p>Full Page Screen Capture(截取整个屏幕 <a href=\"https://chrome.google.com/webstore/detail/full-page-screen-capture/fdpohaocaechififmbbbbbknoalclacl?hl=zh-CN\" target=\"_blank\" rel=\"external\">传送门</a>)</p>\n</li>\n<li><p>Google翻译 <a href=\"https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb?hl=zh-CN\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>Downloads - Your Download Box（下载管理工具）<a href=\"https://chrome.google.com/webstore/detail/downloads-your-download-b/gjihnjejboipjmadkpmknccijhibnpfe?hl=zh-CN\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>ABP（Adblock Plus）（广告屏蔽 <a href=\"https://chrome.google.com/webstore/detail/adblock-plus/cfhdojbkjhnklbpkdaibdccddilifddb?hl=zh-CN\" target=\"_blank\" rel=\"external\">传送门</a>）</p>\n</li>\n<li><p>广告终结者 <a href=\"https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/fpdnjdlbdmifoocedhkighhlbchbiikl?hl=zh-CN\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>Google文档、表格及幻灯片的Office编辑 <a href=\"https://chrome.google.com/webstore/detail/office-editing-for-docs-s/gbkeegbaiigmenfmjfclcdgdpimamgkj\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>印象笔记·剪藏 <a href=\"https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc?hl=zh-CN\" target=\"_blank\" rel=\"external\">传送门</a></p>\n</li>\n<li><p>锤子便签</p>\n</li>\n</ul>\n<h3 id=\"firefox插件\"><a href=\"#firefox插件\" class=\"headerlink\" title=\"firefox插件\"></a>firefox插件</h3><ul>\n<li><p>Full Web Page Screenshots（广告屏蔽 <a href=\"https://addons.mozilla.org/zh-CN/firefox/addon/fireshot/?src=userprofile\" target=\"_blank\" rel=\"external\">传送门</a>）</p>\n</li>\n<li><p>firefox模仿chrome界面 <a href=\"http://firefoxfan.cc/firefox-theme/155.html\" target=\"_blank\" rel=\"external\">传送门</a> </p>\n</li>\n</ul>\n","excerpt":"<h3 id=\"装机必备\"><a href=\"#装机必备\" class=\"headerlink\" title=\"装机必备\"></a>装机必备</h3><ul>\n<li><p>暴风影音</p>\n</li>\n<li><p>蓝灯 <a href=\"http://pan.baidu.com/s/1c1AOJpm\">传送门</a>，密码: v9im</p>\n</li>\n<li><p>赛风3</p>\n</li>\n<li><p>网易云音乐</p>\n</li>\n<li><p>TGP</p>\n</li>\n<li><p>FSCapture（截屏软件，附带截色笔等）</p>\n</li>\n<li><p>mcool（小众化的音乐软件，内存占用极小）</p>\n</li>\n<li><p>WPS</p>\n</li>\n<li><p>迅雷破解版 <a href=\"http://pan.baidu.com/s/1c2sjjhQ\">传送门</a></p>\n</li>\n</ul>","more":"<ul>\n<li><p>破解版百度云管家（下载地址：<a href=\"http://pan.baidu.com/s/1c2Z9H8\">传送门</a>）</p>\n</li>\n<li><p>Firefox</p>\n</li>\n<li><p>Chrome</p>\n</li>\n<li><p>Apowersoft录屏王</p>\n</li>\n<li><p>金山词霸</p>\n</li>\n<li><p>ADSafe</p>\n</li>\n<li><p>Avira Launcher（小红伞）</p>\n</li>\n<li><p>ScreenToGif 1.4.1（录制GIF图片）</p>\n</li>\n</ul>\n<h3 id=\"编程相关\"><a href=\"#编程相关\" class=\"headerlink\" title=\"编程相关\"></a>编程相关</h3><ul>\n<li><p>GitHub</p>\n</li>\n<li><p>cmd (markdown编辑软件)</p>\n</li>\n<li><p>Genymotion <a href=\"http://pan.baidu.com/s/1skWJGRV\">传送门</a></p>\n</li>\n<li><p>Oracle VM VirtualBox</p>\n</li>\n<li><p>phpStorm</p>\n</li>\n<li><p>codeblocks <a href=\"http://pan.baidu.com/s/1dED59mh\">传送门</a></p>\n</li>\n<li><p>eclipse</p>\n</li>\n<li><p>eclipseADT <a href=\"http://www.qiuchengjia.cn/2016/07/06/Android/Eclipse-Android-ADT-Bundle%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%E5%92%8Cgenymotion%E6%8F%92%E4%BB%B6/\">传送门</a></p>\n</li>\n<li><p>photoshop</p>\n</li>\n<li><p>Start Tor Browser（洋葱浏览器）</p>\n</li>\n<li><p>Android Studio</p>\n</li>\n<li><p>Xampp集成开发环境</p>\n</li>\n<li><p>putty（远程主机访问软件）</p>\n</li>\n<li><p>VMware </p>\n</li>\n<li><p>camtasia studio （屏幕录制软件，<a href=\"http://pan.baidu.com/s/1dEPFHD3\">传送门</a> ， 密码: 6dnm）</p>\n</li>\n<li><p>屏幕录像专家（屏幕录制软件，<a href=\"http://pan.baidu.com/s/1dED43G9\">传送门</a>，密码: 5pnj）</p>\n</li>\n</ul>\n<h3 id=\"chrome插件\"><a href=\"#chrome插件\" class=\"headerlink\" title=\"chrome插件\"></a>chrome插件</h3><ul>\n<li><p>不得不说，chrome真是一个让人惊喜的东西，我认为它不仅仅是一个浏览器，我有预感，chrome将会改变世界</p>\n</li>\n<li><p>Google Keep Chrome（记事本 <a href=\"https://chrome.google.com/webstore/detail/google-keep-chrome-extens/lpcaedmchfhocbbapmcbpinfpgnhiddi/related\">扩展程序</a>  <a href=\"https://chrome.google.com/webstore/detail/google-keep-notes-and-lis/hmjkmjkepdijhoojdojkdfohbdgmmhki?hl=zh-CN\">应用</a>）</p>\n</li>\n<li><p>黑色非金属主题 <a href=\"https://chrome.google.com/webstore/detail/black-metallic-theme/gbhhihkiaeeioepkklgfpdohnemkjcoi?hl=zh-CN\">传送门</a></p>\n</li>\n<li><p>vysor（PC控制Android设备的神器）</p>\n</li>\n<li><p>Full Page Screen Capture(截取整个屏幕 <a href=\"https://chrome.google.com/webstore/detail/full-page-screen-capture/fdpohaocaechififmbbbbbknoalclacl?hl=zh-CN\">传送门</a>)</p>\n</li>\n<li><p>Google翻译 <a href=\"https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb?hl=zh-CN\">传送门</a></p>\n</li>\n<li><p>Downloads - Your Download Box（下载管理工具）<a href=\"https://chrome.google.com/webstore/detail/downloads-your-download-b/gjihnjejboipjmadkpmknccijhibnpfe?hl=zh-CN\">传送门</a></p>\n</li>\n<li><p>ABP（Adblock Plus）（广告屏蔽 <a href=\"https://chrome.google.com/webstore/detail/adblock-plus/cfhdojbkjhnklbpkdaibdccddilifddb?hl=zh-CN\">传送门</a>）</p>\n</li>\n<li><p>广告终结者 <a href=\"https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/fpdnjdlbdmifoocedhkighhlbchbiikl?hl=zh-CN\">传送门</a></p>\n</li>\n<li><p>Google文档、表格及幻灯片的Office编辑 <a href=\"https://chrome.google.com/webstore/detail/office-editing-for-docs-s/gbkeegbaiigmenfmjfclcdgdpimamgkj\">传送门</a></p>\n</li>\n<li><p>印象笔记·剪藏 <a href=\"https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc?hl=zh-CN\">传送门</a></p>\n</li>\n<li><p>锤子便签</p>\n</li>\n</ul>\n<h3 id=\"firefox插件\"><a href=\"#firefox插件\" class=\"headerlink\" title=\"firefox插件\"></a>firefox插件</h3><ul>\n<li><p>Full Web Page Screenshots（广告屏蔽 <a href=\"https://addons.mozilla.org/zh-CN/firefox/addon/fireshot/?src=userprofile\">传送门</a>）</p>\n</li>\n<li><p>firefox模仿chrome界面 <a href=\"http://firefoxfan.cc/firefox-theme/155.html\">传送门</a> </p>\n</li>\n</ul>"},{"title":"项目分类建立Config文件","date":"2016-07-03T22:08:32.000Z","_content":"\n### 分类Config###\n\n- 以前做项目的时候总是将所以的配置写在一个Config文件中，导致我修改配置的时候非常费劲，所以我现在使用分类Config文件的方法，虽然文件多点，但是修改的效率肯定是显著提升的\n\n```cpp\nConfig  //主配置文件\nConfigUI  //界面对应的配置\nConfigIO   //文件，流操作等对应的配置\nConfigNet  //网络对应的配置\nConfigSQL   //数据库对应的配置\nConfigGlobal  //全局参数配置\n```\n\n\n<!-- more -->","source":"_posts/项目/项目分类建立Config文件.md","raw":"---\ntitle: 项目分类建立Config文件\ndate: 2016-07-03 22:08:32\ntags: [项目,Config]\ncategories: 项目\n---\n\n### 分类Config###\n\n- 以前做项目的时候总是将所以的配置写在一个Config文件中，导致我修改配置的时候非常费劲，所以我现在使用分类Config文件的方法，虽然文件多点，但是修改的效率肯定是显著提升的\n\n```cpp\nConfig  //主配置文件\nConfigUI  //界面对应的配置\nConfigIO   //文件，流操作等对应的配置\nConfigNet  //网络对应的配置\nConfigSQL   //数据库对应的配置\nConfigGlobal  //全局参数配置\n```\n\n\n<!-- more -->","slug":"项目/项目分类建立Config文件","published":1,"updated":"2016-07-04T14:59:27.784Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qn90058kgaex5967xfy","content":"<h3 id=\"分类Config\"><a href=\"#分类Config\" class=\"headerlink\" title=\"分类Config\"></a>分类Config</h3><ul>\n<li>以前做项目的时候总是将所以的配置写在一个Config文件中，导致我修改配置的时候非常费劲，所以我现在使用分类Config文件的方法，虽然文件多点，但是修改的效率肯定是显著提升的</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Config  <span class=\"comment\">//主配置文件</span></span><br><span class=\"line\">ConfigUI  <span class=\"comment\">//界面对应的配置</span></span><br><span class=\"line\">ConfigIO   <span class=\"comment\">//文件，流操作等对应的配置</span></span><br><span class=\"line\">ConfigNet  <span class=\"comment\">//网络对应的配置</span></span><br><span class=\"line\">ConfigSQL   <span class=\"comment\">//数据库对应的配置</span></span><br><span class=\"line\">ConfigGlobal  <span class=\"comment\">//全局参数配置</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>","excerpt":"<h3 id=\"分类Config\"><a href=\"#分类Config\" class=\"headerlink\" title=\"分类Config\"></a>分类Config</h3><ul>\n<li>以前做项目的时候总是将所以的配置写在一个Config文件中，导致我修改配置的时候非常费劲，所以我现在使用分类Config文件的方法，虽然文件多点，但是修改的效率肯定是显著提升的</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Config  <span class=\"comment\">//主配置文件</span></span><br><span class=\"line\">ConfigUI  <span class=\"comment\">//界面对应的配置</span></span><br><span class=\"line\">ConfigIO   <span class=\"comment\">//文件，流操作等对应的配置</span></span><br><span class=\"line\">ConfigNet  <span class=\"comment\">//网络对应的配置</span></span><br><span class=\"line\">ConfigSQL   <span class=\"comment\">//数据库对应的配置</span></span><br><span class=\"line\">ConfigGlobal  <span class=\"comment\">//全局参数配置</span></span><br></pre></td></tr></table></figure>","more":""},{"title":"git命令参考手册","date":"2016-06-26T21:53:56.000Z","_content":"### 文档###\n\n- [Pro Git（中文版）](https://git.oschina.net/progit/index.html)\n\n- [廖雪峰的官方文档](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\n\n- [git参考手册](http://gitref.org/zh/)\n\n\n### 总结版本###\n\n```cpp\ngit init                    # 初始化本地git仓库（创建新仓库）\ngit config --global user.name \"xxx\"          # 配置用户名\ngit config --global user.email \"xxx@xxx.com\"         # 配置邮件\ngit config --global color.ui true       # git status等命令自动着色\ngit config --global color.status auto\ngit config --global color.diff auto\ngit config --global color.branch auto\ngit config --global color.interactive auto\ngit clone git+ssh://git@192.168.53.168/VT.git    # clone远程仓库\ngit status              # 查看当前版本状态（是否修改）\ngit add xyz             # 添加xyz文件至index\ngit add .           # 增加当前子目录下所有更改过的文件至index\ngit commit -m 'xxx'                 # 提交\ngit commit --amend -m 'xxx'      # 合并上一次提交（用于反复修改）\ngit commit -am 'xxx'             # 将add和commit合为一步\ngit rm xxx                      # 删除index中的文件\ngit rm -r *                 # 递归删除\ngit log                       # 显示提交日志\ngit log -1                      # 显示1行日志 -n为n行\ngit log -5\ngit log --stat        # 显示提交日志及相关变动文件\ngit log -p -m\ngit show dfb02e6e4f2f7b573337763e5c0013802e392818  # 显示某个提交的详细内容\ngit show dfb02          # 可只用commitid的前几位\ngit show HEAD               # 显示HEAD提交日志\ngit show HEAD^     # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本\ngit tag                   # 显示已存在的tag\ngit tag -a v2.0 -m 'xxx'            # 增加v2.0的tag\ngit show v2.0         # 显示v2.0的日志及详细内容\ngit log v2.0                # 显示v2.0的日志\ngit diff              # 显示所有未添加至index的变更\ngit diff --cached      # 显示所有已添加index但还未commit的变更\ngit diff HEAD^     # 比较与上一个版本的差异\ngit diff HEAD -- ./lib       # 比较与HEAD版本lib目录的差异\ngit diff origin/master..master      # 比较远程分支master上有本地分支master上没有的\ngit diff origin/master..master --stat        # 只显示差异的文件，不显示具体内容\ngit remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）\ngit branch                 # 显示本地分支\ngit branch --contains 50089        # 显示包含提交50089的分支\ngit branch -a                    # 显示所有分支\ngit branch -r         # 显示所有原创分支\ngit branch --merged          # 显示所有已合并到当前分支的分支\ngit branch --no-merged          # 显示所有未合并到当前分支的分支\ngit branch -m master master_copy       # 本地分支改名\ngit checkout -b master_copy            # 从当前分支创建新分支master_copy并检出\ngit checkout -b master master_copy     # 上面的完整版\ngit checkout features/performance      # 检出已存在的features/performance分支\ngit checkout --track hotfixes/BJVEP933       # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支\ngit checkout v2.0            # 检出版本v2.0\ngit checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出\ngit checkout -- README            # 检出head版本的README文件（可用于修改错误回退）\ngit merge origin/master      # 合并远程master分支至当前分支\ngit cherry-pick ff44785404a8e    # 合并提交ff44785404a8e的修改\ngit push origin master        # 将当前分支push到远程master分支\ngit push origin :hotfixes/BJVEP933           # 删除远程仓库的hotfixes/BJVEP933分支\ngit push --tags            # 把所有tag推送到远程仓库\ngit fetch               # 获取所有远程分支（不更新本地分支，另需merge）\ngit fetch --prune              # 获取所有原创分支并清除服务器上已删掉的分支\ngit pull origin master          # 获取远程分支master并merge到当前分支\ngit mv README README2      # 重命名文件README为README2\ngit reset --hard HEAD      # 将当前版本重置为HEAD（通常用于merge失败回退）\ngit rebase\ngit branch -d hotfixes/BJVEP933        # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）\ngit branch -D hotfixes/BJVEP933    # 强制删除分支hotfixes/BJVEP933\ngit ls-files          # 列出git index包含的文件\ngit show-branch        # 图示当前分支历史\ngit show-branch --all         # 图示所有分支历史\ngit whatchanged           # 显示提交历史对应的文件修改\ngit revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818\ngit ls-tree HEAD           # 内部命令：显示某个git对象\ngit rev-parse v2.0       # 内部命令：显示某个ref对于的SHA1 HASH\ngit reflog         # 显示所有提交，包括孤立节点\ngit show HEAD@{5}\ngit show master@{yesterday}      # 显示master分支昨天的状态\ngit log --pretty=format:'%h %s' --graph        # 图示提交日志\ngit show HEAD~3\ngit show -s --pretty=raw 2be7fcb476\ngit stash     # 暂存当前修改，将所有至为HEAD状态\ngit stash list         # 查看所有暂存\ngit stash show -p stash@{0}    # 参考第一次暂存\ngit stash apply stash@{0}       # 应用第一次暂存\ngit grep \"delete from\"    # 文件中搜索文本“delete from”\ngit grep -e '#define' --and -e SORT_DIRENT\ngit gc\ngit fsck\n```\n\n### Git配置###\n\n- 用户的git配置文件~/.gitconfig\n\n\n```cpp\ngit init                    #初始化本地git仓库（创建新仓库）\ngit config --global user.name \"xxx\"     #配置用户名\ngit config --global user.email \"xxx@xxx.com\"   # 配置邮件\ngit config --global color.ui true    # git status等命令自动着色\ngit config --global alias.co checkout\ngit config --global alias.ci commit\ngit config --global alias.st status\ngit config --global alias.br branch\ngit config --global core.editor \"mate -w\"    # 设置Editor使用textmate\ngit config -l  # 列举所有配置\n```\n\n<!-- more -->\n\n### Git常用命令###\n#### 查看、添加、提交、删除、找回，重置修改文件####\n\n```cpp\ngit help <command>  # 显示command的help\ngit show            # 显示某次提交的内容\ngit show $id\n\ngit co  -- <file>   # 抛弃工作区修改\ngit co  .           # 抛弃工作区修改\n\ngit add <file>      # 将工作文件修改提交到本地暂存区\ngit add .           # 将所有修改过的工作文件提交暂存区\n\ngit rm <file>       # 从版本库中删除文件\ngit rm <file> --cached  # 从版本库中删除文件，但不删除文件\n\ngit reset <file>    # 从暂存区恢复到工作文件\ngit reset -- .      # 从暂存区恢复到工作文件\ngit reset --hard    # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改\n\ngit ci <file>\ngit ci .\ngit ci -a           # 将git add, git rm和git ci等操作都合并在一起做\ngit ci -am \"some comments\"\ngit ci --amend      # 修改最后一次提交记录\n\ngit revert <$id>    # 恢复某次提交的状态，恢复动作本身也创建了一次提交对象\ngit revert HEAD     # 恢复最后一次提交的状态\n\n### 查看文件diff\n\nshell\ngit diff <file>     # 比较当前文件和暂存区文件差异\ngit diff\ngit diff <$id1> <$id2>   # 比较两次提交之间的差异\ngit diff <branch1>..<branch2> # 在两个分支之间比较 \ngit diff --staged   # 比较暂存区和版本库差异\ngit diff --cached   # 比较暂存区和版本库差异\ngit diff --stat     # 仅仅比较统计信息\n```\n\n#### 查看提交记录####\n\n```cpp\ngit log\ngit log <file>      # 查看该文件每次提交记录\ngit log -p <file>   # 查看每次详细修改内容的diff\ngit log -p -2       # 查看最近两次详细修改内容的diff\ngit log --stat      # 查看提交统计信息\n```\n\n#### tig####\n```cpp\nMac上可以使用tig代替diff和log，brew install tig\n```\n\n### Git 本地分支管理###\n#### 查看、切换、创建和删除分支####\n\n```cpp\ngit br -r           # 查看远程分支\ngit br <new_branch> # 创建新的分支\ngit br -v           # 查看各个分支最后提交信息\ngit br --merged     # 查看已经被合并到当前分支的分支\ngit br --no-merged  # 查看尚未被合并到当前分支的分支\n\ngit co <branch>     # 切换到某个分支\ngit co -b <new_branch> # 创建新的分支，并且切换过去\ngit co -b <new_branch> <branch>  # 基于branch创建新的new_branch\n\ngit co $id          # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除\ngit co $id -b <new_branch>  # 把某次历史提交记录checkout出来，创建成一个分支\n\ngit br -d <branch>  # 删除某个分支\ngit br -D <branch>  # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)\n```\n\n#### 分支合并和rebase####\n\n```cpp\ngit merge <branch>               # 将branch分支合并到当前分支\ngit merge origin/master --no-ff  # 不要Fast-Foward合并，这样可以生成merge提交\n\ngit rebase master <branch>       # 将master rebase到branch，相当于：\ngit co <branch> && git rebase master && git co master && git merge <branch>\n```\n### Git补丁管理(方便在多台机器上开发同步时用)###\n\n```cpp\ngit diff > ../sync.patch         # 生成补丁\ngit apply ../sync.patch          # 打补丁\ngit apply --check ../sync.patch  # 测试补丁能否成功\n```\n\n### Git暂存管理###\n```cpp\ngit stash                        # 暂存\ngit stash list                   # 列所有stash\ngit stash apply                  # 恢复暂存的内容\ngit stash drop                   # 删除暂存区\n```\n\n### Git远程分支管理###\n```cpp\ngit pull                         # 抓取远程仓库所有分支更新并合并到本地\ngit pull --no-ff                 # 抓取远程仓库所有分支更新并合并到本地，不要快进合并\ngit fetch origin                 # 抓取远程仓库更新\ngit merge origin/master          # 将远程主分支合并到本地当前分支\ngit co --track origin/branch     # 跟踪某个远程分支创建相应的本地分支\ngit co -b <local_branch> origin/<remote_branch>  # 基于远程分支创建本地分支，功能同上\n\ngit push                         # push所有分支\ngit push origin master           # 将本地主分支推到远程主分支\ngit push -u origin master        # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)\ngit push origin <local_branch>   # 创建远程分支， origin是远程仓库名\ngit push origin <local_branch>:<remote_branch>  # 创建远程分支\ngit push origin :<remote_branch>  #先删除本地分支(git br -d <branch>)，然后再push删除远程分支\n```\n\n### Git远程仓库管理###\n```cpp\ngit remote -v                    # 查看远程服务器地址和仓库名称\ngit remote show origin           # 查看远程服务器仓库状态\ngit remote add origin git@github:robbin/robbin_site.git         # 添加远程仓库地址\ngit remote set-url origin git@github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址)\ngit remote rm <repository>       # 删除远程仓库\n```\n\n### 创建远程仓库###\n```cpp\ngit clone --bare robbin_site robbin_site.git  # 用带版本的项目创建纯版本仓库\nscp -r my_project.git git@git.csdn.net:~      # 将纯仓库上传到服务器上\n\nmkdir robbin_site.git && cd robbin_site.git && git --bare init # 在服务器创建纯仓库\ngit remote add origin git@github.com:robbin/robbin_site.git    # 设置远程仓库地址\ngit push -u origin master                                      # 客户端首次提交\ngit push -u origin develop  # 首次将本地develop分支提交到远程develop分支，并且track\n\ngit remote set-head origin master   # 设置远程仓库的HEAD指向master分支\n```\n\n#### 也可以命令设置跟踪远程库和本地库####\n```cpp\ngit branch --set-upstream master origin/master\ngit branch --set-upstream develop origin/develop\n```\n\n### 常用命令图示###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/git%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2%E6%89%8B%E5%86%8C1.jpg)</center>\n\n### 流程指引###\n\n<img src=\"http://o99dg8ap9.bkt.clouddn.com/git%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C.png\" class=\"full-image\" />\n\n\n","source":"_posts/项目管理/git命令参考手册.md","raw":"---\ntitle: git命令参考手册\ndate: 2016-06-26 21:53:56\ntags: git\ncategories: 项目管理\n---\n### 文档###\n\n- [Pro Git（中文版）](https://git.oschina.net/progit/index.html)\n\n- [廖雪峰的官方文档](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\n\n- [git参考手册](http://gitref.org/zh/)\n\n\n### 总结版本###\n\n```cpp\ngit init                    # 初始化本地git仓库（创建新仓库）\ngit config --global user.name \"xxx\"          # 配置用户名\ngit config --global user.email \"xxx@xxx.com\"         # 配置邮件\ngit config --global color.ui true       # git status等命令自动着色\ngit config --global color.status auto\ngit config --global color.diff auto\ngit config --global color.branch auto\ngit config --global color.interactive auto\ngit clone git+ssh://git@192.168.53.168/VT.git    # clone远程仓库\ngit status              # 查看当前版本状态（是否修改）\ngit add xyz             # 添加xyz文件至index\ngit add .           # 增加当前子目录下所有更改过的文件至index\ngit commit -m 'xxx'                 # 提交\ngit commit --amend -m 'xxx'      # 合并上一次提交（用于反复修改）\ngit commit -am 'xxx'             # 将add和commit合为一步\ngit rm xxx                      # 删除index中的文件\ngit rm -r *                 # 递归删除\ngit log                       # 显示提交日志\ngit log -1                      # 显示1行日志 -n为n行\ngit log -5\ngit log --stat        # 显示提交日志及相关变动文件\ngit log -p -m\ngit show dfb02e6e4f2f7b573337763e5c0013802e392818  # 显示某个提交的详细内容\ngit show dfb02          # 可只用commitid的前几位\ngit show HEAD               # 显示HEAD提交日志\ngit show HEAD^     # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本\ngit tag                   # 显示已存在的tag\ngit tag -a v2.0 -m 'xxx'            # 增加v2.0的tag\ngit show v2.0         # 显示v2.0的日志及详细内容\ngit log v2.0                # 显示v2.0的日志\ngit diff              # 显示所有未添加至index的变更\ngit diff --cached      # 显示所有已添加index但还未commit的变更\ngit diff HEAD^     # 比较与上一个版本的差异\ngit diff HEAD -- ./lib       # 比较与HEAD版本lib目录的差异\ngit diff origin/master..master      # 比较远程分支master上有本地分支master上没有的\ngit diff origin/master..master --stat        # 只显示差异的文件，不显示具体内容\ngit remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）\ngit branch                 # 显示本地分支\ngit branch --contains 50089        # 显示包含提交50089的分支\ngit branch -a                    # 显示所有分支\ngit branch -r         # 显示所有原创分支\ngit branch --merged          # 显示所有已合并到当前分支的分支\ngit branch --no-merged          # 显示所有未合并到当前分支的分支\ngit branch -m master master_copy       # 本地分支改名\ngit checkout -b master_copy            # 从当前分支创建新分支master_copy并检出\ngit checkout -b master master_copy     # 上面的完整版\ngit checkout features/performance      # 检出已存在的features/performance分支\ngit checkout --track hotfixes/BJVEP933       # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支\ngit checkout v2.0            # 检出版本v2.0\ngit checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出\ngit checkout -- README            # 检出head版本的README文件（可用于修改错误回退）\ngit merge origin/master      # 合并远程master分支至当前分支\ngit cherry-pick ff44785404a8e    # 合并提交ff44785404a8e的修改\ngit push origin master        # 将当前分支push到远程master分支\ngit push origin :hotfixes/BJVEP933           # 删除远程仓库的hotfixes/BJVEP933分支\ngit push --tags            # 把所有tag推送到远程仓库\ngit fetch               # 获取所有远程分支（不更新本地分支，另需merge）\ngit fetch --prune              # 获取所有原创分支并清除服务器上已删掉的分支\ngit pull origin master          # 获取远程分支master并merge到当前分支\ngit mv README README2      # 重命名文件README为README2\ngit reset --hard HEAD      # 将当前版本重置为HEAD（通常用于merge失败回退）\ngit rebase\ngit branch -d hotfixes/BJVEP933        # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）\ngit branch -D hotfixes/BJVEP933    # 强制删除分支hotfixes/BJVEP933\ngit ls-files          # 列出git index包含的文件\ngit show-branch        # 图示当前分支历史\ngit show-branch --all         # 图示所有分支历史\ngit whatchanged           # 显示提交历史对应的文件修改\ngit revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818\ngit ls-tree HEAD           # 内部命令：显示某个git对象\ngit rev-parse v2.0       # 内部命令：显示某个ref对于的SHA1 HASH\ngit reflog         # 显示所有提交，包括孤立节点\ngit show HEAD@{5}\ngit show master@{yesterday}      # 显示master分支昨天的状态\ngit log --pretty=format:'%h %s' --graph        # 图示提交日志\ngit show HEAD~3\ngit show -s --pretty=raw 2be7fcb476\ngit stash     # 暂存当前修改，将所有至为HEAD状态\ngit stash list         # 查看所有暂存\ngit stash show -p stash@{0}    # 参考第一次暂存\ngit stash apply stash@{0}       # 应用第一次暂存\ngit grep \"delete from\"    # 文件中搜索文本“delete from”\ngit grep -e '#define' --and -e SORT_DIRENT\ngit gc\ngit fsck\n```\n\n### Git配置###\n\n- 用户的git配置文件~/.gitconfig\n\n\n```cpp\ngit init                    #初始化本地git仓库（创建新仓库）\ngit config --global user.name \"xxx\"     #配置用户名\ngit config --global user.email \"xxx@xxx.com\"   # 配置邮件\ngit config --global color.ui true    # git status等命令自动着色\ngit config --global alias.co checkout\ngit config --global alias.ci commit\ngit config --global alias.st status\ngit config --global alias.br branch\ngit config --global core.editor \"mate -w\"    # 设置Editor使用textmate\ngit config -l  # 列举所有配置\n```\n\n<!-- more -->\n\n### Git常用命令###\n#### 查看、添加、提交、删除、找回，重置修改文件####\n\n```cpp\ngit help <command>  # 显示command的help\ngit show            # 显示某次提交的内容\ngit show $id\n\ngit co  -- <file>   # 抛弃工作区修改\ngit co  .           # 抛弃工作区修改\n\ngit add <file>      # 将工作文件修改提交到本地暂存区\ngit add .           # 将所有修改过的工作文件提交暂存区\n\ngit rm <file>       # 从版本库中删除文件\ngit rm <file> --cached  # 从版本库中删除文件，但不删除文件\n\ngit reset <file>    # 从暂存区恢复到工作文件\ngit reset -- .      # 从暂存区恢复到工作文件\ngit reset --hard    # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改\n\ngit ci <file>\ngit ci .\ngit ci -a           # 将git add, git rm和git ci等操作都合并在一起做\ngit ci -am \"some comments\"\ngit ci --amend      # 修改最后一次提交记录\n\ngit revert <$id>    # 恢复某次提交的状态，恢复动作本身也创建了一次提交对象\ngit revert HEAD     # 恢复最后一次提交的状态\n\n### 查看文件diff\n\nshell\ngit diff <file>     # 比较当前文件和暂存区文件差异\ngit diff\ngit diff <$id1> <$id2>   # 比较两次提交之间的差异\ngit diff <branch1>..<branch2> # 在两个分支之间比较 \ngit diff --staged   # 比较暂存区和版本库差异\ngit diff --cached   # 比较暂存区和版本库差异\ngit diff --stat     # 仅仅比较统计信息\n```\n\n#### 查看提交记录####\n\n```cpp\ngit log\ngit log <file>      # 查看该文件每次提交记录\ngit log -p <file>   # 查看每次详细修改内容的diff\ngit log -p -2       # 查看最近两次详细修改内容的diff\ngit log --stat      # 查看提交统计信息\n```\n\n#### tig####\n```cpp\nMac上可以使用tig代替diff和log，brew install tig\n```\n\n### Git 本地分支管理###\n#### 查看、切换、创建和删除分支####\n\n```cpp\ngit br -r           # 查看远程分支\ngit br <new_branch> # 创建新的分支\ngit br -v           # 查看各个分支最后提交信息\ngit br --merged     # 查看已经被合并到当前分支的分支\ngit br --no-merged  # 查看尚未被合并到当前分支的分支\n\ngit co <branch>     # 切换到某个分支\ngit co -b <new_branch> # 创建新的分支，并且切换过去\ngit co -b <new_branch> <branch>  # 基于branch创建新的new_branch\n\ngit co $id          # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除\ngit co $id -b <new_branch>  # 把某次历史提交记录checkout出来，创建成一个分支\n\ngit br -d <branch>  # 删除某个分支\ngit br -D <branch>  # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)\n```\n\n#### 分支合并和rebase####\n\n```cpp\ngit merge <branch>               # 将branch分支合并到当前分支\ngit merge origin/master --no-ff  # 不要Fast-Foward合并，这样可以生成merge提交\n\ngit rebase master <branch>       # 将master rebase到branch，相当于：\ngit co <branch> && git rebase master && git co master && git merge <branch>\n```\n### Git补丁管理(方便在多台机器上开发同步时用)###\n\n```cpp\ngit diff > ../sync.patch         # 生成补丁\ngit apply ../sync.patch          # 打补丁\ngit apply --check ../sync.patch  # 测试补丁能否成功\n```\n\n### Git暂存管理###\n```cpp\ngit stash                        # 暂存\ngit stash list                   # 列所有stash\ngit stash apply                  # 恢复暂存的内容\ngit stash drop                   # 删除暂存区\n```\n\n### Git远程分支管理###\n```cpp\ngit pull                         # 抓取远程仓库所有分支更新并合并到本地\ngit pull --no-ff                 # 抓取远程仓库所有分支更新并合并到本地，不要快进合并\ngit fetch origin                 # 抓取远程仓库更新\ngit merge origin/master          # 将远程主分支合并到本地当前分支\ngit co --track origin/branch     # 跟踪某个远程分支创建相应的本地分支\ngit co -b <local_branch> origin/<remote_branch>  # 基于远程分支创建本地分支，功能同上\n\ngit push                         # push所有分支\ngit push origin master           # 将本地主分支推到远程主分支\ngit push -u origin master        # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)\ngit push origin <local_branch>   # 创建远程分支， origin是远程仓库名\ngit push origin <local_branch>:<remote_branch>  # 创建远程分支\ngit push origin :<remote_branch>  #先删除本地分支(git br -d <branch>)，然后再push删除远程分支\n```\n\n### Git远程仓库管理###\n```cpp\ngit remote -v                    # 查看远程服务器地址和仓库名称\ngit remote show origin           # 查看远程服务器仓库状态\ngit remote add origin git@github:robbin/robbin_site.git         # 添加远程仓库地址\ngit remote set-url origin git@github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址)\ngit remote rm <repository>       # 删除远程仓库\n```\n\n### 创建远程仓库###\n```cpp\ngit clone --bare robbin_site robbin_site.git  # 用带版本的项目创建纯版本仓库\nscp -r my_project.git git@git.csdn.net:~      # 将纯仓库上传到服务器上\n\nmkdir robbin_site.git && cd robbin_site.git && git --bare init # 在服务器创建纯仓库\ngit remote add origin git@github.com:robbin/robbin_site.git    # 设置远程仓库地址\ngit push -u origin master                                      # 客户端首次提交\ngit push -u origin develop  # 首次将本地develop分支提交到远程develop分支，并且track\n\ngit remote set-head origin master   # 设置远程仓库的HEAD指向master分支\n```\n\n#### 也可以命令设置跟踪远程库和本地库####\n```cpp\ngit branch --set-upstream master origin/master\ngit branch --set-upstream develop origin/develop\n```\n\n### 常用命令图示###\n\n<center>![](http://o99dg8ap9.bkt.clouddn.com/git%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2%E6%89%8B%E5%86%8C1.jpg)</center>\n\n### 流程指引###\n\n<img src=\"http://o99dg8ap9.bkt.clouddn.com/git%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C.png\" class=\"full-image\" />\n\n\n","slug":"项目管理/git命令参考手册","published":1,"updated":"2016-06-28T02:26:17.227Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qng005ckgaewjkdfmfj","content":"<h3 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h3><ul>\n<li><p><a href=\"https://git.oschina.net/progit/index.html\" target=\"_blank\" rel=\"external\">Pro Git（中文版）</a></p>\n</li>\n<li><p><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"external\">廖雪峰的官方文档</a></p>\n</li>\n</ul>\n<ul>\n<li><a href=\"http://gitref.org/zh/\" target=\"_blank\" rel=\"external\">git参考手册</a></li>\n</ul>\n<h3 id=\"总结版本\"><a href=\"#总结版本\" class=\"headerlink\" title=\"总结版本\"></a>总结版本</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init                    # 初始化本地git仓库（创建新仓库）</span><br><span class=\"line\">git config --global user.name \"xxx\"          # 配置用户名</span><br><span class=\"line\">git config --global user.email \"xxx@xxx.com\"         # 配置邮件</span><br><span class=\"line\">git config --global color.ui true       # git status等命令自动着色</span><br><span class=\"line\">git config --global color.status auto</span><br><span class=\"line\">git config --global color.diff auto</span><br><span class=\"line\">git config --global color.branch auto</span><br><span class=\"line\">git config --global color.interactive auto</span><br><span class=\"line\">git clone git+ssh://git@192.168.53.168/VT.git    # clone远程仓库</span><br><span class=\"line\">git status              # 查看当前版本状态（是否修改）</span><br><span class=\"line\">git add xyz             # 添加xyz文件至index</span><br><span class=\"line\">git add .           # 增加当前子目录下所有更改过的文件至index</span><br><span class=\"line\">git commit -m 'xxx'                 # 提交</span><br><span class=\"line\">git commit --amend -m 'xxx'      # 合并上一次提交（用于反复修改）</span><br><span class=\"line\">git commit -am 'xxx'             # 将add和commit合为一步</span><br><span class=\"line\">git rm xxx                      # 删除index中的文件</span><br><span class=\"line\">git rm -r *                 # 递归删除</span><br><span class=\"line\">git log                       # 显示提交日志</span><br><span class=\"line\">git log -1                      # 显示1行日志 -n为n行</span><br><span class=\"line\">git log -5</span><br><span class=\"line\">git log --stat        # 显示提交日志及相关变动文件</span><br><span class=\"line\">git log -p -m</span><br><span class=\"line\">git show dfb02e6e4f2f7b573337763e5c0013802e392818  # 显示某个提交的详细内容</span><br><span class=\"line\">git show dfb02          # 可只用commitid的前几位</span><br><span class=\"line\">git show HEAD               # 显示HEAD提交日志</span><br><span class=\"line\">git show HEAD^     # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本</span><br><span class=\"line\">git tag                   # 显示已存在的tag</span><br><span class=\"line\">git tag -a v2.0 -m 'xxx'            # 增加v2.0的tag</span><br><span class=\"line\">git show v2.0         # 显示v2.0的日志及详细内容</span><br><span class=\"line\">git log v2.0                # 显示v2.0的日志</span><br><span class=\"line\">git diff              # 显示所有未添加至index的变更</span><br><span class=\"line\">git diff --cached      # 显示所有已添加index但还未commit的变更</span><br><span class=\"line\">git diff HEAD^     # 比较与上一个版本的差异</span><br><span class=\"line\">git diff HEAD -- ./lib       # 比较与HEAD版本lib目录的差异</span><br><span class=\"line\">git diff origin/master..master      # 比较远程分支master上有本地分支master上没有的</span><br><span class=\"line\">git diff origin/master..master --stat        # 只显示差异的文件，不显示具体内容</span><br><span class=\"line\">git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）</span><br><span class=\"line\">git branch                 # 显示本地分支</span><br><span class=\"line\">git branch --contains 50089        # 显示包含提交50089的分支</span><br><span class=\"line\">git branch -a                    # 显示所有分支</span><br><span class=\"line\">git branch -r         # 显示所有原创分支</span><br><span class=\"line\">git branch --merged          # 显示所有已合并到当前分支的分支</span><br><span class=\"line\">git branch --no-merged          # 显示所有未合并到当前分支的分支</span><br><span class=\"line\">git branch -m master master_copy       # 本地分支改名</span><br><span class=\"line\">git checkout -b master_copy            # 从当前分支创建新分支master_copy并检出</span><br><span class=\"line\">git checkout -b master master_copy     # 上面的完整版</span><br><span class=\"line\">git checkout features/performance      # 检出已存在的features/performance分支</span><br><span class=\"line\">git checkout --track hotfixes/BJVEP933       # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支</span><br><span class=\"line\">git checkout v2.0            # 检出版本v2.0</span><br><span class=\"line\">git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出</span><br><span class=\"line\">git checkout -- README            # 检出head版本的README文件（可用于修改错误回退）</span><br><span class=\"line\">git merge origin/master      # 合并远程master分支至当前分支</span><br><span class=\"line\">git cherry-pick ff44785404a8e    # 合并提交ff44785404a8e的修改</span><br><span class=\"line\">git push origin master        # 将当前分支push到远程master分支</span><br><span class=\"line\">git push origin :hotfixes/BJVEP933           # 删除远程仓库的hotfixes/BJVEP933分支</span><br><span class=\"line\">git push --tags            # 把所有tag推送到远程仓库</span><br><span class=\"line\">git fetch               # 获取所有远程分支（不更新本地分支，另需merge）</span><br><span class=\"line\">git fetch --prune              # 获取所有原创分支并清除服务器上已删掉的分支</span><br><span class=\"line\">git pull origin master          # 获取远程分支master并merge到当前分支</span><br><span class=\"line\">git mv README README2      # 重命名文件README为README2</span><br><span class=\"line\">git reset --hard HEAD      # 将当前版本重置为HEAD（通常用于merge失败回退）</span><br><span class=\"line\">git rebase</span><br><span class=\"line\">git branch -d hotfixes/BJVEP933        # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）</span><br><span class=\"line\">git branch -D hotfixes/BJVEP933    # 强制删除分支hotfixes/BJVEP933</span><br><span class=\"line\">git ls-files          # 列出git index包含的文件</span><br><span class=\"line\">git show-branch        # 图示当前分支历史</span><br><span class=\"line\">git show-branch --all         # 图示所有分支历史</span><br><span class=\"line\">git whatchanged           # 显示提交历史对应的文件修改</span><br><span class=\"line\">git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818</span><br><span class=\"line\">git ls-tree HEAD           # 内部命令：显示某个git对象</span><br><span class=\"line\">git rev-parse v2.0       # 内部命令：显示某个ref对于的SHA1 HASH</span><br><span class=\"line\">git reflog         # 显示所有提交，包括孤立节点</span><br><span class=\"line\">git show HEAD@&#123;5&#125;</span><br><span class=\"line\">git show master@&#123;yesterday&#125;      # 显示master分支昨天的状态</span><br><span class=\"line\">git log --pretty=format:'%h %s' --graph        # 图示提交日志</span><br><span class=\"line\">git show HEAD~3</span><br><span class=\"line\">git show -s --pretty=raw 2be7fcb476</span><br><span class=\"line\">git stash     # 暂存当前修改，将所有至为HEAD状态</span><br><span class=\"line\">git stash list         # 查看所有暂存</span><br><span class=\"line\">git stash show -p stash@&#123;0&#125;    # 参考第一次暂存</span><br><span class=\"line\">git stash apply stash@&#123;0&#125;       # 应用第一次暂存</span><br><span class=\"line\">git grep \"delete from\"    # 文件中搜索文本“delete from”</span><br><span class=\"line\">git grep -e '#define' --and -e SORT_DIRENT</span><br><span class=\"line\">git gc</span><br><span class=\"line\">git fsck</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h3><ul>\n<li>用户的git配置文件~/.gitconfig</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init                    #初始化本地git仓库（创建新仓库）</span><br><span class=\"line\">git config --global user.name <span class=\"string\">\"xxx\"</span>     #配置用户名</span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"xxx@xxx.com\"</span>   # 配置邮件</span><br><span class=\"line\">git config --global color.ui <span class=\"literal\">true</span>    # git status等命令自动着色</span><br><span class=\"line\">git config --global alias.co checkout</span><br><span class=\"line\">git config --global alias.ci commit</span><br><span class=\"line\">git config --global alias.st status</span><br><span class=\"line\">git config --global alias.br branch</span><br><span class=\"line\">git config --global core.editor <span class=\"string\">\"mate -w\"</span>    # 设置Editor使用textmate</span><br><span class=\"line\">git config -l  # 列举所有配置</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"Git常用命令\"><a href=\"#Git常用命令\" class=\"headerlink\" title=\"Git常用命令\"></a>Git常用命令</h3><h4 id=\"查看、添加、提交、删除、找回，重置修改文件\"><a href=\"#查看、添加、提交、删除、找回，重置修改文件\" class=\"headerlink\" title=\"查看、添加、提交、删除、找回，重置修改文件\"></a>查看、添加、提交、删除、找回，重置修改文件</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git help &lt;command&gt;  # 显示command的help</span><br><span class=\"line\">git show            # 显示某次提交的内容</span><br><span class=\"line\">git show $id</span><br><span class=\"line\"></span><br><span class=\"line\">git co  -- &lt;file&gt;   # 抛弃工作区修改</span><br><span class=\"line\">git co  .           # 抛弃工作区修改</span><br><span class=\"line\"></span><br><span class=\"line\">git add &lt;file&gt;      # 将工作文件修改提交到本地暂存区</span><br><span class=\"line\">git add .           # 将所有修改过的工作文件提交暂存区</span><br><span class=\"line\"></span><br><span class=\"line\">git rm &lt;file&gt;       # 从版本库中删除文件</span><br><span class=\"line\">git rm &lt;file&gt; --cached  # 从版本库中删除文件，但不删除文件</span><br><span class=\"line\"></span><br><span class=\"line\">git reset &lt;file&gt;    # 从暂存区恢复到工作文件</span><br><span class=\"line\">git reset -- .      # 从暂存区恢复到工作文件</span><br><span class=\"line\">git reset --hard    # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span><br><span class=\"line\"></span><br><span class=\"line\">git ci &lt;file&gt;</span><br><span class=\"line\">git ci .</span><br><span class=\"line\">git ci -a           # 将git add, git rm和git ci等操作都合并在一起做</span><br><span class=\"line\">git ci -am <span class=\"string\">\"some comments\"</span></span><br><span class=\"line\">git ci --amend      # 修改最后一次提交记录</span><br><span class=\"line\"></span><br><span class=\"line\">git revert &lt;$id&gt;    # 恢复某次提交的状态，恢复动作本身也创建了一次提交对象</span><br><span class=\"line\">git revert HEAD     # 恢复最后一次提交的状态</span><br><span class=\"line\"></span><br><span class=\"line\">### 查看文件diff</span><br><span class=\"line\"></span><br><span class=\"line\">shell</span><br><span class=\"line\">git diff &lt;file&gt;     # 比较当前文件和暂存区文件差异</span><br><span class=\"line\">git diff</span><br><span class=\"line\">git diff &lt;$id1&gt; &lt;$id2&gt;   # 比较两次提交之间的差异</span><br><span class=\"line\">git diff &lt;branch1&gt;..&lt;branch2&gt; # 在两个分支之间比较 </span><br><span class=\"line\">git diff --staged   # 比较暂存区和版本库差异</span><br><span class=\"line\">git diff --cached   # 比较暂存区和版本库差异</span><br><span class=\"line\">git diff --stat     # 仅仅比较统计信息</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> &lt;file&gt;      # 查看该文件每次提交记录</span><br><span class=\"line\">git <span class=\"built_in\">log</span> -p &lt;file&gt;   # 查看每次详细修改内容的diff</span><br><span class=\"line\">git <span class=\"built_in\">log</span> -p <span class=\"number\">-2</span>       # 查看最近两次详细修改内容的diff</span><br><span class=\"line\">git <span class=\"built_in\">log</span> --stat      # 查看提交统计信息</span><br></pre></td></tr></table></figure>\n<h4 id=\"tig\"><a href=\"#tig\" class=\"headerlink\" title=\"tig\"></a>tig</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mac上可以使用tig代替diff和<span class=\"built_in\">log</span>，brew install tig</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git-本地分支管理\"><a href=\"#Git-本地分支管理\" class=\"headerlink\" title=\"Git 本地分支管理\"></a>Git 本地分支管理</h3><h4 id=\"查看、切换、创建和删除分支\"><a href=\"#查看、切换、创建和删除分支\" class=\"headerlink\" title=\"查看、切换、创建和删除分支\"></a>查看、切换、创建和删除分支</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git br -r           # 查看远程分支</span><br><span class=\"line\">git br &lt;new_branch&gt; # 创建新的分支</span><br><span class=\"line\">git br -v           # 查看各个分支最后提交信息</span><br><span class=\"line\">git br --merged     # 查看已经被合并到当前分支的分支</span><br><span class=\"line\">git br --no-merged  # 查看尚未被合并到当前分支的分支</span><br><span class=\"line\"></span><br><span class=\"line\">git co &lt;branch&gt;     # 切换到某个分支</span><br><span class=\"line\">git co -b &lt;new_branch&gt; # 创建新的分支，并且切换过去</span><br><span class=\"line\">git co -b &lt;new_branch&gt; &lt;branch&gt;  # 基于branch创建新的new_branch</span><br><span class=\"line\"></span><br><span class=\"line\">git co $id          # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span><br><span class=\"line\">git co $id -b &lt;new_branch&gt;  # 把某次历史提交记录checkout出来，创建成一个分支</span><br><span class=\"line\"></span><br><span class=\"line\">git br -d &lt;branch&gt;  # 删除某个分支</span><br><span class=\"line\">git br -D &lt;branch&gt;  # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span><br></pre></td></tr></table></figure>\n<h4 id=\"分支合并和rebase\"><a href=\"#分支合并和rebase\" class=\"headerlink\" title=\"分支合并和rebase\"></a>分支合并和rebase</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge &lt;branch&gt;               # 将branch分支合并到当前分支</span><br><span class=\"line\">git merge origin/master --no-ff  # 不要Fast-Foward合并，这样可以生成merge提交</span><br><span class=\"line\"></span><br><span class=\"line\">git rebase master &lt;branch&gt;       # 将master rebase到branch，相当于：</span><br><span class=\"line\">git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git补丁管理-方便在多台机器上开发同步时用\"><a href=\"#Git补丁管理-方便在多台机器上开发同步时用\" class=\"headerlink\" title=\"Git补丁管理(方便在多台机器上开发同步时用)\"></a>Git补丁管理(方便在多台机器上开发同步时用)</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff &gt; ../sync.patch         # 生成补丁</span><br><span class=\"line\">git apply ../sync.patch          # 打补丁</span><br><span class=\"line\">git apply --check ../sync.patch  # 测试补丁能否成功</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git暂存管理\"><a href=\"#Git暂存管理\" class=\"headerlink\" title=\"Git暂存管理\"></a>Git暂存管理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash                        # 暂存</span><br><span class=\"line\">git stash <span class=\"built_in\">list</span>                   # 列所有stash</span><br><span class=\"line\">git stash apply                  # 恢复暂存的内容</span><br><span class=\"line\">git stash drop                   # 删除暂存区</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git远程分支管理\"><a href=\"#Git远程分支管理\" class=\"headerlink\" title=\"Git远程分支管理\"></a>Git远程分支管理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull                         # 抓取远程仓库所有分支更新并合并到本地</span><br><span class=\"line\">git pull --no-ff                 # 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span><br><span class=\"line\">git fetch origin                 # 抓取远程仓库更新</span><br><span class=\"line\">git merge origin/master          # 将远程主分支合并到本地当前分支</span><br><span class=\"line\">git co --track origin/branch     # 跟踪某个远程分支创建相应的本地分支</span><br><span class=\"line\">git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt;  # 基于远程分支创建本地分支，功能同上</span><br><span class=\"line\"></span><br><span class=\"line\">git push                         # push所有分支</span><br><span class=\"line\">git push origin master           # 将本地主分支推到远程主分支</span><br><span class=\"line\">git push -u origin master        # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span><br><span class=\"line\">git push origin &lt;local_branch&gt;   # 创建远程分支， origin是远程仓库名</span><br><span class=\"line\">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt;  # 创建远程分支</span><br><span class=\"line\">git push origin :&lt;remote_branch&gt;  #先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git远程仓库管理\"><a href=\"#Git远程仓库管理\" class=\"headerlink\" title=\"Git远程仓库管理\"></a>Git远程仓库管理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v                    # 查看远程服务器地址和仓库名称</span><br><span class=\"line\">git remote show origin           # 查看远程服务器仓库状态</span><br><span class=\"line\">git remote add origin git@github:robbin/robbin_site.git         # 添加远程仓库地址</span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin git@github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址)</span><br><span class=\"line\">git remote rm &lt;repository&gt;       # 删除远程仓库</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone --bare robbin_site robbin_site.git  # 用带版本的项目创建纯版本仓库</span><br><span class=\"line\">scp -r my_project.git git@git.csdn.net:~      # 将纯仓库上传到服务器上</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git --bare init # 在服务器创建纯仓库</span><br><span class=\"line\">git remote add origin git@github.com:robbin/robbin_site.git    # 设置远程仓库地址</span><br><span class=\"line\">git push -u origin master                                      # 客户端首次提交</span><br><span class=\"line\">git push -u origin develop  # 首次将本地develop分支提交到远程develop分支，并且track</span><br><span class=\"line\"></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-head origin master   # 设置远程仓库的HEAD指向master分支</span><br></pre></td></tr></table></figure>\n<h4 id=\"也可以命令设置跟踪远程库和本地库\"><a href=\"#也可以命令设置跟踪远程库和本地库\" class=\"headerlink\" title=\"也可以命令设置跟踪远程库和本地库\"></a>也可以命令设置跟踪远程库和本地库</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --<span class=\"built_in\">set</span>-upstream master origin/master</span><br><span class=\"line\">git branch --<span class=\"built_in\">set</span>-upstream develop origin/develop</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用命令图示\"><a href=\"#常用命令图示\" class=\"headerlink\" title=\"常用命令图示\"></a>常用命令图示</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/git%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2%E6%89%8B%E5%86%8C1.jpg\" alt=\"\"></center>\n\n<h3 id=\"流程指引\"><a href=\"#流程指引\" class=\"headerlink\" title=\"流程指引\"></a>流程指引</h3><p><img src=\"http://o99dg8ap9.bkt.clouddn.com/git%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C.png\" class=\"full-image\"></p>\n","excerpt":"<h3 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h3><ul>\n<li><p><a href=\"https://git.oschina.net/progit/index.html\">Pro Git（中文版）</a></p>\n</li>\n<li><p><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰的官方文档</a></p>\n</li>\n</ul>\n<ul>\n<li><a href=\"http://gitref.org/zh/\">git参考手册</a></li>\n</ul>\n<h3 id=\"总结版本\"><a href=\"#总结版本\" class=\"headerlink\" title=\"总结版本\"></a>总结版本</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init                    # 初始化本地git仓库（创建新仓库）</span><br><span class=\"line\">git config --global user.name \"xxx\"          # 配置用户名</span><br><span class=\"line\">git config --global user.email \"xxx@xxx.com\"         # 配置邮件</span><br><span class=\"line\">git config --global color.ui true       # git status等命令自动着色</span><br><span class=\"line\">git config --global color.status auto</span><br><span class=\"line\">git config --global color.diff auto</span><br><span class=\"line\">git config --global color.branch auto</span><br><span class=\"line\">git config --global color.interactive auto</span><br><span class=\"line\">git clone git+ssh://git@192.168.53.168/VT.git    # clone远程仓库</span><br><span class=\"line\">git status              # 查看当前版本状态（是否修改）</span><br><span class=\"line\">git add xyz             # 添加xyz文件至index</span><br><span class=\"line\">git add .           # 增加当前子目录下所有更改过的文件至index</span><br><span class=\"line\">git commit -m 'xxx'                 # 提交</span><br><span class=\"line\">git commit --amend -m 'xxx'      # 合并上一次提交（用于反复修改）</span><br><span class=\"line\">git commit -am 'xxx'             # 将add和commit合为一步</span><br><span class=\"line\">git rm xxx                      # 删除index中的文件</span><br><span class=\"line\">git rm -r *                 # 递归删除</span><br><span class=\"line\">git log                       # 显示提交日志</span><br><span class=\"line\">git log -1                      # 显示1行日志 -n为n行</span><br><span class=\"line\">git log -5</span><br><span class=\"line\">git log --stat        # 显示提交日志及相关变动文件</span><br><span class=\"line\">git log -p -m</span><br><span class=\"line\">git show dfb02e6e4f2f7b573337763e5c0013802e392818  # 显示某个提交的详细内容</span><br><span class=\"line\">git show dfb02          # 可只用commitid的前几位</span><br><span class=\"line\">git show HEAD               # 显示HEAD提交日志</span><br><span class=\"line\">git show HEAD^     # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本</span><br><span class=\"line\">git tag                   # 显示已存在的tag</span><br><span class=\"line\">git tag -a v2.0 -m 'xxx'            # 增加v2.0的tag</span><br><span class=\"line\">git show v2.0         # 显示v2.0的日志及详细内容</span><br><span class=\"line\">git log v2.0                # 显示v2.0的日志</span><br><span class=\"line\">git diff              # 显示所有未添加至index的变更</span><br><span class=\"line\">git diff --cached      # 显示所有已添加index但还未commit的变更</span><br><span class=\"line\">git diff HEAD^     # 比较与上一个版本的差异</span><br><span class=\"line\">git diff HEAD -- ./lib       # 比较与HEAD版本lib目录的差异</span><br><span class=\"line\">git diff origin/master..master      # 比较远程分支master上有本地分支master上没有的</span><br><span class=\"line\">git diff origin/master..master --stat        # 只显示差异的文件，不显示具体内容</span><br><span class=\"line\">git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）</span><br><span class=\"line\">git branch                 # 显示本地分支</span><br><span class=\"line\">git branch --contains 50089        # 显示包含提交50089的分支</span><br><span class=\"line\">git branch -a                    # 显示所有分支</span><br><span class=\"line\">git branch -r         # 显示所有原创分支</span><br><span class=\"line\">git branch --merged          # 显示所有已合并到当前分支的分支</span><br><span class=\"line\">git branch --no-merged          # 显示所有未合并到当前分支的分支</span><br><span class=\"line\">git branch -m master master_copy       # 本地分支改名</span><br><span class=\"line\">git checkout -b master_copy            # 从当前分支创建新分支master_copy并检出</span><br><span class=\"line\">git checkout -b master master_copy     # 上面的完整版</span><br><span class=\"line\">git checkout features/performance      # 检出已存在的features/performance分支</span><br><span class=\"line\">git checkout --track hotfixes/BJVEP933       # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支</span><br><span class=\"line\">git checkout v2.0            # 检出版本v2.0</span><br><span class=\"line\">git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出</span><br><span class=\"line\">git checkout -- README            # 检出head版本的README文件（可用于修改错误回退）</span><br><span class=\"line\">git merge origin/master      # 合并远程master分支至当前分支</span><br><span class=\"line\">git cherry-pick ff44785404a8e    # 合并提交ff44785404a8e的修改</span><br><span class=\"line\">git push origin master        # 将当前分支push到远程master分支</span><br><span class=\"line\">git push origin :hotfixes/BJVEP933           # 删除远程仓库的hotfixes/BJVEP933分支</span><br><span class=\"line\">git push --tags            # 把所有tag推送到远程仓库</span><br><span class=\"line\">git fetch               # 获取所有远程分支（不更新本地分支，另需merge）</span><br><span class=\"line\">git fetch --prune              # 获取所有原创分支并清除服务器上已删掉的分支</span><br><span class=\"line\">git pull origin master          # 获取远程分支master并merge到当前分支</span><br><span class=\"line\">git mv README README2      # 重命名文件README为README2</span><br><span class=\"line\">git reset --hard HEAD      # 将当前版本重置为HEAD（通常用于merge失败回退）</span><br><span class=\"line\">git rebase</span><br><span class=\"line\">git branch -d hotfixes/BJVEP933        # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）</span><br><span class=\"line\">git branch -D hotfixes/BJVEP933    # 强制删除分支hotfixes/BJVEP933</span><br><span class=\"line\">git ls-files          # 列出git index包含的文件</span><br><span class=\"line\">git show-branch        # 图示当前分支历史</span><br><span class=\"line\">git show-branch --all         # 图示所有分支历史</span><br><span class=\"line\">git whatchanged           # 显示提交历史对应的文件修改</span><br><span class=\"line\">git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818</span><br><span class=\"line\">git ls-tree HEAD           # 内部命令：显示某个git对象</span><br><span class=\"line\">git rev-parse v2.0       # 内部命令：显示某个ref对于的SHA1 HASH</span><br><span class=\"line\">git reflog         # 显示所有提交，包括孤立节点</span><br><span class=\"line\">git show HEAD@&#123;5&#125;</span><br><span class=\"line\">git show master@&#123;yesterday&#125;      # 显示master分支昨天的状态</span><br><span class=\"line\">git log --pretty=format:'%h %s' --graph        # 图示提交日志</span><br><span class=\"line\">git show HEAD~3</span><br><span class=\"line\">git show -s --pretty=raw 2be7fcb476</span><br><span class=\"line\">git stash     # 暂存当前修改，将所有至为HEAD状态</span><br><span class=\"line\">git stash list         # 查看所有暂存</span><br><span class=\"line\">git stash show -p stash@&#123;0&#125;    # 参考第一次暂存</span><br><span class=\"line\">git stash apply stash@&#123;0&#125;       # 应用第一次暂存</span><br><span class=\"line\">git grep \"delete from\"    # 文件中搜索文本“delete from”</span><br><span class=\"line\">git grep -e '#define' --and -e SORT_DIRENT</span><br><span class=\"line\">git gc</span><br><span class=\"line\">git fsck</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h3><ul>\n<li>用户的git配置文件~/.gitconfig</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init                    #初始化本地git仓库（创建新仓库）</span><br><span class=\"line\">git config --global user.name <span class=\"string\">\"xxx\"</span>     #配置用户名</span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"xxx@xxx.com\"</span>   # 配置邮件</span><br><span class=\"line\">git config --global color.ui <span class=\"literal\">true</span>    # git status等命令自动着色</span><br><span class=\"line\">git config --global alias.co checkout</span><br><span class=\"line\">git config --global alias.ci commit</span><br><span class=\"line\">git config --global alias.st status</span><br><span class=\"line\">git config --global alias.br branch</span><br><span class=\"line\">git config --global core.editor <span class=\"string\">\"mate -w\"</span>    # 设置Editor使用textmate</span><br><span class=\"line\">git config -l  # 列举所有配置</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"Git常用命令\"><a href=\"#Git常用命令\" class=\"headerlink\" title=\"Git常用命令\"></a>Git常用命令</h3><h4 id=\"查看、添加、提交、删除、找回，重置修改文件\"><a href=\"#查看、添加、提交、删除、找回，重置修改文件\" class=\"headerlink\" title=\"查看、添加、提交、删除、找回，重置修改文件\"></a>查看、添加、提交、删除、找回，重置修改文件</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git help &lt;command&gt;  # 显示command的help</span><br><span class=\"line\">git show            # 显示某次提交的内容</span><br><span class=\"line\">git show $id</span><br><span class=\"line\"></span><br><span class=\"line\">git co  -- &lt;file&gt;   # 抛弃工作区修改</span><br><span class=\"line\">git co  .           # 抛弃工作区修改</span><br><span class=\"line\"></span><br><span class=\"line\">git add &lt;file&gt;      # 将工作文件修改提交到本地暂存区</span><br><span class=\"line\">git add .           # 将所有修改过的工作文件提交暂存区</span><br><span class=\"line\"></span><br><span class=\"line\">git rm &lt;file&gt;       # 从版本库中删除文件</span><br><span class=\"line\">git rm &lt;file&gt; --cached  # 从版本库中删除文件，但不删除文件</span><br><span class=\"line\"></span><br><span class=\"line\">git reset &lt;file&gt;    # 从暂存区恢复到工作文件</span><br><span class=\"line\">git reset -- .      # 从暂存区恢复到工作文件</span><br><span class=\"line\">git reset --hard    # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span><br><span class=\"line\"></span><br><span class=\"line\">git ci &lt;file&gt;</span><br><span class=\"line\">git ci .</span><br><span class=\"line\">git ci -a           # 将git add, git rm和git ci等操作都合并在一起做</span><br><span class=\"line\">git ci -am <span class=\"string\">\"some comments\"</span></span><br><span class=\"line\">git ci --amend      # 修改最后一次提交记录</span><br><span class=\"line\"></span><br><span class=\"line\">git revert &lt;$id&gt;    # 恢复某次提交的状态，恢复动作本身也创建了一次提交对象</span><br><span class=\"line\">git revert HEAD     # 恢复最后一次提交的状态</span><br><span class=\"line\"></span><br><span class=\"line\">### 查看文件diff</span><br><span class=\"line\"></span><br><span class=\"line\">shell</span><br><span class=\"line\">git diff &lt;file&gt;     # 比较当前文件和暂存区文件差异</span><br><span class=\"line\">git diff</span><br><span class=\"line\">git diff &lt;$id1&gt; &lt;$id2&gt;   # 比较两次提交之间的差异</span><br><span class=\"line\">git diff &lt;branch1&gt;..&lt;branch2&gt; # 在两个分支之间比较 </span><br><span class=\"line\">git diff --staged   # 比较暂存区和版本库差异</span><br><span class=\"line\">git diff --cached   # 比较暂存区和版本库差异</span><br><span class=\"line\">git diff --stat     # 仅仅比较统计信息</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> &lt;file&gt;      # 查看该文件每次提交记录</span><br><span class=\"line\">git <span class=\"built_in\">log</span> -p &lt;file&gt;   # 查看每次详细修改内容的diff</span><br><span class=\"line\">git <span class=\"built_in\">log</span> -p <span class=\"number\">-2</span>       # 查看最近两次详细修改内容的diff</span><br><span class=\"line\">git <span class=\"built_in\">log</span> --stat      # 查看提交统计信息</span><br></pre></td></tr></table></figure>\n<h4 id=\"tig\"><a href=\"#tig\" class=\"headerlink\" title=\"tig\"></a>tig</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mac上可以使用tig代替diff和<span class=\"built_in\">log</span>，brew install tig</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git-本地分支管理\"><a href=\"#Git-本地分支管理\" class=\"headerlink\" title=\"Git 本地分支管理\"></a>Git 本地分支管理</h3><h4 id=\"查看、切换、创建和删除分支\"><a href=\"#查看、切换、创建和删除分支\" class=\"headerlink\" title=\"查看、切换、创建和删除分支\"></a>查看、切换、创建和删除分支</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git br -r           # 查看远程分支</span><br><span class=\"line\">git br &lt;new_branch&gt; # 创建新的分支</span><br><span class=\"line\">git br -v           # 查看各个分支最后提交信息</span><br><span class=\"line\">git br --merged     # 查看已经被合并到当前分支的分支</span><br><span class=\"line\">git br --no-merged  # 查看尚未被合并到当前分支的分支</span><br><span class=\"line\"></span><br><span class=\"line\">git co &lt;branch&gt;     # 切换到某个分支</span><br><span class=\"line\">git co -b &lt;new_branch&gt; # 创建新的分支，并且切换过去</span><br><span class=\"line\">git co -b &lt;new_branch&gt; &lt;branch&gt;  # 基于branch创建新的new_branch</span><br><span class=\"line\"></span><br><span class=\"line\">git co $id          # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span><br><span class=\"line\">git co $id -b &lt;new_branch&gt;  # 把某次历史提交记录checkout出来，创建成一个分支</span><br><span class=\"line\"></span><br><span class=\"line\">git br -d &lt;branch&gt;  # 删除某个分支</span><br><span class=\"line\">git br -D &lt;branch&gt;  # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span><br></pre></td></tr></table></figure>\n<h4 id=\"分支合并和rebase\"><a href=\"#分支合并和rebase\" class=\"headerlink\" title=\"分支合并和rebase\"></a>分支合并和rebase</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge &lt;branch&gt;               # 将branch分支合并到当前分支</span><br><span class=\"line\">git merge origin/master --no-ff  # 不要Fast-Foward合并，这样可以生成merge提交</span><br><span class=\"line\"></span><br><span class=\"line\">git rebase master &lt;branch&gt;       # 将master rebase到branch，相当于：</span><br><span class=\"line\">git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git补丁管理-方便在多台机器上开发同步时用\"><a href=\"#Git补丁管理-方便在多台机器上开发同步时用\" class=\"headerlink\" title=\"Git补丁管理(方便在多台机器上开发同步时用)\"></a>Git补丁管理(方便在多台机器上开发同步时用)</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff &gt; ../sync.patch         # 生成补丁</span><br><span class=\"line\">git apply ../sync.patch          # 打补丁</span><br><span class=\"line\">git apply --check ../sync.patch  # 测试补丁能否成功</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git暂存管理\"><a href=\"#Git暂存管理\" class=\"headerlink\" title=\"Git暂存管理\"></a>Git暂存管理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash                        # 暂存</span><br><span class=\"line\">git stash <span class=\"built_in\">list</span>                   # 列所有stash</span><br><span class=\"line\">git stash apply                  # 恢复暂存的内容</span><br><span class=\"line\">git stash drop                   # 删除暂存区</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git远程分支管理\"><a href=\"#Git远程分支管理\" class=\"headerlink\" title=\"Git远程分支管理\"></a>Git远程分支管理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull                         # 抓取远程仓库所有分支更新并合并到本地</span><br><span class=\"line\">git pull --no-ff                 # 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span><br><span class=\"line\">git fetch origin                 # 抓取远程仓库更新</span><br><span class=\"line\">git merge origin/master          # 将远程主分支合并到本地当前分支</span><br><span class=\"line\">git co --track origin/branch     # 跟踪某个远程分支创建相应的本地分支</span><br><span class=\"line\">git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt;  # 基于远程分支创建本地分支，功能同上</span><br><span class=\"line\"></span><br><span class=\"line\">git push                         # push所有分支</span><br><span class=\"line\">git push origin master           # 将本地主分支推到远程主分支</span><br><span class=\"line\">git push -u origin master        # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span><br><span class=\"line\">git push origin &lt;local_branch&gt;   # 创建远程分支， origin是远程仓库名</span><br><span class=\"line\">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt;  # 创建远程分支</span><br><span class=\"line\">git push origin :&lt;remote_branch&gt;  #先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span><br></pre></td></tr></table></figure>\n<h3 id=\"Git远程仓库管理\"><a href=\"#Git远程仓库管理\" class=\"headerlink\" title=\"Git远程仓库管理\"></a>Git远程仓库管理</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v                    # 查看远程服务器地址和仓库名称</span><br><span class=\"line\">git remote show origin           # 查看远程服务器仓库状态</span><br><span class=\"line\">git remote add origin git@github:robbin/robbin_site.git         # 添加远程仓库地址</span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin git@github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址)</span><br><span class=\"line\">git remote rm &lt;repository&gt;       # 删除远程仓库</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone --bare robbin_site robbin_site.git  # 用带版本的项目创建纯版本仓库</span><br><span class=\"line\">scp -r my_project.git git@git.csdn.net:~      # 将纯仓库上传到服务器上</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git --bare init # 在服务器创建纯仓库</span><br><span class=\"line\">git remote add origin git@github.com:robbin/robbin_site.git    # 设置远程仓库地址</span><br><span class=\"line\">git push -u origin master                                      # 客户端首次提交</span><br><span class=\"line\">git push -u origin develop  # 首次将本地develop分支提交到远程develop分支，并且track</span><br><span class=\"line\"></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-head origin master   # 设置远程仓库的HEAD指向master分支</span><br></pre></td></tr></table></figure>\n<h4 id=\"也可以命令设置跟踪远程库和本地库\"><a href=\"#也可以命令设置跟踪远程库和本地库\" class=\"headerlink\" title=\"也可以命令设置跟踪远程库和本地库\"></a>也可以命令设置跟踪远程库和本地库</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --<span class=\"built_in\">set</span>-upstream master origin/master</span><br><span class=\"line\">git branch --<span class=\"built_in\">set</span>-upstream develop origin/develop</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用命令图示\"><a href=\"#常用命令图示\" class=\"headerlink\" title=\"常用命令图示\"></a>常用命令图示</h3><center><img src=\"http://o99dg8ap9.bkt.clouddn.com/git%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2%E6%89%8B%E5%86%8C1.jpg\" alt=\"\"></center>\n\n<h3 id=\"流程指引\"><a href=\"#流程指引\" class=\"headerlink\" title=\"流程指引\"></a>流程指引</h3><p><img src=\"http://o99dg8ap9.bkt.clouddn.com/git%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C.png\" class=\"full-image\" /></p>"},{"title":"一个客户端设置多个github账号","date":"2016-06-04T14:29:09.000Z","_content":"\n- ### 前期工作###\n\n- 至少有两个github账号 (假设有两个账号 一个为 one ，另一个为 two)\n- 取消git全局设置\n\n```cpp\ngit config --global --unset user.name\ngit config --global --unset user.email\n```\n\n- ### SSH配置###\n\n- 生成 id_rsa 私钥 , id_rsa.pub 公钥 \none可以直接回车，默认生成id_rsa和id_rsa.pub\n\n```cpp\nssh-keygen -t rsa -C \"one@126.com\"\n```\n\n- 但是two会出现提示输入文件名，输入与默认配置不一样的文件名，比如: id_rsa_two\n\n```cpp\ncd ~/.ssh\nssh-keygen -t rsa -C \"two@126.com\"  # 之后会提示输入文件名\n```\n\n<!-- more -->\n\n- github添加公钥 id_rsa.pub , id_rsa_two.pub \n分别登陆one,two的账号，在 Account Settings 的 SSH Keys 里，点 Add SSH Keys ，将公钥(.pub文件)中的内容粘贴到”Key”中，并输入”Title”\n\n- 添加 ssh key\n\n```cpp\nssh-add ~/.ssh/id_rsa\nssh-add ~/.ssh/id_rsa_two\n```\n\n- 可以在添加前使用下面命令删除所有的key\n\n```cpp\nssh-add -D\n```\n\n- 最后可以通过下面命令，查看key的设置\n\n```cpp\nssh-add -l\n```\n\n- ### 修改ssh config文件###\n\n```cpp\ncd ~/.ssh/\ntouch config\n```\n\n- 打开.ssh文件夹下的config文件，进行配置\n\n```cpp\n# default\nHost one\nHostName github.com\nUser git\nIdentityFile ~/.ssh/id_rsa\n\n# two\nHost two  # 前缀名可以任意设置\nHostName github.com\nUser git\nIdentityFile ~/.ssh/id_rsa_two\n```\n这里必须采用这样的方式设置，否则push时会出现以下错误:\n\n> ### ERROR: Permission to two/two.github.com.git denied to one.###\n\n- 简单分析下原因，我们可以发现 ssh 客户端是通过类似: \ngit@github.com:one/one.github.com.git \n这样的 git 地址中的 User 和 Host 来识别使用哪个本地私钥的。 \n很明显，如果 User 和 Host 始终为 git 和 github.com，那么就只能使用一个私钥。 \n所以需要上面的方式配置，每个账号使用了自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，这样 ssh 在连接时就可以区别不同的账号了。\n\n```cpp\nssh -T git@one        # 测试one ssh连接\n#Hi ***! You've successfully authenticated, but GitHub does not provide shell access.\nssh -T git@two    # 测试two ssh连接\n#Hi ***! You've successfully authenticated, but GitHub does not provide shell access.\n```\n但是这样还没有完，下面还有关联的设置\n\n- ### 新建git项目或者clone已有的项目###\n\n- 可以用 git init 或者 git clone 创建本地项目\n- 分别在one和two的git项目目录下，使用下面的命令设置账号关联\n\n```cpp\ngit config user.name \"__name__\"  # __name__ 例如 one\ngit config user.email \"__email__\"   # __email__ 例如 one@126.com\n```\n\n- 查看git项目的配置\n\n```cpp\ngit config --list\n```\n\n- 查看one的remote.origin.url=git@github.com:one/one.github.com.git \n查看two的remote.origin.url=git@github.com:two/two.github.com.git \n由于one使用的是默认的Host，所以不需要修改，但是two使用的是two.github.com，则需要进行修改\n\n```cpp\ngit remote rm origin\ngit remote add origin git@two:yourname/yourRepertory.git\n//git remote add gittwo git@two:yourname/yourRepertory.git\n```\n\n- ### 上传更改###\n\n- 上面所有的设置无误后，可以修改代码，然后上传了\n\n```cpp\ngit add -A\ngit commit -m \"your comments\"\ngit push origin master\n//git pull gittwo master\n```\n\n- 如果遇到warning\n\n> ### warning: push.default is unset; its implicit value is changing in Git 2.0 from ‘matching’ to ‘simple’. To squelch this messageand maintain the current behavior after the default changes, use…###\n\n- 推荐使用下面命令设置\n\n```cpp\ngit config --global push.default simple\n```\n\n- 参考博客 [传送门](http://tmyam.github.io/blog/2014/05/07/duo-githubzhang-hu-she-zhi/)","source":"_posts/项目管理/一个客户端设置多个github账号.md","raw":"---\ntitle: 一个客户端设置多个github账号\ndate: 2016-06-04 14:29:09\ntags: git\ncategories: 项目管理\n---\n\n- ### 前期工作###\n\n- 至少有两个github账号 (假设有两个账号 一个为 one ，另一个为 two)\n- 取消git全局设置\n\n```cpp\ngit config --global --unset user.name\ngit config --global --unset user.email\n```\n\n- ### SSH配置###\n\n- 生成 id_rsa 私钥 , id_rsa.pub 公钥 \none可以直接回车，默认生成id_rsa和id_rsa.pub\n\n```cpp\nssh-keygen -t rsa -C \"one@126.com\"\n```\n\n- 但是two会出现提示输入文件名，输入与默认配置不一样的文件名，比如: id_rsa_two\n\n```cpp\ncd ~/.ssh\nssh-keygen -t rsa -C \"two@126.com\"  # 之后会提示输入文件名\n```\n\n<!-- more -->\n\n- github添加公钥 id_rsa.pub , id_rsa_two.pub \n分别登陆one,two的账号，在 Account Settings 的 SSH Keys 里，点 Add SSH Keys ，将公钥(.pub文件)中的内容粘贴到”Key”中，并输入”Title”\n\n- 添加 ssh key\n\n```cpp\nssh-add ~/.ssh/id_rsa\nssh-add ~/.ssh/id_rsa_two\n```\n\n- 可以在添加前使用下面命令删除所有的key\n\n```cpp\nssh-add -D\n```\n\n- 最后可以通过下面命令，查看key的设置\n\n```cpp\nssh-add -l\n```\n\n- ### 修改ssh config文件###\n\n```cpp\ncd ~/.ssh/\ntouch config\n```\n\n- 打开.ssh文件夹下的config文件，进行配置\n\n```cpp\n# default\nHost one\nHostName github.com\nUser git\nIdentityFile ~/.ssh/id_rsa\n\n# two\nHost two  # 前缀名可以任意设置\nHostName github.com\nUser git\nIdentityFile ~/.ssh/id_rsa_two\n```\n这里必须采用这样的方式设置，否则push时会出现以下错误:\n\n> ### ERROR: Permission to two/two.github.com.git denied to one.###\n\n- 简单分析下原因，我们可以发现 ssh 客户端是通过类似: \ngit@github.com:one/one.github.com.git \n这样的 git 地址中的 User 和 Host 来识别使用哪个本地私钥的。 \n很明显，如果 User 和 Host 始终为 git 和 github.com，那么就只能使用一个私钥。 \n所以需要上面的方式配置，每个账号使用了自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，这样 ssh 在连接时就可以区别不同的账号了。\n\n```cpp\nssh -T git@one        # 测试one ssh连接\n#Hi ***! You've successfully authenticated, but GitHub does not provide shell access.\nssh -T git@two    # 测试two ssh连接\n#Hi ***! You've successfully authenticated, but GitHub does not provide shell access.\n```\n但是这样还没有完，下面还有关联的设置\n\n- ### 新建git项目或者clone已有的项目###\n\n- 可以用 git init 或者 git clone 创建本地项目\n- 分别在one和two的git项目目录下，使用下面的命令设置账号关联\n\n```cpp\ngit config user.name \"__name__\"  # __name__ 例如 one\ngit config user.email \"__email__\"   # __email__ 例如 one@126.com\n```\n\n- 查看git项目的配置\n\n```cpp\ngit config --list\n```\n\n- 查看one的remote.origin.url=git@github.com:one/one.github.com.git \n查看two的remote.origin.url=git@github.com:two/two.github.com.git \n由于one使用的是默认的Host，所以不需要修改，但是two使用的是two.github.com，则需要进行修改\n\n```cpp\ngit remote rm origin\ngit remote add origin git@two:yourname/yourRepertory.git\n//git remote add gittwo git@two:yourname/yourRepertory.git\n```\n\n- ### 上传更改###\n\n- 上面所有的设置无误后，可以修改代码，然后上传了\n\n```cpp\ngit add -A\ngit commit -m \"your comments\"\ngit push origin master\n//git pull gittwo master\n```\n\n- 如果遇到warning\n\n> ### warning: push.default is unset; its implicit value is changing in Git 2.0 from ‘matching’ to ‘simple’. To squelch this messageand maintain the current behavior after the default changes, use…###\n\n- 推荐使用下面命令设置\n\n```cpp\ngit config --global push.default simple\n```\n\n- 参考博客 [传送门](http://tmyam.github.io/blog/2014/05/07/duo-githubzhang-hu-she-zhi/)","slug":"项目管理/一个客户端设置多个github账号","published":1,"updated":"2016-06-27T06:23:08.307Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciqop7qnk005fkgaeufviwlqj","content":"<ul>\n<li><h3 id=\"前期工作\"><a href=\"#前期工作\" class=\"headerlink\" title=\"前期工作\"></a>前期工作</h3></li>\n<li><p>至少有两个github账号 (假设有两个账号 一个为 one ，另一个为 two)</p>\n</li>\n<li>取消git全局设置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --unset user.name</span><br><span class=\"line\">git config --global --unset user.email</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"SSH配置\"><a href=\"#SSH配置\" class=\"headerlink\" title=\"SSH配置\"></a>SSH配置</h3></li>\n<li><p>生成 id_rsa 私钥 , id_rsa.pub 公钥<br>one可以直接回车，默认生成id_rsa和id_rsa.pub</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"one@126.com\"</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>但是two会出现提示输入文件名，输入与默认配置不一样的文件名，比如: id_rsa_two</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"two@126.com\"</span>  # 之后会提示输入文件名</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li><p>github添加公钥 id_rsa.pub , id_rsa_two.pub<br>分别登陆one,two的账号，在 Account Settings 的 SSH Keys 里，点 Add SSH Keys ，将公钥(.pub文件)中的内容粘贴到”Key”中，并输入”Title”</p>\n</li>\n<li><p>添加 ssh key</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~/.ssh/id_rsa</span><br><span class=\"line\">ssh-add ~/.ssh/id_rsa_two</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以在添加前使用下面命令删除所有的key</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add -D</span><br></pre></td></tr></table></figure>\n<ul>\n<li>最后可以通过下面命令，查看key的设置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add -l</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"修改ssh-config文件\"><a href=\"#修改ssh-config文件\" class=\"headerlink\" title=\"修改ssh config文件\"></a>修改ssh config文件</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh/</span><br><span class=\"line\">touch config</span><br></pre></td></tr></table></figure>\n<ul>\n<li>打开.ssh文件夹下的config文件，进行配置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"keyword\">default</span></span><br><span class=\"line\">Host one</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\"># two</span><br><span class=\"line\">Host two  # 前缀名可以任意设置</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa_two</span><br></pre></td></tr></table></figure>\n<p>这里必须采用这样的方式设置，否则push时会出现以下错误:</p>\n<blockquote>\n<h3 id=\"ERROR-Permission-to-two-two-github-com-git-denied-to-one\"><a href=\"#ERROR-Permission-to-two-two-github-com-git-denied-to-one\" class=\"headerlink\" title=\"ERROR: Permission to two/two.github.com.git denied to one.\"></a>ERROR: Permission to two/two.github.com.git denied to one.</h3></blockquote>\n<ul>\n<li>简单分析下原因，我们可以发现 ssh 客户端是通过类似:<br>git@github.com:one/one.github.com.git<br>这样的 git 地址中的 User 和 Host 来识别使用哪个本地私钥的。<br>很明显，如果 User 和 Host 始终为 git 和 github.com，那么就只能使用一个私钥。<br>所以需要上面的方式配置，每个账号使用了自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，这样 ssh 在连接时就可以区别不同的账号了。</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@one        # 测试one ssh连接</span><br><span class=\"line\">#Hi ***! You've successfully authenticated, but GitHub does not provide shell access.</span><br><span class=\"line\">ssh -T git@two    # 测试two ssh连接</span><br><span class=\"line\">#Hi ***! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>\n<p>但是这样还没有完，下面还有关联的设置</p>\n<ul>\n<li><h3 id=\"新建git项目或者clone已有的项目\"><a href=\"#新建git项目或者clone已有的项目\" class=\"headerlink\" title=\"新建git项目或者clone已有的项目\"></a>新建git项目或者clone已有的项目</h3></li>\n<li><p>可以用 git init 或者 git clone 创建本地项目</p>\n</li>\n<li>分别在one和two的git项目目录下，使用下面的命令设置账号关联</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config user.name <span class=\"string\">\"__name__\"</span>  # __name__ 例如 one</span><br><span class=\"line\">git config user.email <span class=\"string\">\"__email__\"</span>   # __email__ 例如 one@<span class=\"number\">126.</span>com</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看git项目的配置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --<span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看one的remote.origin.url=git@github.com:one/one.github.com.git<br>查看two的remote.origin.url=git@github.com:two/two.github.com.git<br>由于one使用的是默认的Host，所以不需要修改，但是two使用的是two.github.com，则需要进行修改</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote rm origin</span><br><span class=\"line\">git remote add origin git@two:yourname/yourRepertory.git</span><br><span class=\"line\"><span class=\"comment\">//git remote add gittwo git@two:yourname/yourRepertory.git</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"上传更改\"><a href=\"#上传更改\" class=\"headerlink\" title=\"上传更改\"></a>上传更改</h3></li>\n<li><p>上面所有的设置无误后，可以修改代码，然后上传了</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m <span class=\"string\">\"your comments\"</span></span><br><span class=\"line\">git push origin master</span><br><span class=\"line\"><span class=\"comment\">//git pull gittwo master</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果遇到warning</li>\n</ul>\n<blockquote>\n<h3 id=\"warning-push-default-is-unset-its-implicit-value-is-changing-in-Git-2-0-from-‘matching’-to-‘simple’-To-squelch-this-messageand-maintain-the-current-behavior-after-the-default-changes-use…\"><a href=\"#warning-push-default-is-unset-its-implicit-value-is-changing-in-Git-2-0-from-‘matching’-to-‘simple’-To-squelch-this-messageand-maintain-the-current-behavior-after-the-default-changes-use…\" class=\"headerlink\" title=\"warning: push.default is unset; its implicit value is changing in Git 2.0 from ‘matching’ to ‘simple’. To squelch this messageand maintain the current behavior after the default changes, use…\"></a>warning: push.default is unset; its implicit value is changing in Git 2.0 from ‘matching’ to ‘simple’. To squelch this messageand maintain the current behavior after the default changes, use…</h3></blockquote>\n<ul>\n<li>推荐使用下面命令设置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global push.<span class=\"keyword\">default</span> simple</span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考博客 <a href=\"http://tmyam.github.io/blog/2014/05/07/duo-githubzhang-hu-she-zhi/\" target=\"_blank\" rel=\"external\">传送门</a></li>\n</ul>\n","excerpt":"<ul>\n<li><h3 id=\"前期工作\"><a href=\"#前期工作\" class=\"headerlink\" title=\"前期工作\"></a>前期工作</h3></li>\n<li><p>至少有两个github账号 (假设有两个账号 一个为 one ，另一个为 two)</p>\n</li>\n<li>取消git全局设置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --unset user.name</span><br><span class=\"line\">git config --global --unset user.email</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"SSH配置\"><a href=\"#SSH配置\" class=\"headerlink\" title=\"SSH配置\"></a>SSH配置</h3></li>\n<li><p>生成 id_rsa 私钥 , id_rsa.pub 公钥<br>one可以直接回车，默认生成id_rsa和id_rsa.pub</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"one@126.com\"</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>但是two会出现提示输入文件名，输入与默认配置不一样的文件名，比如: id_rsa_two</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"two@126.com\"</span>  # 之后会提示输入文件名</span><br></pre></td></tr></table></figure>","more":"<ul>\n<li><p>github添加公钥 id_rsa.pub , id_rsa_two.pub<br>分别登陆one,two的账号，在 Account Settings 的 SSH Keys 里，点 Add SSH Keys ，将公钥(.pub文件)中的内容粘贴到”Key”中，并输入”Title”</p>\n</li>\n<li><p>添加 ssh key</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~/.ssh/id_rsa</span><br><span class=\"line\">ssh-add ~/.ssh/id_rsa_two</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以在添加前使用下面命令删除所有的key</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add -D</span><br></pre></td></tr></table></figure>\n<ul>\n<li>最后可以通过下面命令，查看key的设置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add -l</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"修改ssh-config文件\"><a href=\"#修改ssh-config文件\" class=\"headerlink\" title=\"修改ssh config文件\"></a>修改ssh config文件</h3></li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh/</span><br><span class=\"line\">touch config</span><br></pre></td></tr></table></figure>\n<ul>\n<li>打开.ssh文件夹下的config文件，进行配置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"keyword\">default</span></span><br><span class=\"line\">Host one</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\"># two</span><br><span class=\"line\">Host two  # 前缀名可以任意设置</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa_two</span><br></pre></td></tr></table></figure>\n<p>这里必须采用这样的方式设置，否则push时会出现以下错误:</p>\n<blockquote>\n<h3 id=\"ERROR-Permission-to-two-two-github-com-git-denied-to-one\"><a href=\"#ERROR-Permission-to-two-two-github-com-git-denied-to-one\" class=\"headerlink\" title=\"ERROR: Permission to two/two.github.com.git denied to one.\"></a>ERROR: Permission to two/two.github.com.git denied to one.</h3></blockquote>\n<ul>\n<li>简单分析下原因，我们可以发现 ssh 客户端是通过类似:<br>git@github.com:one/one.github.com.git<br>这样的 git 地址中的 User 和 Host 来识别使用哪个本地私钥的。<br>很明显，如果 User 和 Host 始终为 git 和 github.com，那么就只能使用一个私钥。<br>所以需要上面的方式配置，每个账号使用了自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，这样 ssh 在连接时就可以区别不同的账号了。</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@one        # 测试one ssh连接</span><br><span class=\"line\">#Hi ***! You've successfully authenticated, but GitHub does not provide shell access.</span><br><span class=\"line\">ssh -T git@two    # 测试two ssh连接</span><br><span class=\"line\">#Hi ***! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>\n<p>但是这样还没有完，下面还有关联的设置</p>\n<ul>\n<li><h3 id=\"新建git项目或者clone已有的项目\"><a href=\"#新建git项目或者clone已有的项目\" class=\"headerlink\" title=\"新建git项目或者clone已有的项目\"></a>新建git项目或者clone已有的项目</h3></li>\n<li><p>可以用 git init 或者 git clone 创建本地项目</p>\n</li>\n<li>分别在one和two的git项目目录下，使用下面的命令设置账号关联</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config user.name <span class=\"string\">\"__name__\"</span>  # __name__ 例如 one</span><br><span class=\"line\">git config user.email <span class=\"string\">\"__email__\"</span>   # __email__ 例如 one@<span class=\"number\">126.</span>com</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看git项目的配置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --<span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看one的remote.origin.url=git@github.com:one/one.github.com.git<br>查看two的remote.origin.url=git@github.com:two/two.github.com.git<br>由于one使用的是默认的Host，所以不需要修改，但是two使用的是two.github.com，则需要进行修改</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote rm origin</span><br><span class=\"line\">git remote add origin git@two:yourname/yourRepertory.git</span><br><span class=\"line\"><span class=\"comment\">//git remote add gittwo git@two:yourname/yourRepertory.git</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"上传更改\"><a href=\"#上传更改\" class=\"headerlink\" title=\"上传更改\"></a>上传更改</h3></li>\n<li><p>上面所有的设置无误后，可以修改代码，然后上传了</p>\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m <span class=\"string\">\"your comments\"</span></span><br><span class=\"line\">git push origin master</span><br><span class=\"line\"><span class=\"comment\">//git pull gittwo master</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果遇到warning</li>\n</ul>\n<blockquote>\n<h3 id=\"warning-push-default-is-unset-its-implicit-value-is-changing-in-Git-2-0-from-‘matching’-to-‘simple’-To-squelch-this-messageand-maintain-the-current-behavior-after-the-default-changes-use…\"><a href=\"#warning-push-default-is-unset-its-implicit-value-is-changing-in-Git-2-0-from-‘matching’-to-‘simple’-To-squelch-this-messageand-maintain-the-current-behavior-after-the-default-changes-use…\" class=\"headerlink\" title=\"warning: push.default is unset; its implicit value is changing in Git 2.0 from ‘matching’ to ‘simple’. To squelch this messageand maintain the current behavior after the default changes, use…\"></a>warning: push.default is unset; its implicit value is changing in Git 2.0 from ‘matching’ to ‘simple’. To squelch this messageand maintain the current behavior after the default changes, use…</h3></blockquote>\n<ul>\n<li>推荐使用下面命令设置</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global push.<span class=\"keyword\">default</span> simple</span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考博客 <a href=\"http://tmyam.github.io/blog/2014/05/07/duo-githubzhang-hu-she-zhi/\">传送门</a></li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"ciqop7qf70005kgaepozqbouu","category_id":"ciqop7qfr0008kgae1wcwbbtt","_id":"ciqop7qga000fkgaepa23nkzu"},{"post_id":"ciqop7qg6000ekgaejqxrw7ev","category_id":"ciqop7qg3000dkgaef36uxb4k","_id":"ciqop7qgt000lkgaeb7z52ly2"},{"post_id":"ciqop7qfh0006kgae3tqbmmlf","category_id":"ciqop7qg3000dkgaef36uxb4k","_id":"ciqop7qgz000qkgaek43lwq0s"},{"post_id":"ciqop7qgb000gkgaetkwznd2u","category_id":"ciqop7qg3000dkgaef36uxb4k","_id":"ciqop7qh1000skgaevqgq126p"},{"post_id":"ciqop7qgr000kkgaey4t4eaa6","category_id":"ciqop7qg3000dkgaef36uxb4k","_id":"ciqop7qh8000wkgae34bdweq6"},{"post_id":"ciqop7qft0009kgae8ly13j0t","category_id":"ciqop7qg3000dkgaef36uxb4k","_id":"ciqop7qhd000zkgaegeuak6tp"},{"post_id":"ciqop7qfz000akgaekmdgo7jl","category_id":"ciqop7qg3000dkgaef36uxb4k","_id":"ciqop7qhi0014kgaeh0q6mpw4"},{"post_id":"ciqop7qg2000ckgaed8i2okfg","category_id":"ciqop7qg3000dkgaef36uxb4k","_id":"ciqop7qhl0018kgaeyspd3cwq"},{"post_id":"ciqop7qgu000nkgae4ljs289u","category_id":"ciqop7qhh0011kgae22yp9s2e","_id":"ciqop7qhv001dkgaenat44pdf"},{"post_id":"ciqop7qh0000rkgaeet7mvdwk","category_id":"ciqop7qhh0011kgae22yp9s2e","_id":"ciqop7qi0001jkgae9evux5kg"},{"post_id":"ciqop7qh2000tkgaeoimc9zzr","category_id":"ciqop7qhh0011kgae22yp9s2e","_id":"ciqop7qid001pkgaevmh8m9ng"},{"post_id":"ciqop7qhb000xkgae6wdwse7v","category_id":"ciqop7qhh0011kgae22yp9s2e","_id":"ciqop7qik001vkgaetq12uo90"},{"post_id":"ciqop7qhf0010kgaepsz83z4y","category_id":"ciqop7qhh0011kgae22yp9s2e","_id":"ciqop7qit0022kgaelmkkdwth"},{"post_id":"ciqop7qim001ykgae9vbgq2hy","category_id":"ciqop7qik001wkgaenbqx71n7","_id":"ciqop7qiy0026kgaeztf8d2cd"},{"post_id":"ciqop7qhi0015kgaed67ew3i3","category_id":"ciqop7qik001wkgaenbqx71n7","_id":"ciqop7qj50028kgaegquwlp0e"},{"post_id":"ciqop7qhk0017kgaepweqiopt","category_id":"ciqop7qik001wkgaenbqx71n7","_id":"ciqop7qjf002dkgaegv13f4t3"},{"post_id":"ciqop7qhp001bkgaeejgar6bu","category_id":"ciqop7qik001wkgaenbqx71n7","_id":"ciqop7qjp002ikgaembb2gf2t"},{"post_id":"ciqop7qhs001ckgaey2w2eagg","category_id":"ciqop7qik001wkgaenbqx71n7","_id":"ciqop7qjy002pkgaeoqod5fs8"},{"post_id":"ciqop7qhy001ikgaeztc1ynqv","category_id":"ciqop7qik001wkgaenbqx71n7","_id":"ciqop7qk3002wkgaei6fqum06"},{"post_id":"ciqop7qi4001nkgae6aymqunz","category_id":"ciqop7qik001wkgaenbqx71n7","_id":"ciqop7qkc0033kgaepmzjunxn"},{"post_id":"ciqop7qic001okgaelbu4uh8y","category_id":"ciqop7qik001wkgaenbqx71n7","_id":"ciqop7qki0037kgaenfqquda1"},{"post_id":"ciqop7qif001rkgaec8z55chn","category_id":"ciqop7qik001wkgaenbqx71n7","_id":"ciqop7qkm003ekgaeb349b9u9"},{"post_id":"ciqop7qih001ukgaeoa5yij7y","category_id":"ciqop7qki0039kgaek04wi4bd","_id":"ciqop7qkw003lkgae1fjzobqn"},{"post_id":"ciqop7qir0020kgaeo61b6db2","category_id":"ciqop7qkq003hkgaeqyenh3jn","_id":"ciqop7qlj003skgaehc8nhqss"},{"post_id":"ciqop7qiv0024kgae8qjcdq75","category_id":"ciqop7qkz003nkgae3utdrrcs","_id":"ciqop7qlr003ykgaeoecd63wg"},{"post_id":"ciqop7qiz0027kgae773945ms","category_id":"ciqop7qln003tkgaesyzmq1zx","_id":"ciqop7qlv0043kgaedvfswut3"},{"post_id":"ciqop7qj5002akgaea82wy2il","category_id":"ciqop7qln003tkgaesyzmq1zx","_id":"ciqop7qm00047kgaeoh75leao"},{"post_id":"ciqop7qj8002ckgaecetu3wzv","category_id":"ciqop7qlv0044kgaed85jy22v","_id":"ciqop7qm5004fkgae7hft1wbz"},{"post_id":"ciqop7qjg002fkgaeroosz8ob","category_id":"ciqop7qlv0044kgaed85jy22v","_id":"ciqop7qme004mkgaeq1fbhpz6"},{"post_id":"ciqop7qjl002hkgaebbnj28n3","category_id":"ciqop7qlv0044kgaed85jy22v","_id":"ciqop7qmm004rkgae6wmhd116"},{"post_id":"ciqop7qjr002lkgaeh9et3vaw","category_id":"ciqop7qlv0044kgaed85jy22v","_id":"ciqop7qms004vkgaepg80b9sq"},{"post_id":"ciqop7qjw002nkgaebti5s0kj","category_id":"ciqop7qlv0044kgaed85jy22v","_id":"ciqop7qn00050kgaeckaak99v"},{"post_id":"ciqop7qk0002skgaevos4cq9z","category_id":"ciqop7qlv0044kgaed85jy22v","_id":"ciqop7qn80056kgaednwvnplw"},{"post_id":"ciqop7qk2002ukgaec7yhuron","category_id":"ciqop7qlv0044kgaed85jy22v","_id":"ciqop7qnj005dkgaewex48ei2"},{"post_id":"ciqop7qk5002zkgae5rlhhmvg","category_id":"ciqop7qlv0044kgaed85jy22v","_id":"ciqop7qnn005jkgaea7gym4ay"},{"post_id":"ciqop7qk70031kgaeqdyq6kiw","category_id":"ciqop7qnl005gkgaegbf0vy6m","_id":"ciqop7qnq005nkgaeqhve3tr4"},{"post_id":"ciqop7qkf0035kgaewm2myugn","category_id":"ciqop7qnl005gkgaegbf0vy6m","_id":"ciqop7qnt005rkgaeisq9s1mu"},{"post_id":"ciqop7qkg0036kgaeahp9k0xh","category_id":"ciqop7qnl005gkgaegbf0vy6m","_id":"ciqop7qnw005wkgaeff17qkvo"},{"post_id":"ciqop7qkj003akgaef58ffyl2","category_id":"ciqop7qnl005gkgaegbf0vy6m","_id":"ciqop7qnx0060kgae0jjbk3wc"},{"post_id":"ciqop7qkk003ckgaei10so2pu","category_id":"ciqop7qnl005gkgaegbf0vy6m","_id":"ciqop7qnz0063kgaefdfl1tsp"},{"post_id":"ciqop7qko003gkgaeafmomfnm","category_id":"ciqop7qnl005gkgaegbf0vy6m","_id":"ciqop7qo10067kgae66hzntep"},{"post_id":"ciqop7qkt003jkgaezas534mo","category_id":"ciqop7qnl005gkgaegbf0vy6m","_id":"ciqop7qo3006ckgaedqm7pal2"},{"post_id":"ciqop7qkw003mkgae7yqololc","category_id":"ciqop7qnl005gkgaegbf0vy6m","_id":"ciqop7qo6006gkgaea29ms9mf"},{"post_id":"ciqop7ql0003pkgaebjxbjbr2","category_id":"ciqop7qo4006dkgaed7h29vvg","_id":"ciqop7qo8006kkgaefkkw5m68"},{"post_id":"ciqop7qlf003rkgaes15zac77","category_id":"ciqop7qo7006hkgae3ox4p9b0","_id":"ciqop7qoa006pkgae4rbfl23k"},{"post_id":"ciqop7qlo003vkgaefof33neq","category_id":"ciqop7qo4006dkgaed7h29vvg","_id":"ciqop7qob006skgaeizu8zx4w"},{"post_id":"ciqop7qlq003wkgaea6hbkx0z","category_id":"ciqop7qoa006qkgaet80surit","_id":"ciqop7qod006wkgaeuy4tokgb"},{"post_id":"ciqop7qls0040kgae3ml0dsrv","category_id":"ciqop7qoa006qkgaet80surit","_id":"ciqop7qoe0071kgaes2q2egy4"},{"post_id":"ciqop7qlt0041kgaetkcd59gq","category_id":"ciqop7qoa006qkgaet80surit","_id":"ciqop7qof0074kgae4lkf92ay"},{"post_id":"ciqop7qlw0045kgae5nnn61pp","category_id":"ciqop7qoe0072kgae1r8y2w6f","_id":"ciqop7qoh0078kgaerh2so1sx"},{"post_id":"ciqop7qlz0046kgaespg7wv3f","category_id":"ciqop7qoa006qkgaet80surit","_id":"ciqop7qok007dkgaey0tg72rt"},{"post_id":"ciqop7qm10049kgaehhi7gzhx","category_id":"ciqop7qoe0072kgae1r8y2w6f","_id":"ciqop7qom007gkgaepr21zm7y"},{"post_id":"ciqop7qm3004ckgae6qcaxoyt","category_id":"ciqop7qoe0072kgae1r8y2w6f","_id":"ciqop7qoo007kkgae80pkduce"},{"post_id":"ciqop7qm5004gkgae51v5s493","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qor007pkgaemo3dh1oo"},{"post_id":"ciqop7qmc004jkgaekbremqal","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qos007skgaeyia9ei11"},{"post_id":"ciqop7qmf004nkgaeks31llvv","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qov007xkgaev29v8i2c"},{"post_id":"ciqop7qmh004pkgaesbdby91h","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qoy0080kgaezqvcle3y"},{"post_id":"ciqop7qmn004skgaev3xcck1s","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qp00083kgaesqy9sxa7"},{"post_id":"ciqop7qmp004ukgaebcyadw86","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qp30086kgae5v1hcoth"},{"post_id":"ciqop7qms004xkgaeai86nmhs","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qp5008akgaea9jyi714"},{"post_id":"ciqop7qmy004zkgaemopht8nx","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qp6008fkgaegoozcu31"},{"post_id":"ciqop7qn00051kgaedjweej7h","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qpb008jkgaelte5zd11"},{"post_id":"ciqop7qn50055kgaexgffm0w1","category_id":"ciqop7qon007hkgaea8f2sxen","_id":"ciqop7qpc008nkgaepwvcltk5"},{"post_id":"ciqop7qn90058kgaex5967xfy","category_id":"ciqop7qpb008kkgae2ltxf75m","_id":"ciqop7qpf008rkgaexw64nmnz"},{"post_id":"ciqop7qng005ckgaewjkdfmfj","category_id":"ciqop7qpd008pkgaetruu15ad","_id":"ciqop7qpi008ukgaeq6325xo1"},{"post_id":"ciqop7qnk005fkgaeufviwlqj","category_id":"ciqop7qpd008pkgaetruu15ad","_id":"ciqop7qpk008xkgaeld2l3m25"}],"PostTag":[{"post_id":"ciqop7qf70005kgaepozqbouu","tag_id":"ciqop7qfl0007kgaejy761ict","_id":"ciqop7qgr000jkgaerk1inorg"},{"post_id":"ciqop7qf70005kgaepozqbouu","tag_id":"ciqop7qg1000bkgaecc6c68bl","_id":"ciqop7qgu000mkgaezz3yitv7"},{"post_id":"ciqop7qfh0006kgae3tqbmmlf","tag_id":"ciqop7qgg000hkgaem8c4bg97","_id":"ciqop7qhd000ykgaee1dwdfuj"},{"post_id":"ciqop7qfh0006kgae3tqbmmlf","tag_id":"ciqop7qgy000pkgae28b65g1e","_id":"ciqop7qhh0012kgaei9e15k7f"},{"post_id":"ciqop7qft0009kgae8ly13j0t","tag_id":"ciqop7qgg000hkgaem8c4bg97","_id":"ciqop7qhk0016kgaetn3pfjws"},{"post_id":"ciqop7qfz000akgaekmdgo7jl","tag_id":"ciqop7qgg000hkgaem8c4bg97","_id":"ciqop7qhx001hkgaejhsrv7yw"},{"post_id":"ciqop7qfz000akgaekmdgo7jl","tag_id":"ciqop7qhn001akgaeodj24m3s","_id":"ciqop7qi1001lkgaepr9euxun"},{"post_id":"ciqop7qg2000ckgaed8i2okfg","tag_id":"ciqop7qgg000hkgaem8c4bg97","_id":"ciqop7qih001tkgaedh0y5rk1"},{"post_id":"ciqop7qg2000ckgaed8i2okfg","tag_id":"ciqop7qi2001mkgaelq29zl2z","_id":"ciqop7qil001xkgaeq2rokqd7"},{"post_id":"ciqop7qg6000ekgaejqxrw7ev","tag_id":"ciqop7qih001skgaeg9k88jeu","_id":"ciqop7qis0021kgae0ahpxwrs"},{"post_id":"ciqop7qgb000gkgaetkwznd2u","tag_id":"ciqop7qgg000hkgaem8c4bg97","_id":"ciqop7qjp002jkgaebqdxmgg4"},{"post_id":"ciqop7qgb000gkgaetkwznd2u","tag_id":"ciqop7qix0025kgae28kqg19p","_id":"ciqop7qjv002mkgae0dlurdql"},{"post_id":"ciqop7qgb000gkgaetkwznd2u","tag_id":"ciqop7qj8002bkgaeouxryd3q","_id":"ciqop7qjz002qkgae2hqt4e9k"},{"post_id":"ciqop7qgr000kkgaey4t4eaa6","tag_id":"ciqop7qjk002gkgaeh27h6hwv","_id":"ciqop7qk1002tkgaez1oyokc8"},{"post_id":"ciqop7qgr000kkgaey4t4eaa6","tag_id":"ciqop7qgg000hkgaem8c4bg97","_id":"ciqop7qk4002xkgaefcfonbut"},{"post_id":"ciqop7qgu000nkgae4ljs289u","tag_id":"ciqop7qjx002okgaehys7nxc9","_id":"ciqop7qk60030kgaek8senbty"},{"post_id":"ciqop7qh0000rkgaeet7mvdwk","tag_id":"ciqop7qjx002okgaehys7nxc9","_id":"ciqop7qkk003bkgaerng4hpf9"},{"post_id":"ciqop7qh0000rkgaeet7mvdwk","tag_id":"ciqop7qkb0032kgaemf8ih2k0","_id":"ciqop7qkl003dkgae2hwbft6m"},{"post_id":"ciqop7qh2000tkgaeoimc9zzr","tag_id":"ciqop7qjx002okgaehys7nxc9","_id":"ciqop7qkr003ikgaeabwbejky"},{"post_id":"ciqop7qhb000xkgae6wdwse7v","tag_id":"ciqop7qjx002okgaehys7nxc9","_id":"ciqop7ql0003okgaeltugptfv"},{"post_id":"ciqop7qhf0010kgaepsz83z4y","tag_id":"ciqop7qkv003kkgaeh0j6rzic","_id":"ciqop7qln003ukgaekizsm10c"},{"post_id":"ciqop7qhi0015kgaed67ew3i3","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qm3004bkgaetd1hav09"},{"post_id":"ciqop7qhi0015kgaed67ew3i3","tag_id":"ciqop7qlr003xkgae214u46n5","_id":"ciqop7qm4004dkgaejhuwi8df"},{"post_id":"ciqop7qhi0015kgaed67ew3i3","tag_id":"ciqop7qlv0042kgae5yv9ofj1","_id":"ciqop7qma004ikgaecfihxabn"},{"post_id":"ciqop7qhk0017kgaepweqiopt","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qme004kkgaeb434ldyw"},{"post_id":"ciqop7qhp001bkgaeejgar6bu","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qn50054kgaeh3unksth"},{"post_id":"ciqop7qhp001bkgaeejgar6bu","tag_id":"ciqop7qlr003xkgae214u46n5","_id":"ciqop7qn90057kgaezqx4macv"},{"post_id":"ciqop7qhp001bkgaeejgar6bu","tag_id":"ciqop7qml004qkgae1obl3ygx","_id":"ciqop7qne005bkgaeym32u4g0"},{"post_id":"ciqop7qhp001bkgaeejgar6bu","tag_id":"ciqop7qms004wkgaex439oey3","_id":"ciqop7qnj005ekgae0gwiushv"},{"post_id":"ciqop7qng005ckgaewjkdfmfj","tag_id":"ciqop7qgy000pkgae28b65g1e","_id":"ciqop7qnm005ikgae4sjhozik"},{"post_id":"ciqop7qnk005fkgaeufviwlqj","tag_id":"ciqop7qgy000pkgae28b65g1e","_id":"ciqop7qnn005kkgaehq8497pt"},{"post_id":"ciqop7qhs001ckgaey2w2eagg","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qnt005qkgaevqmoy6zj"},{"post_id":"ciqop7qhs001ckgaey2w2eagg","tag_id":"ciqop7qlr003xkgae214u46n5","_id":"ciqop7qnu005tkgaeghc8fkn4"},{"post_id":"ciqop7qhs001ckgaey2w2eagg","tag_id":"ciqop7qnm005hkgaesmm7x76u","_id":"ciqop7qnv005vkgaemnxkqllw"},{"post_id":"ciqop7qhs001ckgaey2w2eagg","tag_id":"ciqop7qnp005mkgaeo8k663fa","_id":"ciqop7qnw005ykgaeonu907qn"},{"post_id":"ciqop7qhw001gkgae0xhcwa50","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qo00066kgaek0kweii2"},{"post_id":"ciqop7qhw001gkgae0xhcwa50","tag_id":"ciqop7qnv005ukgaem5q7aysh","_id":"ciqop7qo10069kgaealefaxtz"},{"post_id":"ciqop7qhw001gkgae0xhcwa50","tag_id":"ciqop7qnw005zkgaevqp7zssk","_id":"ciqop7qo3006bkgae4q6svb2n"},{"post_id":"ciqop7qhw001gkgae0xhcwa50","tag_id":"ciqop7qlr003xkgae214u46n5","_id":"ciqop7qo4006ekgaey0gt9jls"},{"post_id":"ciqop7qhy001ikgaeztc1ynqv","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qo8006jkgaekrveae6a"},{"post_id":"ciqop7qhy001ikgaeztc1ynqv","tag_id":"ciqop7qlr003xkgae214u46n5","_id":"ciqop7qo9006mkgaemi6171f9"},{"post_id":"ciqop7qhy001ikgaeztc1ynqv","tag_id":"ciqop7qo4006fkgaesxrb4jd4","_id":"ciqop7qoa006okgaeqsmlntqy"},{"post_id":"ciqop7qi4001nkgae6aymqunz","tag_id":"ciqop7qlr003xkgae214u46n5","_id":"ciqop7qoc006vkgaef1io0e52"},{"post_id":"ciqop7qi4001nkgae6aymqunz","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qod006ykgaeneshmouy"},{"post_id":"ciqop7qi4001nkgae6aymqunz","tag_id":"ciqop7qob006rkgaekg6qdehz","_id":"ciqop7qoe0070kgae5psimo6s"},{"post_id":"ciqop7qic001okgaelbu4uh8y","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qog0077kgaedm8u78ii"},{"post_id":"ciqop7qic001okgaelbu4uh8y","tag_id":"ciqop7qlr003xkgae214u46n5","_id":"ciqop7qoj007akgaespxovuwh"},{"post_id":"ciqop7qic001okgaelbu4uh8y","tag_id":"ciqop7qoe0073kgaetb98l03a","_id":"ciqop7qok007ckgaeh4wrstpw"},{"post_id":"ciqop7qif001rkgaec8z55chn","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qoo007jkgae4glcqear"},{"post_id":"ciqop7qif001rkgaec8z55chn","tag_id":"ciqop7qlr003xkgae214u46n5","_id":"ciqop7qoq007mkgaexti4009r"},{"post_id":"ciqop7qif001rkgaec8z55chn","tag_id":"ciqop7qom007fkgaeb0umjtqe","_id":"ciqop7qor007okgaedszf7lyv"},{"post_id":"ciqop7qih001ukgaeoa5yij7y","tag_id":"ciqop7qon007ikgaew6kcarsy","_id":"ciqop7qos007tkgaejd7m4udw"},{"post_id":"ciqop7qih001ukgaeoa5yij7y","tag_id":"ciqop7qoq007nkgaextzrppmh","_id":"ciqop7qou007vkgaepfypvlwo"},{"post_id":"ciqop7qim001ykgae9vbgq2hy","tag_id":"ciqop7qlf003qkgae9tpek0ib","_id":"ciqop7qp40088kgaessnnn8a5"},{"post_id":"ciqop7qim001ykgae9vbgq2hy","tag_id":"ciqop7qlr003xkgae214u46n5","_id":"ciqop7qp40089kgae9me0tyr8"},{"post_id":"ciqop7qim001ykgae9vbgq2hy","tag_id":"ciqop7qow007zkgael00ozu64","_id":"ciqop7qp6008dkgaebc63fek0"},{"post_id":"ciqop7qim001ykgae9vbgq2hy","tag_id":"ciqop7qoz0082kgae1akc88go","_id":"ciqop7qp6008ekgae02hw19q7"},{"post_id":"ciqop7qir0020kgaeo61b6db2","tag_id":"ciqop7qp20085kgaeuiokuy2m","_id":"ciqop7qp9008ikgae971sizkf"},{"post_id":"ciqop7qiv0024kgae8qjcdq75","tag_id":"ciqop7qp5008bkgaeffc28u33","_id":"ciqop7qpc008mkgaerniuinqx"},{"post_id":"ciqop7qiv0024kgae8qjcdq75","tag_id":"ciqop7qp8008hkgaeyzatbl45","_id":"ciqop7qpd008okgaepm6rcrq7"},{"post_id":"ciqop7qiz0027kgae773945ms","tag_id":"ciqop7qpc008lkgae7liql73a","_id":"ciqop7qpk008wkgaem4ldglrc"},{"post_id":"ciqop7qiz0027kgae773945ms","tag_id":"ciqop7qpd008qkgaedbsj917r","_id":"ciqop7qpk008ykgaehx5j5t55"},{"post_id":"ciqop7qiz0027kgae773945ms","tag_id":"ciqop7qph008tkgae09ulfz1j","_id":"ciqop7qpm0090kgae4n3jnhfk"},{"post_id":"ciqop7qj5002akgaea82wy2il","tag_id":"ciqop7qpc008lkgae7liql73a","_id":"ciqop7qpo0093kgaencfyqthl"},{"post_id":"ciqop7qj5002akgaea82wy2il","tag_id":"ciqop7qph008tkgae09ulfz1j","_id":"ciqop7qpo0094kgaekmh4v5hm"},{"post_id":"ciqop7qj5002akgaea82wy2il","tag_id":"ciqop7qpd008qkgaedbsj917r","_id":"ciqop7qpp0096kgaeqld2iahm"},{"post_id":"ciqop7qj8002ckgaecetu3wzv","tag_id":"ciqop7qpn0092kgaepgoj9t2y","_id":"ciqop7qpq0098kgaeq53sv7g3"},{"post_id":"ciqop7qj8002ckgaecetu3wzv","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qpq0099kgae61iodptr"},{"post_id":"ciqop7qjg002fkgaeroosz8ob","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qpr009ckgae0ahqxr7v"},{"post_id":"ciqop7qjg002fkgaeroosz8ob","tag_id":"ciqop7qpq009akgae32kveo8g","_id":"ciqop7qpr009dkgae6pa3ryex"},{"post_id":"ciqop7qjl002hkgaebbnj28n3","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qpt009gkgaev8srojxa"},{"post_id":"ciqop7qjl002hkgaebbnj28n3","tag_id":"ciqop7qpq009akgae32kveo8g","_id":"ciqop7qpt009hkgae26kkpuum"},{"post_id":"ciqop7qjr002lkgaeh9et3vaw","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qpw009kkgae3f49acp5"},{"post_id":"ciqop7qjr002lkgaeh9et3vaw","tag_id":"ciqop7qpt009ikgae7l1hab9c","_id":"ciqop7qpw009lkgae8066h0i7"},{"post_id":"ciqop7qjw002nkgaebti5s0kj","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qpy009nkgae56c5be8i"},{"post_id":"ciqop7qk0002skgaevos4cq9z","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qq2009qkgaecd8t06qa"},{"post_id":"ciqop7qk0002skgaevos4cq9z","tag_id":"ciqop7qpz009okgaeffu8pwwl","_id":"ciqop7qq2009rkgaeuoj1q33q"},{"post_id":"ciqop7qk2002ukgaec7yhuron","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qq4009vkgaeex7b0swc"},{"post_id":"ciqop7qk2002ukgaec7yhuron","tag_id":"ciqop7qq2009skgae9pu4j7rm","_id":"ciqop7qq4009wkgaeo14j7nvu"},{"post_id":"ciqop7qk2002ukgaec7yhuron","tag_id":"ciqop7qq2009tkgaexz4mckh1","_id":"ciqop7qq4009ykgaedc3agtow"},{"post_id":"ciqop7qk5002zkgae5rlhhmvg","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qq4009zkgaev64h12w4"},{"post_id":"ciqop7qk70031kgaeqdyq6kiw","tag_id":"ciqop7qjx002okgaehys7nxc9","_id":"ciqop7qq500a1kgae7k8dcabn"},{"post_id":"ciqop7qk70031kgaeqdyq6kiw","tag_id":"ciqop7qq4009xkgael6jdvxht","_id":"ciqop7qq500a2kgaeep563zk3"},{"post_id":"ciqop7qkf0035kgaewm2myugn","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qq800a6kgaeszfhggnd"},{"post_id":"ciqop7qkf0035kgaewm2myugn","tag_id":"ciqop7qq4009xkgael6jdvxht","_id":"ciqop7qq800a7kgae9lytpmqo"},{"post_id":"ciqop7qkf0035kgaewm2myugn","tag_id":"ciqop7qq600a4kgaebsw78896","_id":"ciqop7qq900a9kgaex7kshwu9"},{"post_id":"ciqop7qkg0036kgaeahp9k0xh","tag_id":"ciqop7qq4009xkgael6jdvxht","_id":"ciqop7qqa00abkgaec0exes8s"},{"post_id":"ciqop7qkg0036kgaeahp9k0xh","tag_id":"ciqop7qkv003kkgaeh0j6rzic","_id":"ciqop7qqb00ackgaeu6iwro8w"},{"post_id":"ciqop7qkj003akgaef58ffyl2","tag_id":"ciqop7qq4009xkgael6jdvxht","_id":"ciqop7qqc00aekgae00otblya"},{"post_id":"ciqop7qkk003ckgaei10so2pu","tag_id":"ciqop7qq4009xkgael6jdvxht","_id":"ciqop7qqd00agkgae360zb6eo"},{"post_id":"ciqop7qko003gkgaeafmomfnm","tag_id":"ciqop7qqc00afkgaemirnwgpj","_id":"ciqop7qqg00akkgaezxdzetn4"},{"post_id":"ciqop7qko003gkgaeafmomfnm","tag_id":"ciqop7qq4009xkgael6jdvxht","_id":"ciqop7qqg00alkgaeyhp9n0od"},{"post_id":"ciqop7qko003gkgaeafmomfnm","tag_id":"ciqop7qpo0095kgaecems1zso","_id":"ciqop7qqh00ankgaeanqrvda4"},{"post_id":"ciqop7qkt003jkgaezas534mo","tag_id":"ciqop7qq4009xkgael6jdvxht","_id":"ciqop7qqh00aokgaez1nhsger"},{"post_id":"ciqop7qkw003mkgae7yqololc","tag_id":"ciqop7qq4009xkgael6jdvxht","_id":"ciqop7qqi00aqkgaelf1nil8a"},{"post_id":"ciqop7ql0003pkgaebjxbjbr2","tag_id":"ciqop7qqi00apkgae0sryyobv","_id":"ciqop7qqm00aukgaeg7j5ybru"},{"post_id":"ciqop7ql0003pkgaebjxbjbr2","tag_id":"ciqop7qqj00arkgaeoy9d7ool","_id":"ciqop7qqm00avkgaetbzwa7qo"},{"post_id":"ciqop7ql0003pkgaebjxbjbr2","tag_id":"ciqop7qqk00askgaew00c7m05","_id":"ciqop7qqo00axkgaeu9fqwiro"},{"post_id":"ciqop7qlf003rkgaes15zac77","tag_id":"ciqop7qo4006fkgaesxrb4jd4","_id":"ciqop7qqo00aykgaekdbove5n"},{"post_id":"ciqop7qlo003vkgaefof33neq","tag_id":"ciqop7qqn00awkgaezacykj23","_id":"ciqop7qqt00b1kgaeyx8w8gm0"},{"post_id":"ciqop7qlo003vkgaefof33neq","tag_id":"ciqop7qqo00azkgaevivtgxqa","_id":"ciqop7qqt00b2kgaeafaphepo"},{"post_id":"ciqop7qlq003wkgaea6hbkx0z","tag_id":"ciqop7qqr00b0kgaerzszt7ao","_id":"ciqop7qqv00b5kgaeshzoh8tp"},{"post_id":"ciqop7qlq003wkgaea6hbkx0z","tag_id":"ciqop7qqt00b3kgaez92qoknv","_id":"ciqop7qqv00b6kgaejplymwmm"},{"post_id":"ciqop7qls0040kgae3ml0dsrv","tag_id":"ciqop7qqu00b4kgael38m1xs0","_id":"ciqop7qqw00b8kgaec0g5mpnk"},{"post_id":"ciqop7qlt0041kgaetkcd59gq","tag_id":"ciqop7qqw00b7kgaei0hzzq5v","_id":"ciqop7qqy00bbkgaepvz2ra1v"},{"post_id":"ciqop7qlt0041kgaetkcd59gq","tag_id":"ciqop7qqx00b9kgaenr10a6td","_id":"ciqop7qqy00bckgaegoxtep62"},{"post_id":"ciqop7qlw0045kgae5nnn61pp","tag_id":"ciqop7qqx00bakgaeenvcmd6v","_id":"ciqop7qqz00bekgaey86m4euz"},{"post_id":"ciqop7qlz0046kgaespg7wv3f","tag_id":"ciqop7qqw00b7kgaei0hzzq5v","_id":"ciqop7qr100bhkgae43rgmtxr"},{"post_id":"ciqop7qlz0046kgaespg7wv3f","tag_id":"ciqop7qr000bfkgaefhijlw7z","_id":"ciqop7qr100bikgaevnl58dal"},{"post_id":"ciqop7qm10049kgaehhi7gzhx","tag_id":"ciqop7qqx00bakgaeenvcmd6v","_id":"ciqop7qr200bkkgaer2u8zxtx"},{"post_id":"ciqop7qm3004ckgae6qcaxoyt","tag_id":"ciqop7qqx00bakgaeenvcmd6v","_id":"ciqop7qr300bmkgaejultmlpw"},{"post_id":"ciqop7qm5004gkgae51v5s493","tag_id":"ciqop7qph008tkgae09ulfz1j","_id":"ciqop7qr400bokgae7litucgt"},{"post_id":"ciqop7qmc004jkgaekbremqal","tag_id":"ciqop7qr300bnkgae0t6of39j","_id":"ciqop7qr500bqkgaes8p3d9d8"},{"post_id":"ciqop7qmf004nkgaeks31llvv","tag_id":"ciqop7qph008tkgae09ulfz1j","_id":"ciqop7qr700btkgaei2fjm9xo"},{"post_id":"ciqop7qmf004nkgaeks31llvv","tag_id":"ciqop7qr600brkgaecgkatsi2","_id":"ciqop7qr700bukgae678656nt"},{"post_id":"ciqop7qmh004pkgaesbdby91h","tag_id":"ciqop7qr600bskgaeubfgnnzh","_id":"ciqop7qr900bxkgaekrtt5ra3"},{"post_id":"ciqop7qmh004pkgaesbdby91h","tag_id":"ciqop7qr600brkgaecgkatsi2","_id":"ciqop7qra00bykgae3ur4ad8x"},{"post_id":"ciqop7qmn004skgaev3xcck1s","tag_id":"ciqop7qr800bwkgael5ewjxti","_id":"ciqop7qra00c0kgaeh594evfq"},{"post_id":"ciqop7qmp004ukgaebcyadw86","tag_id":"ciqop7qph008tkgae09ulfz1j","_id":"ciqop7qrc00c2kgaeaxfxv1el"},{"post_id":"ciqop7qms004xkgaeai86nmhs","tag_id":"ciqop7qrb00c1kgaefc7qw64q","_id":"ciqop7qrd00c4kgaee6k0kuak"},{"post_id":"ciqop7qmy004zkgaemopht8nx","tag_id":"ciqop7qrc00c3kgae4edh2a4c","_id":"ciqop7qrd00c6kgae2ymwk2yw"},{"post_id":"ciqop7qn00051kgaedjweej7h","tag_id":"ciqop7qrd00c5kgaeixqpuwlq","_id":"ciqop7qrf00c8kgae2249xhbp"},{"post_id":"ciqop7qn50055kgaexgffm0w1","tag_id":"ciqop7qre00c7kgaev2owru7g","_id":"ciqop7qrg00cakgaen1wg8muj"},{"post_id":"ciqop7qn90058kgaex5967xfy","tag_id":"ciqop7qrf00c9kgaeabq4l31t","_id":"ciqop7qri00cckgaef72x9pd9"},{"post_id":"ciqop7qn90058kgaex5967xfy","tag_id":"ciqop7qrh00cbkgaee8vapzdw","_id":"ciqop7qri00cdkgae6fdy48qd"}],"Tag":[{"name":"ACM","_id":"ciqop7qfl0007kgaejy761ict"},{"name":"数学公式","_id":"ciqop7qg1000bkgaecc6c68bl"},{"name":"Android","_id":"ciqop7qgg000hkgaem8c4bg97"},{"name":"git","_id":"ciqop7qgy000pkgae28b65g1e"},{"name":"Activity","_id":"ciqop7qhn001akgaeodj24m3s"},{"name":"shape","_id":"ciqop7qi2001mkgaelq29zl2z"},{"name":"Eclipse","_id":"ciqop7qih001skgaeg9k88jeu"},{"name":"超级课程表","_id":"ciqop7qix0025kgae28kqg19p"},{"name":"UI","_id":"ciqop7qj8002bkgaeouxryd3q"},{"name":"Style","_id":"ciqop7qjk002gkgaeh27h6hwv"},{"name":"AndroidStudio","_id":"ciqop7qjx002okgaehys7nxc9"},{"name":"SVN","_id":"ciqop7qkb0032kgaemf8ih2k0"},{"name":"genymotion","_id":"ciqop7qkv003kkgaeh0j6rzic"},{"name":"C++","_id":"ciqop7qlf003qkgae9tpek0ib"},{"name":"STL","_id":"ciqop7qlr003xkgae214u46n5"},{"name":"string","_id":"ciqop7qlv0042kgae5yv9ofj1"},{"name":"map","_id":"ciqop7qml004qkgae1obl3ygx"},{"name":"multimap","_id":"ciqop7qms004wkgaex439oey3"},{"name":"priority_queue","_id":"ciqop7qnm005hkgaesmm7x76u"},{"name":"优先队列","_id":"ciqop7qnp005mkgaeo8k663fa"},{"name":"set","_id":"ciqop7qnv005ukgaem5q7aysh"},{"name":"multiset","_id":"ciqop7qnw005zkgaevqp7zssk"},{"name":"算法","_id":"ciqop7qo4006fkgaesxrb4jd4"},{"name":"Vector","_id":"ciqop7qob006rkgaekg6qdehz"},{"name":"deque","_id":"ciqop7qoe0073kgaetb98l03a"},{"name":"list","_id":"ciqop7qom007fkgaeb0umjtqe"},{"name":"JAVA","_id":"ciqop7qon007ikgaew6kcarsy"},{"name":"Socket","_id":"ciqop7qoq007nkgaextzrppmh"},{"name":"stack","_id":"ciqop7qow007zkgael00ozu64"},{"name":"queue","_id":"ciqop7qoz0082kgae1akc88go"},{"name":"JVM","_id":"ciqop7qp20085kgaeuiokuy2m"},{"name":"Excel","_id":"ciqop7qp5008bkgaeffc28u33"},{"name":"MySQL","_id":"ciqop7qp8008hkgaeyzatbl45"},{"name":"SEO","_id":"ciqop7qpc008lkgae7liql73a"},{"name":"搜索引擎","_id":"ciqop7qpd008qkgaedbsj917r"},{"name":"hexo","_id":"ciqop7qph008tkgae09ulfz1j"},{"name":"CentOS","_id":"ciqop7qpn0092kgaepgoj9t2y"},{"name":"linux","_id":"ciqop7qpo0095kgaecems1zso"},{"name":"SublimeText","_id":"ciqop7qpq009akgae32kveo8g"},{"name":"qq","_id":"ciqop7qpt009ikgae7l1hab9c"},{"name":"Wing","_id":"ciqop7qpz009okgaeffu8pwwl"},{"name":"百度云","_id":"ciqop7qq2009skgae9pu4j7rm"},{"name":"酷我音乐","_id":"ciqop7qq2009tkgaexz4mckh1"},{"name":"ubuntu","_id":"ciqop7qq4009xkgael6jdvxht"},{"name":"MacOSX","_id":"ciqop7qq600a4kgaebsw78896"},{"name":"windows","_id":"ciqop7qqc00afkgaemirnwgpj"},{"name":"数据结构","_id":"ciqop7qqi00apkgae0sryyobv"},{"name":"课程设计","_id":"ciqop7qqj00arkgaeoy9d7ool"},{"name":"二叉树","_id":"ciqop7qqk00askgaew00c7m05"},{"name":"组成原理","_id":"ciqop7qqn00awkgaezacykj23"},{"name":"海明校验码","_id":"ciqop7qqo00azkgaevivtgxqa"},{"name":"一千零一夜","_id":"ciqop7qqr00b0kgaerzszt7ao"},{"name":"音乐","_id":"ciqop7qqt00b3kgaez92qoknv"},{"name":"尧十三","_id":"ciqop7qqu00b4kgael38m1xs0"},{"name":"民谣","_id":"ciqop7qqw00b7kgaei0hzzq5v"},{"name":"油画","_id":"ciqop7qqx00b9kgaenr10a6td"},{"name":"矩阵","_id":"ciqop7qqx00bakgaeenvcmd6v"},{"name":"水彩画","_id":"ciqop7qr000bfkgaefhijlw7z"},{"name":"markdown","_id":"ciqop7qr300bnkgae0t6of39j"},{"name":"博客","_id":"ciqop7qr600brkgaecgkatsi2"},{"name":"网站","_id":"ciqop7qr600bskgaeubfgnnzh"},{"name":"印象笔记","_id":"ciqop7qr800bwkgael5ewjxti"},{"name":"减压","_id":"ciqop7qrb00c1kgaefc7qw64q"},{"name":"RGB颜色","_id":"ciqop7qrc00c3kgae4edh2a4c"},{"name":"代码注释","_id":"ciqop7qrd00c5kgaeixqpuwlq"},{"name":"装机软件清单","_id":"ciqop7qre00c7kgaev2owru7g"},{"name":"项目","_id":"ciqop7qrf00c9kgaeabq4l31t"},{"name":"Config","_id":"ciqop7qrh00cbkgaee8vapzdw"}]}}